// Atribuições para CAnimFrameBlockAnim
// CAnimFrameBlockAnim Offsets
CAnimFrameBlockAnim.m_nStartFrame = jsonData["CAnimFrameBlockAnim"]["m_nStartFrame"];
CAnimFrameBlockAnim.m_nEndFrame = jsonData["CAnimFrameBlockAnim"]["m_nEndFrame"];
CAnimFrameBlockAnim.m_segmentIndexArray = jsonData["CAnimFrameBlockAnim"]["m_segmentIndexArray"];

// Atribuições para CSlowDownOnSlopesUpdateNode
// CSlowDownOnSlopesUpdateNode Offsets
CSlowDownOnSlopesUpdateNode.m_flSlowDownStrength = jsonData["CSlowDownOnSlopesUpdateNode"]["m_flSlowDownStrength"];

// Atribuições para COrientationWarpUpdateNode
// COrientationWarpUpdateNode Offsets
COrientationWarpUpdateNode.m_hFacingPositionParameter = jsonData["COrientationWarpUpdateNode"]["m_hFacingPositionParameter"];
COrientationWarpUpdateNode.m_turnDamping = jsonData["COrientationWarpUpdateNode"]["m_turnDamping"];

// Atribuições para CAnimParameterBase
// CAnimParameterBase Offsets
CAnimParameterBase.m_name = jsonData["CAnimParameterBase"]["m_name"];
CAnimParameterBase.m_sComment = jsonData["CAnimParameterBase"]["m_sComment"];
CAnimParameterBase.m_group = jsonData["CAnimParameterBase"]["m_group"];
CAnimParameterBase.m_id = jsonData["CAnimParameterBase"]["m_id"];
CAnimParameterBase.m_componentName = jsonData["CAnimParameterBase"]["m_componentName"];
CAnimParameterBase.m_bNetworkingRequested = jsonData["CAnimParameterBase"]["m_bNetworkingRequested"];
CAnimParameterBase.m_bIsReferenced = jsonData["CAnimParameterBase"]["m_bIsReferenced"];

// Atribuições para CSequenceFinishedAnimTag
// CSequenceFinishedAnimTag Offsets
CSequenceFinishedAnimTag.m_sequenceName = jsonData["CSequenceFinishedAnimTag"]["m_sequenceName"];

// Atribuições para CSceneObjectData
// CSceneObjectData Offsets
CSceneObjectData.m_vMinBounds = jsonData["CSceneObjectData"]["m_vMinBounds"];
CSceneObjectData.m_vMaxBounds = jsonData["CSceneObjectData"]["m_vMaxBounds"];
CSceneObjectData.m_drawCalls = jsonData["CSceneObjectData"]["m_drawCalls"];
CSceneObjectData.m_drawBounds = jsonData["CSceneObjectData"]["m_drawBounds"];
CSceneObjectData.m_meshlets = jsonData["CSceneObjectData"]["m_meshlets"];
CSceneObjectData.m_vTintColor = jsonData["CSceneObjectData"]["m_vTintColor"];

// Atribuições para CIntAnimParameter
// CIntAnimParameter Offsets
CIntAnimParameter.m_defaultValue = jsonData["CIntAnimParameter"]["m_defaultValue"];
CIntAnimParameter.m_minValue = jsonData["CIntAnimParameter"]["m_minValue"];
CIntAnimParameter.m_maxValue = jsonData["CIntAnimParameter"]["m_maxValue"];

// Atribuições para CNmParameterizedBlendNode__CDefinition
// CNmParameterizedBlendNode__CDefinition Offsets
CNmParameterizedBlendNode__CDefinition.m_sourceNodeIndices = jsonData["CNmParameterizedBlendNode__CDefinition"]["m_sourceNodeIndices"];
CNmParameterizedBlendNode__CDefinition.m_nInputParameterValueNodeIdx = jsonData["CNmParameterizedBlendNode__CDefinition"]["m_nInputParameterValueNodeIdx"];
CNmParameterizedBlendNode__CDefinition.m_bAllowLooping = jsonData["CNmParameterizedBlendNode__CDefinition"]["m_bAllowLooping"];

// Atribuições para CNmFrameSnapEvent
// CNmFrameSnapEvent Offsets
CNmFrameSnapEvent.m_frameSnapMode = jsonData["CNmFrameSnapEvent"]["m_frameSnapMode"];

// Atribuições para CAnimNodePath
// CAnimNodePath Offsets
CAnimNodePath.m_path = jsonData["CAnimNodePath"]["m_path"];
CAnimNodePath.m_nCount = jsonData["CAnimNodePath"]["m_nCount"];

// Atribuições para AnimNodeOutputID
// AnimNodeOutputID Offsets
AnimNodeOutputID.m_id = jsonData["AnimNodeOutputID"]["m_id"];

// Atribuições para CNmSyncTrack
// CNmSyncTrack Offsets
CNmSyncTrack.m_syncEvents = jsonData["CNmSyncTrack"]["m_syncEvents"];
CNmSyncTrack.m_nStartEventOffset = jsonData["CNmSyncTrack"]["m_nStartEventOffset"];

// Atribuições para CSeqBoneMaskList
// CSeqBoneMaskList Offsets
CSeqBoneMaskList.m_sName = jsonData["CSeqBoneMaskList"]["m_sName"];
CSeqBoneMaskList.m_nLocalBoneArray = jsonData["CSeqBoneMaskList"]["m_nLocalBoneArray"];
CSeqBoneMaskList.m_flBoneWeightArray = jsonData["CSeqBoneMaskList"]["m_flBoneWeightArray"];
CSeqBoneMaskList.m_flDefaultMorphCtrlWeight = jsonData["CSeqBoneMaskList"]["m_flDefaultMorphCtrlWeight"];
CSeqBoneMaskList.m_morphCtrlWeightArray = jsonData["CSeqBoneMaskList"]["m_morphCtrlWeightArray"];

// Atribuições para CAnimEncodedFrames
// CAnimEncodedFrames Offsets
CAnimEncodedFrames.m_fileName = jsonData["CAnimEncodedFrames"]["m_fileName"];
CAnimEncodedFrames.m_nFrames = jsonData["CAnimEncodedFrames"]["m_nFrames"];
CAnimEncodedFrames.m_nFramesPerBlock = jsonData["CAnimEncodedFrames"]["m_nFramesPerBlock"];
CAnimEncodedFrames.m_frameblockArray = jsonData["CAnimEncodedFrames"]["m_frameblockArray"];
CAnimEncodedFrames.m_usageDifferences = jsonData["CAnimEncodedFrames"]["m_usageDifferences"];

// Atribuições para SampleCode
// SampleCode Offsets
SampleCode.m_subCode = jsonData["SampleCode"]["m_subCode"];

// Atribuições para CCachedPose
// CCachedPose Offsets
CCachedPose.m_transforms = jsonData["CCachedPose"]["m_transforms"];
CCachedPose.m_morphWeights = jsonData["CCachedPose"]["m_morphWeights"];
CCachedPose.m_hSequence = jsonData["CCachedPose"]["m_hSequence"];
CCachedPose.m_flCycle = jsonData["CCachedPose"]["m_flCycle"];

// Atribuições para CNmTransitionEventConditionNode__CDefinition
// CNmTransitionEventConditionNode__CDefinition Offsets
CNmTransitionEventConditionNode__CDefinition.m_requireRuleID = jsonData["CNmTransitionEventConditionNode__CDefinition"]["m_requireRuleID"];
CNmTransitionEventConditionNode__CDefinition.m_eventConditionRules = jsonData["CNmTransitionEventConditionNode__CDefinition"]["m_eventConditionRules"];
CNmTransitionEventConditionNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmTransitionEventConditionNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmTransitionEventConditionNode__CDefinition.m_ruleCondition = jsonData["CNmTransitionEventConditionNode__CDefinition"]["m_ruleCondition"];

// Atribuições para CMotionGraphConfig
// CMotionGraphConfig Offsets
CMotionGraphConfig.m_paramValues = jsonData["CMotionGraphConfig"]["m_paramValues"];
CMotionGraphConfig.m_flDuration = jsonData["CMotionGraphConfig"]["m_flDuration"];
CMotionGraphConfig.m_nMotionIndex = jsonData["CMotionGraphConfig"]["m_nMotionIndex"];
CMotionGraphConfig.m_nSampleStart = jsonData["CMotionGraphConfig"]["m_nSampleStart"];
CMotionGraphConfig.m_nSampleCount = jsonData["CMotionGraphConfig"]["m_nSampleCount"];

// Atribuições para CMotionSearchNode
// CMotionSearchNode Offsets
CMotionSearchNode.m_children = jsonData["CMotionSearchNode"]["m_children"];
CMotionSearchNode.m_quantizer = jsonData["CMotionSearchNode"]["m_quantizer"];
CMotionSearchNode.m_sampleCodes = jsonData["CMotionSearchNode"]["m_sampleCodes"];
CMotionSearchNode.m_sampleIndices = jsonData["CMotionSearchNode"]["m_sampleIndices"];
CMotionSearchNode.m_selectableSamples = jsonData["CMotionSearchNode"]["m_selectableSamples"];

// Atribuições para CAnimActivity
// CAnimActivity Offsets
CAnimActivity.m_name = jsonData["CAnimActivity"]["m_name"];
CAnimActivity.m_nActivity = jsonData["CAnimActivity"]["m_nActivity"];
CAnimActivity.m_nFlags = jsonData["CAnimActivity"]["m_nFlags"];
CAnimActivity.m_nWeight = jsonData["CAnimActivity"]["m_nWeight"];

// Atribuições para CAnimScriptManager
// CAnimScriptManager Offsets
CAnimScriptManager.m_scriptInfo = jsonData["CAnimScriptManager"]["m_scriptInfo"];

// Atribuições para AnimationDecodeDebugDumpElement_t
// AnimationDecodeDebugDumpElement_t Offsets
AnimationDecodeDebugDumpElement_t.m_nEntityIndex = jsonData["AnimationDecodeDebugDumpElement_t"]["m_nEntityIndex"];
AnimationDecodeDebugDumpElement_t.m_modelName = jsonData["AnimationDecodeDebugDumpElement_t"]["m_modelName"];
AnimationDecodeDebugDumpElement_t.m_poseParams = jsonData["AnimationDecodeDebugDumpElement_t"]["m_poseParams"];
AnimationDecodeDebugDumpElement_t.m_decodeOps = jsonData["AnimationDecodeDebugDumpElement_t"]["m_decodeOps"];
AnimationDecodeDebugDumpElement_t.m_internalOps = jsonData["AnimationDecodeDebugDumpElement_t"]["m_internalOps"];
AnimationDecodeDebugDumpElement_t.m_decodedAnims = jsonData["AnimationDecodeDebugDumpElement_t"]["m_decodedAnims"];

// Atribuições para ConfigIndex
// ConfigIndex Offsets
ConfigIndex.m_nGroup = jsonData["ConfigIndex"]["m_nGroup"];
ConfigIndex.m_nConfig = jsonData["ConfigIndex"]["m_nConfig"];

// Atribuições para VPhysXCollisionAttributes_t
// VPhysXCollisionAttributes_t Offsets
VPhysXCollisionAttributes_t.m_CollisionGroup = jsonData["VPhysXCollisionAttributes_t"]["m_CollisionGroup"];
VPhysXCollisionAttributes_t.m_InteractAs = jsonData["VPhysXCollisionAttributes_t"]["m_InteractAs"];
VPhysXCollisionAttributes_t.m_InteractWith = jsonData["VPhysXCollisionAttributes_t"]["m_InteractWith"];
VPhysXCollisionAttributes_t.m_InteractExclude = jsonData["VPhysXCollisionAttributes_t"]["m_InteractExclude"];
VPhysXCollisionAttributes_t.m_CollisionGroupString = jsonData["VPhysXCollisionAttributes_t"]["m_CollisionGroupString"];
VPhysXCollisionAttributes_t.m_InteractAsStrings = jsonData["VPhysXCollisionAttributes_t"]["m_InteractAsStrings"];
VPhysXCollisionAttributes_t.m_InteractWithStrings = jsonData["VPhysXCollisionAttributes_t"]["m_InteractWithStrings"];
VPhysXCollisionAttributes_t.m_InteractExcludeStrings = jsonData["VPhysXCollisionAttributes_t"]["m_InteractExcludeStrings"];

// Atribuições para CSequenceUpdateNode
// CSequenceUpdateNode Offsets
CSequenceUpdateNode.m_hSequence = jsonData["CSequenceUpdateNode"]["m_hSequence"];
CSequenceUpdateNode.m_duration = jsonData["CSequenceUpdateNode"]["m_duration"];
CSequenceUpdateNode.m_paramSpans = jsonData["CSequenceUpdateNode"]["m_paramSpans"];
CSequenceUpdateNode.m_tags = jsonData["CSequenceUpdateNode"]["m_tags"];

// Atribuições para CNmPassthroughNode__CDefinition
// CNmPassthroughNode__CDefinition Offsets
CNmPassthroughNode__CDefinition.m_nChildNodeIdx = jsonData["CNmPassthroughNode__CDefinition"]["m_nChildNodeIdx"];

// Atribuições para CNmGraphDefinition__ExternalGraphSlot_t
// CNmGraphDefinition__ExternalGraphSlot_t Offsets
CNmGraphDefinition__ExternalGraphSlot_t.m_nNodeIdx = jsonData["CNmGraphDefinition__ExternalGraphSlot_t"]["m_nNodeIdx"];
CNmGraphDefinition__ExternalGraphSlot_t.m_slotID = jsonData["CNmGraphDefinition__ExternalGraphSlot_t"]["m_slotID"];

// Atribuições para CAimCameraUpdateNode
// CAimCameraUpdateNode Offsets
CAimCameraUpdateNode.m_hParameterPosition = jsonData["CAimCameraUpdateNode"]["m_hParameterPosition"];
CAimCameraUpdateNode.m_hParameterOrientation = jsonData["CAimCameraUpdateNode"]["m_hParameterOrientation"];
CAimCameraUpdateNode.m_hParameterSpineRotationWeight = jsonData["CAimCameraUpdateNode"]["m_hParameterSpineRotationWeight"];
CAimCameraUpdateNode.m_hParameterPelvisOffset = jsonData["CAimCameraUpdateNode"]["m_hParameterPelvisOffset"];
CAimCameraUpdateNode.m_hParameterUseIK = jsonData["CAimCameraUpdateNode"]["m_hParameterUseIK"];
CAimCameraUpdateNode.m_hParameterCameraOnly = jsonData["CAimCameraUpdateNode"]["m_hParameterCameraOnly"];
CAimCameraUpdateNode.m_hParameterWeaponDepenetrationDistance = jsonData["CAimCameraUpdateNode"]["m_hParameterWeaponDepenetrationDistance"];
CAimCameraUpdateNode.m_hParameterWeaponDepenetrationDelta = jsonData["CAimCameraUpdateNode"]["m_hParameterWeaponDepenetrationDelta"];
CAimCameraUpdateNode.m_hParameterCameraClearanceDistance = jsonData["CAimCameraUpdateNode"]["m_hParameterCameraClearanceDistance"];
CAimCameraUpdateNode.m_opFixedSettings = jsonData["CAimCameraUpdateNode"]["m_opFixedSettings"];

// Atribuições para CSeqSeqDescFlag
// CSeqSeqDescFlag Offsets
CSeqSeqDescFlag.m_bLooping = jsonData["CSeqSeqDescFlag"]["m_bLooping"];
CSeqSeqDescFlag.m_bSnap = jsonData["CSeqSeqDescFlag"]["m_bSnap"];
CSeqSeqDescFlag.m_bAutoplay = jsonData["CSeqSeqDescFlag"]["m_bAutoplay"];
CSeqSeqDescFlag.m_bPost = jsonData["CSeqSeqDescFlag"]["m_bPost"];
CSeqSeqDescFlag.m_bHidden = jsonData["CSeqSeqDescFlag"]["m_bHidden"];
CSeqSeqDescFlag.m_bMulti = jsonData["CSeqSeqDescFlag"]["m_bMulti"];
CSeqSeqDescFlag.m_bLegacyDelta = jsonData["CSeqSeqDescFlag"]["m_bLegacyDelta"];
CSeqSeqDescFlag.m_bLegacyWorldspace = jsonData["CSeqSeqDescFlag"]["m_bLegacyWorldspace"];
CSeqSeqDescFlag.m_bLegacyCyclepose = jsonData["CSeqSeqDescFlag"]["m_bLegacyCyclepose"];
CSeqSeqDescFlag.m_bLegacyRealtime = jsonData["CSeqSeqDescFlag"]["m_bLegacyRealtime"];
CSeqSeqDescFlag.m_bModelDoc = jsonData["CSeqSeqDescFlag"]["m_bModelDoc"];

// Atribuições para PermModelInfo_t
// PermModelInfo_t Offsets
PermModelInfo_t.m_nFlags = jsonData["PermModelInfo_t"]["m_nFlags"];
PermModelInfo_t.m_vHullMin = jsonData["PermModelInfo_t"]["m_vHullMin"];
PermModelInfo_t.m_vHullMax = jsonData["PermModelInfo_t"]["m_vHullMax"];
PermModelInfo_t.m_vViewMin = jsonData["PermModelInfo_t"]["m_vViewMin"];
PermModelInfo_t.m_vViewMax = jsonData["PermModelInfo_t"]["m_vViewMax"];
PermModelInfo_t.m_flMass = jsonData["PermModelInfo_t"]["m_flMass"];
PermModelInfo_t.m_vEyePosition = jsonData["PermModelInfo_t"]["m_vEyePosition"];
PermModelInfo_t.m_flMaxEyeDeflection = jsonData["PermModelInfo_t"]["m_flMaxEyeDeflection"];
PermModelInfo_t.m_sSurfaceProperty = jsonData["PermModelInfo_t"]["m_sSurfaceProperty"];
PermModelInfo_t.m_keyValueText = jsonData["PermModelInfo_t"]["m_keyValueText"];

// Atribuições para StanceInfo_t
// StanceInfo_t Offsets
StanceInfo_t.m_vPosition = jsonData["StanceInfo_t"]["m_vPosition"];
StanceInfo_t.m_flDirection = jsonData["StanceInfo_t"]["m_flDirection"];

// Atribuições para IKBoneNameAndIndex_t
// IKBoneNameAndIndex_t Offsets
IKBoneNameAndIndex_t.m_Name = jsonData["IKBoneNameAndIndex_t"]["m_Name"];

// Atribuições para CStanceScaleUpdateNode
// CStanceScaleUpdateNode Offsets
CStanceScaleUpdateNode.m_hParam = jsonData["CStanceScaleUpdateNode"]["m_hParam"];

// Atribuições para CNmBoneMaskBlendNode__CDefinition
// CNmBoneMaskBlendNode__CDefinition Offsets
CNmBoneMaskBlendNode__CDefinition.m_nSourceMaskNodeIdx = jsonData["CNmBoneMaskBlendNode__CDefinition"]["m_nSourceMaskNodeIdx"];
CNmBoneMaskBlendNode__CDefinition.m_nTargetMaskNodeIdx = jsonData["CNmBoneMaskBlendNode__CDefinition"]["m_nTargetMaskNodeIdx"];
CNmBoneMaskBlendNode__CDefinition.m_nBlendWeightValueNodeIdx = jsonData["CNmBoneMaskBlendNode__CDefinition"]["m_nBlendWeightValueNodeIdx"];

// Atribuições para CNmIDEventNode__CDefinition
// CNmIDEventNode__CDefinition Offsets
CNmIDEventNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmIDEventNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmIDEventNode__CDefinition.m_eventConditionRules = jsonData["CNmIDEventNode__CDefinition"]["m_eventConditionRules"];
CNmIDEventNode__CDefinition.m_defaultValue = jsonData["CNmIDEventNode__CDefinition"]["m_defaultValue"];

// Atribuições para HitReactFixedSettings_t
// HitReactFixedSettings_t Offsets
HitReactFixedSettings_t.m_nWeightListIndex = jsonData["HitReactFixedSettings_t"]["m_nWeightListIndex"];
HitReactFixedSettings_t.m_nEffectedBoneCount = jsonData["HitReactFixedSettings_t"]["m_nEffectedBoneCount"];
HitReactFixedSettings_t.m_flMaxImpactForce = jsonData["HitReactFixedSettings_t"]["m_flMaxImpactForce"];
HitReactFixedSettings_t.m_flMinImpactForce = jsonData["HitReactFixedSettings_t"]["m_flMinImpactForce"];
HitReactFixedSettings_t.m_flWhipImpactScale = jsonData["HitReactFixedSettings_t"]["m_flWhipImpactScale"];
HitReactFixedSettings_t.m_flCounterRotationScale = jsonData["HitReactFixedSettings_t"]["m_flCounterRotationScale"];
HitReactFixedSettings_t.m_flDistanceFadeScale = jsonData["HitReactFixedSettings_t"]["m_flDistanceFadeScale"];
HitReactFixedSettings_t.m_flPropagationScale = jsonData["HitReactFixedSettings_t"]["m_flPropagationScale"];
HitReactFixedSettings_t.m_flWhipDelay = jsonData["HitReactFixedSettings_t"]["m_flWhipDelay"];
HitReactFixedSettings_t.m_flSpringStrength = jsonData["HitReactFixedSettings_t"]["m_flSpringStrength"];
HitReactFixedSettings_t.m_flWhipSpringStrength = jsonData["HitReactFixedSettings_t"]["m_flWhipSpringStrength"];
HitReactFixedSettings_t.m_flMaxAngleRadians = jsonData["HitReactFixedSettings_t"]["m_flMaxAngleRadians"];
HitReactFixedSettings_t.m_nHipBoneIndex = jsonData["HitReactFixedSettings_t"]["m_nHipBoneIndex"];
HitReactFixedSettings_t.m_flHipBoneTranslationScale = jsonData["HitReactFixedSettings_t"]["m_flHipBoneTranslationScale"];
HitReactFixedSettings_t.m_flHipDipSpringStrength = jsonData["HitReactFixedSettings_t"]["m_flHipDipSpringStrength"];
HitReactFixedSettings_t.m_flHipDipImpactScale = jsonData["HitReactFixedSettings_t"]["m_flHipDipImpactScale"];
HitReactFixedSettings_t.m_flHipDipDelay = jsonData["HitReactFixedSettings_t"]["m_flHipDipDelay"];

// Atribuições para CAnimTagBase
// CAnimTagBase Offsets
CAnimTagBase.m_name = jsonData["CAnimTagBase"]["m_name"];
CAnimTagBase.m_sComment = jsonData["CAnimTagBase"]["m_sComment"];
CAnimTagBase.m_group = jsonData["CAnimTagBase"]["m_group"];
CAnimTagBase.m_tagID = jsonData["CAnimTagBase"]["m_tagID"];
CAnimTagBase.m_bIsReferenced = jsonData["CAnimTagBase"]["m_bIsReferenced"];

// Atribuições para CMotionGraph
// CMotionGraph Offsets
CMotionGraph.m_paramSpans = jsonData["CMotionGraph"]["m_paramSpans"];
CMotionGraph.m_tags = jsonData["CMotionGraph"]["m_tags"];
CMotionGraph.m_pRootNode = jsonData["CMotionGraph"]["m_pRootNode"];
CMotionGraph.m_nParameterCount = jsonData["CMotionGraph"]["m_nParameterCount"];
CMotionGraph.m_nConfigStartIndex = jsonData["CMotionGraph"]["m_nConfigStartIndex"];
CMotionGraph.m_nConfigCount = jsonData["CMotionGraph"]["m_nConfigCount"];
CMotionGraph.m_bLoop = jsonData["CMotionGraph"]["m_bLoop"];

// Atribuições para CNmVectorInfoNode__CDefinition
// CNmVectorInfoNode__CDefinition Offsets
CNmVectorInfoNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmVectorInfoNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmVectorInfoNode__CDefinition.m_desiredInfo = jsonData["CNmVectorInfoNode__CDefinition"]["m_desiredInfo"];

// Atribuições para AnimationSnapshot_t
// AnimationSnapshot_t Offsets
AnimationSnapshot_t.m_nEntIndex = jsonData["AnimationSnapshot_t"]["m_nEntIndex"];
AnimationSnapshot_t.m_modelName = jsonData["AnimationSnapshot_t"]["m_modelName"];

// Atribuições para CSeqTransition
// CSeqTransition Offsets
CSeqTransition.m_flFadeInTime = jsonData["CSeqTransition"]["m_flFadeInTime"];
CSeqTransition.m_flFadeOutTime = jsonData["CSeqTransition"]["m_flFadeOutTime"];

// Atribuições para CNmVirtualParameterTargetNode__CDefinition
// CNmVirtualParameterTargetNode__CDefinition Offsets
CNmVirtualParameterTargetNode__CDefinition.m_nChildNodeIdx = jsonData["CNmVirtualParameterTargetNode__CDefinition"]["m_nChildNodeIdx"];

// Atribuições para CAnimGraphDebugReplay
// CAnimGraphDebugReplay Offsets
CAnimGraphDebugReplay.m_animGraphFileName = jsonData["CAnimGraphDebugReplay"]["m_animGraphFileName"];
CAnimGraphDebugReplay.m_frameList = jsonData["CAnimGraphDebugReplay"]["m_frameList"];
CAnimGraphDebugReplay.m_startIndex = jsonData["CAnimGraphDebugReplay"]["m_startIndex"];
CAnimGraphDebugReplay.m_writeIndex = jsonData["CAnimGraphDebugReplay"]["m_writeIndex"];
CAnimGraphDebugReplay.m_frameCount = jsonData["CAnimGraphDebugReplay"]["m_frameCount"];

// Atribuições para CVectorAnimParameter
// CVectorAnimParameter Offsets
CVectorAnimParameter.m_defaultValue = jsonData["CVectorAnimParameter"]["m_defaultValue"];
CVectorAnimParameter.m_bInterpolate = jsonData["CVectorAnimParameter"]["m_bInterpolate"];

// Atribuições para CNmStateMachineNode__StateDefinition_t
// CNmStateMachineNode__StateDefinition_t Offsets
CNmStateMachineNode__StateDefinition_t.m_nStateNodeIdx = jsonData["CNmStateMachineNode__StateDefinition_t"]["m_nStateNodeIdx"];
CNmStateMachineNode__StateDefinition_t.m_nEntryConditionNodeIdx = jsonData["CNmStateMachineNode__StateDefinition_t"]["m_nEntryConditionNodeIdx"];
CNmStateMachineNode__StateDefinition_t.m_transitionDefinitions = jsonData["CNmStateMachineNode__StateDefinition_t"]["m_transitionDefinitions"];

// Atribuições para CStanceOverrideUpdateNode
// CStanceOverrideUpdateNode Offsets
CStanceOverrideUpdateNode.m_footStanceInfo = jsonData["CStanceOverrideUpdateNode"]["m_footStanceInfo"];
CStanceOverrideUpdateNode.m_pStanceSourceNode = jsonData["CStanceOverrideUpdateNode"]["m_pStanceSourceNode"];
CStanceOverrideUpdateNode.m_hParameter = jsonData["CStanceOverrideUpdateNode"]["m_hParameter"];
CStanceOverrideUpdateNode.m_eMode = jsonData["CStanceOverrideUpdateNode"]["m_eMode"];

// Atribuições para LookAtBone_t
// LookAtBone_t Offsets
LookAtBone_t.m_index = jsonData["LookAtBone_t"]["m_index"];
LookAtBone_t.m_weight = jsonData["LookAtBone_t"]["m_weight"];

// Atribuições para CNmTransitionNode__CDefinition
// CNmTransitionNode__CDefinition Offsets
CNmTransitionNode__CDefinition.m_nTargetStateNodeIdx = jsonData["CNmTransitionNode__CDefinition"]["m_nTargetStateNodeIdx"];
CNmTransitionNode__CDefinition.m_nDurationOverrideNodeIdx = jsonData["CNmTransitionNode__CDefinition"]["m_nDurationOverrideNodeIdx"];
CNmTransitionNode__CDefinition.m_syncEventOffsetOverrideNodeIdx = jsonData["CNmTransitionNode__CDefinition"]["m_syncEventOffsetOverrideNodeIdx"];
CNmTransitionNode__CDefinition.m_startBoneMaskNodeIdx = jsonData["CNmTransitionNode__CDefinition"]["m_startBoneMaskNodeIdx"];
CNmTransitionNode__CDefinition.m_flDuration = jsonData["CNmTransitionNode__CDefinition"]["m_flDuration"];
CNmTransitionNode__CDefinition.m_boneMaskBlendInTimePercentage = jsonData["CNmTransitionNode__CDefinition"]["m_boneMaskBlendInTimePercentage"];
CNmTransitionNode__CDefinition.m_syncEventOffset = jsonData["CNmTransitionNode__CDefinition"]["m_syncEventOffset"];
CNmTransitionNode__CDefinition.m_transitionOptions = jsonData["CNmTransitionNode__CDefinition"]["m_transitionOptions"];
CNmTransitionNode__CDefinition.m_targetSyncIDNodeIdx = jsonData["CNmTransitionNode__CDefinition"]["m_targetSyncIDNodeIdx"];
CNmTransitionNode__CDefinition.m_blendWeightEasing = jsonData["CNmTransitionNode__CDefinition"]["m_blendWeightEasing"];
CNmTransitionNode__CDefinition.m_rootMotionBlend = jsonData["CNmTransitionNode__CDefinition"]["m_rootMotionBlend"];

// Atribuições para CNmFloatEaseNode__CDefinition
// CNmFloatEaseNode__CDefinition Offsets
CNmFloatEaseNode__CDefinition.m_flEaseTime = jsonData["CNmFloatEaseNode__CDefinition"]["m_flEaseTime"];
CNmFloatEaseNode__CDefinition.m_flStartValue = jsonData["CNmFloatEaseNode__CDefinition"]["m_flStartValue"];
CNmFloatEaseNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmFloatEaseNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmFloatEaseNode__CDefinition.m_easingOp = jsonData["CNmFloatEaseNode__CDefinition"]["m_easingOp"];
CNmFloatEaseNode__CDefinition.m_bUseStartValue = jsonData["CNmFloatEaseNode__CDefinition"]["m_bUseStartValue"];

// Atribuições para CAnimEncodeDifference
// CAnimEncodeDifference Offsets
CAnimEncodeDifference.m_boneArray = jsonData["CAnimEncodeDifference"]["m_boneArray"];
CAnimEncodeDifference.m_morphArray = jsonData["CAnimEncodeDifference"]["m_morphArray"];
CAnimEncodeDifference.m_userArray = jsonData["CAnimEncodeDifference"]["m_userArray"];
CAnimEncodeDifference.m_bHasRotationBitArray = jsonData["CAnimEncodeDifference"]["m_bHasRotationBitArray"];
CAnimEncodeDifference.m_bHasMovementBitArray = jsonData["CAnimEncodeDifference"]["m_bHasMovementBitArray"];
CAnimEncodeDifference.m_bHasMorphBitArray = jsonData["CAnimEncodeDifference"]["m_bHasMorphBitArray"];
CAnimEncodeDifference.m_bHasUserBitArray = jsonData["CAnimEncodeDifference"]["m_bHasUserBitArray"];

// Atribuições para CNmTargetOffsetNode__CDefinition
// CNmTargetOffsetNode__CDefinition Offsets
CNmTargetOffsetNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmTargetOffsetNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmTargetOffsetNode__CDefinition.m_bIsBoneSpaceOffset = jsonData["CNmTargetOffsetNode__CDefinition"]["m_bIsBoneSpaceOffset"];
CNmTargetOffsetNode__CDefinition.m_rotationOffset = jsonData["CNmTargetOffsetNode__CDefinition"]["m_rotationOffset"];
CNmTargetOffsetNode__CDefinition.m_translationOffset = jsonData["CNmTargetOffsetNode__CDefinition"]["m_translationOffset"];

// Atribuições para CMotionGraphUpdateNode
// CMotionGraphUpdateNode Offsets
CMotionGraphUpdateNode.m_pMotionGraph = jsonData["CMotionGraphUpdateNode"]["m_pMotionGraph"];

// Atribuições para CNmFloatAngleMathNode__CDefinition
// CNmFloatAngleMathNode__CDefinition Offsets
CNmFloatAngleMathNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmFloatAngleMathNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmFloatAngleMathNode__CDefinition.m_operation = jsonData["CNmFloatAngleMathNode__CDefinition"]["m_operation"];

// Atribuições para CAnimParamHandle
// CAnimParamHandle Offsets
CAnimParamHandle.m_type = jsonData["CAnimParamHandle"]["m_type"];
CAnimParamHandle.m_index = jsonData["CAnimParamHandle"]["m_index"];

// Atribuições para WeightList
// WeightList Offsets
WeightList.m_name = jsonData["WeightList"]["m_name"];
WeightList.m_weights = jsonData["WeightList"]["m_weights"];

// Atribuições para MotionIndex
// MotionIndex Offsets
MotionIndex.m_nGroup = jsonData["MotionIndex"]["m_nGroup"];
MotionIndex.m_nMotion = jsonData["MotionIndex"]["m_nMotion"];

// Atribuições para FollowAttachmentSettings_t
// FollowAttachmentSettings_t Offsets
FollowAttachmentSettings_t.m_attachment = jsonData["FollowAttachmentSettings_t"]["m_attachment"];
FollowAttachmentSettings_t.m_boneIndex = jsonData["FollowAttachmentSettings_t"]["m_boneIndex"];
FollowAttachmentSettings_t.m_bMatchTranslation = jsonData["FollowAttachmentSettings_t"]["m_bMatchTranslation"];
FollowAttachmentSettings_t.m_bMatchRotation = jsonData["FollowAttachmentSettings_t"]["m_bMatchRotation"];

// Atribuições para AnimNodeID
// AnimNodeID Offsets
AnimNodeID.m_id = jsonData["AnimNodeID"]["m_id"];

// Atribuições para CNmClipSelectorNode__CDefinition
// CNmClipSelectorNode__CDefinition Offsets
CNmClipSelectorNode__CDefinition.m_optionNodeIndices = jsonData["CNmClipSelectorNode__CDefinition"]["m_optionNodeIndices"];
CNmClipSelectorNode__CDefinition.m_conditionNodeIndices = jsonData["CNmClipSelectorNode__CDefinition"]["m_conditionNodeIndices"];

// Atribuições para CLookComponentUpdater
// CLookComponentUpdater Offsets
CLookComponentUpdater.m_hLookHeading = jsonData["CLookComponentUpdater"]["m_hLookHeading"];
CLookComponentUpdater.m_hLookHeadingVelocity = jsonData["CLookComponentUpdater"]["m_hLookHeadingVelocity"];
CLookComponentUpdater.m_hLookPitch = jsonData["CLookComponentUpdater"]["m_hLookPitch"];
CLookComponentUpdater.m_hLookDistance = jsonData["CLookComponentUpdater"]["m_hLookDistance"];
CLookComponentUpdater.m_hLookDirection = jsonData["CLookComponentUpdater"]["m_hLookDirection"];
CLookComponentUpdater.m_hLookTarget = jsonData["CLookComponentUpdater"]["m_hLookTarget"];
CLookComponentUpdater.m_hLookTargetWorldSpace = jsonData["CLookComponentUpdater"]["m_hLookTargetWorldSpace"];
CLookComponentUpdater.m_bNetworkLookTarget = jsonData["CLookComponentUpdater"]["m_bNetworkLookTarget"];

// Atribuições para CAnimGraphNetworkSettings
// CAnimGraphNetworkSettings Offsets
CAnimGraphNetworkSettings.m_bNetworkingEnabled = jsonData["CAnimGraphNetworkSettings"]["m_bNetworkingEnabled"];

// Atribuições para CSingleFrameUpdateNode
// CSingleFrameUpdateNode Offsets
CSingleFrameUpdateNode.m_actions = jsonData["CSingleFrameUpdateNode"]["m_actions"];
CSingleFrameUpdateNode.m_hPoseCacheHandle = jsonData["CSingleFrameUpdateNode"]["m_hPoseCacheHandle"];
CSingleFrameUpdateNode.m_hSequence = jsonData["CSingleFrameUpdateNode"]["m_hSequence"];
CSingleFrameUpdateNode.m_flCycle = jsonData["CSingleFrameUpdateNode"]["m_flCycle"];

// Atribuições para CModelConfigList
// CModelConfigList Offsets
CModelConfigList.m_bHideMaterialGroupInTools = jsonData["CModelConfigList"]["m_bHideMaterialGroupInTools"];
CModelConfigList.m_bHideRenderColorInTools = jsonData["CModelConfigList"]["m_bHideRenderColorInTools"];
CModelConfigList.m_Configs = jsonData["CModelConfigList"]["m_Configs"];

// Atribuições para CSeqAutoLayerFlag
// CSeqAutoLayerFlag Offsets
CSeqAutoLayerFlag.m_bPost = jsonData["CSeqAutoLayerFlag"]["m_bPost"];
CSeqAutoLayerFlag.m_bSpline = jsonData["CSeqAutoLayerFlag"]["m_bSpline"];
CSeqAutoLayerFlag.m_bXFade = jsonData["CSeqAutoLayerFlag"]["m_bXFade"];
CSeqAutoLayerFlag.m_bNoBlend = jsonData["CSeqAutoLayerFlag"]["m_bNoBlend"];
CSeqAutoLayerFlag.m_bLocal = jsonData["CSeqAutoLayerFlag"]["m_bLocal"];
CSeqAutoLayerFlag.m_bPose = jsonData["CSeqAutoLayerFlag"]["m_bPose"];
CSeqAutoLayerFlag.m_bFetchFrame = jsonData["CSeqAutoLayerFlag"]["m_bFetchFrame"];
CSeqAutoLayerFlag.m_bSubtract = jsonData["CSeqAutoLayerFlag"]["m_bSubtract"];

// Atribuições para AnimStateID
// AnimStateID Offsets
AnimStateID.m_id = jsonData["AnimStateID"]["m_id"];

// Atribuições para CNmIDEventConditionNode__CDefinition
// CNmIDEventConditionNode__CDefinition Offsets
CNmIDEventConditionNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmIDEventConditionNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmIDEventConditionNode__CDefinition.m_eventConditionRules = jsonData["CNmIDEventConditionNode__CDefinition"]["m_eventConditionRules"];
CNmIDEventConditionNode__CDefinition.m_eventIDs = jsonData["CNmIDEventConditionNode__CDefinition"]["m_eventIDs"];

// Atribuições para ModelBoneFlexDriver_t
// ModelBoneFlexDriver_t Offsets
ModelBoneFlexDriver_t.m_boneName = jsonData["ModelBoneFlexDriver_t"]["m_boneName"];
ModelBoneFlexDriver_t.m_boneNameToken = jsonData["ModelBoneFlexDriver_t"]["m_boneNameToken"];
ModelBoneFlexDriver_t.m_controls = jsonData["ModelBoneFlexDriver_t"]["m_controls"];

// Atribuições para CMorphData
// CMorphData Offsets
CMorphData.m_name = jsonData["CMorphData"]["m_name"];
CMorphData.m_morphRectDatas = jsonData["CMorphData"]["m_morphRectDatas"];

// Atribuições para CFootPinningUpdateNode
// CFootPinningUpdateNode Offsets
CFootPinningUpdateNode.m_poseOpFixedData = jsonData["CFootPinningUpdateNode"]["m_poseOpFixedData"];
CFootPinningUpdateNode.m_eTimingSource = jsonData["CFootPinningUpdateNode"]["m_eTimingSource"];
CFootPinningUpdateNode.m_params = jsonData["CFootPinningUpdateNode"]["m_params"];
CFootPinningUpdateNode.m_bResetChild = jsonData["CFootPinningUpdateNode"]["m_bResetChild"];

// Atribuições para CSeqPoseSetting
// CSeqPoseSetting Offsets
CSeqPoseSetting.m_sPoseParameter = jsonData["CSeqPoseSetting"]["m_sPoseParameter"];
CSeqPoseSetting.m_sAttachment = jsonData["CSeqPoseSetting"]["m_sAttachment"];
CSeqPoseSetting.m_sReferenceSequence = jsonData["CSeqPoseSetting"]["m_sReferenceSequence"];
CSeqPoseSetting.m_flValue = jsonData["CSeqPoseSetting"]["m_flValue"];
CSeqPoseSetting.m_bX = jsonData["CSeqPoseSetting"]["m_bX"];
CSeqPoseSetting.m_bY = jsonData["CSeqPoseSetting"]["m_bY"];
CSeqPoseSetting.m_bZ = jsonData["CSeqPoseSetting"]["m_bZ"];
CSeqPoseSetting.m_eType = jsonData["CSeqPoseSetting"]["m_eType"];

// Atribuições para CNmVirtualParameterFloatNode__CDefinition
// CNmVirtualParameterFloatNode__CDefinition Offsets
CNmVirtualParameterFloatNode__CDefinition.m_nChildNodeIdx = jsonData["CNmVirtualParameterFloatNode__CDefinition"]["m_nChildNodeIdx"];

// Atribuições para CAttachment
// CAttachment Offsets
CAttachment.m_name = jsonData["CAttachment"]["m_name"];
CAttachment.m_influenceNames = jsonData["CAttachment"]["m_influenceNames"];
CAttachment.m_vInfluenceRotations = jsonData["CAttachment"]["m_vInfluenceRotations"];
CAttachment.m_vInfluenceOffsets = jsonData["CAttachment"]["m_vInfluenceOffsets"];
CAttachment.m_influenceWeights = jsonData["CAttachment"]["m_influenceWeights"];
CAttachment.m_bInfluenceRootTransform = jsonData["CAttachment"]["m_bInfluenceRootTransform"];
CAttachment.m_nInfluences = jsonData["CAttachment"]["m_nInfluences"];
CAttachment.m_bIgnoreRotation = jsonData["CAttachment"]["m_bIgnoreRotation"];

// Atribuições para CSequenceUpdateNodeBase
// CSequenceUpdateNodeBase Offsets
CSequenceUpdateNodeBase.m_playbackSpeed = jsonData["CSequenceUpdateNodeBase"]["m_playbackSpeed"];
CSequenceUpdateNodeBase.m_bLoop = jsonData["CSequenceUpdateNodeBase"]["m_bLoop"];

// Atribuições para CDrawCullingData
// CDrawCullingData Offsets
CDrawCullingData.m_vConeApex = jsonData["CDrawCullingData"]["m_vConeApex"];
CDrawCullingData.m_ConeAxis = jsonData["CDrawCullingData"]["m_ConeAxis"];
CDrawCullingData.m_ConeCutoff = jsonData["CDrawCullingData"]["m_ConeCutoff"];

// Atribuições para VPhysXJoint_t
// VPhysXJoint_t Offsets
VPhysXJoint_t.m_nType = jsonData["VPhysXJoint_t"]["m_nType"];
VPhysXJoint_t.m_nBody1 = jsonData["VPhysXJoint_t"]["m_nBody1"];
VPhysXJoint_t.m_nBody2 = jsonData["VPhysXJoint_t"]["m_nBody2"];
VPhysXJoint_t.m_nFlags = jsonData["VPhysXJoint_t"]["m_nFlags"];
VPhysXJoint_t.m_Frame1 = jsonData["VPhysXJoint_t"]["m_Frame1"];
VPhysXJoint_t.m_Frame2 = jsonData["VPhysXJoint_t"]["m_Frame2"];
VPhysXJoint_t.m_bEnableCollision = jsonData["VPhysXJoint_t"]["m_bEnableCollision"];
VPhysXJoint_t.m_bEnableLinearLimit = jsonData["VPhysXJoint_t"]["m_bEnableLinearLimit"];
VPhysXJoint_t.m_LinearLimit = jsonData["VPhysXJoint_t"]["m_LinearLimit"];
VPhysXJoint_t.m_bEnableLinearMotor = jsonData["VPhysXJoint_t"]["m_bEnableLinearMotor"];
VPhysXJoint_t.m_vLinearTargetVelocity = jsonData["VPhysXJoint_t"]["m_vLinearTargetVelocity"];
VPhysXJoint_t.m_flMaxForce = jsonData["VPhysXJoint_t"]["m_flMaxForce"];
VPhysXJoint_t.m_bEnableSwingLimit = jsonData["VPhysXJoint_t"]["m_bEnableSwingLimit"];
VPhysXJoint_t.m_SwingLimit = jsonData["VPhysXJoint_t"]["m_SwingLimit"];
VPhysXJoint_t.m_bEnableTwistLimit = jsonData["VPhysXJoint_t"]["m_bEnableTwistLimit"];
VPhysXJoint_t.m_TwistLimit = jsonData["VPhysXJoint_t"]["m_TwistLimit"];
VPhysXJoint_t.m_bEnableAngularMotor = jsonData["VPhysXJoint_t"]["m_bEnableAngularMotor"];
VPhysXJoint_t.m_vAngularTargetVelocity = jsonData["VPhysXJoint_t"]["m_vAngularTargetVelocity"];
VPhysXJoint_t.m_flMaxTorque = jsonData["VPhysXJoint_t"]["m_flMaxTorque"];
VPhysXJoint_t.m_flLinearFrequency = jsonData["VPhysXJoint_t"]["m_flLinearFrequency"];
VPhysXJoint_t.m_flLinearDampingRatio = jsonData["VPhysXJoint_t"]["m_flLinearDampingRatio"];
VPhysXJoint_t.m_flAngularFrequency = jsonData["VPhysXJoint_t"]["m_flAngularFrequency"];
VPhysXJoint_t.m_flAngularDampingRatio = jsonData["VPhysXJoint_t"]["m_flAngularDampingRatio"];
VPhysXJoint_t.m_flFriction = jsonData["VPhysXJoint_t"]["m_flFriction"];
VPhysXJoint_t.m_flElasticity = jsonData["VPhysXJoint_t"]["m_flElasticity"];
VPhysXJoint_t.m_flElasticDamping = jsonData["VPhysXJoint_t"]["m_flElasticDamping"];
VPhysXJoint_t.m_flPlasticity = jsonData["VPhysXJoint_t"]["m_flPlasticity"];

// Atribuições para CStateNodeTransitionData
// CStateNodeTransitionData Offsets
CStateNodeTransitionData.m_curve = jsonData["CStateNodeTransitionData"]["m_curve"];
CStateNodeTransitionData.m_blendDuration = jsonData["CStateNodeTransitionData"]["m_blendDuration"];
CStateNodeTransitionData.m_resetCycleValue = jsonData["CStateNodeTransitionData"]["m_resetCycleValue"];
CStateNodeTransitionData.m_bReset = jsonData["CStateNodeTransitionData"]["m_bReset"];
CStateNodeTransitionData.m_resetCycleOption = jsonData["CStateNodeTransitionData"]["m_resetCycleOption"];

// Atribuições para CTimeRemainingMetricEvaluator
// CTimeRemainingMetricEvaluator Offsets
CTimeRemainingMetricEvaluator.m_bMatchByTimeRemaining = jsonData["CTimeRemainingMetricEvaluator"]["m_bMatchByTimeRemaining"];
CTimeRemainingMetricEvaluator.m_flMaxTimeRemaining = jsonData["CTimeRemainingMetricEvaluator"]["m_flMaxTimeRemaining"];
CTimeRemainingMetricEvaluator.m_bFilterByTimeRemaining = jsonData["CTimeRemainingMetricEvaluator"]["m_bFilterByTimeRemaining"];
CTimeRemainingMetricEvaluator.m_flMinTimeRemaining = jsonData["CTimeRemainingMetricEvaluator"]["m_flMinTimeRemaining"];

// Atribuições para CModelConfigElement
// CModelConfigElement Offsets
CModelConfigElement.m_ElementName = jsonData["CModelConfigElement"]["m_ElementName"];
CModelConfigElement.m_NestedElements = jsonData["CModelConfigElement"]["m_NestedElements"];

// Atribuições para FootFixedSettings
// FootFixedSettings Offsets
FootFixedSettings.m_traceSettings = jsonData["FootFixedSettings"]["m_traceSettings"];
FootFixedSettings.m_vFootBaseBindPosePositionMS = jsonData["FootFixedSettings"]["m_vFootBaseBindPosePositionMS"];
FootFixedSettings.m_flFootBaseLength = jsonData["FootFixedSettings"]["m_flFootBaseLength"];
FootFixedSettings.m_flMaxRotationLeft = jsonData["FootFixedSettings"]["m_flMaxRotationLeft"];
FootFixedSettings.m_flMaxRotationRight = jsonData["FootFixedSettings"]["m_flMaxRotationRight"];
FootFixedSettings.m_footstepLandedTagIndex = jsonData["FootFixedSettings"]["m_footstepLandedTagIndex"];
FootFixedSettings.m_bEnableTracing = jsonData["FootFixedSettings"]["m_bEnableTracing"];
FootFixedSettings.m_flTraceAngleBlend = jsonData["FootFixedSettings"]["m_flTraceAngleBlend"];
FootFixedSettings.m_nDisableTagIndex = jsonData["FootFixedSettings"]["m_nDisableTagIndex"];
FootFixedSettings.m_nFootIndex = jsonData["FootFixedSettings"]["m_nFootIndex"];

// Atribuições para CModelConfig
// CModelConfig Offsets
CModelConfig.m_ConfigName = jsonData["CModelConfig"]["m_ConfigName"];
CModelConfig.m_Elements = jsonData["CModelConfig"]["m_Elements"];
CModelConfig.m_bTopLevel = jsonData["CModelConfig"]["m_bTopLevel"];

// Atribuições para AnimComponentID
// AnimComponentID Offsets
AnimComponentID.m_id = jsonData["AnimComponentID"]["m_id"];

// Atribuições para VPhysXAggregateData_t
// VPhysXAggregateData_t Offsets
VPhysXAggregateData_t.m_nFlags = jsonData["VPhysXAggregateData_t"]["m_nFlags"];
VPhysXAggregateData_t.m_nRefCounter = jsonData["VPhysXAggregateData_t"]["m_nRefCounter"];
VPhysXAggregateData_t.m_bonesHash = jsonData["VPhysXAggregateData_t"]["m_bonesHash"];
VPhysXAggregateData_t.m_boneNames = jsonData["VPhysXAggregateData_t"]["m_boneNames"];
VPhysXAggregateData_t.m_indexNames = jsonData["VPhysXAggregateData_t"]["m_indexNames"];
VPhysXAggregateData_t.m_indexHash = jsonData["VPhysXAggregateData_t"]["m_indexHash"];
VPhysXAggregateData_t.m_bindPose = jsonData["VPhysXAggregateData_t"]["m_bindPose"];
VPhysXAggregateData_t.m_parts = jsonData["VPhysXAggregateData_t"]["m_parts"];
VPhysXAggregateData_t.m_constraints2 = jsonData["VPhysXAggregateData_t"]["m_constraints2"];
VPhysXAggregateData_t.m_joints = jsonData["VPhysXAggregateData_t"]["m_joints"];
VPhysXAggregateData_t.m_pFeModel = jsonData["VPhysXAggregateData_t"]["m_pFeModel"];
VPhysXAggregateData_t.m_boneParents = jsonData["VPhysXAggregateData_t"]["m_boneParents"];
VPhysXAggregateData_t.m_surfacePropertyHashes = jsonData["VPhysXAggregateData_t"]["m_surfacePropertyHashes"];
VPhysXAggregateData_t.m_collisionAttributes = jsonData["VPhysXAggregateData_t"]["m_collisionAttributes"];
VPhysXAggregateData_t.m_debugPartNames = jsonData["VPhysXAggregateData_t"]["m_debugPartNames"];
VPhysXAggregateData_t.m_embeddedKeyvalues = jsonData["VPhysXAggregateData_t"]["m_embeddedKeyvalues"];

// Atribuições para CNmGraphDefinition
// CNmGraphDefinition Offsets
CNmGraphDefinition.m_persistentNodeIndices = jsonData["CNmGraphDefinition"]["m_persistentNodeIndices"];
CNmGraphDefinition.m_nRootNodeIdx = jsonData["CNmGraphDefinition"]["m_nRootNodeIdx"];
CNmGraphDefinition.m_controlParameterIDs = jsonData["CNmGraphDefinition"]["m_controlParameterIDs"];
CNmGraphDefinition.m_virtualParameterIDs = jsonData["CNmGraphDefinition"]["m_virtualParameterIDs"];
CNmGraphDefinition.m_virtualParameterNodeIndices = jsonData["CNmGraphDefinition"]["m_virtualParameterNodeIndices"];
CNmGraphDefinition.m_childGraphSlots = jsonData["CNmGraphDefinition"]["m_childGraphSlots"];
CNmGraphDefinition.m_externalGraphSlots = jsonData["CNmGraphDefinition"]["m_externalGraphSlots"];
CNmGraphDefinition.m_nodePaths = jsonData["CNmGraphDefinition"]["m_nodePaths"];
CNmGraphDefinition.m_runtimeVersionID = jsonData["CNmGraphDefinition"]["m_runtimeVersionID"];

// Atribuições para CNmSelectorNode__CDefinition
// CNmSelectorNode__CDefinition Offsets
CNmSelectorNode__CDefinition.m_optionNodeIndices = jsonData["CNmSelectorNode__CDefinition"]["m_optionNodeIndices"];
CNmSelectorNode__CDefinition.m_conditionNodeIndices = jsonData["CNmSelectorNode__CDefinition"]["m_conditionNodeIndices"];

// Atribuições para CAnimDemoCaptureSettings
// CAnimDemoCaptureSettings Offsets
CAnimDemoCaptureSettings.m_vecErrorRangeSplineRotation = jsonData["CAnimDemoCaptureSettings"]["m_vecErrorRangeSplineRotation"];
CAnimDemoCaptureSettings.m_vecErrorRangeSplineTranslation = jsonData["CAnimDemoCaptureSettings"]["m_vecErrorRangeSplineTranslation"];
CAnimDemoCaptureSettings.m_vecErrorRangeSplineScale = jsonData["CAnimDemoCaptureSettings"]["m_vecErrorRangeSplineScale"];
CAnimDemoCaptureSettings.m_flIkRotation_MaxSplineError = jsonData["CAnimDemoCaptureSettings"]["m_flIkRotation_MaxSplineError"];
CAnimDemoCaptureSettings.m_flIkTranslation_MaxSplineError = jsonData["CAnimDemoCaptureSettings"]["m_flIkTranslation_MaxSplineError"];
CAnimDemoCaptureSettings.m_vecErrorRangeQuantizationRotation = jsonData["CAnimDemoCaptureSettings"]["m_vecErrorRangeQuantizationRotation"];
CAnimDemoCaptureSettings.m_vecErrorRangeQuantizationTranslation = jsonData["CAnimDemoCaptureSettings"]["m_vecErrorRangeQuantizationTranslation"];
CAnimDemoCaptureSettings.m_vecErrorRangeQuantizationScale = jsonData["CAnimDemoCaptureSettings"]["m_vecErrorRangeQuantizationScale"];
CAnimDemoCaptureSettings.m_flIkRotation_MaxQuantizationError = jsonData["CAnimDemoCaptureSettings"]["m_flIkRotation_MaxQuantizationError"];
CAnimDemoCaptureSettings.m_flIkTranslation_MaxQuantizationError = jsonData["CAnimDemoCaptureSettings"]["m_flIkTranslation_MaxQuantizationError"];
CAnimDemoCaptureSettings.m_baseSequence = jsonData["CAnimDemoCaptureSettings"]["m_baseSequence"];
CAnimDemoCaptureSettings.m_nBaseSequenceFrame = jsonData["CAnimDemoCaptureSettings"]["m_nBaseSequenceFrame"];
CAnimDemoCaptureSettings.m_boneSelectionMode = jsonData["CAnimDemoCaptureSettings"]["m_boneSelectionMode"];
CAnimDemoCaptureSettings.m_bones = jsonData["CAnimDemoCaptureSettings"]["m_bones"];
CAnimDemoCaptureSettings.m_ikChains = jsonData["CAnimDemoCaptureSettings"]["m_ikChains"];

// Atribuições para IKDemoCaptureSettings_t
// IKDemoCaptureSettings_t Offsets
IKDemoCaptureSettings_t.m_parentBoneName = jsonData["IKDemoCaptureSettings_t"]["m_parentBoneName"];
IKDemoCaptureSettings_t.m_eMode = jsonData["IKDemoCaptureSettings_t"]["m_eMode"];
IKDemoCaptureSettings_t.m_ikChainName = jsonData["IKDemoCaptureSettings_t"]["m_ikChainName"];
IKDemoCaptureSettings_t.m_oneBoneStart = jsonData["IKDemoCaptureSettings_t"]["m_oneBoneStart"];
IKDemoCaptureSettings_t.m_oneBoneEnd = jsonData["IKDemoCaptureSettings_t"]["m_oneBoneEnd"];

// Atribuições para CSeqMultiFetchFlag
// CSeqMultiFetchFlag Offsets
CSeqMultiFetchFlag.m_bRealtime = jsonData["CSeqMultiFetchFlag"]["m_bRealtime"];
CSeqMultiFetchFlag.m_bCylepose = jsonData["CSeqMultiFetchFlag"]["m_bCylepose"];
CSeqMultiFetchFlag.m_b0D = jsonData["CSeqMultiFetchFlag"]["m_b0D"];
CSeqMultiFetchFlag.m_b1D = jsonData["CSeqMultiFetchFlag"]["m_b1D"];
CSeqMultiFetchFlag.m_b2D = jsonData["CSeqMultiFetchFlag"]["m_b2D"];
CSeqMultiFetchFlag.m_b2D_TRI = jsonData["CSeqMultiFetchFlag"]["m_b2D_TRI"];

// Atribuições para VPhysXRange_t
// VPhysXRange_t Offsets
VPhysXRange_t.m_flMin = jsonData["VPhysXRange_t"]["m_flMin"];
VPhysXRange_t.m_flMax = jsonData["VPhysXRange_t"]["m_flMax"];

// Atribuições para CStopAtGoalUpdateNode
// CStopAtGoalUpdateNode Offsets
CStopAtGoalUpdateNode.m_flOuterRadius = jsonData["CStopAtGoalUpdateNode"]["m_flOuterRadius"];
CStopAtGoalUpdateNode.m_flInnerRadius = jsonData["CStopAtGoalUpdateNode"]["m_flInnerRadius"];
CStopAtGoalUpdateNode.m_flMaxScale = jsonData["CStopAtGoalUpdateNode"]["m_flMaxScale"];
CStopAtGoalUpdateNode.m_flMinScale = jsonData["CStopAtGoalUpdateNode"]["m_flMinScale"];
CStopAtGoalUpdateNode.m_damping = jsonData["CStopAtGoalUpdateNode"]["m_damping"];

// Atribuições para CNmIDEventPercentageThroughNode__CDefinition
// CNmIDEventPercentageThroughNode__CDefinition Offsets
CNmIDEventPercentageThroughNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmIDEventPercentageThroughNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmIDEventPercentageThroughNode__CDefinition.m_eventConditionRules = jsonData["CNmIDEventPercentageThroughNode__CDefinition"]["m_eventConditionRules"];
CNmIDEventPercentageThroughNode__CDefinition.m_eventID = jsonData["CNmIDEventPercentageThroughNode__CDefinition"]["m_eventID"];

// Atribuições para CAnimBoneDifference
// CAnimBoneDifference Offsets
CAnimBoneDifference.m_name = jsonData["CAnimBoneDifference"]["m_name"];
CAnimBoneDifference.m_parent = jsonData["CAnimBoneDifference"]["m_parent"];
CAnimBoneDifference.m_posError = jsonData["CAnimBoneDifference"]["m_posError"];
CAnimBoneDifference.m_bHasRotation = jsonData["CAnimBoneDifference"]["m_bHasRotation"];
CAnimBoneDifference.m_bHasMovement = jsonData["CAnimBoneDifference"]["m_bHasMovement"];

// Atribuições para CNmCachedBoolNode__CDefinition
// CNmCachedBoolNode__CDefinition Offsets
CNmCachedBoolNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmCachedBoolNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmCachedBoolNode__CDefinition.m_mode = jsonData["CNmCachedBoolNode__CDefinition"]["m_mode"];

// Atribuições para CActionComponentUpdater
// CActionComponentUpdater Offsets
CActionComponentUpdater.m_actions = jsonData["CActionComponentUpdater"]["m_actions"];

// Atribuições para CNmGraphDataSet
// CNmGraphDataSet Offsets
CNmGraphDataSet.m_variationID = jsonData["CNmGraphDataSet"]["m_variationID"];
CNmGraphDataSet.m_skeleton = jsonData["CNmGraphDataSet"]["m_skeleton"];
CNmGraphDataSet.m_resources = jsonData["CNmGraphDataSet"]["m_resources"];

// Atribuições para CDampedPathAnimMotorUpdater
// CDampedPathAnimMotorUpdater Offsets
CDampedPathAnimMotorUpdater.m_flAnticipationTime = jsonData["CDampedPathAnimMotorUpdater"]["m_flAnticipationTime"];
CDampedPathAnimMotorUpdater.m_flMinSpeedScale = jsonData["CDampedPathAnimMotorUpdater"]["m_flMinSpeedScale"];
CDampedPathAnimMotorUpdater.m_hAnticipationPosParam = jsonData["CDampedPathAnimMotorUpdater"]["m_hAnticipationPosParam"];
CDampedPathAnimMotorUpdater.m_hAnticipationHeadingParam = jsonData["CDampedPathAnimMotorUpdater"]["m_hAnticipationHeadingParam"];
CDampedPathAnimMotorUpdater.m_flSpringConstant = jsonData["CDampedPathAnimMotorUpdater"]["m_flSpringConstant"];
CDampedPathAnimMotorUpdater.m_flMinSpringTension = jsonData["CDampedPathAnimMotorUpdater"]["m_flMinSpringTension"];
CDampedPathAnimMotorUpdater.m_flMaxSpringTension = jsonData["CDampedPathAnimMotorUpdater"]["m_flMaxSpringTension"];

// Atribuições para CNmCachedFloatNode__CDefinition
// CNmCachedFloatNode__CDefinition Offsets
CNmCachedFloatNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmCachedFloatNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmCachedFloatNode__CDefinition.m_mode = jsonData["CNmCachedFloatNode__CDefinition"]["m_mode"];

// Atribuições para CNmFloatSwitchNode__CDefinition
// CNmFloatSwitchNode__CDefinition Offsets
CNmFloatSwitchNode__CDefinition.m_nSwitchValueNodeIdx = jsonData["CNmFloatSwitchNode__CDefinition"]["m_nSwitchValueNodeIdx"];
CNmFloatSwitchNode__CDefinition.m_nTrueValueNodeIdx = jsonData["CNmFloatSwitchNode__CDefinition"]["m_nTrueValueNodeIdx"];
CNmFloatSwitchNode__CDefinition.m_nFalseValueNodeIdx = jsonData["CNmFloatSwitchNode__CDefinition"]["m_nFalseValueNodeIdx"];

// Atribuições para CModelConfigElement_SetMaterialGroupOnAttachedModels
// CModelConfigElement_SetMaterialGroupOnAttachedModels Offsets
CModelConfigElement_SetMaterialGroupOnAttachedModels.m_MaterialGroupName = jsonData["CModelConfigElement_SetMaterialGroupOnAttachedModels"]["m_MaterialGroupName"];

// Atribuições para CNmVirtualParameterBoneMaskNode__CDefinition
// CNmVirtualParameterBoneMaskNode__CDefinition Offsets
CNmVirtualParameterBoneMaskNode__CDefinition.m_nChildNodeIdx = jsonData["CNmVirtualParameterBoneMaskNode__CDefinition"]["m_nChildNodeIdx"];

// Atribuições para CPathHelperUpdateNode
// CPathHelperUpdateNode Offsets
CPathHelperUpdateNode.m_flStoppingRadius = jsonData["CPathHelperUpdateNode"]["m_flStoppingRadius"];
CPathHelperUpdateNode.m_flStoppingSpeedScale = jsonData["CPathHelperUpdateNode"]["m_flStoppingSpeedScale"];

// Atribuições para MaterialGroup_t
// MaterialGroup_t Offsets
MaterialGroup_t.m_name = jsonData["MaterialGroup_t"]["m_name"];
MaterialGroup_t.m_materials = jsonData["MaterialGroup_t"]["m_materials"];

// Atribuições para CMorphBundleData
// CMorphBundleData Offsets
CMorphBundleData.m_flULeftSrc = jsonData["CMorphBundleData"]["m_flULeftSrc"];
CMorphBundleData.m_flVTopSrc = jsonData["CMorphBundleData"]["m_flVTopSrc"];
CMorphBundleData.m_offsets = jsonData["CMorphBundleData"]["m_offsets"];
CMorphBundleData.m_ranges = jsonData["CMorphBundleData"]["m_ranges"];

// Atribuições para CModelConfigElement_UserPick
// CModelConfigElement_UserPick Offsets
CModelConfigElement_UserPick.m_Choices = jsonData["CModelConfigElement_UserPick"]["m_Choices"];

// Atribuições para CSolveIKTargetHandle_t
// CSolveIKTargetHandle_t Offsets
CSolveIKTargetHandle_t.m_positionHandle = jsonData["CSolveIKTargetHandle_t"]["m_positionHandle"];
CSolveIKTargetHandle_t.m_orientationHandle = jsonData["CSolveIKTargetHandle_t"]["m_orientationHandle"];

// Atribuições para CFootAdjustmentUpdateNode
// CFootAdjustmentUpdateNode Offsets
CFootAdjustmentUpdateNode.m_clips = jsonData["CFootAdjustmentUpdateNode"]["m_clips"];
CFootAdjustmentUpdateNode.m_hBasePoseCacheHandle = jsonData["CFootAdjustmentUpdateNode"]["m_hBasePoseCacheHandle"];
CFootAdjustmentUpdateNode.m_facingTarget = jsonData["CFootAdjustmentUpdateNode"]["m_facingTarget"];
CFootAdjustmentUpdateNode.m_flTurnTimeMin = jsonData["CFootAdjustmentUpdateNode"]["m_flTurnTimeMin"];
CFootAdjustmentUpdateNode.m_flTurnTimeMax = jsonData["CFootAdjustmentUpdateNode"]["m_flTurnTimeMax"];
CFootAdjustmentUpdateNode.m_flStepHeightMax = jsonData["CFootAdjustmentUpdateNode"]["m_flStepHeightMax"];
CFootAdjustmentUpdateNode.m_flStepHeightMaxAngle = jsonData["CFootAdjustmentUpdateNode"]["m_flStepHeightMaxAngle"];
CFootAdjustmentUpdateNode.m_bResetChild = jsonData["CFootAdjustmentUpdateNode"]["m_bResetChild"];
CFootAdjustmentUpdateNode.m_bAnimationDriven = jsonData["CFootAdjustmentUpdateNode"]["m_bAnimationDriven"];

// Atribuições para CAimConstraint
// CAimConstraint Offsets
CAimConstraint.m_qAimOffset = jsonData["CAimConstraint"]["m_qAimOffset"];
CAimConstraint.m_nUpType = jsonData["CAimConstraint"]["m_nUpType"];

// Atribuições para CFootFallAnimTag
// CFootFallAnimTag Offsets
CFootFallAnimTag.m_foot = jsonData["CFootFallAnimTag"]["m_foot"];

// Atribuições para CMaterialDrawDescriptor
// CMaterialDrawDescriptor Offsets
CMaterialDrawDescriptor.m_flUvDensity = jsonData["CMaterialDrawDescriptor"]["m_flUvDensity"];
CMaterialDrawDescriptor.m_vTintColor = jsonData["CMaterialDrawDescriptor"]["m_vTintColor"];
CMaterialDrawDescriptor.m_flAlpha = jsonData["CMaterialDrawDescriptor"]["m_flAlpha"];
CMaterialDrawDescriptor.m_nNumMeshlets = jsonData["CMaterialDrawDescriptor"]["m_nNumMeshlets"];
CMaterialDrawDescriptor.m_nFirstMeshlet = jsonData["CMaterialDrawDescriptor"]["m_nFirstMeshlet"];
CMaterialDrawDescriptor.m_nPrimitiveType = jsonData["CMaterialDrawDescriptor"]["m_nPrimitiveType"];
CMaterialDrawDescriptor.m_nBaseVertex = jsonData["CMaterialDrawDescriptor"]["m_nBaseVertex"];
CMaterialDrawDescriptor.m_nVertexCount = jsonData["CMaterialDrawDescriptor"]["m_nVertexCount"];
CMaterialDrawDescriptor.m_nStartIndex = jsonData["CMaterialDrawDescriptor"]["m_nStartIndex"];
CMaterialDrawDescriptor.m_nIndexCount = jsonData["CMaterialDrawDescriptor"]["m_nIndexCount"];
CMaterialDrawDescriptor.m_indexBuffer = jsonData["CMaterialDrawDescriptor"]["m_indexBuffer"];
CMaterialDrawDescriptor.m_material = jsonData["CMaterialDrawDescriptor"]["m_material"];

// Atribuições para CNmSkeleton
// CNmSkeleton Offsets
CNmSkeleton.m_ID = jsonData["CNmSkeleton"]["m_ID"];
CNmSkeleton.m_boneIDs = jsonData["CNmSkeleton"]["m_boneIDs"];
CNmSkeleton.m_parentIndices = jsonData["CNmSkeleton"]["m_parentIndices"];
CNmSkeleton.m_parentSpaceReferencePose = jsonData["CNmSkeleton"]["m_parentSpaceReferencePose"];
CNmSkeleton.m_modelSpaceReferencePose = jsonData["CNmSkeleton"]["m_modelSpaceReferencePose"];
CNmSkeleton.m_numBonesToSampleAtLowLOD = jsonData["CNmSkeleton"]["m_numBonesToSampleAtLowLOD"];
CNmSkeleton.m_boneMasks = jsonData["CNmSkeleton"]["m_boneMasks"];

// Atribuições para CStepsRemainingMetricEvaluator
// CStepsRemainingMetricEvaluator Offsets
CStepsRemainingMetricEvaluator.m_footIndices = jsonData["CStepsRemainingMetricEvaluator"]["m_footIndices"];
CStepsRemainingMetricEvaluator.m_flMinStepsRemaining = jsonData["CStepsRemainingMetricEvaluator"]["m_flMinStepsRemaining"];

// Atribuições para CBodyGroupSetting
// CBodyGroupSetting Offsets
CBodyGroupSetting.m_BodyGroupName = jsonData["CBodyGroupSetting"]["m_BodyGroupName"];
CBodyGroupSetting.m_nBodyGroupOption = jsonData["CBodyGroupSetting"]["m_nBodyGroupOption"];

// Atribuições para CVectorQuantizer
// CVectorQuantizer Offsets
CVectorQuantizer.m_centroidVectors = jsonData["CVectorQuantizer"]["m_centroidVectors"];
CVectorQuantizer.m_nCentroids = jsonData["CVectorQuantizer"]["m_nCentroids"];
CVectorQuantizer.m_nDimensions = jsonData["CVectorQuantizer"]["m_nDimensions"];

// Atribuições para CNmVectorCreateNode__CDefinition
// CNmVectorCreateNode__CDefinition Offsets
CNmVectorCreateNode__CDefinition.m_inputVectorValueNodeIdx = jsonData["CNmVectorCreateNode__CDefinition"]["m_inputVectorValueNodeIdx"];
CNmVectorCreateNode__CDefinition.m_inputValueXNodeIdx = jsonData["CNmVectorCreateNode__CDefinition"]["m_inputValueXNodeIdx"];
CNmVectorCreateNode__CDefinition.m_inputValueYNodeIdx = jsonData["CNmVectorCreateNode__CDefinition"]["m_inputValueYNodeIdx"];
CNmVectorCreateNode__CDefinition.m_inputValueZNodeIdx = jsonData["CNmVectorCreateNode__CDefinition"]["m_inputValueZNodeIdx"];

// Atribuições para CNmStateNode__CDefinition
// CNmStateNode__CDefinition Offsets
CNmStateNode__CDefinition.m_nChildNodeIdx = jsonData["CNmStateNode__CDefinition"]["m_nChildNodeIdx"];
CNmStateNode__CDefinition.m_entryEvents = jsonData["CNmStateNode__CDefinition"]["m_entryEvents"];
CNmStateNode__CDefinition.m_executeEvents = jsonData["CNmStateNode__CDefinition"]["m_executeEvents"];
CNmStateNode__CDefinition.m_exitEvents = jsonData["CNmStateNode__CDefinition"]["m_exitEvents"];
CNmStateNode__CDefinition.m_timedRemainingEvents = jsonData["CNmStateNode__CDefinition"]["m_timedRemainingEvents"];
CNmStateNode__CDefinition.m_timedElapsedEvents = jsonData["CNmStateNode__CDefinition"]["m_timedElapsedEvents"];
CNmStateNode__CDefinition.m_nLayerWeightNodeIdx = jsonData["CNmStateNode__CDefinition"]["m_nLayerWeightNodeIdx"];
CNmStateNode__CDefinition.m_nLayerRootMotionWeightNodeIdx = jsonData["CNmStateNode__CDefinition"]["m_nLayerRootMotionWeightNodeIdx"];
CNmStateNode__CDefinition.m_nLayerBoneMaskNodeIdx = jsonData["CNmStateNode__CDefinition"]["m_nLayerBoneMaskNodeIdx"];
CNmStateNode__CDefinition.m_bIsOffState = jsonData["CNmStateNode__CDefinition"]["m_bIsOffState"];

// Atribuições para CNmBoneMaskSelectorNode__CDefinition
// CNmBoneMaskSelectorNode__CDefinition Offsets
CNmBoneMaskSelectorNode__CDefinition.m_defaultMaskNodeIdx = jsonData["CNmBoneMaskSelectorNode__CDefinition"]["m_defaultMaskNodeIdx"];
CNmBoneMaskSelectorNode__CDefinition.m_parameterValueNodeIdx = jsonData["CNmBoneMaskSelectorNode__CDefinition"]["m_parameterValueNodeIdx"];
CNmBoneMaskSelectorNode__CDefinition.m_switchDynamically = jsonData["CNmBoneMaskSelectorNode__CDefinition"]["m_switchDynamically"];
CNmBoneMaskSelectorNode__CDefinition.m_maskNodeIndices = jsonData["CNmBoneMaskSelectorNode__CDefinition"]["m_maskNodeIndices"];
CNmBoneMaskSelectorNode__CDefinition.m_parameterValues = jsonData["CNmBoneMaskSelectorNode__CDefinition"]["m_parameterValues"];
CNmBoneMaskSelectorNode__CDefinition.m_flBlendTimeSeconds = jsonData["CNmBoneMaskSelectorNode__CDefinition"]["m_flBlendTimeSeconds"];

// Atribuições para CNmVirtualParameterVectorNode__CDefinition
// CNmVirtualParameterVectorNode__CDefinition Offsets
CNmVirtualParameterVectorNode__CDefinition.m_nChildNodeIdx = jsonData["CNmVirtualParameterVectorNode__CDefinition"]["m_nChildNodeIdx"];

// Atribuições para CFootCycleMetricEvaluator
// CFootCycleMetricEvaluator Offsets
CFootCycleMetricEvaluator.m_footIndices = jsonData["CFootCycleMetricEvaluator"]["m_footIndices"];

// Atribuições para CNmConstIDNode__CDefinition
// CNmConstIDNode__CDefinition Offsets
CNmConstIDNode__CDefinition.m_value = jsonData["CNmConstIDNode__CDefinition"]["m_value"];

// Atribuições para CHitBox
// CHitBox Offsets
CHitBox.m_name = jsonData["CHitBox"]["m_name"];
CHitBox.m_sSurfaceProperty = jsonData["CHitBox"]["m_sSurfaceProperty"];
CHitBox.m_sBoneName = jsonData["CHitBox"]["m_sBoneName"];
CHitBox.m_vMinBounds = jsonData["CHitBox"]["m_vMinBounds"];
CHitBox.m_vMaxBounds = jsonData["CHitBox"]["m_vMaxBounds"];
CHitBox.m_flShapeRadius = jsonData["CHitBox"]["m_flShapeRadius"];
CHitBox.m_nBoneNameHash = jsonData["CHitBox"]["m_nBoneNameHash"];
CHitBox.m_nGroupId = jsonData["CHitBox"]["m_nGroupId"];
CHitBox.m_nShapeType = jsonData["CHitBox"]["m_nShapeType"];
CHitBox.m_bTranslationOnly = jsonData["CHitBox"]["m_bTranslationOnly"];
CHitBox.m_CRC = jsonData["CHitBox"]["m_CRC"];
CHitBox.m_cRenderColor = jsonData["CHitBox"]["m_cRenderColor"];
CHitBox.m_nHitBoxIndex = jsonData["CHitBox"]["m_nHitBoxIndex"];

// Atribuições para CNmParameterizedSelectorNode__CDefinition
// CNmParameterizedSelectorNode__CDefinition Offsets
CNmParameterizedSelectorNode__CDefinition.m_optionNodeIndices = jsonData["CNmParameterizedSelectorNode__CDefinition"]["m_optionNodeIndices"];
CNmParameterizedSelectorNode__CDefinition.m_parameterNodeIdx = jsonData["CNmParameterizedSelectorNode__CDefinition"]["m_parameterNodeIdx"];

// Atribuições para ModelSkeletonData_t
// ModelSkeletonData_t Offsets
ModelSkeletonData_t.m_boneName = jsonData["ModelSkeletonData_t"]["m_boneName"];
ModelSkeletonData_t.m_nParent = jsonData["ModelSkeletonData_t"]["m_nParent"];
ModelSkeletonData_t.m_boneSphere = jsonData["ModelSkeletonData_t"]["m_boneSphere"];
ModelSkeletonData_t.m_nFlag = jsonData["ModelSkeletonData_t"]["m_nFlag"];
ModelSkeletonData_t.m_bonePosParent = jsonData["ModelSkeletonData_t"]["m_bonePosParent"];
ModelSkeletonData_t.m_boneRotParent = jsonData["ModelSkeletonData_t"]["m_boneRotParent"];
ModelSkeletonData_t.m_boneScaleParent = jsonData["ModelSkeletonData_t"]["m_boneScaleParent"];

// Atribuições para CNmEvent
// CNmEvent Offsets
CNmEvent.m_flStartTimeSeconds = jsonData["CNmEvent"]["m_flStartTimeSeconds"];
CNmEvent.m_flDurationSeconds = jsonData["CNmEvent"]["m_flDurationSeconds"];
CNmEvent.m_syncID = jsonData["CNmEvent"]["m_syncID"];

// Atribuições para NmCompressionSettings_t__QuantizationRange_t
// NmCompressionSettings_t__QuantizationRange_t Offsets
NmCompressionSettings_t__QuantizationRange_t.m_flRangeStart = jsonData["NmCompressionSettings_t__QuantizationRange_t"]["m_flRangeStart"];
NmCompressionSettings_t__QuantizationRange_t.m_flRangeLength = jsonData["NmCompressionSettings_t__QuantizationRange_t"]["m_flRangeLength"];

// Atribuições para TagSpan_t
// TagSpan_t Offsets
TagSpan_t.m_tagIndex = jsonData["TagSpan_t"]["m_tagIndex"];
TagSpan_t.m_startCycle = jsonData["TagSpan_t"]["m_startCycle"];
TagSpan_t.m_endCycle = jsonData["TagSpan_t"]["m_endCycle"];

// Atribuições para CNmConstTargetNode__CDefinition
// CNmConstTargetNode__CDefinition Offsets
CNmConstTargetNode__CDefinition.m_value = jsonData["CNmConstTargetNode__CDefinition"]["m_value"];

// Atribuições para PermModelDataAnimatedMaterialAttribute_t
// PermModelDataAnimatedMaterialAttribute_t Offsets
PermModelDataAnimatedMaterialAttribute_t.m_AttributeName = jsonData["PermModelDataAnimatedMaterialAttribute_t"]["m_AttributeName"];
PermModelDataAnimatedMaterialAttribute_t.m_nNumChannels = jsonData["PermModelDataAnimatedMaterialAttribute_t"]["m_nNumChannels"];

// Atribuições para CMotionDataSet
// CMotionDataSet Offsets
CMotionDataSet.m_groups = jsonData["CMotionDataSet"]["m_groups"];
CMotionDataSet.m_nDimensionCount = jsonData["CMotionDataSet"]["m_nDimensionCount"];

// Atribuições para CProductQuantizer
// CProductQuantizer Offsets
CProductQuantizer.m_subQuantizers = jsonData["CProductQuantizer"]["m_subQuantizers"];
CProductQuantizer.m_nDimensions = jsonData["CProductQuantizer"]["m_nDimensions"];

// Atribuições para CChoiceUpdateNode
// CChoiceUpdateNode Offsets
CChoiceUpdateNode.m_children = jsonData["CChoiceUpdateNode"]["m_children"];
CChoiceUpdateNode.m_weights = jsonData["CChoiceUpdateNode"]["m_weights"];
CChoiceUpdateNode.m_blendTimes = jsonData["CChoiceUpdateNode"]["m_blendTimes"];
CChoiceUpdateNode.m_choiceMethod = jsonData["CChoiceUpdateNode"]["m_choiceMethod"];
CChoiceUpdateNode.m_choiceChangeMethod = jsonData["CChoiceUpdateNode"]["m_choiceChangeMethod"];
CChoiceUpdateNode.m_blendMethod = jsonData["CChoiceUpdateNode"]["m_blendMethod"];
CChoiceUpdateNode.m_blendTime = jsonData["CChoiceUpdateNode"]["m_blendTime"];
CChoiceUpdateNode.m_bCrossFade = jsonData["CChoiceUpdateNode"]["m_bCrossFade"];
CChoiceUpdateNode.m_bResetChosen = jsonData["CChoiceUpdateNode"]["m_bResetChosen"];
CChoiceUpdateNode.m_bDontResetSameSelection = jsonData["CChoiceUpdateNode"]["m_bDontResetSameSelection"];

// Atribuições para SkeletonAnimCapture_t__Bone_t
// SkeletonAnimCapture_t__Bone_t Offsets
SkeletonAnimCapture_t__Bone_t.m_Name = jsonData["SkeletonAnimCapture_t__Bone_t"]["m_Name"];
SkeletonAnimCapture_t__Bone_t.m_BindPose = jsonData["SkeletonAnimCapture_t__Bone_t"]["m_BindPose"];
SkeletonAnimCapture_t__Bone_t.m_nParent = jsonData["SkeletonAnimCapture_t__Bone_t"]["m_nParent"];

// Atribuições para CExpressionActionUpdater
// CExpressionActionUpdater Offsets
CExpressionActionUpdater.m_hParam = jsonData["CExpressionActionUpdater"]["m_hParam"];
CExpressionActionUpdater.m_eParamType = jsonData["CExpressionActionUpdater"]["m_eParamType"];
CExpressionActionUpdater.m_hScript = jsonData["CExpressionActionUpdater"]["m_hScript"];

// Atribuições para CNmFloatMathNode__CDefinition
// CNmFloatMathNode__CDefinition Offsets
CNmFloatMathNode__CDefinition.m_nInputValueNodeIdxA = jsonData["CNmFloatMathNode__CDefinition"]["m_nInputValueNodeIdxA"];
CNmFloatMathNode__CDefinition.m_nInputValueNodeIdxB = jsonData["CNmFloatMathNode__CDefinition"]["m_nInputValueNodeIdxB"];
CNmFloatMathNode__CDefinition.m_bReturnAbsoluteResult = jsonData["CNmFloatMathNode__CDefinition"]["m_bReturnAbsoluteResult"];
CNmFloatMathNode__CDefinition.m_operator = jsonData["CNmFloatMathNode__CDefinition"]["m_operator"];
CNmFloatMathNode__CDefinition.m_flValueB = jsonData["CNmFloatMathNode__CDefinition"]["m_flValueB"];

// Atribuições para CAnimationGraphVisualizerLine
// CAnimationGraphVisualizerLine Offsets
CAnimationGraphVisualizerLine.m_vWsPositionStart = jsonData["CAnimationGraphVisualizerLine"]["m_vWsPositionStart"];
CAnimationGraphVisualizerLine.m_vWsPositionEnd = jsonData["CAnimationGraphVisualizerLine"]["m_vWsPositionEnd"];
CAnimationGraphVisualizerLine.m_Color = jsonData["CAnimationGraphVisualizerLine"]["m_Color"];

// Atribuições para CCycleControlUpdateNode
// CCycleControlUpdateNode Offsets
CCycleControlUpdateNode.m_valueSource = jsonData["CCycleControlUpdateNode"]["m_valueSource"];
CCycleControlUpdateNode.m_paramIndex = jsonData["CCycleControlUpdateNode"]["m_paramIndex"];

// Atribuições para CNmTargetInfoNode__CDefinition
// CNmTargetInfoNode__CDefinition Offsets
CNmTargetInfoNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmTargetInfoNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmTargetInfoNode__CDefinition.m_infoType = jsonData["CNmTargetInfoNode__CDefinition"]["m_infoType"];
CNmTargetInfoNode__CDefinition.m_bIsWorldSpaceTarget = jsonData["CNmTargetInfoNode__CDefinition"]["m_bIsWorldSpaceTarget"];

// Atribuições para CDampedValueComponentUpdater
// CDampedValueComponentUpdater Offsets
CDampedValueComponentUpdater.m_items = jsonData["CDampedValueComponentUpdater"]["m_items"];

// Atribuições para CBaseConstraint
// CBaseConstraint Offsets
CBaseConstraint.m_name = jsonData["CBaseConstraint"]["m_name"];
CBaseConstraint.m_vUpVector = jsonData["CBaseConstraint"]["m_vUpVector"];
CBaseConstraint.m_slaves = jsonData["CBaseConstraint"]["m_slaves"];
CBaseConstraint.m_targets = jsonData["CBaseConstraint"]["m_targets"];

// Atribuições para BlendItem_t
// BlendItem_t Offsets
BlendItem_t.m_tags = jsonData["BlendItem_t"]["m_tags"];
BlendItem_t.m_pChild = jsonData["BlendItem_t"]["m_pChild"];
BlendItem_t.m_hSequence = jsonData["BlendItem_t"]["m_hSequence"];
BlendItem_t.m_vPos = jsonData["BlendItem_t"]["m_vPos"];
BlendItem_t.m_flDuration = jsonData["BlendItem_t"]["m_flDuration"];
BlendItem_t.m_bUseCustomDuration = jsonData["BlendItem_t"]["m_bUseCustomDuration"];

// Atribuições para CNmClipNode__CDefinition
// CNmClipNode__CDefinition Offsets
CNmClipNode__CDefinition.m_nPlayInReverseValueNodeIdx = jsonData["CNmClipNode__CDefinition"]["m_nPlayInReverseValueNodeIdx"];
CNmClipNode__CDefinition.m_nResetTimeValueNodeIdx = jsonData["CNmClipNode__CDefinition"]["m_nResetTimeValueNodeIdx"];
CNmClipNode__CDefinition.m_bSampleRootMotion = jsonData["CNmClipNode__CDefinition"]["m_bSampleRootMotion"];
CNmClipNode__CDefinition.m_bAllowLooping = jsonData["CNmClipNode__CDefinition"]["m_bAllowLooping"];
CNmClipNode__CDefinition.m_nDataSlotIdx = jsonData["CNmClipNode__CDefinition"]["m_nDataSlotIdx"];

// Atribuições para CNmBlend1DNode__CDefinition
// CNmBlend1DNode__CDefinition Offsets
CNmBlend1DNode__CDefinition.m_parameterization = jsonData["CNmBlend1DNode__CDefinition"]["m_parameterization"];

// Atribuições para CConcreteAnimParameter
// CConcreteAnimParameter Offsets
CConcreteAnimParameter.m_previewButton = jsonData["CConcreteAnimParameter"]["m_previewButton"];
CConcreteAnimParameter.m_eNetworkSetting = jsonData["CConcreteAnimParameter"]["m_eNetworkSetting"];
CConcreteAnimParameter.m_bUseMostRecentValue = jsonData["CConcreteAnimParameter"]["m_bUseMostRecentValue"];
CConcreteAnimParameter.m_bAutoReset = jsonData["CConcreteAnimParameter"]["m_bAutoReset"];
CConcreteAnimParameter.m_bGameWritable = jsonData["CConcreteAnimParameter"]["m_bGameWritable"];
CConcreteAnimParameter.m_bGraphWritable = jsonData["CConcreteAnimParameter"]["m_bGraphWritable"];

// Atribuições para CPairedSequenceUpdateNode
// CPairedSequenceUpdateNode Offsets
CPairedSequenceUpdateNode.m_sPairedSequenceRole = jsonData["CPairedSequenceUpdateNode"]["m_sPairedSequenceRole"];

// Atribuições para CModelConfigElement_RandomPick
// CModelConfigElement_RandomPick Offsets
CModelConfigElement_RandomPick.m_Choices = jsonData["CModelConfigElement_RandomPick"]["m_Choices"];
CModelConfigElement_RandomPick.m_ChoiceWeights = jsonData["CModelConfigElement_RandomPick"]["m_ChoiceWeights"];

// Atribuições para VPhysXConstraint2_t
// VPhysXConstraint2_t Offsets
VPhysXConstraint2_t.m_nFlags = jsonData["VPhysXConstraint2_t"]["m_nFlags"];
VPhysXConstraint2_t.m_nParent = jsonData["VPhysXConstraint2_t"]["m_nParent"];
VPhysXConstraint2_t.m_nChild = jsonData["VPhysXConstraint2_t"]["m_nChild"];
VPhysXConstraint2_t.m_params = jsonData["VPhysXConstraint2_t"]["m_params"];

// Atribuições para CConstraintTarget
// CConstraintTarget Offsets
CConstraintTarget.m_qOffset = jsonData["CConstraintTarget"]["m_qOffset"];
CConstraintTarget.m_vOffset = jsonData["CConstraintTarget"]["m_vOffset"];
CConstraintTarget.m_nBoneHash = jsonData["CConstraintTarget"]["m_nBoneHash"];
CConstraintTarget.m_sName = jsonData["CConstraintTarget"]["m_sName"];
CConstraintTarget.m_flWeight = jsonData["CConstraintTarget"]["m_flWeight"];
CConstraintTarget.m_bIsAttachment = jsonData["CConstraintTarget"]["m_bIsAttachment"];

// Atribuições para SkeletonAnimCapture_t
// SkeletonAnimCapture_t Offsets
SkeletonAnimCapture_t.m_nEntIndex = jsonData["SkeletonAnimCapture_t"]["m_nEntIndex"];
SkeletonAnimCapture_t.m_nEntParent = jsonData["SkeletonAnimCapture_t"]["m_nEntParent"];
SkeletonAnimCapture_t.m_ImportedCollision = jsonData["SkeletonAnimCapture_t"]["m_ImportedCollision"];
SkeletonAnimCapture_t.m_ModelName = jsonData["SkeletonAnimCapture_t"]["m_ModelName"];
SkeletonAnimCapture_t.m_CaptureName = jsonData["SkeletonAnimCapture_t"]["m_CaptureName"];
SkeletonAnimCapture_t.m_ModelBindPose = jsonData["SkeletonAnimCapture_t"]["m_ModelBindPose"];
SkeletonAnimCapture_t.m_FeModelInitPose = jsonData["SkeletonAnimCapture_t"]["m_FeModelInitPose"];
SkeletonAnimCapture_t.m_nFlexControllers = jsonData["SkeletonAnimCapture_t"]["m_nFlexControllers"];
SkeletonAnimCapture_t.m_bPredicted = jsonData["SkeletonAnimCapture_t"]["m_bPredicted"];
SkeletonAnimCapture_t.m_Frames = jsonData["SkeletonAnimCapture_t"]["m_Frames"];

// Atribuições para CAnimUser
// CAnimUser Offsets
CAnimUser.m_name = jsonData["CAnimUser"]["m_name"];
CAnimUser.m_nType = jsonData["CAnimUser"]["m_nType"];

// Atribuições para CRagdollComponentUpdater
// CRagdollComponentUpdater Offsets
CRagdollComponentUpdater.m_ragdollNodePaths = jsonData["CRagdollComponentUpdater"]["m_ragdollNodePaths"];
CRagdollComponentUpdater.m_boneIndices = jsonData["CRagdollComponentUpdater"]["m_boneIndices"];
CRagdollComponentUpdater.m_boneNames = jsonData["CRagdollComponentUpdater"]["m_boneNames"];
CRagdollComponentUpdater.m_weightLists = jsonData["CRagdollComponentUpdater"]["m_weightLists"];
CRagdollComponentUpdater.m_flSpringFrequencyMin = jsonData["CRagdollComponentUpdater"]["m_flSpringFrequencyMin"];
CRagdollComponentUpdater.m_flSpringFrequencyMax = jsonData["CRagdollComponentUpdater"]["m_flSpringFrequencyMax"];
CRagdollComponentUpdater.m_flMaxStretch = jsonData["CRagdollComponentUpdater"]["m_flMaxStretch"];
CRagdollComponentUpdater.m_bSolidCollisionAtZeroWeight = jsonData["CRagdollComponentUpdater"]["m_bSolidCollisionAtZeroWeight"];

// Atribuições para CFootDefinition
// CFootDefinition Offsets
CFootDefinition.m_name = jsonData["CFootDefinition"]["m_name"];
CFootDefinition.m_ankleBoneName = jsonData["CFootDefinition"]["m_ankleBoneName"];
CFootDefinition.m_toeBoneName = jsonData["CFootDefinition"]["m_toeBoneName"];
CFootDefinition.m_vBallOffset = jsonData["CFootDefinition"]["m_vBallOffset"];
CFootDefinition.m_vHeelOffset = jsonData["CFootDefinition"]["m_vHeelOffset"];
CFootDefinition.m_flFootLength = jsonData["CFootDefinition"]["m_flFootLength"];
CFootDefinition.m_flBindPoseDirectionMS = jsonData["CFootDefinition"]["m_flBindPoseDirectionMS"];
CFootDefinition.m_flTraceHeight = jsonData["CFootDefinition"]["m_flTraceHeight"];
CFootDefinition.m_flTraceRadius = jsonData["CFootDefinition"]["m_flTraceRadius"];

// Atribuições para CSeqSynthAnimDesc
// CSeqSynthAnimDesc Offsets
CSeqSynthAnimDesc.m_sName = jsonData["CSeqSynthAnimDesc"]["m_sName"];
CSeqSynthAnimDesc.m_flags = jsonData["CSeqSynthAnimDesc"]["m_flags"];
CSeqSynthAnimDesc.m_transition = jsonData["CSeqSynthAnimDesc"]["m_transition"];
CSeqSynthAnimDesc.m_nLocalBaseReference = jsonData["CSeqSynthAnimDesc"]["m_nLocalBaseReference"];
CSeqSynthAnimDesc.m_nLocalBoneMask = jsonData["CSeqSynthAnimDesc"]["m_nLocalBoneMask"];
CSeqSynthAnimDesc.m_activityArray = jsonData["CSeqSynthAnimDesc"]["m_activityArray"];

// Atribuições para CNmLayerBlendNode__LayerDefinition_t
// CNmLayerBlendNode__LayerDefinition_t Offsets
CNmLayerBlendNode__LayerDefinition_t.m_nInputNodeIdx = jsonData["CNmLayerBlendNode__LayerDefinition_t"]["m_nInputNodeIdx"];
CNmLayerBlendNode__LayerDefinition_t.m_nWeightValueNodeIdx = jsonData["CNmLayerBlendNode__LayerDefinition_t"]["m_nWeightValueNodeIdx"];
CNmLayerBlendNode__LayerDefinition_t.m_nBoneMaskValueNodeIdx = jsonData["CNmLayerBlendNode__LayerDefinition_t"]["m_nBoneMaskValueNodeIdx"];
CNmLayerBlendNode__LayerDefinition_t.m_nRootMotionWeightValueNodeIdx = jsonData["CNmLayerBlendNode__LayerDefinition_t"]["m_nRootMotionWeightValueNodeIdx"];
CNmLayerBlendNode__LayerDefinition_t.m_bIsSynchronized = jsonData["CNmLayerBlendNode__LayerDefinition_t"]["m_bIsSynchronized"];
CNmLayerBlendNode__LayerDefinition_t.m_bIgnoreEvents = jsonData["CNmLayerBlendNode__LayerDefinition_t"]["m_bIgnoreEvents"];
CNmLayerBlendNode__LayerDefinition_t.m_bIsStateMachineLayer = jsonData["CNmLayerBlendNode__LayerDefinition_t"]["m_bIsStateMachineLayer"];
CNmLayerBlendNode__LayerDefinition_t.m_blendMode = jsonData["CNmLayerBlendNode__LayerDefinition_t"]["m_blendMode"];

// Atribuições para CAnimComponentUpdater
// CAnimComponentUpdater Offsets
CAnimComponentUpdater.m_name = jsonData["CAnimComponentUpdater"]["m_name"];
CAnimComponentUpdater.m_id = jsonData["CAnimComponentUpdater"]["m_id"];
CAnimComponentUpdater.m_networkMode = jsonData["CAnimComponentUpdater"]["m_networkMode"];
CAnimComponentUpdater.m_bStartEnabled = jsonData["CAnimComponentUpdater"]["m_bStartEnabled"];

// Atribuições para CBlend2DUpdateNode
// CBlend2DUpdateNode Offsets
CBlend2DUpdateNode.m_items = jsonData["CBlend2DUpdateNode"]["m_items"];
CBlend2DUpdateNode.m_tags = jsonData["CBlend2DUpdateNode"]["m_tags"];
CBlend2DUpdateNode.m_paramSpans = jsonData["CBlend2DUpdateNode"]["m_paramSpans"];
CBlend2DUpdateNode.m_nodeItemIndices = jsonData["CBlend2DUpdateNode"]["m_nodeItemIndices"];
CBlend2DUpdateNode.m_damping = jsonData["CBlend2DUpdateNode"]["m_damping"];
CBlend2DUpdateNode.m_blendSourceX = jsonData["CBlend2DUpdateNode"]["m_blendSourceX"];
CBlend2DUpdateNode.m_paramX = jsonData["CBlend2DUpdateNode"]["m_paramX"];
CBlend2DUpdateNode.m_blendSourceY = jsonData["CBlend2DUpdateNode"]["m_blendSourceY"];
CBlend2DUpdateNode.m_paramY = jsonData["CBlend2DUpdateNode"]["m_paramY"];
CBlend2DUpdateNode.m_eBlendMode = jsonData["CBlend2DUpdateNode"]["m_eBlendMode"];
CBlend2DUpdateNode.m_playbackSpeed = jsonData["CBlend2DUpdateNode"]["m_playbackSpeed"];
CBlend2DUpdateNode.m_bLoop = jsonData["CBlend2DUpdateNode"]["m_bLoop"];
CBlend2DUpdateNode.m_bLockBlendOnReset = jsonData["CBlend2DUpdateNode"]["m_bLockBlendOnReset"];
CBlend2DUpdateNode.m_bLockWhenWaning = jsonData["CBlend2DUpdateNode"]["m_bLockWhenWaning"];
CBlend2DUpdateNode.m_bAnimEventsAndTagsOnMostWeightedOnly = jsonData["CBlend2DUpdateNode"]["m_bAnimEventsAndTagsOnMostWeightedOnly"];

// Atribuições para PermModelExtPart_t
// PermModelExtPart_t Offsets
PermModelExtPart_t.m_Transform = jsonData["PermModelExtPart_t"]["m_Transform"];
PermModelExtPart_t.m_Name = jsonData["PermModelExtPart_t"]["m_Name"];
PermModelExtPart_t.m_nParent = jsonData["PermModelExtPart_t"]["m_nParent"];
PermModelExtPart_t.m_refModel = jsonData["PermModelExtPart_t"]["m_refModel"];

// Atribuições para CNmCachedIDNode__CDefinition
// CNmCachedIDNode__CDefinition Offsets
CNmCachedIDNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmCachedIDNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmCachedIDNode__CDefinition.m_mode = jsonData["CNmCachedIDNode__CDefinition"]["m_mode"];

// Atribuições para CLeanMatrixUpdateNode
// CLeanMatrixUpdateNode Offsets
CLeanMatrixUpdateNode.m_frameCorners = jsonData["CLeanMatrixUpdateNode"]["m_frameCorners"];
CLeanMatrixUpdateNode.m_poses = jsonData["CLeanMatrixUpdateNode"]["m_poses"];
CLeanMatrixUpdateNode.m_damping = jsonData["CLeanMatrixUpdateNode"]["m_damping"];
CLeanMatrixUpdateNode.m_blendSource = jsonData["CLeanMatrixUpdateNode"]["m_blendSource"];
CLeanMatrixUpdateNode.m_paramIndex = jsonData["CLeanMatrixUpdateNode"]["m_paramIndex"];
CLeanMatrixUpdateNode.m_verticalAxis = jsonData["CLeanMatrixUpdateNode"]["m_verticalAxis"];
CLeanMatrixUpdateNode.m_horizontalAxis = jsonData["CLeanMatrixUpdateNode"]["m_horizontalAxis"];
CLeanMatrixUpdateNode.m_hSequence = jsonData["CLeanMatrixUpdateNode"]["m_hSequence"];
CLeanMatrixUpdateNode.m_flMaxValue = jsonData["CLeanMatrixUpdateNode"]["m_flMaxValue"];
CLeanMatrixUpdateNode.m_nSequenceMaxFrame = jsonData["CLeanMatrixUpdateNode"]["m_nSequenceMaxFrame"];

// Atribuições para CSymbolAnimParameter
// CSymbolAnimParameter Offsets
CSymbolAnimParameter.m_defaultValue = jsonData["CSymbolAnimParameter"]["m_defaultValue"];

// Atribuições para CNmStateMachineNode__TransitionDefinition_t
// CNmStateMachineNode__TransitionDefinition_t Offsets
CNmStateMachineNode__TransitionDefinition_t.m_nTargetStateIdx = jsonData["CNmStateMachineNode__TransitionDefinition_t"]["m_nTargetStateIdx"];
CNmStateMachineNode__TransitionDefinition_t.m_nConditionNodeIdx = jsonData["CNmStateMachineNode__TransitionDefinition_t"]["m_nConditionNodeIdx"];
CNmStateMachineNode__TransitionDefinition_t.m_nTransitionNodeIdx = jsonData["CNmStateMachineNode__TransitionDefinition_t"]["m_nTransitionNodeIdx"];
CNmStateMachineNode__TransitionDefinition_t.m_bCanBeForced = jsonData["CNmStateMachineNode__TransitionDefinition_t"]["m_bCanBeForced"];

// Atribuições para CNmFloatSelectorNode__CDefinition
// CNmFloatSelectorNode__CDefinition Offsets
CNmFloatSelectorNode__CDefinition.m_conditionNodeIndices = jsonData["CNmFloatSelectorNode__CDefinition"]["m_conditionNodeIndices"];
CNmFloatSelectorNode__CDefinition.m_values = jsonData["CNmFloatSelectorNode__CDefinition"]["m_values"];
CNmFloatSelectorNode__CDefinition.m_flDefaultValue = jsonData["CNmFloatSelectorNode__CDefinition"]["m_flDefaultValue"];
CNmFloatSelectorNode__CDefinition.m_flEaseTime = jsonData["CNmFloatSelectorNode__CDefinition"]["m_flEaseTime"];
CNmFloatSelectorNode__CDefinition.m_easingOp = jsonData["CNmFloatSelectorNode__CDefinition"]["m_easingOp"];

// Atribuições para CTargetSelectorUpdateNode
// CTargetSelectorUpdateNode Offsets
CTargetSelectorUpdateNode.m_children = jsonData["CTargetSelectorUpdateNode"]["m_children"];
CTargetSelectorUpdateNode.m_hPositionParameter = jsonData["CTargetSelectorUpdateNode"]["m_hPositionParameter"];
CTargetSelectorUpdateNode.m_hFacePositionParameter = jsonData["CTargetSelectorUpdateNode"]["m_hFacePositionParameter"];

// Atribuições para CHitBoxSetList
// CHitBoxSetList Offsets
CHitBoxSetList.m_HitBoxSets = jsonData["CHitBoxSetList"]["m_HitBoxSets"];

// Atribuições para MotionDBIndex
// MotionDBIndex Offsets
MotionDBIndex.m_nIndex = jsonData["MotionDBIndex"]["m_nIndex"];

// Atribuições para CDirectPlaybackTagData
// CDirectPlaybackTagData Offsets
CDirectPlaybackTagData.m_sequenceName = jsonData["CDirectPlaybackTagData"]["m_sequenceName"];
CDirectPlaybackTagData.m_tags = jsonData["CDirectPlaybackTagData"]["m_tags"];

// Atribuições para CNmFloatRemapNode__RemapRange_t
// CNmFloatRemapNode__RemapRange_t Offsets
CNmFloatRemapNode__RemapRange_t.m_flBegin = jsonData["CNmFloatRemapNode__RemapRange_t"]["m_flBegin"];
CNmFloatRemapNode__RemapRange_t.m_flEnd = jsonData["CNmFloatRemapNode__RemapRange_t"]["m_flEnd"];

// Atribuições para CNmCurrentSyncEventIDNode__CDefinition
// CNmCurrentSyncEventIDNode__CDefinition Offsets
CNmCurrentSyncEventIDNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmCurrentSyncEventIDNode__CDefinition"]["m_nSourceStateNodeIdx"];

// Atribuições para CNmStateCompletedConditionNode__CDefinition
// CNmStateCompletedConditionNode__CDefinition Offsets
CNmStateCompletedConditionNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmStateCompletedConditionNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmStateCompletedConditionNode__CDefinition.m_nTransitionDurationOverrideNodeIdx = jsonData["CNmStateCompletedConditionNode__CDefinition"]["m_nTransitionDurationOverrideNodeIdx"];
CNmStateCompletedConditionNode__CDefinition.m_flTransitionDurationSeconds = jsonData["CNmStateCompletedConditionNode__CDefinition"]["m_flTransitionDurationSeconds"];

// Atribuições para CNmTargetWarpEvent
// CNmTargetWarpEvent Offsets
CNmTargetWarpEvent.m_rule = jsonData["CNmTargetWarpEvent"]["m_rule"];
CNmTargetWarpEvent.m_algorithm = jsonData["CNmTargetWarpEvent"]["m_algorithm"];

// Atribuições para CParamSpanUpdater
// CParamSpanUpdater Offsets
CParamSpanUpdater.m_spans = jsonData["CParamSpanUpdater"]["m_spans"];

// Atribuições para CParticleAnimTag
// CParticleAnimTag Offsets
CParticleAnimTag.m_hParticleSystem = jsonData["CParticleAnimTag"]["m_hParticleSystem"];
CParticleAnimTag.m_particleSystemName = jsonData["CParticleAnimTag"]["m_particleSystemName"];
CParticleAnimTag.m_configName = jsonData["CParticleAnimTag"]["m_configName"];
CParticleAnimTag.m_bDetachFromOwner = jsonData["CParticleAnimTag"]["m_bDetachFromOwner"];
CParticleAnimTag.m_bStopWhenTagEnds = jsonData["CParticleAnimTag"]["m_bStopWhenTagEnds"];
CParticleAnimTag.m_bTagEndStopIsInstant = jsonData["CParticleAnimTag"]["m_bTagEndStopIsInstant"];
CParticleAnimTag.m_attachmentName = jsonData["CParticleAnimTag"]["m_attachmentName"];
CParticleAnimTag.m_attachmentType = jsonData["CParticleAnimTag"]["m_attachmentType"];
CParticleAnimTag.m_attachmentCP1Name = jsonData["CParticleAnimTag"]["m_attachmentCP1Name"];
CParticleAnimTag.m_attachmentCP1Type = jsonData["CParticleAnimTag"]["m_attachmentCP1Type"];

// Atribuições para CCycleBase
// CCycleBase Offsets
CCycleBase.m_flCycle = jsonData["CCycleBase"]["m_flCycle"];

// Atribuições para FollowTargetOpFixedSettings_t
// FollowTargetOpFixedSettings_t Offsets
FollowTargetOpFixedSettings_t.m_boneIndex = jsonData["FollowTargetOpFixedSettings_t"]["m_boneIndex"];
FollowTargetOpFixedSettings_t.m_bBoneTarget = jsonData["FollowTargetOpFixedSettings_t"]["m_bBoneTarget"];
FollowTargetOpFixedSettings_t.m_boneTargetIndex = jsonData["FollowTargetOpFixedSettings_t"]["m_boneTargetIndex"];
FollowTargetOpFixedSettings_t.m_bWorldCoodinateTarget = jsonData["FollowTargetOpFixedSettings_t"]["m_bWorldCoodinateTarget"];
FollowTargetOpFixedSettings_t.m_bMatchTargetOrientation = jsonData["FollowTargetOpFixedSettings_t"]["m_bMatchTargetOrientation"];

// Atribuições para CNmRootMotionEvent
// CNmRootMotionEvent Offsets
CNmRootMotionEvent.m_flBlendTimeSeconds = jsonData["CNmRootMotionEvent"]["m_flBlendTimeSeconds"];

// Atribuições para AnimationSnapshotBase_t
// AnimationSnapshotBase_t Offsets
AnimationSnapshotBase_t.m_flRealTime = jsonData["AnimationSnapshotBase_t"]["m_flRealTime"];
AnimationSnapshotBase_t.m_rootToWorld = jsonData["AnimationSnapshotBase_t"]["m_rootToWorld"];
AnimationSnapshotBase_t.m_bBonesInWorldSpace = jsonData["AnimationSnapshotBase_t"]["m_bBonesInWorldSpace"];
AnimationSnapshotBase_t.m_boneSetupMask = jsonData["AnimationSnapshotBase_t"]["m_boneSetupMask"];
AnimationSnapshotBase_t.m_boneTransforms = jsonData["AnimationSnapshotBase_t"]["m_boneTransforms"];
AnimationSnapshotBase_t.m_flexControllers = jsonData["AnimationSnapshotBase_t"]["m_flexControllers"];
AnimationSnapshotBase_t.m_SnapshotType = jsonData["AnimationSnapshotBase_t"]["m_SnapshotType"];
AnimationSnapshotBase_t.m_bHasDecodeDump = jsonData["AnimationSnapshotBase_t"]["m_bHasDecodeDump"];
AnimationSnapshotBase_t.m_DecodeDump = jsonData["AnimationSnapshotBase_t"]["m_DecodeDump"];

// Atribuições para CEmitTagActionUpdater
// CEmitTagActionUpdater Offsets
CEmitTagActionUpdater.m_nTagIndex = jsonData["CEmitTagActionUpdater"]["m_nTagIndex"];
CEmitTagActionUpdater.m_bIsZeroDuration = jsonData["CEmitTagActionUpdater"]["m_bIsZeroDuration"];

// Atribuições para DynamicMeshDeformParams_t
// DynamicMeshDeformParams_t Offsets
DynamicMeshDeformParams_t.m_flTensionCompressScale = jsonData["DynamicMeshDeformParams_t"]["m_flTensionCompressScale"];
DynamicMeshDeformParams_t.m_flTensionStretchScale = jsonData["DynamicMeshDeformParams_t"]["m_flTensionStretchScale"];
DynamicMeshDeformParams_t.m_bRecomputeSmoothNormalsAfterAnimation = jsonData["DynamicMeshDeformParams_t"]["m_bRecomputeSmoothNormalsAfterAnimation"];
DynamicMeshDeformParams_t.m_bComputeDynamicMeshTensionAfterAnimation = jsonData["DynamicMeshDeformParams_t"]["m_bComputeDynamicMeshTensionAfterAnimation"];
DynamicMeshDeformParams_t.m_bSmoothNormalsAcrossUvSeams = jsonData["DynamicMeshDeformParams_t"]["m_bSmoothNormalsAcrossUvSeams"];

// Atribuições para CNmTimeConditionNode__CDefinition
// CNmTimeConditionNode__CDefinition Offsets
CNmTimeConditionNode__CDefinition.m_sourceStateNodeIdx = jsonData["CNmTimeConditionNode__CDefinition"]["m_sourceStateNodeIdx"];
CNmTimeConditionNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmTimeConditionNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmTimeConditionNode__CDefinition.m_flComparand = jsonData["CNmTimeConditionNode__CDefinition"]["m_flComparand"];
CNmTimeConditionNode__CDefinition.m_type = jsonData["CNmTimeConditionNode__CDefinition"]["m_type"];
CNmTimeConditionNode__CDefinition.m_operator = jsonData["CNmTimeConditionNode__CDefinition"]["m_operator"];

// Atribuições para CNmSyncEventIndexConditionNode__CDefinition
// CNmSyncEventIndexConditionNode__CDefinition Offsets
CNmSyncEventIndexConditionNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmSyncEventIndexConditionNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmSyncEventIndexConditionNode__CDefinition.m_triggerMode = jsonData["CNmSyncEventIndexConditionNode__CDefinition"]["m_triggerMode"];
CNmSyncEventIndexConditionNode__CDefinition.m_syncEventIdx = jsonData["CNmSyncEventIndexConditionNode__CDefinition"]["m_syncEventIdx"];

// Atribuições para CAnimStateMachineUpdater
// CAnimStateMachineUpdater Offsets
CAnimStateMachineUpdater.m_states = jsonData["CAnimStateMachineUpdater"]["m_states"];
CAnimStateMachineUpdater.m_transitions = jsonData["CAnimStateMachineUpdater"]["m_transitions"];
CAnimStateMachineUpdater.m_startStateIndex = jsonData["CAnimStateMachineUpdater"]["m_startStateIndex"];

// Atribuições para CUnaryUpdateNode
// CUnaryUpdateNode Offsets
CUnaryUpdateNode.m_pChildNode = jsonData["CUnaryUpdateNode"]["m_pChildNode"];

// Atribuições para CNmIDToFloatNode__CDefinition
// CNmIDToFloatNode__CDefinition Offsets
CNmIDToFloatNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmIDToFloatNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmIDToFloatNode__CDefinition.m_defaultValue = jsonData["CNmIDToFloatNode__CDefinition"]["m_defaultValue"];
CNmIDToFloatNode__CDefinition.m_IDs = jsonData["CNmIDToFloatNode__CDefinition"]["m_IDs"];
CNmIDToFloatNode__CDefinition.m_values = jsonData["CNmIDToFloatNode__CDefinition"]["m_values"];

// Atribuições para CCompressorGroup
// CCompressorGroup Offsets
CCompressorGroup.m_nTotalElementCount = jsonData["CCompressorGroup"]["m_nTotalElementCount"];
CCompressorGroup.m_szChannelClass = jsonData["CCompressorGroup"]["m_szChannelClass"];
CCompressorGroup.m_szVariableName = jsonData["CCompressorGroup"]["m_szVariableName"];
CCompressorGroup.m_nType = jsonData["CCompressorGroup"]["m_nType"];
CCompressorGroup.m_nFlags = jsonData["CCompressorGroup"]["m_nFlags"];
CCompressorGroup.m_szGrouping = jsonData["CCompressorGroup"]["m_szGrouping"];
CCompressorGroup.m_nCompressorIndex = jsonData["CCompressorGroup"]["m_nCompressorIndex"];
CCompressorGroup.m_szElementNames = jsonData["CCompressorGroup"]["m_szElementNames"];
CCompressorGroup.m_nElementUniqueID = jsonData["CCompressorGroup"]["m_nElementUniqueID"];
CCompressorGroup.m_nElementMask = jsonData["CCompressorGroup"]["m_nElementMask"];
CCompressorGroup.m_vectorCompressor = jsonData["CCompressorGroup"]["m_vectorCompressor"];
CCompressorGroup.m_quaternionCompressor = jsonData["CCompressorGroup"]["m_quaternionCompressor"];
CCompressorGroup.m_intCompressor = jsonData["CCompressorGroup"]["m_intCompressor"];
CCompressorGroup.m_boolCompressor = jsonData["CCompressorGroup"]["m_boolCompressor"];
CCompressorGroup.m_colorCompressor = jsonData["CCompressorGroup"]["m_colorCompressor"];
CCompressorGroup.m_vector2DCompressor = jsonData["CCompressorGroup"]["m_vector2DCompressor"];
CCompressorGroup.m_vector4DCompressor = jsonData["CCompressorGroup"]["m_vector4DCompressor"];

// Atribuições para CSelectorUpdateNode
// CSelectorUpdateNode Offsets
CSelectorUpdateNode.m_children = jsonData["CSelectorUpdateNode"]["m_children"];
CSelectorUpdateNode.m_tags = jsonData["CSelectorUpdateNode"]["m_tags"];
CSelectorUpdateNode.m_blendCurve = jsonData["CSelectorUpdateNode"]["m_blendCurve"];
CSelectorUpdateNode.m_flBlendTime = jsonData["CSelectorUpdateNode"]["m_flBlendTime"];
CSelectorUpdateNode.m_hParameter = jsonData["CSelectorUpdateNode"]["m_hParameter"];
CSelectorUpdateNode.m_nTagIndex = jsonData["CSelectorUpdateNode"]["m_nTagIndex"];
CSelectorUpdateNode.m_eTagBehavior = jsonData["CSelectorUpdateNode"]["m_eTagBehavior"];
CSelectorUpdateNode.m_bResetOnChange = jsonData["CSelectorUpdateNode"]["m_bResetOnChange"];
CSelectorUpdateNode.m_bLockWhenWaning = jsonData["CSelectorUpdateNode"]["m_bLockWhenWaning"];
CSelectorUpdateNode.m_bSyncCyclesOnChange = jsonData["CSelectorUpdateNode"]["m_bSyncCyclesOnChange"];

// Atribuições para NmPercent_t
// NmPercent_t Offsets
NmPercent_t.m_flValue = jsonData["NmPercent_t"]["m_flValue"];

// Atribuições para CStateMachineComponentUpdater
// CStateMachineComponentUpdater Offsets
CStateMachineComponentUpdater.m_stateMachine = jsonData["CStateMachineComponentUpdater"]["m_stateMachine"];

// Atribuições para CAnimUpdateNodeRef
// CAnimUpdateNodeRef Offsets
CAnimUpdateNodeRef.m_nodeIndex = jsonData["CAnimUpdateNodeRef"]["m_nodeIndex"];

// Atribuições para CPhysSurfaceProperties
// CPhysSurfaceProperties Offsets
CPhysSurfaceProperties.m_name = jsonData["CPhysSurfaceProperties"]["m_name"];
CPhysSurfaceProperties.m_nameHash = jsonData["CPhysSurfaceProperties"]["m_nameHash"];
CPhysSurfaceProperties.m_baseNameHash = jsonData["CPhysSurfaceProperties"]["m_baseNameHash"];
CPhysSurfaceProperties.m_bHidden = jsonData["CPhysSurfaceProperties"]["m_bHidden"];
CPhysSurfaceProperties.m_description = jsonData["CPhysSurfaceProperties"]["m_description"];
CPhysSurfaceProperties.m_physics = jsonData["CPhysSurfaceProperties"]["m_physics"];
CPhysSurfaceProperties.m_audioSounds = jsonData["CPhysSurfaceProperties"]["m_audioSounds"];
CPhysSurfaceProperties.m_audioParams = jsonData["CPhysSurfaceProperties"]["m_audioParams"];

// Atribuições para CNmFloatAbsNode__CDefinition
// CNmFloatAbsNode__CDefinition Offsets
CNmFloatAbsNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmFloatAbsNode__CDefinition"]["m_nInputValueNodeIdx"];

// Atribuições para CSeqPoseParamDesc
// CSeqPoseParamDesc Offsets
CSeqPoseParamDesc.m_sName = jsonData["CSeqPoseParamDesc"]["m_sName"];
CSeqPoseParamDesc.m_flStart = jsonData["CSeqPoseParamDesc"]["m_flStart"];
CSeqPoseParamDesc.m_flEnd = jsonData["CSeqPoseParamDesc"]["m_flEnd"];
CSeqPoseParamDesc.m_flLoop = jsonData["CSeqPoseParamDesc"]["m_flLoop"];
CSeqPoseParamDesc.m_bLooping = jsonData["CSeqPoseParamDesc"]["m_bLooping"];

// Atribuições para CModelConfigElement_SetBodygroup
// CModelConfigElement_SetBodygroup Offsets
CModelConfigElement_SetBodygroup.m_GroupName = jsonData["CModelConfigElement_SetBodygroup"]["m_GroupName"];
CModelConfigElement_SetBodygroup.m_nChoice = jsonData["CModelConfigElement_SetBodygroup"]["m_nChoice"];

// Atribuições para CAnimMovement
// CAnimMovement Offsets
CAnimMovement.endframe = jsonData["CAnimMovement"]["endframe"];
CAnimMovement.motionflags = jsonData["CAnimMovement"]["motionflags"];
CAnimMovement.v0 = jsonData["CAnimMovement"]["v0"];
CAnimMovement.v1 = jsonData["CAnimMovement"]["v1"];
CAnimMovement.angle = jsonData["CAnimMovement"]["angle"];
CAnimMovement.vector = jsonData["CAnimMovement"]["vector"];
CAnimMovement.position = jsonData["CAnimMovement"]["position"];

// Atribuições para FootStepTrigger
// FootStepTrigger Offsets
FootStepTrigger.m_tags = jsonData["FootStepTrigger"]["m_tags"];
FootStepTrigger.m_nFootIndex = jsonData["FootStepTrigger"]["m_nFootIndex"];
FootStepTrigger.m_triggerPhase = jsonData["FootStepTrigger"]["m_triggerPhase"];

// Atribuições para CNmSyncTrack__EventMarker_t
// CNmSyncTrack__EventMarker_t Offsets
CNmSyncTrack__EventMarker_t.m_startTime = jsonData["CNmSyncTrack__EventMarker_t"]["m_startTime"];
CNmSyncTrack__EventMarker_t.m_ID = jsonData["CNmSyncTrack__EventMarker_t"]["m_ID"];

// Atribuições para CPathMetricEvaluator
// CPathMetricEvaluator Offsets
CPathMetricEvaluator.m_pathTimeSamples = jsonData["CPathMetricEvaluator"]["m_pathTimeSamples"];
CPathMetricEvaluator.m_flDistance = jsonData["CPathMetricEvaluator"]["m_flDistance"];
CPathMetricEvaluator.m_bExtrapolateMovement = jsonData["CPathMetricEvaluator"]["m_bExtrapolateMovement"];
CPathMetricEvaluator.m_flMinExtrapolationSpeed = jsonData["CPathMetricEvaluator"]["m_flMinExtrapolationSpeed"];

// Atribuições para CFootLockUpdateNode
// CFootLockUpdateNode Offsets
CFootLockUpdateNode.m_opFixedSettings = jsonData["CFootLockUpdateNode"]["m_opFixedSettings"];
CFootLockUpdateNode.m_footSettings = jsonData["CFootLockUpdateNode"]["m_footSettings"];
CFootLockUpdateNode.m_hipShiftDamping = jsonData["CFootLockUpdateNode"]["m_hipShiftDamping"];
CFootLockUpdateNode.m_rootHeightDamping = jsonData["CFootLockUpdateNode"]["m_rootHeightDamping"];
CFootLockUpdateNode.m_flStrideCurveScale = jsonData["CFootLockUpdateNode"]["m_flStrideCurveScale"];
CFootLockUpdateNode.m_flStrideCurveLimitScale = jsonData["CFootLockUpdateNode"]["m_flStrideCurveLimitScale"];
CFootLockUpdateNode.m_flStepHeightIncreaseScale = jsonData["CFootLockUpdateNode"]["m_flStepHeightIncreaseScale"];
CFootLockUpdateNode.m_flStepHeightDecreaseScale = jsonData["CFootLockUpdateNode"]["m_flStepHeightDecreaseScale"];
CFootLockUpdateNode.m_flHipShiftScale = jsonData["CFootLockUpdateNode"]["m_flHipShiftScale"];
CFootLockUpdateNode.m_flBlendTime = jsonData["CFootLockUpdateNode"]["m_flBlendTime"];
CFootLockUpdateNode.m_flMaxRootHeightOffset = jsonData["CFootLockUpdateNode"]["m_flMaxRootHeightOffset"];
CFootLockUpdateNode.m_flMinRootHeightOffset = jsonData["CFootLockUpdateNode"]["m_flMinRootHeightOffset"];
CFootLockUpdateNode.m_flTiltPlanePitchSpringStrength = jsonData["CFootLockUpdateNode"]["m_flTiltPlanePitchSpringStrength"];
CFootLockUpdateNode.m_flTiltPlaneRollSpringStrength = jsonData["CFootLockUpdateNode"]["m_flTiltPlaneRollSpringStrength"];
CFootLockUpdateNode.m_bApplyFootRotationLimits = jsonData["CFootLockUpdateNode"]["m_bApplyFootRotationLimits"];
CFootLockUpdateNode.m_bApplyHipShift = jsonData["CFootLockUpdateNode"]["m_bApplyHipShift"];
CFootLockUpdateNode.m_bModulateStepHeight = jsonData["CFootLockUpdateNode"]["m_bModulateStepHeight"];
CFootLockUpdateNode.m_bResetChild = jsonData["CFootLockUpdateNode"]["m_bResetChild"];
CFootLockUpdateNode.m_bEnableVerticalCurvedPaths = jsonData["CFootLockUpdateNode"]["m_bEnableVerticalCurvedPaths"];
CFootLockUpdateNode.m_bEnableRootHeightDamping = jsonData["CFootLockUpdateNode"]["m_bEnableRootHeightDamping"];

// Atribuições para JiggleBoneSettings_t
// JiggleBoneSettings_t Offsets
JiggleBoneSettings_t.m_nBoneIndex = jsonData["JiggleBoneSettings_t"]["m_nBoneIndex"];
JiggleBoneSettings_t.m_flSpringStrength = jsonData["JiggleBoneSettings_t"]["m_flSpringStrength"];
JiggleBoneSettings_t.m_flMaxTimeStep = jsonData["JiggleBoneSettings_t"]["m_flMaxTimeStep"];
JiggleBoneSettings_t.m_flDamping = jsonData["JiggleBoneSettings_t"]["m_flDamping"];
JiggleBoneSettings_t.m_vBoundsMaxLS = jsonData["JiggleBoneSettings_t"]["m_vBoundsMaxLS"];
JiggleBoneSettings_t.m_vBoundsMinLS = jsonData["JiggleBoneSettings_t"]["m_vBoundsMinLS"];
JiggleBoneSettings_t.m_eSimSpace = jsonData["JiggleBoneSettings_t"]["m_eSimSpace"];

// Atribuições para CJumpHelperUpdateNode
// CJumpHelperUpdateNode Offsets
CJumpHelperUpdateNode.m_hTargetParam = jsonData["CJumpHelperUpdateNode"]["m_hTargetParam"];
CJumpHelperUpdateNode.m_flOriginalJumpMovement = jsonData["CJumpHelperUpdateNode"]["m_flOriginalJumpMovement"];
CJumpHelperUpdateNode.m_flOriginalJumpDuration = jsonData["CJumpHelperUpdateNode"]["m_flOriginalJumpDuration"];
CJumpHelperUpdateNode.m_flJumpStartCycle = jsonData["CJumpHelperUpdateNode"]["m_flJumpStartCycle"];
CJumpHelperUpdateNode.m_flJumpEndCycle = jsonData["CJumpHelperUpdateNode"]["m_flJumpEndCycle"];
CJumpHelperUpdateNode.m_eCorrectionMethod = jsonData["CJumpHelperUpdateNode"]["m_eCorrectionMethod"];
CJumpHelperUpdateNode.m_bTranslationAxis = jsonData["CJumpHelperUpdateNode"]["m_bTranslationAxis"];
CJumpHelperUpdateNode.m_bScaleSpeed = jsonData["CJumpHelperUpdateNode"]["m_bScaleSpeed"];

// Atribuições para FootLockPoseOpFixedSettings
// FootLockPoseOpFixedSettings Offsets
FootLockPoseOpFixedSettings.m_footInfo = jsonData["FootLockPoseOpFixedSettings"]["m_footInfo"];
FootLockPoseOpFixedSettings.m_hipDampingSettings = jsonData["FootLockPoseOpFixedSettings"]["m_hipDampingSettings"];
FootLockPoseOpFixedSettings.m_nHipBoneIndex = jsonData["FootLockPoseOpFixedSettings"]["m_nHipBoneIndex"];
FootLockPoseOpFixedSettings.m_ikSolverType = jsonData["FootLockPoseOpFixedSettings"]["m_ikSolverType"];
FootLockPoseOpFixedSettings.m_bApplyTilt = jsonData["FootLockPoseOpFixedSettings"]["m_bApplyTilt"];
FootLockPoseOpFixedSettings.m_bApplyHipDrop = jsonData["FootLockPoseOpFixedSettings"]["m_bApplyHipDrop"];
FootLockPoseOpFixedSettings.m_bAlwaysUseFallbackHinge = jsonData["FootLockPoseOpFixedSettings"]["m_bAlwaysUseFallbackHinge"];
FootLockPoseOpFixedSettings.m_bApplyFootRotationLimits = jsonData["FootLockPoseOpFixedSettings"]["m_bApplyFootRotationLimits"];
FootLockPoseOpFixedSettings.m_bApplyLegTwistLimits = jsonData["FootLockPoseOpFixedSettings"]["m_bApplyLegTwistLimits"];
FootLockPoseOpFixedSettings.m_flMaxFootHeight = jsonData["FootLockPoseOpFixedSettings"]["m_flMaxFootHeight"];
FootLockPoseOpFixedSettings.m_flExtensionScale = jsonData["FootLockPoseOpFixedSettings"]["m_flExtensionScale"];
FootLockPoseOpFixedSettings.m_flMaxLegTwist = jsonData["FootLockPoseOpFixedSettings"]["m_flMaxLegTwist"];
FootLockPoseOpFixedSettings.m_bEnableLockBreaking = jsonData["FootLockPoseOpFixedSettings"]["m_bEnableLockBreaking"];
FootLockPoseOpFixedSettings.m_flLockBreakTolerance = jsonData["FootLockPoseOpFixedSettings"]["m_flLockBreakTolerance"];
FootLockPoseOpFixedSettings.m_flLockBlendTime = jsonData["FootLockPoseOpFixedSettings"]["m_flLockBlendTime"];
FootLockPoseOpFixedSettings.m_bEnableStretching = jsonData["FootLockPoseOpFixedSettings"]["m_bEnableStretching"];
FootLockPoseOpFixedSettings.m_flMaxStretchAmount = jsonData["FootLockPoseOpFixedSettings"]["m_flMaxStretchAmount"];
FootLockPoseOpFixedSettings.m_flStretchExtensionScale = jsonData["FootLockPoseOpFixedSettings"]["m_flStretchExtensionScale"];

// Atribuições para CBoneVelocityMetricEvaluator
// CBoneVelocityMetricEvaluator Offsets
CBoneVelocityMetricEvaluator.m_nBoneIndex = jsonData["CBoneVelocityMetricEvaluator"]["m_nBoneIndex"];

// Atribuições para CModelConfigElement_RandomColor
// CModelConfigElement_RandomColor Offsets
CModelConfigElement_RandomColor.m_Gradient = jsonData["CModelConfigElement_RandomColor"]["m_Gradient"];

// Atribuições para CFootMotion
// CFootMotion Offsets
CFootMotion.m_strides = jsonData["CFootMotion"]["m_strides"];
CFootMotion.m_name = jsonData["CFootMotion"]["m_name"];
CFootMotion.m_bAdditive = jsonData["CFootMotion"]["m_bAdditive"];

// Atribuições para CJiggleBoneUpdateNode
// CJiggleBoneUpdateNode Offsets
CJiggleBoneUpdateNode.m_opFixedData = jsonData["CJiggleBoneUpdateNode"]["m_opFixedData"];

// Atribuições para CNmConstVectorNode__CDefinition
// CNmConstVectorNode__CDefinition Offsets
CNmConstVectorNode__CDefinition.m_value = jsonData["CNmConstVectorNode__CDefinition"]["m_value"];

// Atribuições para MoodAnimation_t
// MoodAnimation_t Offsets
MoodAnimation_t.m_sName = jsonData["MoodAnimation_t"]["m_sName"];
MoodAnimation_t.m_flWeight = jsonData["MoodAnimation_t"]["m_flWeight"];

// Atribuições para CLODComponentUpdater
// CLODComponentUpdater Offsets
CLODComponentUpdater.m_nServerLOD = jsonData["CLODComponentUpdater"]["m_nServerLOD"];

// Atribuições para CNmIsTargetSetNode__CDefinition
// CNmIsTargetSetNode__CDefinition Offsets
CNmIsTargetSetNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmIsTargetSetNode__CDefinition"]["m_nInputValueNodeIdx"];

// Atribuições para CAnimDataChannelDesc
// CAnimDataChannelDesc Offsets
CAnimDataChannelDesc.m_szChannelClass = jsonData["CAnimDataChannelDesc"]["m_szChannelClass"];
CAnimDataChannelDesc.m_szVariableName = jsonData["CAnimDataChannelDesc"]["m_szVariableName"];
CAnimDataChannelDesc.m_nFlags = jsonData["CAnimDataChannelDesc"]["m_nFlags"];
CAnimDataChannelDesc.m_nType = jsonData["CAnimDataChannelDesc"]["m_nType"];
CAnimDataChannelDesc.m_szGrouping = jsonData["CAnimDataChannelDesc"]["m_szGrouping"];
CAnimDataChannelDesc.m_szDescription = jsonData["CAnimDataChannelDesc"]["m_szDescription"];
CAnimDataChannelDesc.m_szElementNameArray = jsonData["CAnimDataChannelDesc"]["m_szElementNameArray"];
CAnimDataChannelDesc.m_nElementIndexArray = jsonData["CAnimDataChannelDesc"]["m_nElementIndexArray"];
CAnimDataChannelDesc.m_nElementMaskArray = jsonData["CAnimDataChannelDesc"]["m_nElementMaskArray"];

// Atribuições para CMorphRectData
// CMorphRectData Offsets
CMorphRectData.m_nXLeftDst = jsonData["CMorphRectData"]["m_nXLeftDst"];
CMorphRectData.m_nYTopDst = jsonData["CMorphRectData"]["m_nYTopDst"];
CMorphRectData.m_flUWidthSrc = jsonData["CMorphRectData"]["m_flUWidthSrc"];
CMorphRectData.m_flVHeightSrc = jsonData["CMorphRectData"]["m_flVHeightSrc"];
CMorphRectData.m_bundleDatas = jsonData["CMorphRectData"]["m_bundleDatas"];

// Atribuições para CAnimFoot
// CAnimFoot Offsets
CAnimFoot.m_name = jsonData["CAnimFoot"]["m_name"];
CAnimFoot.m_vBallOffset = jsonData["CAnimFoot"]["m_vBallOffset"];
CAnimFoot.m_vHeelOffset = jsonData["CAnimFoot"]["m_vHeelOffset"];
CAnimFoot.m_ankleBoneIndex = jsonData["CAnimFoot"]["m_ankleBoneIndex"];
CAnimFoot.m_toeBoneIndex = jsonData["CAnimFoot"]["m_toeBoneIndex"];

// Atribuições para CNmBoneMask
// CNmBoneMask Offsets
CNmBoneMask.m_ID = jsonData["CNmBoneMask"]["m_ID"];
CNmBoneMask.m_weightInfo = jsonData["CNmBoneMask"]["m_weightInfo"];
CNmBoneMask.m_weights = jsonData["CNmBoneMask"]["m_weights"];

// Atribuições para CNmCachedVectorNode__CDefinition
// CNmCachedVectorNode__CDefinition Offsets
CNmCachedVectorNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmCachedVectorNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmCachedVectorNode__CDefinition.m_mode = jsonData["CNmCachedVectorNode__CDefinition"]["m_mode"];

// Atribuições para CNmStateNode__TimedEvent_t
// CNmStateNode__TimedEvent_t Offsets
CNmStateNode__TimedEvent_t.m_ID = jsonData["CNmStateNode__TimedEvent_t"]["m_ID"];
CNmStateNode__TimedEvent_t.m_flTimeValueSeconds = jsonData["CNmStateNode__TimedEvent_t"]["m_flTimeValueSeconds"];

// Atribuições para CFootPositionMetricEvaluator
// CFootPositionMetricEvaluator Offsets
CFootPositionMetricEvaluator.m_footIndices = jsonData["CFootPositionMetricEvaluator"]["m_footIndices"];
CFootPositionMetricEvaluator.m_bIgnoreSlope = jsonData["CFootPositionMetricEvaluator"]["m_bIgnoreSlope"];

// Atribuições para HSequence
// HSequence Offsets
HSequence.m_Value = jsonData["HSequence"]["m_Value"];

// Atribuições para CDampedValueUpdateItem
// CDampedValueUpdateItem Offsets
CDampedValueUpdateItem.m_damping = jsonData["CDampedValueUpdateItem"]["m_damping"];
CDampedValueUpdateItem.m_hParamIn = jsonData["CDampedValueUpdateItem"]["m_hParamIn"];
CDampedValueUpdateItem.m_hParamOut = jsonData["CDampedValueUpdateItem"]["m_hParamOut"];

// Atribuições para CAnimLocalHierarchy
// CAnimLocalHierarchy Offsets
CAnimLocalHierarchy.m_sBone = jsonData["CAnimLocalHierarchy"]["m_sBone"];
CAnimLocalHierarchy.m_sNewParent = jsonData["CAnimLocalHierarchy"]["m_sNewParent"];
CAnimLocalHierarchy.m_nStartFrame = jsonData["CAnimLocalHierarchy"]["m_nStartFrame"];
CAnimLocalHierarchy.m_nPeakFrame = jsonData["CAnimLocalHierarchy"]["m_nPeakFrame"];
CAnimLocalHierarchy.m_nTailFrame = jsonData["CAnimLocalHierarchy"]["m_nTailFrame"];
CAnimLocalHierarchy.m_nEndFrame = jsonData["CAnimLocalHierarchy"]["m_nEndFrame"];

// Atribuições para CBlendUpdateNode
// CBlendUpdateNode Offsets
CBlendUpdateNode.m_children = jsonData["CBlendUpdateNode"]["m_children"];
CBlendUpdateNode.m_sortedOrder = jsonData["CBlendUpdateNode"]["m_sortedOrder"];
CBlendUpdateNode.m_targetValues = jsonData["CBlendUpdateNode"]["m_targetValues"];
CBlendUpdateNode.m_blendValueSource = jsonData["CBlendUpdateNode"]["m_blendValueSource"];
CBlendUpdateNode.m_paramIndex = jsonData["CBlendUpdateNode"]["m_paramIndex"];
CBlendUpdateNode.m_damping = jsonData["CBlendUpdateNode"]["m_damping"];
CBlendUpdateNode.m_blendKeyType = jsonData["CBlendUpdateNode"]["m_blendKeyType"];
CBlendUpdateNode.m_bLockBlendOnReset = jsonData["CBlendUpdateNode"]["m_bLockBlendOnReset"];
CBlendUpdateNode.m_bSyncCycles = jsonData["CBlendUpdateNode"]["m_bSyncCycles"];
CBlendUpdateNode.m_bLoop = jsonData["CBlendUpdateNode"]["m_bLoop"];
CBlendUpdateNode.m_bLockWhenWaning = jsonData["CBlendUpdateNode"]["m_bLockWhenWaning"];

// Atribuições para CQuaternionAnimParameter
// CQuaternionAnimParameter Offsets
CQuaternionAnimParameter.m_defaultValue = jsonData["CQuaternionAnimParameter"]["m_defaultValue"];
CQuaternionAnimParameter.m_bInterpolate = jsonData["CQuaternionAnimParameter"]["m_bInterpolate"];

// Atribuições para PermModelData_t
// PermModelData_t Offsets
PermModelData_t.m_name = jsonData["PermModelData_t"]["m_name"];
PermModelData_t.m_modelInfo = jsonData["PermModelData_t"]["m_modelInfo"];
PermModelData_t.m_ExtParts = jsonData["PermModelData_t"]["m_ExtParts"];
PermModelData_t.m_refMeshes = jsonData["PermModelData_t"]["m_refMeshes"];
PermModelData_t.m_refMeshGroupMasks = jsonData["PermModelData_t"]["m_refMeshGroupMasks"];
PermModelData_t.m_refPhysGroupMasks = jsonData["PermModelData_t"]["m_refPhysGroupMasks"];
PermModelData_t.m_refLODGroupMasks = jsonData["PermModelData_t"]["m_refLODGroupMasks"];
PermModelData_t.m_lodGroupSwitchDistances = jsonData["PermModelData_t"]["m_lodGroupSwitchDistances"];
PermModelData_t.m_refPhysicsData = jsonData["PermModelData_t"]["m_refPhysicsData"];
PermModelData_t.m_refPhysicsHitboxData = jsonData["PermModelData_t"]["m_refPhysicsHitboxData"];
PermModelData_t.m_refAnimGroups = jsonData["PermModelData_t"]["m_refAnimGroups"];
PermModelData_t.m_refSequenceGroups = jsonData["PermModelData_t"]["m_refSequenceGroups"];
PermModelData_t.m_meshGroups = jsonData["PermModelData_t"]["m_meshGroups"];
PermModelData_t.m_materialGroups = jsonData["PermModelData_t"]["m_materialGroups"];
PermModelData_t.m_nDefaultMeshGroupMask = jsonData["PermModelData_t"]["m_nDefaultMeshGroupMask"];
PermModelData_t.m_modelSkeleton = jsonData["PermModelData_t"]["m_modelSkeleton"];
PermModelData_t.m_remappingTable = jsonData["PermModelData_t"]["m_remappingTable"];
PermModelData_t.m_remappingTableStarts = jsonData["PermModelData_t"]["m_remappingTableStarts"];
PermModelData_t.m_boneFlexDrivers = jsonData["PermModelData_t"]["m_boneFlexDrivers"];
PermModelData_t.m_pModelConfigList = jsonData["PermModelData_t"]["m_pModelConfigList"];
PermModelData_t.m_BodyGroupsHiddenInTools = jsonData["PermModelData_t"]["m_BodyGroupsHiddenInTools"];
PermModelData_t.m_refAnimIncludeModels = jsonData["PermModelData_t"]["m_refAnimIncludeModels"];
PermModelData_t.m_AnimatedMaterialAttributes = jsonData["PermModelData_t"]["m_AnimatedMaterialAttributes"];

// Atribuições para CSequenceGroupData
// CSequenceGroupData Offsets
CSequenceGroupData.m_sName = jsonData["CSequenceGroupData"]["m_sName"];
CSequenceGroupData.m_nFlags = jsonData["CSequenceGroupData"]["m_nFlags"];
CSequenceGroupData.m_localSequenceNameArray = jsonData["CSequenceGroupData"]["m_localSequenceNameArray"];
CSequenceGroupData.m_localS1SeqDescArray = jsonData["CSequenceGroupData"]["m_localS1SeqDescArray"];
CSequenceGroupData.m_localMultiSeqDescArray = jsonData["CSequenceGroupData"]["m_localMultiSeqDescArray"];
CSequenceGroupData.m_localSynthAnimDescArray = jsonData["CSequenceGroupData"]["m_localSynthAnimDescArray"];
CSequenceGroupData.m_localCmdSeqDescArray = jsonData["CSequenceGroupData"]["m_localCmdSeqDescArray"];
CSequenceGroupData.m_localBoneMaskArray = jsonData["CSequenceGroupData"]["m_localBoneMaskArray"];
CSequenceGroupData.m_localScaleSetArray = jsonData["CSequenceGroupData"]["m_localScaleSetArray"];
CSequenceGroupData.m_localBoneNameArray = jsonData["CSequenceGroupData"]["m_localBoneNameArray"];
CSequenceGroupData.m_localNodeName = jsonData["CSequenceGroupData"]["m_localNodeName"];
CSequenceGroupData.m_localPoseParamArray = jsonData["CSequenceGroupData"]["m_localPoseParamArray"];
CSequenceGroupData.m_keyValues = jsonData["CSequenceGroupData"]["m_keyValues"];
CSequenceGroupData.m_localIKAutoplayLockArray = jsonData["CSequenceGroupData"]["m_localIKAutoplayLockArray"];

// Atribuições para CStateMachineUpdateNode
// CStateMachineUpdateNode Offsets
CStateMachineUpdateNode.m_stateMachine = jsonData["CStateMachineUpdateNode"]["m_stateMachine"];
CStateMachineUpdateNode.m_stateData = jsonData["CStateMachineUpdateNode"]["m_stateData"];
CStateMachineUpdateNode.m_transitionData = jsonData["CStateMachineUpdateNode"]["m_transitionData"];
CStateMachineUpdateNode.m_bBlockWaningTags = jsonData["CStateMachineUpdateNode"]["m_bBlockWaningTags"];
CStateMachineUpdateNode.m_bLockStateWhenWaning = jsonData["CStateMachineUpdateNode"]["m_bLockStateWhenWaning"];

// Atribuições para CAimMatrixUpdateNode
// CAimMatrixUpdateNode Offsets
CAimMatrixUpdateNode.m_opFixedSettings = jsonData["CAimMatrixUpdateNode"]["m_opFixedSettings"];
CAimMatrixUpdateNode.m_target = jsonData["CAimMatrixUpdateNode"]["m_target"];
CAimMatrixUpdateNode.m_paramIndex = jsonData["CAimMatrixUpdateNode"]["m_paramIndex"];
CAimMatrixUpdateNode.m_hSequence = jsonData["CAimMatrixUpdateNode"]["m_hSequence"];
CAimMatrixUpdateNode.m_bResetChild = jsonData["CAimMatrixUpdateNode"]["m_bResetChild"];
CAimMatrixUpdateNode.m_bLockWhenWaning = jsonData["CAimMatrixUpdateNode"]["m_bLockWhenWaning"];

// Atribuições para SkeletonAnimCapture_t__Frame_t
// SkeletonAnimCapture_t__Frame_t Offsets
SkeletonAnimCapture_t__Frame_t.m_flTime = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_flTime"];
SkeletonAnimCapture_t__Frame_t.m_Stamp = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_Stamp"];
SkeletonAnimCapture_t__Frame_t.m_Transform = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_Transform"];
SkeletonAnimCapture_t__Frame_t.m_bTeleport = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_bTeleport"];
SkeletonAnimCapture_t__Frame_t.m_CompositeBones = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_CompositeBones"];
SkeletonAnimCapture_t__Frame_t.m_SimStateBones = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_SimStateBones"];
SkeletonAnimCapture_t__Frame_t.m_FeModelAnims = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_FeModelAnims"];
SkeletonAnimCapture_t__Frame_t.m_FeModelPos = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_FeModelPos"];
SkeletonAnimCapture_t__Frame_t.m_FlexControllerWeights = jsonData["SkeletonAnimCapture_t__Frame_t"]["m_FlexControllerWeights"];

// Atribuições para CModelConfigElement_Command
// CModelConfigElement_Command Offsets
CModelConfigElement_Command.m_Command = jsonData["CModelConfigElement_Command"]["m_Command"];
CModelConfigElement_Command.m_Args = jsonData["CModelConfigElement_Command"]["m_Args"];

// Atribuições para CAnimEventDefinition
// CAnimEventDefinition Offsets
CAnimEventDefinition.m_nFrame = jsonData["CAnimEventDefinition"]["m_nFrame"];
CAnimEventDefinition.m_nEndFrame = jsonData["CAnimEventDefinition"]["m_nEndFrame"];
CAnimEventDefinition.m_flCycle = jsonData["CAnimEventDefinition"]["m_flCycle"];
CAnimEventDefinition.m_flDuration = jsonData["CAnimEventDefinition"]["m_flDuration"];
CAnimEventDefinition.m_EventData = jsonData["CAnimEventDefinition"]["m_EventData"];
CAnimEventDefinition.m_sLegacyOptions = jsonData["CAnimEventDefinition"]["m_sLegacyOptions"];
CAnimEventDefinition.m_sEventName = jsonData["CAnimEventDefinition"]["m_sEventName"];

// Atribuições para CNmRootMotionData
// CNmRootMotionData Offsets
CNmRootMotionData.m_transforms = jsonData["CNmRootMotionData"]["m_transforms"];
CNmRootMotionData.m_nNumFrames = jsonData["CNmRootMotionData"]["m_nNumFrames"];
CNmRootMotionData.m_flAverageLinearVelocity = jsonData["CNmRootMotionData"]["m_flAverageLinearVelocity"];
CNmRootMotionData.m_flAverageAngularVelocityRadians = jsonData["CNmRootMotionData"]["m_flAverageAngularVelocityRadians"];
CNmRootMotionData.m_totalDelta = jsonData["CNmRootMotionData"]["m_totalDelta"];

// Atribuições para AnimScriptHandle
// AnimScriptHandle Offsets
AnimScriptHandle.m_id = jsonData["AnimScriptHandle"]["m_id"];

// Atribuições para CFlexOp
// CFlexOp Offsets
CFlexOp.m_OpCode = jsonData["CFlexOp"]["m_OpCode"];
CFlexOp.m_Data = jsonData["CFlexOp"]["m_Data"];

// Atribuições para CHitReactUpdateNode
// CHitReactUpdateNode Offsets
CHitReactUpdateNode.m_opFixedSettings = jsonData["CHitReactUpdateNode"]["m_opFixedSettings"];
CHitReactUpdateNode.m_triggerParam = jsonData["CHitReactUpdateNode"]["m_triggerParam"];
CHitReactUpdateNode.m_hitBoneParam = jsonData["CHitReactUpdateNode"]["m_hitBoneParam"];
CHitReactUpdateNode.m_hitOffsetParam = jsonData["CHitReactUpdateNode"]["m_hitOffsetParam"];
CHitReactUpdateNode.m_hitDirectionParam = jsonData["CHitReactUpdateNode"]["m_hitDirectionParam"];
CHitReactUpdateNode.m_hitStrengthParam = jsonData["CHitReactUpdateNode"]["m_hitStrengthParam"];
CHitReactUpdateNode.m_flMinDelayBetweenHits = jsonData["CHitReactUpdateNode"]["m_flMinDelayBetweenHits"];
CHitReactUpdateNode.m_bResetChild = jsonData["CHitReactUpdateNode"]["m_bResetChild"];

// Atribuições para CLookAtUpdateNode
// CLookAtUpdateNode Offsets
CLookAtUpdateNode.m_opFixedSettings = jsonData["CLookAtUpdateNode"]["m_opFixedSettings"];
CLookAtUpdateNode.m_target = jsonData["CLookAtUpdateNode"]["m_target"];
CLookAtUpdateNode.m_paramIndex = jsonData["CLookAtUpdateNode"]["m_paramIndex"];
CLookAtUpdateNode.m_weightParamIndex = jsonData["CLookAtUpdateNode"]["m_weightParamIndex"];
CLookAtUpdateNode.m_bResetChild = jsonData["CLookAtUpdateNode"]["m_bResetChild"];
CLookAtUpdateNode.m_bLockWhenWaning = jsonData["CLookAtUpdateNode"]["m_bLockWhenWaning"];

// Atribuições para CAnimBone
// CAnimBone Offsets
CAnimBone.m_name = jsonData["CAnimBone"]["m_name"];
CAnimBone.m_parent = jsonData["CAnimBone"]["m_parent"];
CAnimBone.m_pos = jsonData["CAnimBone"]["m_pos"];
CAnimBone.m_quat = jsonData["CAnimBone"]["m_quat"];
CAnimBone.m_scale = jsonData["CAnimBone"]["m_scale"];
CAnimBone.m_qAlignment = jsonData["CAnimBone"]["m_qAlignment"];
CAnimBone.m_flags = jsonData["CAnimBone"]["m_flags"];

// Atribuições para CAnimParameterManagerUpdater
// CAnimParameterManagerUpdater Offsets
CAnimParameterManagerUpdater.m_parameters = jsonData["CAnimParameterManagerUpdater"]["m_parameters"];
CAnimParameterManagerUpdater.m_idToIndexMap = jsonData["CAnimParameterManagerUpdater"]["m_idToIndexMap"];
CAnimParameterManagerUpdater.m_nameToIndexMap = jsonData["CAnimParameterManagerUpdater"]["m_nameToIndexMap"];
CAnimParameterManagerUpdater.m_indexToHandle = jsonData["CAnimParameterManagerUpdater"]["m_indexToHandle"];
CAnimParameterManagerUpdater.m_autoResetParams = jsonData["CAnimParameterManagerUpdater"]["m_autoResetParams"];
CAnimParameterManagerUpdater.m_autoResetMap = jsonData["CAnimParameterManagerUpdater"]["m_autoResetMap"];

// Atribuições para BoneDemoCaptureSettings_t
// BoneDemoCaptureSettings_t Offsets
BoneDemoCaptureSettings_t.m_boneName = jsonData["BoneDemoCaptureSettings_t"]["m_boneName"];
BoneDemoCaptureSettings_t.m_flErrorSplineRotationMax = jsonData["BoneDemoCaptureSettings_t"]["m_flErrorSplineRotationMax"];
BoneDemoCaptureSettings_t.m_flErrorSplineTranslationMax = jsonData["BoneDemoCaptureSettings_t"]["m_flErrorSplineTranslationMax"];
BoneDemoCaptureSettings_t.m_flErrorSplineScaleMax = jsonData["BoneDemoCaptureSettings_t"]["m_flErrorSplineScaleMax"];
BoneDemoCaptureSettings_t.m_flErrorQuantizationRotationMax = jsonData["BoneDemoCaptureSettings_t"]["m_flErrorQuantizationRotationMax"];
BoneDemoCaptureSettings_t.m_flErrorQuantizationTranslationMax = jsonData["BoneDemoCaptureSettings_t"]["m_flErrorQuantizationTranslationMax"];
BoneDemoCaptureSettings_t.m_flErrorQuantizationScaleMax = jsonData["BoneDemoCaptureSettings_t"]["m_flErrorQuantizationScaleMax"];

// Atribuições para CBoneConstraintPoseSpaceMorph__Input_t
// CBoneConstraintPoseSpaceMorph__Input_t Offsets
CBoneConstraintPoseSpaceMorph__Input_t.m_inputValue = jsonData["CBoneConstraintPoseSpaceMorph__Input_t"]["m_inputValue"];
CBoneConstraintPoseSpaceMorph__Input_t.m_outputWeightList = jsonData["CBoneConstraintPoseSpaceMorph__Input_t"]["m_outputWeightList"];

// Atribuições para MoodAnimationLayer_t
// MoodAnimationLayer_t Offsets
MoodAnimationLayer_t.m_sName = jsonData["MoodAnimationLayer_t"]["m_sName"];
MoodAnimationLayer_t.m_bActiveListening = jsonData["MoodAnimationLayer_t"]["m_bActiveListening"];
MoodAnimationLayer_t.m_bActiveTalking = jsonData["MoodAnimationLayer_t"]["m_bActiveTalking"];
MoodAnimationLayer_t.m_layerAnimations = jsonData["MoodAnimationLayer_t"]["m_layerAnimations"];
MoodAnimationLayer_t.m_flIntensity = jsonData["MoodAnimationLayer_t"]["m_flIntensity"];
MoodAnimationLayer_t.m_flDurationScale = jsonData["MoodAnimationLayer_t"]["m_flDurationScale"];
MoodAnimationLayer_t.m_bScaleWithInts = jsonData["MoodAnimationLayer_t"]["m_bScaleWithInts"];
MoodAnimationLayer_t.m_flNextStart = jsonData["MoodAnimationLayer_t"]["m_flNextStart"];
MoodAnimationLayer_t.m_flStartOffset = jsonData["MoodAnimationLayer_t"]["m_flStartOffset"];
MoodAnimationLayer_t.m_flEndOffset = jsonData["MoodAnimationLayer_t"]["m_flEndOffset"];
MoodAnimationLayer_t.m_flFadeIn = jsonData["MoodAnimationLayer_t"]["m_flFadeIn"];
MoodAnimationLayer_t.m_flFadeOut = jsonData["MoodAnimationLayer_t"]["m_flFadeOut"];

// Atribuições para CSpeedScaleUpdateNode
// CSpeedScaleUpdateNode Offsets
CSpeedScaleUpdateNode.m_paramIndex = jsonData["CSpeedScaleUpdateNode"]["m_paramIndex"];

// Atribuições para CSequenceTagSpans
// CSequenceTagSpans Offsets
CSequenceTagSpans.m_sSequenceName = jsonData["CSequenceTagSpans"]["m_sSequenceName"];
CSequenceTagSpans.m_tags = jsonData["CSequenceTagSpans"]["m_tags"];

// Atribuições para CNmGraphDefinition__ChildGraphSlot_t
// CNmGraphDefinition__ChildGraphSlot_t Offsets
CNmGraphDefinition__ChildGraphSlot_t.m_nNodeIdx = jsonData["CNmGraphDefinition__ChildGraphSlot_t"]["m_nNodeIdx"];
CNmGraphDefinition__ChildGraphSlot_t.m_dataSlotIdx = jsonData["CNmGraphDefinition__ChildGraphSlot_t"]["m_dataSlotIdx"];

// Atribuições para CModelConfigElement_SetBodygroupOnAttachedModels
// CModelConfigElement_SetBodygroupOnAttachedModels Offsets
CModelConfigElement_SetBodygroupOnAttachedModels.m_GroupName = jsonData["CModelConfigElement_SetBodygroupOnAttachedModels"]["m_GroupName"];
CModelConfigElement_SetBodygroupOnAttachedModels.m_nChoice = jsonData["CModelConfigElement_SetBodygroupOnAttachedModels"]["m_nChoice"];

// Atribuições para CAnimReplayFrame
// CAnimReplayFrame Offsets
CAnimReplayFrame.m_inputDataBlocks = jsonData["CAnimReplayFrame"]["m_inputDataBlocks"];
CAnimReplayFrame.m_instanceData = jsonData["CAnimReplayFrame"]["m_instanceData"];
CAnimReplayFrame.m_startingLocalToWorldTransform = jsonData["CAnimReplayFrame"]["m_startingLocalToWorldTransform"];
CAnimReplayFrame.m_localToWorldTransform = jsonData["CAnimReplayFrame"]["m_localToWorldTransform"];
CAnimReplayFrame.m_timeStamp = jsonData["CAnimReplayFrame"]["m_timeStamp"];

// Atribuições para CNmTransitionEvent
// CNmTransitionEvent Offsets
CNmTransitionEvent.m_rule = jsonData["CNmTransitionEvent"]["m_rule"];
CNmTransitionEvent.m_ID = jsonData["CNmTransitionEvent"]["m_ID"];

// Atribuições para CNmIKRig
// CNmIKRig Offsets
CNmIKRig.m_skeleton = jsonData["CNmIKRig"]["m_skeleton"];

// Atribuições para CPathAnimMotorUpdaterBase
// CPathAnimMotorUpdaterBase Offsets
CPathAnimMotorUpdaterBase.m_bLockToPath = jsonData["CPathAnimMotorUpdaterBase"]["m_bLockToPath"];

// Atribuições para CNmFootstepEventPercentageThroughNode__CDefinition
// CNmFootstepEventPercentageThroughNode__CDefinition Offsets
CNmFootstepEventPercentageThroughNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmFootstepEventPercentageThroughNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmFootstepEventPercentageThroughNode__CDefinition.m_phaseCondition = jsonData["CNmFootstepEventPercentageThroughNode__CDefinition"]["m_phaseCondition"];
CNmFootstepEventPercentageThroughNode__CDefinition.m_eventConditionRules = jsonData["CNmFootstepEventPercentageThroughNode__CDefinition"]["m_eventConditionRules"];

// Atribuições para AimCameraOpFixedSettings_t
// AimCameraOpFixedSettings_t Offsets
AimCameraOpFixedSettings_t.m_nChainIndex = jsonData["AimCameraOpFixedSettings_t"]["m_nChainIndex"];
AimCameraOpFixedSettings_t.m_nCameraJointIndex = jsonData["AimCameraOpFixedSettings_t"]["m_nCameraJointIndex"];
AimCameraOpFixedSettings_t.m_nPelvisJointIndex = jsonData["AimCameraOpFixedSettings_t"]["m_nPelvisJointIndex"];
AimCameraOpFixedSettings_t.m_nClavicleLeftJointIndex = jsonData["AimCameraOpFixedSettings_t"]["m_nClavicleLeftJointIndex"];
AimCameraOpFixedSettings_t.m_nClavicleRightJointIndex = jsonData["AimCameraOpFixedSettings_t"]["m_nClavicleRightJointIndex"];
AimCameraOpFixedSettings_t.m_nDepenetrationJointIndex = jsonData["AimCameraOpFixedSettings_t"]["m_nDepenetrationJointIndex"];
AimCameraOpFixedSettings_t.m_propJoints = jsonData["AimCameraOpFixedSettings_t"]["m_propJoints"];

// Atribuições para SkeletonAnimCapture_t__Camera_t
// SkeletonAnimCapture_t__Camera_t Offsets
SkeletonAnimCapture_t__Camera_t.m_tmCamera = jsonData["SkeletonAnimCapture_t__Camera_t"]["m_tmCamera"];
SkeletonAnimCapture_t__Camera_t.m_flTime = jsonData["SkeletonAnimCapture_t__Camera_t"]["m_flTime"];

// Atribuições para CFollowAttachmentUpdateNode
// CFollowAttachmentUpdateNode Offsets
CFollowAttachmentUpdateNode.m_opFixedData = jsonData["CFollowAttachmentUpdateNode"]["m_opFixedData"];

// Atribuições para CMovementComponentUpdater
// CMovementComponentUpdater Offsets
CMovementComponentUpdater.m_motors = jsonData["CMovementComponentUpdater"]["m_motors"];
CMovementComponentUpdater.m_facingDamping = jsonData["CMovementComponentUpdater"]["m_facingDamping"];
CMovementComponentUpdater.m_nDefaultMotorIndex = jsonData["CMovementComponentUpdater"]["m_nDefaultMotorIndex"];
CMovementComponentUpdater.m_flDefaultRunSpeed = jsonData["CMovementComponentUpdater"]["m_flDefaultRunSpeed"];
CMovementComponentUpdater.m_bMoveVarsDisabled = jsonData["CMovementComponentUpdater"]["m_bMoveVarsDisabled"];
CMovementComponentUpdater.m_bNetworkPath = jsonData["CMovementComponentUpdater"]["m_bNetworkPath"];
CMovementComponentUpdater.m_bNetworkFacing = jsonData["CMovementComponentUpdater"]["m_bNetworkFacing"];
CMovementComponentUpdater.m_paramHandles = jsonData["CMovementComponentUpdater"]["m_paramHandles"];

// Atribuições para CModelConfigElement_SetMaterialGroup
// CModelConfigElement_SetMaterialGroup Offsets
CModelConfigElement_SetMaterialGroup.m_MaterialGroupName = jsonData["CModelConfigElement_SetMaterialGroup"]["m_MaterialGroupName"];

// Atribuições para CFutureFacingMetricEvaluator
// CFutureFacingMetricEvaluator Offsets
CFutureFacingMetricEvaluator.m_flDistance = jsonData["CFutureFacingMetricEvaluator"]["m_flDistance"];
CFutureFacingMetricEvaluator.m_flTime = jsonData["CFutureFacingMetricEvaluator"]["m_flTime"];

// Atribuições para NmCompressionSettings_t
// NmCompressionSettings_t Offsets
NmCompressionSettings_t.m_translationRangeX = jsonData["NmCompressionSettings_t"]["m_translationRangeX"];
NmCompressionSettings_t.m_translationRangeY = jsonData["NmCompressionSettings_t"]["m_translationRangeY"];
NmCompressionSettings_t.m_translationRangeZ = jsonData["NmCompressionSettings_t"]["m_translationRangeZ"];
NmCompressionSettings_t.m_scaleRange = jsonData["NmCompressionSettings_t"]["m_scaleRange"];
NmCompressionSettings_t.m_constantRotation = jsonData["NmCompressionSettings_t"]["m_constantRotation"];
NmCompressionSettings_t.m_bIsRotationStatic = jsonData["NmCompressionSettings_t"]["m_bIsRotationStatic"];
NmCompressionSettings_t.m_bIsTranslationStatic = jsonData["NmCompressionSettings_t"]["m_bIsTranslationStatic"];
NmCompressionSettings_t.m_bIsScaleStatic = jsonData["NmCompressionSettings_t"]["m_bIsScaleStatic"];

// Atribuições para CAddUpdateNode
// CAddUpdateNode Offsets
CAddUpdateNode.m_footMotionTiming = jsonData["CAddUpdateNode"]["m_footMotionTiming"];
CAddUpdateNode.m_bApplyToFootMotion = jsonData["CAddUpdateNode"]["m_bApplyToFootMotion"];
CAddUpdateNode.m_bApplyChannelsSeparately = jsonData["CAddUpdateNode"]["m_bApplyChannelsSeparately"];
CAddUpdateNode.m_bUseModelSpace = jsonData["CAddUpdateNode"]["m_bUseModelSpace"];
CAddUpdateNode.m_bApplyScale = jsonData["CAddUpdateNode"]["m_bApplyScale"];

// Atribuições para CAnimEnum
// CAnimEnum Offsets
CAnimEnum.m_value = jsonData["CAnimEnum"]["m_value"];

// Atribuições para CDemoSettingsComponentUpdater
// CDemoSettingsComponentUpdater Offsets
CDemoSettingsComponentUpdater.m_settings = jsonData["CDemoSettingsComponentUpdater"]["m_settings"];

// Atribuições para CAnimDecoder
// CAnimDecoder Offsets
CAnimDecoder.m_szName = jsonData["CAnimDecoder"]["m_szName"];
CAnimDecoder.m_nVersion = jsonData["CAnimDecoder"]["m_nVersion"];
CAnimDecoder.m_nType = jsonData["CAnimDecoder"]["m_nType"];

// Atribuições para CNmCachedTargetNode__CDefinition
// CNmCachedTargetNode__CDefinition Offsets
CNmCachedTargetNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmCachedTargetNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmCachedTargetNode__CDefinition.m_mode = jsonData["CNmCachedTargetNode__CDefinition"]["m_mode"];

// Atribuições para CNmConstBoolNode__CDefinition
// CNmConstBoolNode__CDefinition Offsets
CNmConstBoolNode__CDefinition.m_bValue = jsonData["CNmConstBoolNode__CDefinition"]["m_bValue"];

// Atribuições para CNmBitFlags
// CNmBitFlags Offsets
CNmBitFlags.m_flags = jsonData["CNmBitFlags"]["m_flags"];

// Atribuições para CFootStride
// CFootStride Offsets
CFootStride.m_definition = jsonData["CFootStride"]["m_definition"];
CFootStride.m_trajectories = jsonData["CFootStride"]["m_trajectories"];

// Atribuições para CNmLegacyEvent
// CNmLegacyEvent Offsets
CNmLegacyEvent.m_animEventClassName = jsonData["CNmLegacyEvent"]["m_animEventClassName"];
CNmLegacyEvent.m_KV = jsonData["CNmLegacyEvent"]["m_KV"];

// Atribuições para CStateNodeStateData
// CStateNodeStateData Offsets
CStateNodeStateData.m_pChild = jsonData["CStateNodeStateData"]["m_pChild"];
CStateNodeStateData.m_bExclusiveRootMotion = jsonData["CStateNodeStateData"]["m_bExclusiveRootMotion"];
CStateNodeStateData.m_bExclusiveRootMotionFirstFrame = jsonData["CStateNodeStateData"]["m_bExclusiveRootMotionFirstFrame"];

// Atribuições para CFootstepLandedAnimTag
// CFootstepLandedAnimTag Offsets
CFootstepLandedAnimTag.m_FootstepType = jsonData["CFootstepLandedAnimTag"]["m_FootstepType"];
CFootstepLandedAnimTag.m_OverrideSoundName = jsonData["CFootstepLandedAnimTag"]["m_OverrideSoundName"];
CFootstepLandedAnimTag.m_DebugAnimSourceString = jsonData["CFootstepLandedAnimTag"]["m_DebugAnimSourceString"];
CFootstepLandedAnimTag.m_BoneName = jsonData["CFootstepLandedAnimTag"]["m_BoneName"];

// Atribuições para CEnumAnimParameter
// CEnumAnimParameter Offsets
CEnumAnimParameter.m_defaultValue = jsonData["CEnumAnimParameter"]["m_defaultValue"];
CEnumAnimParameter.m_enumOptions = jsonData["CEnumAnimParameter"]["m_enumOptions"];
CEnumAnimParameter.m_vecEnumReferenced = jsonData["CEnumAnimParameter"]["m_vecEnumReferenced"];

// Atribuições para CHandshakeAnimTagBase
// CHandshakeAnimTagBase Offsets
CHandshakeAnimTagBase.m_bIsDisableTag = jsonData["CHandshakeAnimTagBase"]["m_bIsDisableTag"];

// Atribuições para AnimTagID
// AnimTagID Offsets
AnimTagID.m_id = jsonData["AnimTagID"]["m_id"];

// Atribuições para CAnimFrameSegment
// CAnimFrameSegment Offsets
CAnimFrameSegment.m_nUniqueFrameIndex = jsonData["CAnimFrameSegment"]["m_nUniqueFrameIndex"];
CAnimFrameSegment.m_nLocalElementMasks = jsonData["CAnimFrameSegment"]["m_nLocalElementMasks"];
CAnimFrameSegment.m_nLocalChannel = jsonData["CAnimFrameSegment"]["m_nLocalChannel"];
CAnimFrameSegment.m_container = jsonData["CAnimFrameSegment"]["m_container"];

// Atribuições para CSlopeComponentUpdater
// CSlopeComponentUpdater Offsets
CSlopeComponentUpdater.m_flTraceDistance = jsonData["CSlopeComponentUpdater"]["m_flTraceDistance"];
CSlopeComponentUpdater.m_hSlopeAngle = jsonData["CSlopeComponentUpdater"]["m_hSlopeAngle"];
CSlopeComponentUpdater.m_hSlopeAngleFront = jsonData["CSlopeComponentUpdater"]["m_hSlopeAngleFront"];
CSlopeComponentUpdater.m_hSlopeAngleSide = jsonData["CSlopeComponentUpdater"]["m_hSlopeAngleSide"];
CSlopeComponentUpdater.m_hSlopeHeading = jsonData["CSlopeComponentUpdater"]["m_hSlopeHeading"];
CSlopeComponentUpdater.m_hSlopeNormal = jsonData["CSlopeComponentUpdater"]["m_hSlopeNormal"];
CSlopeComponentUpdater.m_hSlopeNormal_WorldSpace = jsonData["CSlopeComponentUpdater"]["m_hSlopeNormal_WorldSpace"];

// Atribuições para CAnimInputDamping
// CAnimInputDamping Offsets
CAnimInputDamping.m_speedFunction = jsonData["CAnimInputDamping"]["m_speedFunction"];
CAnimInputDamping.m_fSpeedScale = jsonData["CAnimInputDamping"]["m_fSpeedScale"];

// Atribuições para CHitBoxSet
// CHitBoxSet Offsets
CHitBoxSet.m_name = jsonData["CHitBoxSet"]["m_name"];
CHitBoxSet.m_nNameHash = jsonData["CHitBoxSet"]["m_nNameHash"];
CHitBoxSet.m_HitBoxes = jsonData["CHitBoxSet"]["m_HitBoxes"];
CHitBoxSet.m_SourceFilename = jsonData["CHitBoxSet"]["m_SourceFilename"];

// Atribuições para ChainToSolveData_t
// ChainToSolveData_t Offsets
ChainToSolveData_t.m_nChainIndex = jsonData["ChainToSolveData_t"]["m_nChainIndex"];
ChainToSolveData_t.m_SolverSettings = jsonData["ChainToSolveData_t"]["m_SolverSettings"];
ChainToSolveData_t.m_TargetSettings = jsonData["ChainToSolveData_t"]["m_TargetSettings"];
ChainToSolveData_t.m_DebugSetting = jsonData["ChainToSolveData_t"]["m_DebugSetting"];
ChainToSolveData_t.m_flDebugNormalizedValue = jsonData["ChainToSolveData_t"]["m_flDebugNormalizedValue"];
ChainToSolveData_t.m_vDebugOffset = jsonData["ChainToSolveData_t"]["m_vDebugOffset"];

// Atribuições para CConstraintSlave
// CConstraintSlave Offsets
CConstraintSlave.m_qBaseOrientation = jsonData["CConstraintSlave"]["m_qBaseOrientation"];
CConstraintSlave.m_vBasePosition = jsonData["CConstraintSlave"]["m_vBasePosition"];
CConstraintSlave.m_nBoneHash = jsonData["CConstraintSlave"]["m_nBoneHash"];
CConstraintSlave.m_flWeight = jsonData["CConstraintSlave"]["m_flWeight"];
CConstraintSlave.m_sName = jsonData["CConstraintSlave"]["m_sName"];

// Atribuições para CFootCycleDefinition
// CFootCycleDefinition Offsets
CFootCycleDefinition.m_vStancePositionMS = jsonData["CFootCycleDefinition"]["m_vStancePositionMS"];
CFootCycleDefinition.m_vMidpointPositionMS = jsonData["CFootCycleDefinition"]["m_vMidpointPositionMS"];
CFootCycleDefinition.m_flStanceDirectionMS = jsonData["CFootCycleDefinition"]["m_flStanceDirectionMS"];
CFootCycleDefinition.m_vToStrideStartPos = jsonData["CFootCycleDefinition"]["m_vToStrideStartPos"];
CFootCycleDefinition.m_stanceCycle = jsonData["CFootCycleDefinition"]["m_stanceCycle"];
CFootCycleDefinition.m_footLiftCycle = jsonData["CFootCycleDefinition"]["m_footLiftCycle"];
CFootCycleDefinition.m_footOffCycle = jsonData["CFootCycleDefinition"]["m_footOffCycle"];
CFootCycleDefinition.m_footStrikeCycle = jsonData["CFootCycleDefinition"]["m_footStrikeCycle"];
CFootCycleDefinition.m_footLandCycle = jsonData["CFootCycleDefinition"]["m_footLandCycle"];

// Atribuições para CVirtualAnimParameter
// CVirtualAnimParameter Offsets
CVirtualAnimParameter.m_expressionString = jsonData["CVirtualAnimParameter"]["m_expressionString"];
CVirtualAnimParameter.m_eParamType = jsonData["CVirtualAnimParameter"]["m_eParamType"];

// Atribuições para CMotionMetricEvaluator
// CMotionMetricEvaluator Offsets
CMotionMetricEvaluator.m_means = jsonData["CMotionMetricEvaluator"]["m_means"];
CMotionMetricEvaluator.m_standardDeviations = jsonData["CMotionMetricEvaluator"]["m_standardDeviations"];
CMotionMetricEvaluator.m_flWeight = jsonData["CMotionMetricEvaluator"]["m_flWeight"];
CMotionMetricEvaluator.m_nDimensionStartIndex = jsonData["CMotionMetricEvaluator"]["m_nDimensionStartIndex"];

// Atribuições para CFutureVelocityMetricEvaluator
// CFutureVelocityMetricEvaluator Offsets
CFutureVelocityMetricEvaluator.m_flDistance = jsonData["CFutureVelocityMetricEvaluator"]["m_flDistance"];
CFutureVelocityMetricEvaluator.m_flStoppingDistance = jsonData["CFutureVelocityMetricEvaluator"]["m_flStoppingDistance"];
CFutureVelocityMetricEvaluator.m_flTargetSpeed = jsonData["CFutureVelocityMetricEvaluator"]["m_flTargetSpeed"];
CFutureVelocityMetricEvaluator.m_eMode = jsonData["CFutureVelocityMetricEvaluator"]["m_eMode"];

// Atribuições para CAnimUpdateNodeBase
// CAnimUpdateNodeBase Offsets
CAnimUpdateNodeBase.m_nodePath = jsonData["CAnimUpdateNodeBase"]["m_nodePath"];
CAnimUpdateNodeBase.m_networkMode = jsonData["CAnimUpdateNodeBase"]["m_networkMode"];
CAnimUpdateNodeBase.m_name = jsonData["CAnimUpdateNodeBase"]["m_name"];

// Atribuições para CSetParameterActionUpdater
// CSetParameterActionUpdater Offsets
CSetParameterActionUpdater.m_hParam = jsonData["CSetParameterActionUpdater"]["m_hParam"];
CSetParameterActionUpdater.m_value = jsonData["CSetParameterActionUpdater"]["m_value"];

// Atribuições para CNmFixedWeightBoneMaskNode__CDefinition
// CNmFixedWeightBoneMaskNode__CDefinition Offsets
CNmFixedWeightBoneMaskNode__CDefinition.m_flBoneWeight = jsonData["CNmFixedWeightBoneMaskNode__CDefinition"]["m_flBoneWeight"];

// Atribuições para CNmGraphVariation
// CNmGraphVariation Offsets
CNmGraphVariation.m_graphDefinition = jsonData["CNmGraphVariation"]["m_graphDefinition"];
CNmGraphVariation.m_dataSet = jsonData["CNmGraphVariation"]["m_dataSet"];

// Atribuições para SkeletonAnimCapture_t__FrameStamp_t
// SkeletonAnimCapture_t__FrameStamp_t Offsets
SkeletonAnimCapture_t__FrameStamp_t.m_flTime = jsonData["SkeletonAnimCapture_t__FrameStamp_t"]["m_flTime"];
SkeletonAnimCapture_t__FrameStamp_t.m_flEntitySimTime = jsonData["SkeletonAnimCapture_t__FrameStamp_t"]["m_flEntitySimTime"];
SkeletonAnimCapture_t__FrameStamp_t.m_bTeleportTick = jsonData["SkeletonAnimCapture_t__FrameStamp_t"]["m_bTeleportTick"];
SkeletonAnimCapture_t__FrameStamp_t.m_bPredicted = jsonData["SkeletonAnimCapture_t__FrameStamp_t"]["m_bPredicted"];
SkeletonAnimCapture_t__FrameStamp_t.m_flCurTime = jsonData["SkeletonAnimCapture_t__FrameStamp_t"]["m_flCurTime"];
SkeletonAnimCapture_t__FrameStamp_t.m_flRealTime = jsonData["SkeletonAnimCapture_t__FrameStamp_t"]["m_flRealTime"];
SkeletonAnimCapture_t__FrameStamp_t.m_nFrameCount = jsonData["SkeletonAnimCapture_t__FrameStamp_t"]["m_nFrameCount"];
SkeletonAnimCapture_t__FrameStamp_t.m_nTickCount = jsonData["SkeletonAnimCapture_t__FrameStamp_t"]["m_nTickCount"];

// Atribuições para CBonePositionMetricEvaluator
// CBonePositionMetricEvaluator Offsets
CBonePositionMetricEvaluator.m_nBoneIndex = jsonData["CBonePositionMetricEvaluator"]["m_nBoneIndex"];

// Atribuições para CRenderBufferBinding
// CRenderBufferBinding Offsets
CRenderBufferBinding.m_hBuffer = jsonData["CRenderBufferBinding"]["m_hBuffer"];
CRenderBufferBinding.m_nBindOffsetBytes = jsonData["CRenderBufferBinding"]["m_nBindOffsetBytes"];

// Atribuições para CNmParameterizedBlendNode__Parameterization_t
// CNmParameterizedBlendNode__Parameterization_t Offsets
CNmParameterizedBlendNode__Parameterization_t.m_blendRanges = jsonData["CNmParameterizedBlendNode__Parameterization_t"]["m_blendRanges"];
CNmParameterizedBlendNode__Parameterization_t.m_parameterRange = jsonData["CNmParameterizedBlendNode__Parameterization_t"]["m_parameterRange"];

// Atribuições para CNmNotNode__CDefinition
// CNmNotNode__CDefinition Offsets
CNmNotNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmNotNode__CDefinition"]["m_nInputValueNodeIdx"];

// Atribuições para CMeshletDescriptor
// CMeshletDescriptor Offsets
CMeshletDescriptor.m_PackedAABB = jsonData["CMeshletDescriptor"]["m_PackedAABB"];
CMeshletDescriptor.m_CullingData = jsonData["CMeshletDescriptor"]["m_CullingData"];

// Atribuições para CMorphSetData
// CMorphSetData Offsets
CMorphSetData.m_nWidth = jsonData["CMorphSetData"]["m_nWidth"];
CMorphSetData.m_nHeight = jsonData["CMorphSetData"]["m_nHeight"];
CMorphSetData.m_bundleTypes = jsonData["CMorphSetData"]["m_bundleTypes"];
CMorphSetData.m_morphDatas = jsonData["CMorphSetData"]["m_morphDatas"];
CMorphSetData.m_pTextureAtlas = jsonData["CMorphSetData"]["m_pTextureAtlas"];
CMorphSetData.m_FlexDesc = jsonData["CMorphSetData"]["m_FlexDesc"];
CMorphSetData.m_FlexControllers = jsonData["CMorphSetData"]["m_FlexControllers"];
CMorphSetData.m_FlexRules = jsonData["CMorphSetData"]["m_FlexRules"];

// Atribuições para CNmAndNode__CDefinition
// CNmAndNode__CDefinition Offsets
CNmAndNode__CDefinition.m_conditionNodeIndices = jsonData["CNmAndNode__CDefinition"]["m_conditionNodeIndices"];

// Atribuições para CMorphConstraint
// CMorphConstraint Offsets
CMorphConstraint.m_sTargetMorph = jsonData["CMorphConstraint"]["m_sTargetMorph"];
CMorphConstraint.m_nSlaveChannel = jsonData["CMorphConstraint"]["m_nSlaveChannel"];
CMorphConstraint.m_flMin = jsonData["CMorphConstraint"]["m_flMin"];
CMorphConstraint.m_flMax = jsonData["CMorphConstraint"]["m_flMax"];

// Atribuições para CClothSettingsAnimTag
// CClothSettingsAnimTag Offsets
CClothSettingsAnimTag.m_flStiffness = jsonData["CClothSettingsAnimTag"]["m_flStiffness"];
CClothSettingsAnimTag.m_flEaseIn = jsonData["CClothSettingsAnimTag"]["m_flEaseIn"];
CClothSettingsAnimTag.m_flEaseOut = jsonData["CClothSettingsAnimTag"]["m_flEaseOut"];
CClothSettingsAnimTag.m_nVertexSet = jsonData["CClothSettingsAnimTag"]["m_nVertexSet"];

// Atribuições para CAnimDesc_Flag
// CAnimDesc_Flag Offsets
CAnimDesc_Flag.m_bLooping = jsonData["CAnimDesc_Flag"]["m_bLooping"];
CAnimDesc_Flag.m_bAllZeros = jsonData["CAnimDesc_Flag"]["m_bAllZeros"];
CAnimDesc_Flag.m_bHidden = jsonData["CAnimDesc_Flag"]["m_bHidden"];
CAnimDesc_Flag.m_bDelta = jsonData["CAnimDesc_Flag"]["m_bDelta"];
CAnimDesc_Flag.m_bLegacyWorldspace = jsonData["CAnimDesc_Flag"]["m_bLegacyWorldspace"];
CAnimDesc_Flag.m_bModelDoc = jsonData["CAnimDesc_Flag"]["m_bModelDoc"];
CAnimDesc_Flag.m_bImplicitSeqIgnoreDelta = jsonData["CAnimDesc_Flag"]["m_bImplicitSeqIgnoreDelta"];
CAnimDesc_Flag.m_bAnimGraphAdditive = jsonData["CAnimDesc_Flag"]["m_bAnimGraphAdditive"];

// Atribuições para CNmBlend2DNode__CDefinition
// CNmBlend2DNode__CDefinition Offsets
CNmBlend2DNode__CDefinition.m_sourceNodeIndices = jsonData["CNmBlend2DNode__CDefinition"]["m_sourceNodeIndices"];
CNmBlend2DNode__CDefinition.m_nInputParameterNodeIdx0 = jsonData["CNmBlend2DNode__CDefinition"]["m_nInputParameterNodeIdx0"];
CNmBlend2DNode__CDefinition.m_nInputParameterNodeIdx1 = jsonData["CNmBlend2DNode__CDefinition"]["m_nInputParameterNodeIdx1"];
CNmBlend2DNode__CDefinition.m_values = jsonData["CNmBlend2DNode__CDefinition"]["m_values"];
CNmBlend2DNode__CDefinition.m_indices = jsonData["CNmBlend2DNode__CDefinition"]["m_indices"];
CNmBlend2DNode__CDefinition.m_hullIndices = jsonData["CNmBlend2DNode__CDefinition"]["m_hullIndices"];
CNmBlend2DNode__CDefinition.m_bAllowLooping = jsonData["CNmBlend2DNode__CDefinition"]["m_bAllowLooping"];

// Atribuições para CBlendCurve
// CBlendCurve Offsets
CBlendCurve.m_flControlPoint1 = jsonData["CBlendCurve"]["m_flControlPoint1"];
CBlendCurve.m_flControlPoint2 = jsonData["CBlendCurve"]["m_flControlPoint2"];

// Atribuições para CNmGraphNode__CDefinition
// CNmGraphNode__CDefinition Offsets
CNmGraphNode__CDefinition.m_nNodeIdx = jsonData["CNmGraphNode__CDefinition"]["m_nNodeIdx"];

// Atribuições para CAnimationGraphVisualizerSphere
// CAnimationGraphVisualizerSphere Offsets
CAnimationGraphVisualizerSphere.m_vWsPosition = jsonData["CAnimationGraphVisualizerSphere"]["m_vWsPosition"];
CAnimationGraphVisualizerSphere.m_flRadius = jsonData["CAnimationGraphVisualizerSphere"]["m_flRadius"];
CAnimationGraphVisualizerSphere.m_Color = jsonData["CAnimationGraphVisualizerSphere"]["m_Color"];

// Atribuições para CAnimUserDifference
// CAnimUserDifference Offsets
CAnimUserDifference.m_name = jsonData["CAnimUserDifference"]["m_name"];
CAnimUserDifference.m_nType = jsonData["CAnimUserDifference"]["m_nType"];

// Atribuições para CTransitionUpdateData
// CTransitionUpdateData Offsets
CTransitionUpdateData.m_srcStateIndex = jsonData["CTransitionUpdateData"]["m_srcStateIndex"];
CTransitionUpdateData.m_destStateIndex = jsonData["CTransitionUpdateData"]["m_destStateIndex"];
CTransitionUpdateData.m_nHandshakeMaskToDisableFirst = jsonData["CTransitionUpdateData"]["m_nHandshakeMaskToDisableFirst"];
CTransitionUpdateData.m_bDisabled = jsonData["CTransitionUpdateData"]["m_bDisabled"];

// Atribuições para CBoneConstraintPoseSpaceBone__Input_t
// CBoneConstraintPoseSpaceBone__Input_t Offsets
CBoneConstraintPoseSpaceBone__Input_t.m_inputValue = jsonData["CBoneConstraintPoseSpaceBone__Input_t"]["m_inputValue"];
CBoneConstraintPoseSpaceBone__Input_t.m_outputTransformList = jsonData["CBoneConstraintPoseSpaceBone__Input_t"]["m_outputTransformList"];

// Atribuições para CSeqMultiFetch
// CSeqMultiFetch Offsets
CSeqMultiFetch.m_flags = jsonData["CSeqMultiFetch"]["m_flags"];
CSeqMultiFetch.m_localReferenceArray = jsonData["CSeqMultiFetch"]["m_localReferenceArray"];
CSeqMultiFetch.m_nGroupSize = jsonData["CSeqMultiFetch"]["m_nGroupSize"];
CSeqMultiFetch.m_nLocalPose = jsonData["CSeqMultiFetch"]["m_nLocalPose"];
CSeqMultiFetch.m_poseKeyArray0 = jsonData["CSeqMultiFetch"]["m_poseKeyArray0"];
CSeqMultiFetch.m_poseKeyArray1 = jsonData["CSeqMultiFetch"]["m_poseKeyArray1"];
CSeqMultiFetch.m_nLocalCyclePoseParameter = jsonData["CSeqMultiFetch"]["m_nLocalCyclePoseParameter"];
CSeqMultiFetch.m_bCalculatePoseParameters = jsonData["CSeqMultiFetch"]["m_bCalculatePoseParameters"];
CSeqMultiFetch.m_bFixedBlendWeight = jsonData["CSeqMultiFetch"]["m_bFixedBlendWeight"];
CSeqMultiFetch.m_flFixedBlendWeightVals = jsonData["CSeqMultiFetch"]["m_flFixedBlendWeightVals"];

// Atribuições para CPhysSurfacePropertiesSoundNames
// CPhysSurfacePropertiesSoundNames Offsets
CPhysSurfacePropertiesSoundNames.m_impactSoft = jsonData["CPhysSurfacePropertiesSoundNames"]["m_impactSoft"];
CPhysSurfacePropertiesSoundNames.m_impactHard = jsonData["CPhysSurfacePropertiesSoundNames"]["m_impactHard"];
CPhysSurfacePropertiesSoundNames.m_scrapeSmooth = jsonData["CPhysSurfacePropertiesSoundNames"]["m_scrapeSmooth"];
CPhysSurfacePropertiesSoundNames.m_scrapeRough = jsonData["CPhysSurfacePropertiesSoundNames"]["m_scrapeRough"];
CPhysSurfacePropertiesSoundNames.m_bulletImpact = jsonData["CPhysSurfacePropertiesSoundNames"]["m_bulletImpact"];
CPhysSurfacePropertiesSoundNames.m_rolling = jsonData["CPhysSurfacePropertiesSoundNames"]["m_rolling"];
CPhysSurfacePropertiesSoundNames.m_break = jsonData["CPhysSurfacePropertiesSoundNames"]["m_break"];
CPhysSurfacePropertiesSoundNames.m_strain = jsonData["CPhysSurfacePropertiesSoundNames"]["m_strain"];
CPhysSurfacePropertiesSoundNames.m_meleeImpact = jsonData["CPhysSurfacePropertiesSoundNames"]["m_meleeImpact"];
CPhysSurfacePropertiesSoundNames.m_pushOff = jsonData["CPhysSurfacePropertiesSoundNames"]["m_pushOff"];
CPhysSurfacePropertiesSoundNames.m_skidStop = jsonData["CPhysSurfacePropertiesSoundNames"]["m_skidStop"];

// Atribuições para CAudioAnimTag
// CAudioAnimTag Offsets
CAudioAnimTag.m_clipName = jsonData["CAudioAnimTag"]["m_clipName"];
CAudioAnimTag.m_attachmentName = jsonData["CAudioAnimTag"]["m_attachmentName"];
CAudioAnimTag.m_flVolume = jsonData["CAudioAnimTag"]["m_flVolume"];
CAudioAnimTag.m_bStopWhenTagEnds = jsonData["CAudioAnimTag"]["m_bStopWhenTagEnds"];
CAudioAnimTag.m_bStopWhenGraphEnds = jsonData["CAudioAnimTag"]["m_bStopWhenGraphEnds"];
CAudioAnimTag.m_bPlayOnServer = jsonData["CAudioAnimTag"]["m_bPlayOnServer"];
CAudioAnimTag.m_bPlayOnClient = jsonData["CAudioAnimTag"]["m_bPlayOnClient"];

// Atribuições para CTurnHelperUpdateNode
// CTurnHelperUpdateNode Offsets
CTurnHelperUpdateNode.m_facingTarget = jsonData["CTurnHelperUpdateNode"]["m_facingTarget"];
CTurnHelperUpdateNode.m_turnStartTimeOffset = jsonData["CTurnHelperUpdateNode"]["m_turnStartTimeOffset"];
CTurnHelperUpdateNode.m_turnDuration = jsonData["CTurnHelperUpdateNode"]["m_turnDuration"];
CTurnHelperUpdateNode.m_bMatchChildDuration = jsonData["CTurnHelperUpdateNode"]["m_bMatchChildDuration"];
CTurnHelperUpdateNode.m_manualTurnOffset = jsonData["CTurnHelperUpdateNode"]["m_manualTurnOffset"];
CTurnHelperUpdateNode.m_bUseManualTurnOffset = jsonData["CTurnHelperUpdateNode"]["m_bUseManualTurnOffset"];

// Atribuições para CAnimationGroup
// CAnimationGroup Offsets
CAnimationGroup.m_nFlags = jsonData["CAnimationGroup"]["m_nFlags"];
CAnimationGroup.m_name = jsonData["CAnimationGroup"]["m_name"];
CAnimationGroup.m_localHAnimArray_Handle = jsonData["CAnimationGroup"]["m_localHAnimArray_Handle"];
CAnimationGroup.m_includedGroupArray_Handle = jsonData["CAnimationGroup"]["m_includedGroupArray_Handle"];
CAnimationGroup.m_directHSeqGroup_Handle = jsonData["CAnimationGroup"]["m_directHSeqGroup_Handle"];
CAnimationGroup.m_decodeKey = jsonData["CAnimationGroup"]["m_decodeKey"];
CAnimationGroup.m_szScripts = jsonData["CAnimationGroup"]["m_szScripts"];
CAnimationGroup.m_AdditionalExtRefs = jsonData["CAnimationGroup"]["m_AdditionalExtRefs"];

// Atribuições para NmSyncTrackTime_t
// NmSyncTrackTime_t Offsets
NmSyncTrackTime_t.m_nEventIdx = jsonData["NmSyncTrackTime_t"]["m_nEventIdx"];
NmSyncTrackTime_t.m_percentageThrough = jsonData["NmSyncTrackTime_t"]["m_percentageThrough"];

// Atribuições para CNmClip
// CNmClip Offsets
CNmClip.m_skeleton = jsonData["CNmClip"]["m_skeleton"];
CNmClip.m_nNumFrames = jsonData["CNmClip"]["m_nNumFrames"];
CNmClip.m_flDuration = jsonData["CNmClip"]["m_flDuration"];
CNmClip.m_compressedPoseData = jsonData["CNmClip"]["m_compressedPoseData"];
CNmClip.m_trackCompressionSettings = jsonData["CNmClip"]["m_trackCompressionSettings"];
CNmClip.m_compressedPoseOffsets = jsonData["CNmClip"]["m_compressedPoseOffsets"];
CNmClip.m_syncTrack = jsonData["CNmClip"]["m_syncTrack"];
CNmClip.m_rootMotion = jsonData["CNmClip"]["m_rootMotion"];
CNmClip.m_bIsAdditive = jsonData["CNmClip"]["m_bIsAdditive"];

// Atribuições para CToggleComponentActionUpdater
// CToggleComponentActionUpdater Offsets
CToggleComponentActionUpdater.m_componentID = jsonData["CToggleComponentActionUpdater"]["m_componentID"];
CToggleComponentActionUpdater.m_bSetEnabled = jsonData["CToggleComponentActionUpdater"]["m_bSetEnabled"];

// Atribuições para CNmSpeedScaleBaseNode__CDefinition
// CNmSpeedScaleBaseNode__CDefinition Offsets
CNmSpeedScaleBaseNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmSpeedScaleBaseNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmSpeedScaleBaseNode__CDefinition.m_flDefaultInputValue = jsonData["CNmSpeedScaleBaseNode__CDefinition"]["m_flDefaultInputValue"];

// Atribuições para CAnimationGraphVisualizerPrimitiveBase
// CAnimationGraphVisualizerPrimitiveBase Offsets
CAnimationGraphVisualizerPrimitiveBase.m_Type = jsonData["CAnimationGraphVisualizerPrimitiveBase"]["m_Type"];
CAnimationGraphVisualizerPrimitiveBase.m_OwningAnimNodePaths = jsonData["CAnimationGraphVisualizerPrimitiveBase"]["m_OwningAnimNodePaths"];
CAnimationGraphVisualizerPrimitiveBase.m_nOwningAnimNodePathCount = jsonData["CAnimationGraphVisualizerPrimitiveBase"]["m_nOwningAnimNodePathCount"];

// Atribuições para NmSyncTrackTimeRange_t
// NmSyncTrackTimeRange_t Offsets
NmSyncTrackTimeRange_t.m_startTime = jsonData["NmSyncTrackTimeRange_t"]["m_startTime"];
NmSyncTrackTimeRange_t.m_endTime = jsonData["NmSyncTrackTimeRange_t"]["m_endTime"];

// Atribuições para CAnimationGraphVisualizerText
// CAnimationGraphVisualizerText Offsets
CAnimationGraphVisualizerText.m_vWsPosition = jsonData["CAnimationGraphVisualizerText"]["m_vWsPosition"];
CAnimationGraphVisualizerText.m_Color = jsonData["CAnimationGraphVisualizerText"]["m_Color"];
CAnimationGraphVisualizerText.m_Text = jsonData["CAnimationGraphVisualizerText"]["m_Text"];

// Atribuições para CFootTrajectory
// CFootTrajectory Offsets
CFootTrajectory.m_vOffset = jsonData["CFootTrajectory"]["m_vOffset"];
CFootTrajectory.m_flRotationOffset = jsonData["CFootTrajectory"]["m_flRotationOffset"];
CFootTrajectory.m_flProgression = jsonData["CFootTrajectory"]["m_flProgression"];

// Atribuições para CMotionMatchingUpdateNode
// CMotionMatchingUpdateNode Offsets
CMotionMatchingUpdateNode.m_dataSet = jsonData["CMotionMatchingUpdateNode"]["m_dataSet"];
CMotionMatchingUpdateNode.m_metrics = jsonData["CMotionMatchingUpdateNode"]["m_metrics"];
CMotionMatchingUpdateNode.m_weights = jsonData["CMotionMatchingUpdateNode"]["m_weights"];
CMotionMatchingUpdateNode.m_bSearchEveryTick = jsonData["CMotionMatchingUpdateNode"]["m_bSearchEveryTick"];
CMotionMatchingUpdateNode.m_flSearchInterval = jsonData["CMotionMatchingUpdateNode"]["m_flSearchInterval"];
CMotionMatchingUpdateNode.m_bSearchWhenClipEnds = jsonData["CMotionMatchingUpdateNode"]["m_bSearchWhenClipEnds"];
CMotionMatchingUpdateNode.m_bSearchWhenGoalChanges = jsonData["CMotionMatchingUpdateNode"]["m_bSearchWhenGoalChanges"];
CMotionMatchingUpdateNode.m_blendCurve = jsonData["CMotionMatchingUpdateNode"]["m_blendCurve"];
CMotionMatchingUpdateNode.m_flSampleRate = jsonData["CMotionMatchingUpdateNode"]["m_flSampleRate"];
CMotionMatchingUpdateNode.m_flBlendTime = jsonData["CMotionMatchingUpdateNode"]["m_flBlendTime"];
CMotionMatchingUpdateNode.m_bLockClipWhenWaning = jsonData["CMotionMatchingUpdateNode"]["m_bLockClipWhenWaning"];
CMotionMatchingUpdateNode.m_flSelectionThreshold = jsonData["CMotionMatchingUpdateNode"]["m_flSelectionThreshold"];
CMotionMatchingUpdateNode.m_flReselectionTimeWindow = jsonData["CMotionMatchingUpdateNode"]["m_flReselectionTimeWindow"];
CMotionMatchingUpdateNode.m_bEnableRotationCorrection = jsonData["CMotionMatchingUpdateNode"]["m_bEnableRotationCorrection"];
CMotionMatchingUpdateNode.m_bGoalAssist = jsonData["CMotionMatchingUpdateNode"]["m_bGoalAssist"];
CMotionMatchingUpdateNode.m_flGoalAssistDistance = jsonData["CMotionMatchingUpdateNode"]["m_flGoalAssistDistance"];
CMotionMatchingUpdateNode.m_flGoalAssistTolerance = jsonData["CMotionMatchingUpdateNode"]["m_flGoalAssistTolerance"];
CMotionMatchingUpdateNode.m_distanceScale_Damping = jsonData["CMotionMatchingUpdateNode"]["m_distanceScale_Damping"];
CMotionMatchingUpdateNode.m_flDistanceScale_OuterRadius = jsonData["CMotionMatchingUpdateNode"]["m_flDistanceScale_OuterRadius"];
CMotionMatchingUpdateNode.m_flDistanceScale_InnerRadius = jsonData["CMotionMatchingUpdateNode"]["m_flDistanceScale_InnerRadius"];
CMotionMatchingUpdateNode.m_flDistanceScale_MaxScale = jsonData["CMotionMatchingUpdateNode"]["m_flDistanceScale_MaxScale"];
CMotionMatchingUpdateNode.m_flDistanceScale_MinScale = jsonData["CMotionMatchingUpdateNode"]["m_flDistanceScale_MinScale"];
CMotionMatchingUpdateNode.m_bEnableDistanceScaling = jsonData["CMotionMatchingUpdateNode"]["m_bEnableDistanceScaling"];

// Atribuições para CSeqS1SeqDesc
// CSeqS1SeqDesc Offsets
CSeqS1SeqDesc.m_sName = jsonData["CSeqS1SeqDesc"]["m_sName"];
CSeqS1SeqDesc.m_flags = jsonData["CSeqS1SeqDesc"]["m_flags"];
CSeqS1SeqDesc.m_fetch = jsonData["CSeqS1SeqDesc"]["m_fetch"];
CSeqS1SeqDesc.m_nLocalWeightlist = jsonData["CSeqS1SeqDesc"]["m_nLocalWeightlist"];
CSeqS1SeqDesc.m_autoLayerArray = jsonData["CSeqS1SeqDesc"]["m_autoLayerArray"];
CSeqS1SeqDesc.m_IKLockArray = jsonData["CSeqS1SeqDesc"]["m_IKLockArray"];
CSeqS1SeqDesc.m_transition = jsonData["CSeqS1SeqDesc"]["m_transition"];
CSeqS1SeqDesc.m_SequenceKeys = jsonData["CSeqS1SeqDesc"]["m_SequenceKeys"];
CSeqS1SeqDesc.m_LegacyKeyValueText = jsonData["CSeqS1SeqDesc"]["m_LegacyKeyValueText"];
CSeqS1SeqDesc.m_activityArray = jsonData["CSeqS1SeqDesc"]["m_activityArray"];
CSeqS1SeqDesc.m_footMotion = jsonData["CSeqS1SeqDesc"]["m_footMotion"];

// Atribuições para CFlexController
// CFlexController Offsets
CFlexController.m_szName = jsonData["CFlexController"]["m_szName"];
CFlexController.m_szType = jsonData["CFlexController"]["m_szType"];
CFlexController.min = jsonData["CFlexController"]["min"];
CFlexController.max = jsonData["CFlexController"]["max"];

// Atribuições para SkeletonDemoDb_t
// SkeletonDemoDb_t Offsets
SkeletonDemoDb_t.m_AnimCaptures = jsonData["SkeletonDemoDb_t"]["m_AnimCaptures"];
SkeletonDemoDb_t.m_CameraTrack = jsonData["SkeletonDemoDb_t"]["m_CameraTrack"];
SkeletonDemoDb_t.m_flRecordingTime = jsonData["SkeletonDemoDb_t"]["m_flRecordingTime"];

// Atribuições para CNmStateEventConditionNode__CDefinition
// CNmStateEventConditionNode__CDefinition Offsets
CNmStateEventConditionNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmStateEventConditionNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmStateEventConditionNode__CDefinition.m_eventConditionRules = jsonData["CNmStateEventConditionNode__CDefinition"]["m_eventConditionRules"];
CNmStateEventConditionNode__CDefinition.m_conditions = jsonData["CNmStateEventConditionNode__CDefinition"]["m_conditions"];

// Atribuições para CNmFloatRangeComparisonNode__CDefinition
// CNmFloatRangeComparisonNode__CDefinition Offsets
CNmFloatRangeComparisonNode__CDefinition.m_range = jsonData["CNmFloatRangeComparisonNode__CDefinition"]["m_range"];
CNmFloatRangeComparisonNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmFloatRangeComparisonNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmFloatRangeComparisonNode__CDefinition.m_bIsInclusiveCheck = jsonData["CNmFloatRangeComparisonNode__CDefinition"]["m_bIsInclusiveCheck"];

// Atribuições para CMotionNodeSequence
// CMotionNodeSequence Offsets
CMotionNodeSequence.m_tags = jsonData["CMotionNodeSequence"]["m_tags"];
CMotionNodeSequence.m_hSequence = jsonData["CMotionNodeSequence"]["m_hSequence"];
CMotionNodeSequence.m_flPlaybackSpeed = jsonData["CMotionNodeSequence"]["m_flPlaybackSpeed"];

// Atribuições para CFlexDesc
// CFlexDesc Offsets
CFlexDesc.m_szFacs = jsonData["CFlexDesc"]["m_szFacs"];

// Atribuições para CRenderMesh
// CRenderMesh Offsets
CRenderMesh.m_sceneObjects = jsonData["CRenderMesh"]["m_sceneObjects"];
CRenderMesh.m_constraints = jsonData["CRenderMesh"]["m_constraints"];
CRenderMesh.m_skeleton = jsonData["CRenderMesh"]["m_skeleton"];
CRenderMesh.m_meshDeformParams = jsonData["CRenderMesh"]["m_meshDeformParams"];
CRenderMesh.m_pGroomData = jsonData["CRenderMesh"]["m_pGroomData"];

// Atribuições para CAnimSkeleton
// CAnimSkeleton Offsets
CAnimSkeleton.m_localSpaceTransforms = jsonData["CAnimSkeleton"]["m_localSpaceTransforms"];
CAnimSkeleton.m_modelSpaceTransforms = jsonData["CAnimSkeleton"]["m_modelSpaceTransforms"];
CAnimSkeleton.m_boneNames = jsonData["CAnimSkeleton"]["m_boneNames"];
CAnimSkeleton.m_children = jsonData["CAnimSkeleton"]["m_children"];
CAnimSkeleton.m_parents = jsonData["CAnimSkeleton"]["m_parents"];
CAnimSkeleton.m_feet = jsonData["CAnimSkeleton"]["m_feet"];
CAnimSkeleton.m_morphNames = jsonData["CAnimSkeleton"]["m_morphNames"];
CAnimSkeleton.m_lodBoneCounts = jsonData["CAnimSkeleton"]["m_lodBoneCounts"];

// Atribuições para VPhysics2ShapeDef_t
// VPhysics2ShapeDef_t Offsets
VPhysics2ShapeDef_t.m_spheres = jsonData["VPhysics2ShapeDef_t"]["m_spheres"];
VPhysics2ShapeDef_t.m_capsules = jsonData["VPhysics2ShapeDef_t"]["m_capsules"];
VPhysics2ShapeDef_t.m_hulls = jsonData["VPhysics2ShapeDef_t"]["m_hulls"];
VPhysics2ShapeDef_t.m_meshes = jsonData["VPhysics2ShapeDef_t"]["m_meshes"];
VPhysics2ShapeDef_t.m_CollisionAttributeIndices = jsonData["VPhysics2ShapeDef_t"]["m_CollisionAttributeIndices"];

// Atribuições para CNmFloatCurveNode__CDefinition
// CNmFloatCurveNode__CDefinition Offsets
CNmFloatCurveNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmFloatCurveNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmFloatCurveNode__CDefinition.m_curve = jsonData["CNmFloatCurveNode__CDefinition"]["m_curve"];

// Atribuições para CAnimationGraphVisualizerAxis
// CAnimationGraphVisualizerAxis Offsets
CAnimationGraphVisualizerAxis.m_xWsTransform = jsonData["CAnimationGraphVisualizerAxis"]["m_xWsTransform"];
CAnimationGraphVisualizerAxis.m_flAxisSize = jsonData["CAnimationGraphVisualizerAxis"]["m_flAxisSize"];

// Atribuições para CTwistConstraint
// CTwistConstraint Offsets
CTwistConstraint.m_bInverse = jsonData["CTwistConstraint"]["m_bInverse"];
CTwistConstraint.m_qParentBindRotation = jsonData["CTwistConstraint"]["m_qParentBindRotation"];
CTwistConstraint.m_qChildBindRotation = jsonData["CTwistConstraint"]["m_qChildBindRotation"];

// Atribuições para ModelBoneFlexDriverControl_t
// ModelBoneFlexDriverControl_t Offsets
ModelBoneFlexDriverControl_t.m_nBoneComponent = jsonData["ModelBoneFlexDriverControl_t"]["m_nBoneComponent"];
ModelBoneFlexDriverControl_t.m_flexController = jsonData["ModelBoneFlexDriverControl_t"]["m_flexController"];
ModelBoneFlexDriverControl_t.m_flexControllerToken = jsonData["ModelBoneFlexDriverControl_t"]["m_flexControllerToken"];
ModelBoneFlexDriverControl_t.m_flMin = jsonData["ModelBoneFlexDriverControl_t"]["m_flMin"];
ModelBoneFlexDriverControl_t.m_flMax = jsonData["ModelBoneFlexDriverControl_t"]["m_flMax"];

// Atribuições para CSeqCmdLayer
// CSeqCmdLayer Offsets
CSeqCmdLayer.m_cmd = jsonData["CSeqCmdLayer"]["m_cmd"];
CSeqCmdLayer.m_nLocalReference = jsonData["CSeqCmdLayer"]["m_nLocalReference"];
CSeqCmdLayer.m_nLocalBonemask = jsonData["CSeqCmdLayer"]["m_nLocalBonemask"];
CSeqCmdLayer.m_nDstResult = jsonData["CSeqCmdLayer"]["m_nDstResult"];
CSeqCmdLayer.m_nSrcResult = jsonData["CSeqCmdLayer"]["m_nSrcResult"];
CSeqCmdLayer.m_bSpline = jsonData["CSeqCmdLayer"]["m_bSpline"];
CSeqCmdLayer.m_flVar1 = jsonData["CSeqCmdLayer"]["m_flVar1"];
CSeqCmdLayer.m_flVar2 = jsonData["CSeqCmdLayer"]["m_flVar2"];
CSeqCmdLayer.m_nLineNumber = jsonData["CSeqCmdLayer"]["m_nLineNumber"];

// Atribuições para FootPinningPoseOpFixedData_t
// FootPinningPoseOpFixedData_t Offsets
FootPinningPoseOpFixedData_t.m_footInfo = jsonData["FootPinningPoseOpFixedData_t"]["m_footInfo"];
FootPinningPoseOpFixedData_t.m_flBlendTime = jsonData["FootPinningPoseOpFixedData_t"]["m_flBlendTime"];
FootPinningPoseOpFixedData_t.m_flLockBreakDistance = jsonData["FootPinningPoseOpFixedData_t"]["m_flLockBreakDistance"];
FootPinningPoseOpFixedData_t.m_flMaxLegTwist = jsonData["FootPinningPoseOpFixedData_t"]["m_flMaxLegTwist"];
FootPinningPoseOpFixedData_t.m_nHipBoneIndex = jsonData["FootPinningPoseOpFixedData_t"]["m_nHipBoneIndex"];
FootPinningPoseOpFixedData_t.m_bApplyLegTwistLimits = jsonData["FootPinningPoseOpFixedData_t"]["m_bApplyLegTwistLimits"];
FootPinningPoseOpFixedData_t.m_bApplyFootRotationLimits = jsonData["FootPinningPoseOpFixedData_t"]["m_bApplyFootRotationLimits"];

// Atribuições para RenderSkeletonBone_t
// RenderSkeletonBone_t Offsets
RenderSkeletonBone_t.m_boneName = jsonData["RenderSkeletonBone_t"]["m_boneName"];
RenderSkeletonBone_t.m_parentName = jsonData["RenderSkeletonBone_t"]["m_parentName"];
RenderSkeletonBone_t.m_invBindPose = jsonData["RenderSkeletonBone_t"]["m_invBindPose"];
RenderSkeletonBone_t.m_bbox = jsonData["RenderSkeletonBone_t"]["m_bbox"];
RenderSkeletonBone_t.m_flSphereRadius = jsonData["RenderSkeletonBone_t"]["m_flSphereRadius"];

// Atribuições para CDistanceRemainingMetricEvaluator
// CDistanceRemainingMetricEvaluator Offsets
CDistanceRemainingMetricEvaluator.m_flMaxDistance = jsonData["CDistanceRemainingMetricEvaluator"]["m_flMaxDistance"];
CDistanceRemainingMetricEvaluator.m_flMinDistance = jsonData["CDistanceRemainingMetricEvaluator"]["m_flMinDistance"];
CDistanceRemainingMetricEvaluator.m_flStartGoalFilterDistance = jsonData["CDistanceRemainingMetricEvaluator"]["m_flStartGoalFilterDistance"];
CDistanceRemainingMetricEvaluator.m_flMaxGoalOvershootScale = jsonData["CDistanceRemainingMetricEvaluator"]["m_flMaxGoalOvershootScale"];
CDistanceRemainingMetricEvaluator.m_bFilterFixedMinDistance = jsonData["CDistanceRemainingMetricEvaluator"]["m_bFilterFixedMinDistance"];
CDistanceRemainingMetricEvaluator.m_bFilterGoalDistance = jsonData["CDistanceRemainingMetricEvaluator"]["m_bFilterGoalDistance"];
CDistanceRemainingMetricEvaluator.m_bFilterGoalOvershoot = jsonData["CDistanceRemainingMetricEvaluator"]["m_bFilterGoalOvershoot"];

// Atribuições para CDirectPlaybackUpdateNode
// CDirectPlaybackUpdateNode Offsets
CDirectPlaybackUpdateNode.m_bFinishEarly = jsonData["CDirectPlaybackUpdateNode"]["m_bFinishEarly"];
CDirectPlaybackUpdateNode.m_bResetOnFinish = jsonData["CDirectPlaybackUpdateNode"]["m_bResetOnFinish"];
CDirectPlaybackUpdateNode.m_allTags = jsonData["CDirectPlaybackUpdateNode"]["m_allTags"];

// Atribuições para CNmIDEvent
// CNmIDEvent Offsets
CNmIDEvent.m_ID = jsonData["CNmIDEvent"]["m_ID"];

// Atribuições para CFlexRule
// CFlexRule Offsets
CFlexRule.m_nFlex = jsonData["CFlexRule"]["m_nFlex"];
CFlexRule.m_FlexOps = jsonData["CFlexRule"]["m_FlexOps"];

// Atribuições para ScriptInfo_t
// ScriptInfo_t Offsets
ScriptInfo_t.m_code = jsonData["ScriptInfo_t"]["m_code"];
ScriptInfo_t.m_paramsModified = jsonData["ScriptInfo_t"]["m_paramsModified"];
ScriptInfo_t.m_proxyReadParams = jsonData["ScriptInfo_t"]["m_proxyReadParams"];
ScriptInfo_t.m_proxyWriteParams = jsonData["ScriptInfo_t"]["m_proxyWriteParams"];
ScriptInfo_t.m_eScriptType = jsonData["ScriptInfo_t"]["m_eScriptType"];

// Atribuições para CRenderGroom
// CRenderGroom Offsets
CRenderGroom.m_hairs = jsonData["CRenderGroom"]["m_hairs"];
CRenderGroom.m_hairPositionOffsets = jsonData["CRenderGroom"]["m_hairPositionOffsets"];
CRenderGroom.m_hSimParamsMat = jsonData["CRenderGroom"]["m_hSimParamsMat"];
CRenderGroom.m_nSegmentsPerHairStrand = jsonData["CRenderGroom"]["m_nSegmentsPerHairStrand"];
CRenderGroom.m_nGuideHairCount = jsonData["CRenderGroom"]["m_nGuideHairCount"];
CRenderGroom.m_nHairCount = jsonData["CRenderGroom"]["m_nHairCount"];
CRenderGroom.m_nGroomGroupID = jsonData["CRenderGroom"]["m_nGroomGroupID"];
CRenderGroom.m_nAttachBoneIdx = jsonData["CRenderGroom"]["m_nAttachBoneIdx"];
CRenderGroom.m_nAttachMeshIdx = jsonData["CRenderGroom"]["m_nAttachMeshIdx"];
CRenderGroom.m_nAttachMeshDrawCallIdx = jsonData["CRenderGroom"]["m_nAttachMeshDrawCallIdx"];
CRenderGroom.m_bEnableSimulation = jsonData["CRenderGroom"]["m_bEnableSimulation"];

// Atribuições para CNmParameterizedClipSelectorNode__CDefinition
// CNmParameterizedClipSelectorNode__CDefinition Offsets
CNmParameterizedClipSelectorNode__CDefinition.m_optionNodeIndices = jsonData["CNmParameterizedClipSelectorNode__CDefinition"]["m_optionNodeIndices"];
CNmParameterizedClipSelectorNode__CDefinition.m_parameterNodeIdx = jsonData["CNmParameterizedClipSelectorNode__CDefinition"]["m_parameterNodeIdx"];

// Atribuições para CTiltTwistConstraint
// CTiltTwistConstraint Offsets
CTiltTwistConstraint.m_nTargetAxis = jsonData["CTiltTwistConstraint"]["m_nTargetAxis"];
CTiltTwistConstraint.m_nSlaveAxis = jsonData["CTiltTwistConstraint"]["m_nSlaveAxis"];

// Atribuições para CVPhysXSurfacePropertiesList
// CVPhysXSurfacePropertiesList Offsets
CVPhysXSurfacePropertiesList.m_surfacePropertiesList = jsonData["CVPhysXSurfacePropertiesList"]["m_surfacePropertiesList"];

// Atribuições para RenderHairStrandInfo_t
// RenderHairStrandInfo_t Offsets
RenderHairStrandInfo_t.m_nGuideHairIndices_nSurfaceTriIndex = jsonData["RenderHairStrandInfo_t"]["m_nGuideHairIndices_nSurfaceTriIndex"];
RenderHairStrandInfo_t.m_vGuideBary_vBaseBary = jsonData["RenderHairStrandInfo_t"]["m_vGuideBary_vBaseBary"];
RenderHairStrandInfo_t.m_vRootOffset_flLengthScale = jsonData["RenderHairStrandInfo_t"]["m_vRootOffset_flLengthScale"];
RenderHairStrandInfo_t.m_nPackedBaseUv = jsonData["RenderHairStrandInfo_t"]["m_nPackedBaseUv"];
RenderHairStrandInfo_t.m_nPackedSurfaceNormalOs = jsonData["RenderHairStrandInfo_t"]["m_nPackedSurfaceNormalOs"];
RenderHairStrandInfo_t.m_nPackedSurfaceTangentOs = jsonData["RenderHairStrandInfo_t"]["m_nPackedSurfaceTangentOs"];

// Atribuições para CCycleControlClipUpdateNode
// CCycleControlClipUpdateNode Offsets
CCycleControlClipUpdateNode.m_tags = jsonData["CCycleControlClipUpdateNode"]["m_tags"];
CCycleControlClipUpdateNode.m_hSequence = jsonData["CCycleControlClipUpdateNode"]["m_hSequence"];
CCycleControlClipUpdateNode.m_duration = jsonData["CCycleControlClipUpdateNode"]["m_duration"];
CCycleControlClipUpdateNode.m_valueSource = jsonData["CCycleControlClipUpdateNode"]["m_valueSource"];
CCycleControlClipUpdateNode.m_paramIndex = jsonData["CCycleControlClipUpdateNode"]["m_paramIndex"];

// Atribuições para CNmTargetPointNode__CDefinition
// CNmTargetPointNode__CDefinition Offsets
CNmTargetPointNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmTargetPointNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmTargetPointNode__CDefinition.m_bIsWorldSpaceTarget = jsonData["CNmTargetPointNode__CDefinition"]["m_bIsWorldSpaceTarget"];

// Atribuições para CStaticPoseCache
// CStaticPoseCache Offsets
CStaticPoseCache.m_poses = jsonData["CStaticPoseCache"]["m_poses"];
CStaticPoseCache.m_nBoneCount = jsonData["CStaticPoseCache"]["m_nBoneCount"];
CStaticPoseCache.m_nMorphCount = jsonData["CStaticPoseCache"]["m_nMorphCount"];

// Atribuições para LookAtOpFixedSettings_t
// LookAtOpFixedSettings_t Offsets
LookAtOpFixedSettings_t.m_attachment = jsonData["LookAtOpFixedSettings_t"]["m_attachment"];
LookAtOpFixedSettings_t.m_damping = jsonData["LookAtOpFixedSettings_t"]["m_damping"];
LookAtOpFixedSettings_t.m_bones = jsonData["LookAtOpFixedSettings_t"]["m_bones"];
LookAtOpFixedSettings_t.m_flYawLimit = jsonData["LookAtOpFixedSettings_t"]["m_flYawLimit"];
LookAtOpFixedSettings_t.m_flPitchLimit = jsonData["LookAtOpFixedSettings_t"]["m_flPitchLimit"];
LookAtOpFixedSettings_t.m_flHysteresisInnerAngle = jsonData["LookAtOpFixedSettings_t"]["m_flHysteresisInnerAngle"];
LookAtOpFixedSettings_t.m_flHysteresisOuterAngle = jsonData["LookAtOpFixedSettings_t"]["m_flHysteresisOuterAngle"];
LookAtOpFixedSettings_t.m_bRotateYawForward = jsonData["LookAtOpFixedSettings_t"]["m_bRotateYawForward"];
LookAtOpFixedSettings_t.m_bMaintainUpDirection = jsonData["LookAtOpFixedSettings_t"]["m_bMaintainUpDirection"];
LookAtOpFixedSettings_t.m_bTargetIsPosition = jsonData["LookAtOpFixedSettings_t"]["m_bTargetIsPosition"];
LookAtOpFixedSettings_t.m_bUseHysteresis = jsonData["LookAtOpFixedSettings_t"]["m_bUseHysteresis"];

// Atribuições para CAnimGraphSettingsManager
// CAnimGraphSettingsManager Offsets
CAnimGraphSettingsManager.m_settingsGroups = jsonData["CAnimGraphSettingsManager"]["m_settingsGroups"];

// Atribuições para CAnimGraphModelBinding
// CAnimGraphModelBinding Offsets
CAnimGraphModelBinding.m_modelName = jsonData["CAnimGraphModelBinding"]["m_modelName"];
CAnimGraphModelBinding.m_pSharedData = jsonData["CAnimGraphModelBinding"]["m_pSharedData"];

// Atribuições para CBoneConstraintPoseSpaceBone
// CBoneConstraintPoseSpaceBone Offsets
CBoneConstraintPoseSpaceBone.m_inputList = jsonData["CBoneConstraintPoseSpaceBone"]["m_inputList"];

// Atribuições para MotionBlendItem
// MotionBlendItem Offsets
MotionBlendItem.m_pChild = jsonData["MotionBlendItem"]["m_pChild"];
MotionBlendItem.m_flKeyValue = jsonData["MotionBlendItem"]["m_flKeyValue"];

// Atribuições para CBoneConstraintPoseSpaceMorph
// CBoneConstraintPoseSpaceMorph Offsets
CBoneConstraintPoseSpaceMorph.m_sBoneName = jsonData["CBoneConstraintPoseSpaceMorph"]["m_sBoneName"];
CBoneConstraintPoseSpaceMorph.m_sAttachmentName = jsonData["CBoneConstraintPoseSpaceMorph"]["m_sAttachmentName"];
CBoneConstraintPoseSpaceMorph.m_outputMorph = jsonData["CBoneConstraintPoseSpaceMorph"]["m_outputMorph"];
CBoneConstraintPoseSpaceMorph.m_inputList = jsonData["CBoneConstraintPoseSpaceMorph"]["m_inputList"];
CBoneConstraintPoseSpaceMorph.m_bClamp = jsonData["CBoneConstraintPoseSpaceMorph"]["m_bClamp"];

// Atribuições para CFloatAnimParameter
// CFloatAnimParameter Offsets
CFloatAnimParameter.m_fDefaultValue = jsonData["CFloatAnimParameter"]["m_fDefaultValue"];
CFloatAnimParameter.m_fMinValue = jsonData["CFloatAnimParameter"]["m_fMinValue"];
CFloatAnimParameter.m_fMaxValue = jsonData["CFloatAnimParameter"]["m_fMaxValue"];
CFloatAnimParameter.m_bInterpolate = jsonData["CFloatAnimParameter"]["m_bInterpolate"];

// Atribuições para CStateActionUpdater
// CStateActionUpdater Offsets
CStateActionUpdater.m_pAction = jsonData["CStateActionUpdater"]["m_pAction"];
CStateActionUpdater.m_eBehavior = jsonData["CStateActionUpdater"]["m_eBehavior"];

// Atribuições para CPlayerInputAnimMotorUpdater
// CPlayerInputAnimMotorUpdater Offsets
CPlayerInputAnimMotorUpdater.m_sampleTimes = jsonData["CPlayerInputAnimMotorUpdater"]["m_sampleTimes"];
CPlayerInputAnimMotorUpdater.m_flSpringConstant = jsonData["CPlayerInputAnimMotorUpdater"]["m_flSpringConstant"];
CPlayerInputAnimMotorUpdater.m_flAnticipationDistance = jsonData["CPlayerInputAnimMotorUpdater"]["m_flAnticipationDistance"];
CPlayerInputAnimMotorUpdater.m_hAnticipationPosParam = jsonData["CPlayerInputAnimMotorUpdater"]["m_hAnticipationPosParam"];
CPlayerInputAnimMotorUpdater.m_hAnticipationHeadingParam = jsonData["CPlayerInputAnimMotorUpdater"]["m_hAnticipationHeadingParam"];
CPlayerInputAnimMotorUpdater.m_bUseAcceleration = jsonData["CPlayerInputAnimMotorUpdater"]["m_bUseAcceleration"];

// Atribuições para CRenderSkeleton
// CRenderSkeleton Offsets
CRenderSkeleton.m_bones = jsonData["CRenderSkeleton"]["m_bones"];
CRenderSkeleton.m_boneParents = jsonData["CRenderSkeleton"]["m_boneParents"];
CRenderSkeleton.m_nBoneWeightCount = jsonData["CRenderSkeleton"]["m_nBoneWeightCount"];

// Atribuições para CSeqIKLock
// CSeqIKLock Offsets
CSeqIKLock.m_flPosWeight = jsonData["CSeqIKLock"]["m_flPosWeight"];
CSeqIKLock.m_flAngleWeight = jsonData["CSeqIKLock"]["m_flAngleWeight"];
CSeqIKLock.m_nLocalBone = jsonData["CSeqIKLock"]["m_nLocalBone"];
CSeqIKLock.m_bBonesOrientedAlongPositiveX = jsonData["CSeqIKLock"]["m_bBonesOrientedAlongPositiveX"];

// Atribuições para CAnimParamHandleMap
// CAnimParamHandleMap Offsets
CAnimParamHandleMap.m_list = jsonData["CAnimParamHandleMap"]["m_list"];

// Atribuições para CNmFloatClampNode__CDefinition
// CNmFloatClampNode__CDefinition Offsets
CNmFloatClampNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmFloatClampNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmFloatClampNode__CDefinition.m_clampRange = jsonData["CNmFloatClampNode__CDefinition"]["m_clampRange"];

// Atribuições para CAnimDesc
// CAnimDesc Offsets
CAnimDesc.m_name = jsonData["CAnimDesc"]["m_name"];
CAnimDesc.m_flags = jsonData["CAnimDesc"]["m_flags"];
CAnimDesc.fps = jsonData["CAnimDesc"]["fps"];
CAnimDesc.m_Data = jsonData["CAnimDesc"]["m_Data"];
CAnimDesc.m_movementArray = jsonData["CAnimDesc"]["m_movementArray"];
CAnimDesc.m_xInitialOffset = jsonData["CAnimDesc"]["m_xInitialOffset"];
CAnimDesc.m_eventArray = jsonData["CAnimDesc"]["m_eventArray"];
CAnimDesc.m_activityArray = jsonData["CAnimDesc"]["m_activityArray"];
CAnimDesc.m_hierarchyArray = jsonData["CAnimDesc"]["m_hierarchyArray"];
CAnimDesc.framestalltime = jsonData["CAnimDesc"]["framestalltime"];
CAnimDesc.m_vecRootMin = jsonData["CAnimDesc"]["m_vecRootMin"];
CAnimDesc.m_vecRootMax = jsonData["CAnimDesc"]["m_vecRootMax"];
CAnimDesc.m_vecBoneWorldMin = jsonData["CAnimDesc"]["m_vecBoneWorldMin"];
CAnimDesc.m_vecBoneWorldMax = jsonData["CAnimDesc"]["m_vecBoneWorldMax"];
CAnimDesc.m_sequenceParams = jsonData["CAnimDesc"]["m_sequenceParams"];

// Atribuições para CNmRootMotionOverrideNode__CDefinition
// CNmRootMotionOverrideNode__CDefinition Offsets
CNmRootMotionOverrideNode__CDefinition.m_desiredMovingVelocityNodeIdx = jsonData["CNmRootMotionOverrideNode__CDefinition"]["m_desiredMovingVelocityNodeIdx"];
CNmRootMotionOverrideNode__CDefinition.m_desiredFacingDirectionNodeIdx = jsonData["CNmRootMotionOverrideNode__CDefinition"]["m_desiredFacingDirectionNodeIdx"];
CNmRootMotionOverrideNode__CDefinition.m_linearVelocityLimitNodeIdx = jsonData["CNmRootMotionOverrideNode__CDefinition"]["m_linearVelocityLimitNodeIdx"];
CNmRootMotionOverrideNode__CDefinition.m_angularVelocityLimitNodeIdx = jsonData["CNmRootMotionOverrideNode__CDefinition"]["m_angularVelocityLimitNodeIdx"];
CNmRootMotionOverrideNode__CDefinition.m_maxLinearVelocity = jsonData["CNmRootMotionOverrideNode__CDefinition"]["m_maxLinearVelocity"];
CNmRootMotionOverrideNode__CDefinition.m_maxAngularVelocityRadians = jsonData["CNmRootMotionOverrideNode__CDefinition"]["m_maxAngularVelocityRadians"];
CNmRootMotionOverrideNode__CDefinition.m_overrideFlags = jsonData["CNmRootMotionOverrideNode__CDefinition"]["m_overrideFlags"];

// Atribuições para CNmTargetWarpNode__CDefinition
// CNmTargetWarpNode__CDefinition Offsets
CNmTargetWarpNode__CDefinition.m_nClipReferenceNodeIdx = jsonData["CNmTargetWarpNode__CDefinition"]["m_nClipReferenceNodeIdx"];
CNmTargetWarpNode__CDefinition.m_nTargetValueNodeIdx = jsonData["CNmTargetWarpNode__CDefinition"]["m_nTargetValueNodeIdx"];
CNmTargetWarpNode__CDefinition.m_samplingMode = jsonData["CNmTargetWarpNode__CDefinition"]["m_samplingMode"];
CNmTargetWarpNode__CDefinition.m_bAllowTargetUpdate = jsonData["CNmTargetWarpNode__CDefinition"]["m_bAllowTargetUpdate"];
CNmTargetWarpNode__CDefinition.m_flSamplingPositionErrorThresholdSq = jsonData["CNmTargetWarpNode__CDefinition"]["m_flSamplingPositionErrorThresholdSq"];
CNmTargetWarpNode__CDefinition.m_flMaxTangentLength = jsonData["CNmTargetWarpNode__CDefinition"]["m_flMaxTangentLength"];
CNmTargetWarpNode__CDefinition.m_flLerpFallbackDistanceThreshold = jsonData["CNmTargetWarpNode__CDefinition"]["m_flLerpFallbackDistanceThreshold"];
CNmTargetWarpNode__CDefinition.m_flTargetUpdateDistanceThreshold = jsonData["CNmTargetWarpNode__CDefinition"]["m_flTargetUpdateDistanceThreshold"];
CNmTargetWarpNode__CDefinition.m_flTargetUpdateAngleThresholdRadians = jsonData["CNmTargetWarpNode__CDefinition"]["m_flTargetUpdateAngleThresholdRadians"];

// Atribuições para CPhysSurfacePropertiesPhysics
// CPhysSurfacePropertiesPhysics Offsets
CPhysSurfacePropertiesPhysics.m_friction = jsonData["CPhysSurfacePropertiesPhysics"]["m_friction"];
CPhysSurfacePropertiesPhysics.m_elasticity = jsonData["CPhysSurfacePropertiesPhysics"]["m_elasticity"];
CPhysSurfacePropertiesPhysics.m_density = jsonData["CPhysSurfacePropertiesPhysics"]["m_density"];
CPhysSurfacePropertiesPhysics.m_thickness = jsonData["CPhysSurfacePropertiesPhysics"]["m_thickness"];
CPhysSurfacePropertiesPhysics.m_softContactFrequency = jsonData["CPhysSurfacePropertiesPhysics"]["m_softContactFrequency"];
CPhysSurfacePropertiesPhysics.m_softContactDampingRatio = jsonData["CPhysSurfacePropertiesPhysics"]["m_softContactDampingRatio"];
CPhysSurfacePropertiesPhysics.m_wheelDrag = jsonData["CPhysSurfacePropertiesPhysics"]["m_wheelDrag"];
CPhysSurfacePropertiesPhysics.m_heatConductivity = jsonData["CPhysSurfacePropertiesPhysics"]["m_heatConductivity"];
CPhysSurfacePropertiesPhysics.m_flashpoint = jsonData["CPhysSurfacePropertiesPhysics"]["m_flashpoint"];

// Atribuições para CAnimationGraphVisualizerPie
// CAnimationGraphVisualizerPie Offsets
CAnimationGraphVisualizerPie.m_vWsCenter = jsonData["CAnimationGraphVisualizerPie"]["m_vWsCenter"];
CAnimationGraphVisualizerPie.m_vWsStart = jsonData["CAnimationGraphVisualizerPie"]["m_vWsStart"];
CAnimationGraphVisualizerPie.m_vWsEnd = jsonData["CAnimationGraphVisualizerPie"]["m_vWsEnd"];
CAnimationGraphVisualizerPie.m_Color = jsonData["CAnimationGraphVisualizerPie"]["m_Color"];

// Atribuições para CBoneConstraintDotToMorph
// CBoneConstraintDotToMorph Offsets
CBoneConstraintDotToMorph.m_sBoneName = jsonData["CBoneConstraintDotToMorph"]["m_sBoneName"];
CBoneConstraintDotToMorph.m_sTargetBoneName = jsonData["CBoneConstraintDotToMorph"]["m_sTargetBoneName"];
CBoneConstraintDotToMorph.m_sMorphChannelName = jsonData["CBoneConstraintDotToMorph"]["m_sMorphChannelName"];
CBoneConstraintDotToMorph.m_flRemap = jsonData["CBoneConstraintDotToMorph"]["m_flRemap"];

// Atribuições para TraceSettings_t
// TraceSettings_t Offsets
TraceSettings_t.m_flTraceHeight = jsonData["TraceSettings_t"]["m_flTraceHeight"];
TraceSettings_t.m_flTraceRadius = jsonData["TraceSettings_t"]["m_flTraceRadius"];

// Atribuições para ParamSpanSample_t
// ParamSpanSample_t Offsets
ParamSpanSample_t.m_value = jsonData["ParamSpanSample_t"]["m_value"];
ParamSpanSample_t.m_flCycle = jsonData["ParamSpanSample_t"]["m_flCycle"];

// Atribuições para VPhysXConstraintParams_t
// VPhysXConstraintParams_t Offsets
VPhysXConstraintParams_t.m_nType = jsonData["VPhysXConstraintParams_t"]["m_nType"];
VPhysXConstraintParams_t.m_nTranslateMotion = jsonData["VPhysXConstraintParams_t"]["m_nTranslateMotion"];
VPhysXConstraintParams_t.m_nRotateMotion = jsonData["VPhysXConstraintParams_t"]["m_nRotateMotion"];
VPhysXConstraintParams_t.m_nFlags = jsonData["VPhysXConstraintParams_t"]["m_nFlags"];
VPhysXConstraintParams_t.m_anchor = jsonData["VPhysXConstraintParams_t"]["m_anchor"];
VPhysXConstraintParams_t.m_axes = jsonData["VPhysXConstraintParams_t"]["m_axes"];
VPhysXConstraintParams_t.m_maxForce = jsonData["VPhysXConstraintParams_t"]["m_maxForce"];
VPhysXConstraintParams_t.m_maxTorque = jsonData["VPhysXConstraintParams_t"]["m_maxTorque"];
VPhysXConstraintParams_t.m_linearLimitValue = jsonData["VPhysXConstraintParams_t"]["m_linearLimitValue"];
VPhysXConstraintParams_t.m_linearLimitRestitution = jsonData["VPhysXConstraintParams_t"]["m_linearLimitRestitution"];
VPhysXConstraintParams_t.m_linearLimitSpring = jsonData["VPhysXConstraintParams_t"]["m_linearLimitSpring"];
VPhysXConstraintParams_t.m_linearLimitDamping = jsonData["VPhysXConstraintParams_t"]["m_linearLimitDamping"];
VPhysXConstraintParams_t.m_twistLowLimitValue = jsonData["VPhysXConstraintParams_t"]["m_twistLowLimitValue"];
VPhysXConstraintParams_t.m_twistLowLimitRestitution = jsonData["VPhysXConstraintParams_t"]["m_twistLowLimitRestitution"];
VPhysXConstraintParams_t.m_twistLowLimitSpring = jsonData["VPhysXConstraintParams_t"]["m_twistLowLimitSpring"];
VPhysXConstraintParams_t.m_twistLowLimitDamping = jsonData["VPhysXConstraintParams_t"]["m_twistLowLimitDamping"];
VPhysXConstraintParams_t.m_twistHighLimitValue = jsonData["VPhysXConstraintParams_t"]["m_twistHighLimitValue"];
VPhysXConstraintParams_t.m_twistHighLimitRestitution = jsonData["VPhysXConstraintParams_t"]["m_twistHighLimitRestitution"];
VPhysXConstraintParams_t.m_twistHighLimitSpring = jsonData["VPhysXConstraintParams_t"]["m_twistHighLimitSpring"];
VPhysXConstraintParams_t.m_twistHighLimitDamping = jsonData["VPhysXConstraintParams_t"]["m_twistHighLimitDamping"];
VPhysXConstraintParams_t.m_swing1LimitValue = jsonData["VPhysXConstraintParams_t"]["m_swing1LimitValue"];
VPhysXConstraintParams_t.m_swing1LimitRestitution = jsonData["VPhysXConstraintParams_t"]["m_swing1LimitRestitution"];
VPhysXConstraintParams_t.m_swing1LimitSpring = jsonData["VPhysXConstraintParams_t"]["m_swing1LimitSpring"];
VPhysXConstraintParams_t.m_swing1LimitDamping = jsonData["VPhysXConstraintParams_t"]["m_swing1LimitDamping"];
VPhysXConstraintParams_t.m_swing2LimitValue = jsonData["VPhysXConstraintParams_t"]["m_swing2LimitValue"];
VPhysXConstraintParams_t.m_swing2LimitRestitution = jsonData["VPhysXConstraintParams_t"]["m_swing2LimitRestitution"];
VPhysXConstraintParams_t.m_swing2LimitSpring = jsonData["VPhysXConstraintParams_t"]["m_swing2LimitSpring"];
VPhysXConstraintParams_t.m_swing2LimitDamping = jsonData["VPhysXConstraintParams_t"]["m_swing2LimitDamping"];
VPhysXConstraintParams_t.m_goalPosition = jsonData["VPhysXConstraintParams_t"]["m_goalPosition"];
VPhysXConstraintParams_t.m_goalOrientation = jsonData["VPhysXConstraintParams_t"]["m_goalOrientation"];
VPhysXConstraintParams_t.m_goalAngularVelocity = jsonData["VPhysXConstraintParams_t"]["m_goalAngularVelocity"];
VPhysXConstraintParams_t.m_driveSpringX = jsonData["VPhysXConstraintParams_t"]["m_driveSpringX"];
VPhysXConstraintParams_t.m_driveSpringY = jsonData["VPhysXConstraintParams_t"]["m_driveSpringY"];
VPhysXConstraintParams_t.m_driveSpringZ = jsonData["VPhysXConstraintParams_t"]["m_driveSpringZ"];
VPhysXConstraintParams_t.m_driveDampingX = jsonData["VPhysXConstraintParams_t"]["m_driveDampingX"];
VPhysXConstraintParams_t.m_driveDampingY = jsonData["VPhysXConstraintParams_t"]["m_driveDampingY"];
VPhysXConstraintParams_t.m_driveDampingZ = jsonData["VPhysXConstraintParams_t"]["m_driveDampingZ"];
VPhysXConstraintParams_t.m_driveSpringTwist = jsonData["VPhysXConstraintParams_t"]["m_driveSpringTwist"];
VPhysXConstraintParams_t.m_driveSpringSwing = jsonData["VPhysXConstraintParams_t"]["m_driveSpringSwing"];
VPhysXConstraintParams_t.m_driveSpringSlerp = jsonData["VPhysXConstraintParams_t"]["m_driveSpringSlerp"];
VPhysXConstraintParams_t.m_driveDampingTwist = jsonData["VPhysXConstraintParams_t"]["m_driveDampingTwist"];
VPhysXConstraintParams_t.m_driveDampingSwing = jsonData["VPhysXConstraintParams_t"]["m_driveDampingSwing"];
VPhysXConstraintParams_t.m_driveDampingSlerp = jsonData["VPhysXConstraintParams_t"]["m_driveDampingSlerp"];
VPhysXConstraintParams_t.m_solverIterationCount = jsonData["VPhysXConstraintParams_t"]["m_solverIterationCount"];
VPhysXConstraintParams_t.m_projectionLinearTolerance = jsonData["VPhysXConstraintParams_t"]["m_projectionLinearTolerance"];
VPhysXConstraintParams_t.m_projectionAngularTolerance = jsonData["VPhysXConstraintParams_t"]["m_projectionAngularTolerance"];

// Atribuições para CNmFloatComparisonNode__CDefinition
// CNmFloatComparisonNode__CDefinition Offsets
CNmFloatComparisonNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmFloatComparisonNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmFloatComparisonNode__CDefinition.m_nComparandValueNodeIdx = jsonData["CNmFloatComparisonNode__CDefinition"]["m_nComparandValueNodeIdx"];
CNmFloatComparisonNode__CDefinition.m_comparison = jsonData["CNmFloatComparisonNode__CDefinition"]["m_comparison"];
CNmFloatComparisonNode__CDefinition.m_flEpsilon = jsonData["CNmFloatComparisonNode__CDefinition"]["m_flEpsilon"];
CNmFloatComparisonNode__CDefinition.m_flComparisonValue = jsonData["CNmFloatComparisonNode__CDefinition"]["m_flComparisonValue"];

// Atribuições para CStateUpdateData
// CStateUpdateData Offsets
CStateUpdateData.m_name = jsonData["CStateUpdateData"]["m_name"];
CStateUpdateData.m_hScript = jsonData["CStateUpdateData"]["m_hScript"];
CStateUpdateData.m_transitionIndices = jsonData["CStateUpdateData"]["m_transitionIndices"];
CStateUpdateData.m_actions = jsonData["CStateUpdateData"]["m_actions"];
CStateUpdateData.m_stateID = jsonData["CStateUpdateData"]["m_stateID"];
CStateUpdateData.m_bIsStartState = jsonData["CStateUpdateData"]["m_bIsStartState"];
CStateUpdateData.m_bIsEndState = jsonData["CStateUpdateData"]["m_bIsEndState"];
CStateUpdateData.m_bIsPassthrough = jsonData["CStateUpdateData"]["m_bIsPassthrough"];

// Atribuições para CMoverUpdateNode
// CMoverUpdateNode Offsets
CMoverUpdateNode.m_damping = jsonData["CMoverUpdateNode"]["m_damping"];
CMoverUpdateNode.m_facingTarget = jsonData["CMoverUpdateNode"]["m_facingTarget"];
CMoverUpdateNode.m_hMoveVecParam = jsonData["CMoverUpdateNode"]["m_hMoveVecParam"];
CMoverUpdateNode.m_hMoveHeadingParam = jsonData["CMoverUpdateNode"]["m_hMoveHeadingParam"];
CMoverUpdateNode.m_hTurnToFaceParam = jsonData["CMoverUpdateNode"]["m_hTurnToFaceParam"];
CMoverUpdateNode.m_flTurnToFaceOffset = jsonData["CMoverUpdateNode"]["m_flTurnToFaceOffset"];
CMoverUpdateNode.m_flTurnToFaceLimit = jsonData["CMoverUpdateNode"]["m_flTurnToFaceLimit"];
CMoverUpdateNode.m_bAdditive = jsonData["CMoverUpdateNode"]["m_bAdditive"];
CMoverUpdateNode.m_bApplyMovement = jsonData["CMoverUpdateNode"]["m_bApplyMovement"];
CMoverUpdateNode.m_bOrientMovement = jsonData["CMoverUpdateNode"]["m_bOrientMovement"];
CMoverUpdateNode.m_bApplyRotation = jsonData["CMoverUpdateNode"]["m_bApplyRotation"];
CMoverUpdateNode.m_bLimitOnly = jsonData["CMoverUpdateNode"]["m_bLimitOnly"];

// Atribuições para CNmLayerBlendNode__CDefinition
// CNmLayerBlendNode__CDefinition Offsets
CNmLayerBlendNode__CDefinition.m_nBaseNodeIdx = jsonData["CNmLayerBlendNode__CDefinition"]["m_nBaseNodeIdx"];
CNmLayerBlendNode__CDefinition.m_bOnlySampleBaseRootMotion = jsonData["CNmLayerBlendNode__CDefinition"]["m_bOnlySampleBaseRootMotion"];
CNmLayerBlendNode__CDefinition.m_layerDefinition = jsonData["CNmLayerBlendNode__CDefinition"]["m_layerDefinition"];

// Atribuições para CAnimMotorUpdaterBase
// CAnimMotorUpdaterBase Offsets
CAnimMotorUpdaterBase.m_name = jsonData["CAnimMotorUpdaterBase"]["m_name"];
CAnimMotorUpdaterBase.m_bDefault = jsonData["CAnimMotorUpdaterBase"]["m_bDefault"];

// Atribuições para JiggleBoneSettingsList_t
// JiggleBoneSettingsList_t Offsets
JiggleBoneSettingsList_t.m_boneSettings = jsonData["JiggleBoneSettingsList_t"]["m_boneSettings"];

// Atribuições para CSubtractUpdateNode
// CSubtractUpdateNode Offsets
CSubtractUpdateNode.m_footMotionTiming = jsonData["CSubtractUpdateNode"]["m_footMotionTiming"];
CSubtractUpdateNode.m_bApplyToFootMotion = jsonData["CSubtractUpdateNode"]["m_bApplyToFootMotion"];
CSubtractUpdateNode.m_bApplyChannelsSeparately = jsonData["CSubtractUpdateNode"]["m_bApplyChannelsSeparately"];
CSubtractUpdateNode.m_bUseModelSpace = jsonData["CSubtractUpdateNode"]["m_bUseModelSpace"];

// Atribuições para CNmFloatRemapNode__CDefinition
// CNmFloatRemapNode__CDefinition Offsets
CNmFloatRemapNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmFloatRemapNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmFloatRemapNode__CDefinition.m_inputRange = jsonData["CNmFloatRemapNode__CDefinition"]["m_inputRange"];
CNmFloatRemapNode__CDefinition.m_outputRange = jsonData["CNmFloatRemapNode__CDefinition"]["m_outputRange"];

// Atribuições para CPoseHandle
// CPoseHandle Offsets
CPoseHandle.m_nIndex = jsonData["CPoseHandle"]["m_nIndex"];
CPoseHandle.m_eType = jsonData["CPoseHandle"]["m_eType"];

// Atribuições para CNmFootstepEventIDNode__CDefinition
// CNmFootstepEventIDNode__CDefinition Offsets
CNmFootstepEventIDNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmFootstepEventIDNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmFootstepEventIDNode__CDefinition.m_eventConditionRules = jsonData["CNmFootstepEventIDNode__CDefinition"]["m_eventConditionRules"];

// Atribuições para CSolveIKChainUpdateNode
// CSolveIKChainUpdateNode Offsets
CSolveIKChainUpdateNode.m_targetHandles = jsonData["CSolveIKChainUpdateNode"]["m_targetHandles"];
CSolveIKChainUpdateNode.m_opFixedData = jsonData["CSolveIKChainUpdateNode"]["m_opFixedData"];

// Atribuições para CNmOrNode__CDefinition
// CNmOrNode__CDefinition Offsets
CNmOrNode__CDefinition.m_conditionNodeIndices = jsonData["CNmOrNode__CDefinition"]["m_conditionNodeIndices"];

// Atribuições para CSeqCmdSeqDesc
// CSeqCmdSeqDesc Offsets
CSeqCmdSeqDesc.m_sName = jsonData["CSeqCmdSeqDesc"]["m_sName"];
CSeqCmdSeqDesc.m_flags = jsonData["CSeqCmdSeqDesc"]["m_flags"];
CSeqCmdSeqDesc.m_transition = jsonData["CSeqCmdSeqDesc"]["m_transition"];
CSeqCmdSeqDesc.m_nFrameRangeSequence = jsonData["CSeqCmdSeqDesc"]["m_nFrameRangeSequence"];
CSeqCmdSeqDesc.m_nFrameCount = jsonData["CSeqCmdSeqDesc"]["m_nFrameCount"];
CSeqCmdSeqDesc.m_flFPS = jsonData["CSeqCmdSeqDesc"]["m_flFPS"];
CSeqCmdSeqDesc.m_nSubCycles = jsonData["CSeqCmdSeqDesc"]["m_nSubCycles"];
CSeqCmdSeqDesc.m_numLocalResults = jsonData["CSeqCmdSeqDesc"]["m_numLocalResults"];
CSeqCmdSeqDesc.m_cmdLayerArray = jsonData["CSeqCmdSeqDesc"]["m_cmdLayerArray"];
CSeqCmdSeqDesc.m_eventArray = jsonData["CSeqCmdSeqDesc"]["m_eventArray"];
CSeqCmdSeqDesc.m_activityArray = jsonData["CSeqCmdSeqDesc"]["m_activityArray"];
CSeqCmdSeqDesc.m_poseSettingArray = jsonData["CSeqCmdSeqDesc"]["m_poseSettingArray"];

// Atribuições para CBoneMaskUpdateNode
// CBoneMaskUpdateNode Offsets
CBoneMaskUpdateNode.m_nWeightListIndex = jsonData["CBoneMaskUpdateNode"]["m_nWeightListIndex"];
CBoneMaskUpdateNode.m_flRootMotionBlend = jsonData["CBoneMaskUpdateNode"]["m_flRootMotionBlend"];
CBoneMaskUpdateNode.m_blendSpace = jsonData["CBoneMaskUpdateNode"]["m_blendSpace"];
CBoneMaskUpdateNode.m_footMotionTiming = jsonData["CBoneMaskUpdateNode"]["m_footMotionTiming"];
CBoneMaskUpdateNode.m_bUseBlendScale = jsonData["CBoneMaskUpdateNode"]["m_bUseBlendScale"];
CBoneMaskUpdateNode.m_blendValueSource = jsonData["CBoneMaskUpdateNode"]["m_blendValueSource"];
CBoneMaskUpdateNode.m_hBlendParameter = jsonData["CBoneMaskUpdateNode"]["m_hBlendParameter"];

// Atribuições para SolveIKChainPoseOpFixedSettings_t
// SolveIKChainPoseOpFixedSettings_t Offsets
SolveIKChainPoseOpFixedSettings_t.m_ChainsToSolveData = jsonData["SolveIKChainPoseOpFixedSettings_t"]["m_ChainsToSolveData"];
SolveIKChainPoseOpFixedSettings_t.m_bMatchTargetOrientation = jsonData["SolveIKChainPoseOpFixedSettings_t"]["m_bMatchTargetOrientation"];

// Atribuições para TwoBoneIKSettings_t
// TwoBoneIKSettings_t Offsets
TwoBoneIKSettings_t.m_endEffectorType = jsonData["TwoBoneIKSettings_t"]["m_endEffectorType"];
TwoBoneIKSettings_t.m_endEffectorAttachment = jsonData["TwoBoneIKSettings_t"]["m_endEffectorAttachment"];
TwoBoneIKSettings_t.m_targetType = jsonData["TwoBoneIKSettings_t"]["m_targetType"];
TwoBoneIKSettings_t.m_targetAttachment = jsonData["TwoBoneIKSettings_t"]["m_targetAttachment"];
TwoBoneIKSettings_t.m_targetBoneIndex = jsonData["TwoBoneIKSettings_t"]["m_targetBoneIndex"];
TwoBoneIKSettings_t.m_hPositionParam = jsonData["TwoBoneIKSettings_t"]["m_hPositionParam"];
TwoBoneIKSettings_t.m_hRotationParam = jsonData["TwoBoneIKSettings_t"]["m_hRotationParam"];
TwoBoneIKSettings_t.m_bAlwaysUseFallbackHinge = jsonData["TwoBoneIKSettings_t"]["m_bAlwaysUseFallbackHinge"];
TwoBoneIKSettings_t.m_vLsFallbackHingeAxis = jsonData["TwoBoneIKSettings_t"]["m_vLsFallbackHingeAxis"];
TwoBoneIKSettings_t.m_nFixedBoneIndex = jsonData["TwoBoneIKSettings_t"]["m_nFixedBoneIndex"];
TwoBoneIKSettings_t.m_nMiddleBoneIndex = jsonData["TwoBoneIKSettings_t"]["m_nMiddleBoneIndex"];
TwoBoneIKSettings_t.m_nEndBoneIndex = jsonData["TwoBoneIKSettings_t"]["m_nEndBoneIndex"];
TwoBoneIKSettings_t.m_bMatchTargetOrientation = jsonData["TwoBoneIKSettings_t"]["m_bMatchTargetOrientation"];
TwoBoneIKSettings_t.m_bConstrainTwist = jsonData["TwoBoneIKSettings_t"]["m_bConstrainTwist"];
TwoBoneIKSettings_t.m_flMaxTwist = jsonData["TwoBoneIKSettings_t"]["m_flMaxTwist"];

// Atribuições para CAnimUpdateSharedData
// CAnimUpdateSharedData Offsets
CAnimUpdateSharedData.m_nodes = jsonData["CAnimUpdateSharedData"]["m_nodes"];
CAnimUpdateSharedData.m_nodeIndexMap = jsonData["CAnimUpdateSharedData"]["m_nodeIndexMap"];
CAnimUpdateSharedData.m_components = jsonData["CAnimUpdateSharedData"]["m_components"];
CAnimUpdateSharedData.m_pParamListUpdater = jsonData["CAnimUpdateSharedData"]["m_pParamListUpdater"];
CAnimUpdateSharedData.m_pTagManagerUpdater = jsonData["CAnimUpdateSharedData"]["m_pTagManagerUpdater"];
CAnimUpdateSharedData.m_scriptManager = jsonData["CAnimUpdateSharedData"]["m_scriptManager"];
CAnimUpdateSharedData.m_settings = jsonData["CAnimUpdateSharedData"]["m_settings"];
CAnimUpdateSharedData.m_pStaticPoseCache = jsonData["CAnimUpdateSharedData"]["m_pStaticPoseCache"];
CAnimUpdateSharedData.m_pSkeleton = jsonData["CAnimUpdateSharedData"]["m_pSkeleton"];
CAnimUpdateSharedData.m_rootNodePath = jsonData["CAnimUpdateSharedData"]["m_rootNodePath"];

// Atribuições para CAnimAttachment
// CAnimAttachment Offsets
CAnimAttachment.m_influenceRotations = jsonData["CAnimAttachment"]["m_influenceRotations"];
CAnimAttachment.m_influenceOffsets = jsonData["CAnimAttachment"]["m_influenceOffsets"];
CAnimAttachment.m_influenceIndices = jsonData["CAnimAttachment"]["m_influenceIndices"];
CAnimAttachment.m_influenceWeights = jsonData["CAnimAttachment"]["m_influenceWeights"];
CAnimAttachment.m_numInfluences = jsonData["CAnimAttachment"]["m_numInfluences"];

// Atribuições para CFootTrajectories
// CFootTrajectories Offsets
CFootTrajectories.m_trajectories = jsonData["CFootTrajectories"]["m_trajectories"];

// Atribuições para CNmIDComparisonNode__CDefinition
// CNmIDComparisonNode__CDefinition Offsets
CNmIDComparisonNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmIDComparisonNode__CDefinition"]["m_nInputValueNodeIdx"];
CNmIDComparisonNode__CDefinition.m_comparison = jsonData["CNmIDComparisonNode__CDefinition"]["m_comparison"];
CNmIDComparisonNode__CDefinition.m_comparisionIDs = jsonData["CNmIDComparisonNode__CDefinition"]["m_comparisionIDs"];

// Atribuições para CNmConstFloatNode__CDefinition
// CNmConstFloatNode__CDefinition Offsets
CNmConstFloatNode__CDefinition.m_flValue = jsonData["CNmConstFloatNode__CDefinition"]["m_flValue"];

// Atribuições para CBoolAnimParameter
// CBoolAnimParameter Offsets
CBoolAnimParameter.m_bDefaultValue = jsonData["CBoolAnimParameter"]["m_bDefaultValue"];

// Atribuições para CRagdollAnimTag
// CRagdollAnimTag Offsets
CRagdollAnimTag.m_nPoseControl = jsonData["CRagdollAnimTag"]["m_nPoseControl"];
CRagdollAnimTag.m_flFrequency = jsonData["CRagdollAnimTag"]["m_flFrequency"];
CRagdollAnimTag.m_flDampingRatio = jsonData["CRagdollAnimTag"]["m_flDampingRatio"];
CRagdollAnimTag.m_flDecayDuration = jsonData["CRagdollAnimTag"]["m_flDecayDuration"];
CRagdollAnimTag.m_flDecayBias = jsonData["CRagdollAnimTag"]["m_flDecayBias"];
CRagdollAnimTag.m_bDestroy = jsonData["CRagdollAnimTag"]["m_bDestroy"];

// Atribuições para CMotionNode
// CMotionNode Offsets
CMotionNode.m_name = jsonData["CMotionNode"]["m_name"];
CMotionNode.m_id = jsonData["CMotionNode"]["m_id"];

// Atribuições para CNmStateMachineNode__CDefinition
// CNmStateMachineNode__CDefinition Offsets
CNmStateMachineNode__CDefinition.m_stateDefinitions = jsonData["CNmStateMachineNode__CDefinition"]["m_stateDefinitions"];
CNmStateMachineNode__CDefinition.m_nDefaultStateIndex = jsonData["CNmStateMachineNode__CDefinition"]["m_nDefaultStateIndex"];

// Atribuições para CBodyGroupAnimTag
// CBodyGroupAnimTag Offsets
CBodyGroupAnimTag.m_nPriority = jsonData["CBodyGroupAnimTag"]["m_nPriority"];
CBodyGroupAnimTag.m_bodyGroupSettings = jsonData["CBodyGroupAnimTag"]["m_bodyGroupSettings"];

// Atribuições para CNmOrientationWarpNode__CDefinition
// CNmOrientationWarpNode__CDefinition Offsets
CNmOrientationWarpNode__CDefinition.m_nClipReferenceNodeIdx = jsonData["CNmOrientationWarpNode__CDefinition"]["m_nClipReferenceNodeIdx"];
CNmOrientationWarpNode__CDefinition.m_nTargetValueNodeIdx = jsonData["CNmOrientationWarpNode__CDefinition"]["m_nTargetValueNodeIdx"];
CNmOrientationWarpNode__CDefinition.m_bIsOffsetNode = jsonData["CNmOrientationWarpNode__CDefinition"]["m_bIsOffsetNode"];
CNmOrientationWarpNode__CDefinition.m_bIsOffsetRelativeToCharacter = jsonData["CNmOrientationWarpNode__CDefinition"]["m_bIsOffsetRelativeToCharacter"];
CNmOrientationWarpNode__CDefinition.m_samplingMode = jsonData["CNmOrientationWarpNode__CDefinition"]["m_samplingMode"];

// Atribuições para AnimParamID
// AnimParamID Offsets
AnimParamID.m_id = jsonData["AnimParamID"]["m_id"];

// Atribuições para CNmBoneMaskNode__CDefinition
// CNmBoneMaskNode__CDefinition Offsets
CNmBoneMaskNode__CDefinition.m_boneMaskID = jsonData["CNmBoneMaskNode__CDefinition"]["m_boneMaskID"];

// Atribuições para CNmChildGraphNode__CDefinition
// CNmChildGraphNode__CDefinition Offsets
CNmChildGraphNode__CDefinition.m_nChildGraphIdx = jsonData["CNmChildGraphNode__CDefinition"]["m_nChildGraphIdx"];

// Atribuições para AnimationDecodeDebugDump_t
// AnimationDecodeDebugDump_t Offsets
AnimationDecodeDebugDump_t.m_processingType = jsonData["AnimationDecodeDebugDump_t"]["m_processingType"];
AnimationDecodeDebugDump_t.m_elems = jsonData["AnimationDecodeDebugDump_t"]["m_elems"];

// Atribuições para CNmVirtualParameterIDNode__CDefinition
// CNmVirtualParameterIDNode__CDefinition Offsets
CNmVirtualParameterIDNode__CDefinition.m_nChildNodeIdx = jsonData["CNmVirtualParameterIDNode__CDefinition"]["m_nChildNodeIdx"];

// Atribuições para CSeqScaleSet
// CSeqScaleSet Offsets
CSeqScaleSet.m_sName = jsonData["CSeqScaleSet"]["m_sName"];
CSeqScaleSet.m_bRootOffset = jsonData["CSeqScaleSet"]["m_bRootOffset"];
CSeqScaleSet.m_vRootOffset = jsonData["CSeqScaleSet"]["m_vRootOffset"];
CSeqScaleSet.m_nLocalBoneArray = jsonData["CSeqScaleSet"]["m_nLocalBoneArray"];
CSeqScaleSet.m_flBoneScaleArray = jsonData["CSeqScaleSet"]["m_flBoneScaleArray"];

// Atribuições para CDirectionalBlendUpdateNode
// CDirectionalBlendUpdateNode Offsets
CDirectionalBlendUpdateNode.m_hSequences = jsonData["CDirectionalBlendUpdateNode"]["m_hSequences"];
CDirectionalBlendUpdateNode.m_damping = jsonData["CDirectionalBlendUpdateNode"]["m_damping"];
CDirectionalBlendUpdateNode.m_blendValueSource = jsonData["CDirectionalBlendUpdateNode"]["m_blendValueSource"];
CDirectionalBlendUpdateNode.m_paramIndex = jsonData["CDirectionalBlendUpdateNode"]["m_paramIndex"];
CDirectionalBlendUpdateNode.m_playbackSpeed = jsonData["CDirectionalBlendUpdateNode"]["m_playbackSpeed"];
CDirectionalBlendUpdateNode.m_duration = jsonData["CDirectionalBlendUpdateNode"]["m_duration"];
CDirectionalBlendUpdateNode.m_bLoop = jsonData["CDirectionalBlendUpdateNode"]["m_bLoop"];
CDirectionalBlendUpdateNode.m_bLockBlendOnReset = jsonData["CDirectionalBlendUpdateNode"]["m_bLockBlendOnReset"];

// Atribuições para ParamSpan_t
// ParamSpan_t Offsets
ParamSpan_t.m_samples = jsonData["ParamSpan_t"]["m_samples"];
ParamSpan_t.m_hParam = jsonData["ParamSpan_t"]["m_hParam"];
ParamSpan_t.m_eParamType = jsonData["ParamSpan_t"]["m_eParamType"];
ParamSpan_t.m_flStartCycle = jsonData["ParamSpan_t"]["m_flStartCycle"];
ParamSpan_t.m_flEndCycle = jsonData["ParamSpan_t"]["m_flEndCycle"];

// Atribuições para CFootStepTriggerUpdateNode
// CFootStepTriggerUpdateNode Offsets
CFootStepTriggerUpdateNode.m_triggers = jsonData["CFootStepTriggerUpdateNode"]["m_triggers"];
CFootStepTriggerUpdateNode.m_flTolerance = jsonData["CFootStepTriggerUpdateNode"]["m_flTolerance"];

// Atribuições para IKTargetSettings_t
// IKTargetSettings_t Offsets
IKTargetSettings_t.m_TargetSource = jsonData["IKTargetSettings_t"]["m_TargetSource"];
IKTargetSettings_t.m_Bone = jsonData["IKTargetSettings_t"]["m_Bone"];
IKTargetSettings_t.m_AnimgraphParameterNamePosition = jsonData["IKTargetSettings_t"]["m_AnimgraphParameterNamePosition"];
IKTargetSettings_t.m_AnimgraphParameterNameOrientation = jsonData["IKTargetSettings_t"]["m_AnimgraphParameterNameOrientation"];
IKTargetSettings_t.m_TargetCoordSystem = jsonData["IKTargetSettings_t"]["m_TargetCoordSystem"];

// Atribuições para CNmCurrentSyncEventIndexNode__CDefinition
// CNmCurrentSyncEventIndexNode__CDefinition Offsets
CNmCurrentSyncEventIndexNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmCurrentSyncEventIndexNode__CDefinition"]["m_nSourceStateNodeIdx"];

// Atribuições para CModelConfigElement_SetRenderColor
// CModelConfigElement_SetRenderColor Offsets
CModelConfigElement_SetRenderColor.m_Color = jsonData["CModelConfigElement_SetRenderColor"]["m_Color"];

// Atribuições para CNmAnimationPoseNode__CDefinition
// CNmAnimationPoseNode__CDefinition Offsets
CNmAnimationPoseNode__CDefinition.m_nPoseTimeValueNodeIdx = jsonData["CNmAnimationPoseNode__CDefinition"]["m_nPoseTimeValueNodeIdx"];
CNmAnimationPoseNode__CDefinition.m_nDataSlotIdx = jsonData["CNmAnimationPoseNode__CDefinition"]["m_nDataSlotIdx"];
CNmAnimationPoseNode__CDefinition.m_inputTimeRemapRange = jsonData["CNmAnimationPoseNode__CDefinition"]["m_inputTimeRemapRange"];
CNmAnimationPoseNode__CDefinition.m_flUserSpecifiedTime = jsonData["CNmAnimationPoseNode__CDefinition"]["m_flUserSpecifiedTime"];
CNmAnimationPoseNode__CDefinition.m_bUseFramesAsInput = jsonData["CNmAnimationPoseNode__CDefinition"]["m_bUseFramesAsInput"];

// Atribuições para CMotionSearchDB
// CMotionSearchDB Offsets
CMotionSearchDB.m_rootNode = jsonData["CMotionSearchDB"]["m_rootNode"];
CMotionSearchDB.m_residualQuantizer = jsonData["CMotionSearchDB"]["m_residualQuantizer"];
CMotionSearchDB.m_codeIndices = jsonData["CMotionSearchDB"]["m_codeIndices"];

// Atribuições para CMotionNodeBlend1D
// CMotionNodeBlend1D Offsets
CMotionNodeBlend1D.m_blendItems = jsonData["CMotionNodeBlend1D"]["m_blendItems"];
CMotionNodeBlend1D.m_nParamIndex = jsonData["CMotionNodeBlend1D"]["m_nParamIndex"];

// Atribuições para SkeletonBoneBounds_t
// SkeletonBoneBounds_t Offsets
SkeletonBoneBounds_t.m_vecCenter = jsonData["SkeletonBoneBounds_t"]["m_vecCenter"];
SkeletonBoneBounds_t.m_vecSize = jsonData["SkeletonBoneBounds_t"]["m_vecSize"];

// Atribuições para CTwoBoneIKUpdateNode
// CTwoBoneIKUpdateNode Offsets
CTwoBoneIKUpdateNode.m_opFixedData = jsonData["CTwoBoneIKUpdateNode"]["m_opFixedData"];

// Atribuições para VPhysXBodyPart_t
// VPhysXBodyPart_t Offsets
VPhysXBodyPart_t.m_nFlags = jsonData["VPhysXBodyPart_t"]["m_nFlags"];
VPhysXBodyPart_t.m_flMass = jsonData["VPhysXBodyPart_t"]["m_flMass"];
VPhysXBodyPart_t.m_rnShape = jsonData["VPhysXBodyPart_t"]["m_rnShape"];
VPhysXBodyPart_t.m_nCollisionAttributeIndex = jsonData["VPhysXBodyPart_t"]["m_nCollisionAttributeIndex"];
VPhysXBodyPart_t.m_nReserved = jsonData["VPhysXBodyPart_t"]["m_nReserved"];
VPhysXBodyPart_t.m_flInertiaScale = jsonData["VPhysXBodyPart_t"]["m_flInertiaScale"];
VPhysXBodyPart_t.m_flLinearDamping = jsonData["VPhysXBodyPart_t"]["m_flLinearDamping"];
VPhysXBodyPart_t.m_flAngularDamping = jsonData["VPhysXBodyPart_t"]["m_flAngularDamping"];
VPhysXBodyPart_t.m_bOverrideMassCenter = jsonData["VPhysXBodyPart_t"]["m_bOverrideMassCenter"];
VPhysXBodyPart_t.m_vMassCenterOverride = jsonData["VPhysXBodyPart_t"]["m_vMassCenterOverride"];

// Atribuições para CFollowPathUpdateNode
// CFollowPathUpdateNode Offsets
CFollowPathUpdateNode.m_flBlendOutTime = jsonData["CFollowPathUpdateNode"]["m_flBlendOutTime"];
CFollowPathUpdateNode.m_bBlockNonPathMovement = jsonData["CFollowPathUpdateNode"]["m_bBlockNonPathMovement"];
CFollowPathUpdateNode.m_bStopFeetAtGoal = jsonData["CFollowPathUpdateNode"]["m_bStopFeetAtGoal"];
CFollowPathUpdateNode.m_bScaleSpeed = jsonData["CFollowPathUpdateNode"]["m_bScaleSpeed"];
CFollowPathUpdateNode.m_flScale = jsonData["CFollowPathUpdateNode"]["m_flScale"];
CFollowPathUpdateNode.m_flMinAngle = jsonData["CFollowPathUpdateNode"]["m_flMinAngle"];
CFollowPathUpdateNode.m_flMaxAngle = jsonData["CFollowPathUpdateNode"]["m_flMaxAngle"];
CFollowPathUpdateNode.m_flSpeedScaleBlending = jsonData["CFollowPathUpdateNode"]["m_flSpeedScaleBlending"];
CFollowPathUpdateNode.m_turnDamping = jsonData["CFollowPathUpdateNode"]["m_turnDamping"];
CFollowPathUpdateNode.m_facingTarget = jsonData["CFollowPathUpdateNode"]["m_facingTarget"];
CFollowPathUpdateNode.m_hParam = jsonData["CFollowPathUpdateNode"]["m_hParam"];
CFollowPathUpdateNode.m_flTurnToFaceOffset = jsonData["CFollowPathUpdateNode"]["m_flTurnToFaceOffset"];
CFollowPathUpdateNode.m_bTurnToFace = jsonData["CFollowPathUpdateNode"]["m_bTurnToFace"];

// Atribuições para AimMatrixOpFixedSettings_t
// AimMatrixOpFixedSettings_t Offsets
AimMatrixOpFixedSettings_t.m_attachment = jsonData["AimMatrixOpFixedSettings_t"]["m_attachment"];
AimMatrixOpFixedSettings_t.m_damping = jsonData["AimMatrixOpFixedSettings_t"]["m_damping"];
AimMatrixOpFixedSettings_t.m_poseCacheHandles = jsonData["AimMatrixOpFixedSettings_t"]["m_poseCacheHandles"];
AimMatrixOpFixedSettings_t.m_eBlendMode = jsonData["AimMatrixOpFixedSettings_t"]["m_eBlendMode"];
AimMatrixOpFixedSettings_t.m_flMaxYawAngle = jsonData["AimMatrixOpFixedSettings_t"]["m_flMaxYawAngle"];
AimMatrixOpFixedSettings_t.m_flMaxPitchAngle = jsonData["AimMatrixOpFixedSettings_t"]["m_flMaxPitchAngle"];
AimMatrixOpFixedSettings_t.m_nSequenceMaxFrame = jsonData["AimMatrixOpFixedSettings_t"]["m_nSequenceMaxFrame"];
AimMatrixOpFixedSettings_t.m_nBoneMaskIndex = jsonData["AimMatrixOpFixedSettings_t"]["m_nBoneMaskIndex"];
AimMatrixOpFixedSettings_t.m_bTargetIsPosition = jsonData["AimMatrixOpFixedSettings_t"]["m_bTargetIsPosition"];
AimMatrixOpFixedSettings_t.m_bUseBiasAndClamp = jsonData["AimMatrixOpFixedSettings_t"]["m_bUseBiasAndClamp"];
AimMatrixOpFixedSettings_t.m_flBiasAndClampYawOffset = jsonData["AimMatrixOpFixedSettings_t"]["m_flBiasAndClampYawOffset"];
AimMatrixOpFixedSettings_t.m_flBiasAndClampPitchOffset = jsonData["AimMatrixOpFixedSettings_t"]["m_flBiasAndClampPitchOffset"];
AimMatrixOpFixedSettings_t.m_biasAndClampBlendCurve = jsonData["AimMatrixOpFixedSettings_t"]["m_biasAndClampBlendCurve"];

// Atribuições para CAnimScriptComponentUpdater
// CAnimScriptComponentUpdater Offsets
CAnimScriptComponentUpdater.m_hScript = jsonData["CAnimScriptComponentUpdater"]["m_hScript"];

// Atribuições para CRagdollUpdateNode
// CRagdollUpdateNode Offsets
CRagdollUpdateNode.m_nWeightListIndex = jsonData["CRagdollUpdateNode"]["m_nWeightListIndex"];
CRagdollUpdateNode.m_poseControlMethod = jsonData["CRagdollUpdateNode"]["m_poseControlMethod"];

// Atribuições para CNmStateEventConditionNode__Condition_t
// CNmStateEventConditionNode__Condition_t Offsets
CNmStateEventConditionNode__Condition_t.m_eventID = jsonData["CNmStateEventConditionNode__Condition_t"]["m_eventID"];
CNmStateEventConditionNode__Condition_t.m_eventTypeCondition = jsonData["CNmStateEventConditionNode__Condition_t"]["m_eventTypeCondition"];

// Atribuições para CMaterialAttributeAnimTag
// CMaterialAttributeAnimTag Offsets
CMaterialAttributeAnimTag.m_AttributeName = jsonData["CMaterialAttributeAnimTag"]["m_AttributeName"];
CMaterialAttributeAnimTag.m_AttributeType = jsonData["CMaterialAttributeAnimTag"]["m_AttributeType"];
CMaterialAttributeAnimTag.m_flValue = jsonData["CMaterialAttributeAnimTag"]["m_flValue"];
CMaterialAttributeAnimTag.m_Color = jsonData["CMaterialAttributeAnimTag"]["m_Color"];

// Atribuições para CNmFootEventConditionNode__CDefinition
// CNmFootEventConditionNode__CDefinition Offsets
CNmFootEventConditionNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmFootEventConditionNode__CDefinition"]["m_nSourceStateNodeIdx"];
CNmFootEventConditionNode__CDefinition.m_phaseCondition = jsonData["CNmFootEventConditionNode__CDefinition"]["m_phaseCondition"];
CNmFootEventConditionNode__CDefinition.m_eventConditionRules = jsonData["CNmFootEventConditionNode__CDefinition"]["m_eventConditionRules"];

// Atribuições para CNmFootEvent
// CNmFootEvent Offsets
CNmFootEvent.m_phase = jsonData["CNmFootEvent"]["m_phase"];

// Atribuições para CPhysSurfacePropertiesAudio
// CPhysSurfacePropertiesAudio Offsets
CPhysSurfacePropertiesAudio.m_reflectivity = jsonData["CPhysSurfacePropertiesAudio"]["m_reflectivity"];
CPhysSurfacePropertiesAudio.m_hardnessFactor = jsonData["CPhysSurfacePropertiesAudio"]["m_hardnessFactor"];
CPhysSurfacePropertiesAudio.m_roughnessFactor = jsonData["CPhysSurfacePropertiesAudio"]["m_roughnessFactor"];
CPhysSurfacePropertiesAudio.m_roughThreshold = jsonData["CPhysSurfacePropertiesAudio"]["m_roughThreshold"];
CPhysSurfacePropertiesAudio.m_hardThreshold = jsonData["CPhysSurfacePropertiesAudio"]["m_hardThreshold"];
CPhysSurfacePropertiesAudio.m_hardVelocityThreshold = jsonData["CPhysSurfacePropertiesAudio"]["m_hardVelocityThreshold"];
CPhysSurfacePropertiesAudio.m_flStaticImpactVolume = jsonData["CPhysSurfacePropertiesAudio"]["m_flStaticImpactVolume"];
CPhysSurfacePropertiesAudio.m_flOcclusionFactor = jsonData["CPhysSurfacePropertiesAudio"]["m_flOcclusionFactor"];

// Atribuições para CSeqAutoLayer
// CSeqAutoLayer Offsets
CSeqAutoLayer.m_nLocalReference = jsonData["CSeqAutoLayer"]["m_nLocalReference"];
CSeqAutoLayer.m_nLocalPose = jsonData["CSeqAutoLayer"]["m_nLocalPose"];
CSeqAutoLayer.m_flags = jsonData["CSeqAutoLayer"]["m_flags"];
CSeqAutoLayer.m_start = jsonData["CSeqAutoLayer"]["m_start"];
CSeqAutoLayer.m_peak = jsonData["CSeqAutoLayer"]["m_peak"];
CSeqAutoLayer.m_tail = jsonData["CSeqAutoLayer"]["m_tail"];
CSeqAutoLayer.m_end = jsonData["CSeqAutoLayer"]["m_end"];

// Atribuições para CNmCurrentSyncEventPercentageThroughNode__CDefinition
// CNmCurrentSyncEventPercentageThroughNode__CDefinition Offsets
CNmCurrentSyncEventPercentageThroughNode__CDefinition.m_nSourceStateNodeIdx = jsonData["CNmCurrentSyncEventPercentageThroughNode__CDefinition"]["m_nSourceStateNodeIdx"];

// Atribuições para PhysSoftbodyDesc_t
// PhysSoftbodyDesc_t Offsets
PhysSoftbodyDesc_t.m_ParticleBoneHash = jsonData["PhysSoftbodyDesc_t"]["m_ParticleBoneHash"];
PhysSoftbodyDesc_t.m_Particles = jsonData["PhysSoftbodyDesc_t"]["m_Particles"];
PhysSoftbodyDesc_t.m_Springs = jsonData["PhysSoftbodyDesc_t"]["m_Springs"];
PhysSoftbodyDesc_t.m_Capsules = jsonData["PhysSoftbodyDesc_t"]["m_Capsules"];
PhysSoftbodyDesc_t.m_InitPose = jsonData["PhysSoftbodyDesc_t"]["m_InitPose"];
PhysSoftbodyDesc_t.m_ParticleBoneName = jsonData["PhysSoftbodyDesc_t"]["m_ParticleBoneName"];

// Atribuições para CAnimSequenceParams
// CAnimSequenceParams Offsets
CAnimSequenceParams.m_flFadeInTime = jsonData["CAnimSequenceParams"]["m_flFadeInTime"];
CAnimSequenceParams.m_flFadeOutTime = jsonData["CAnimSequenceParams"]["m_flFadeOutTime"];

// Atribuições para CTargetWarpUpdateNode
// CTargetWarpUpdateNode Offsets
CTargetWarpUpdateNode.m_hPositionParameter = jsonData["CTargetWarpUpdateNode"]["m_hPositionParameter"];
CTargetWarpUpdateNode.m_hFacePositionParameter = jsonData["CTargetWarpUpdateNode"]["m_hFacePositionParameter"];

// Atribuições para CNmVirtualParameterBoolNode__CDefinition
// CNmVirtualParameterBoolNode__CDefinition Offsets
CNmVirtualParameterBoolNode__CDefinition.m_nChildNodeIdx = jsonData["CNmVirtualParameterBoolNode__CDefinition"]["m_nChildNodeIdx"];

// Atribuições para CFollowTargetUpdateNode
// CFollowTargetUpdateNode Offsets
CFollowTargetUpdateNode.m_opFixedData = jsonData["CFollowTargetUpdateNode"]["m_opFixedData"];
CFollowTargetUpdateNode.m_hParameterPosition = jsonData["CFollowTargetUpdateNode"]["m_hParameterPosition"];
CFollowTargetUpdateNode.m_hParameterOrientation = jsonData["CFollowTargetUpdateNode"]["m_hParameterOrientation"];

// Atribuições para CCPPScriptComponentUpdater
// CCPPScriptComponentUpdater Offsets
CCPPScriptComponentUpdater.m_scriptsToRun = jsonData["CCPPScriptComponentUpdater"]["m_scriptsToRun"];

// Atribuições para CAnimData
// CAnimData Offsets
CAnimData.m_name = jsonData["CAnimData"]["m_name"];
CAnimData.m_animArray = jsonData["CAnimData"]["m_animArray"];
CAnimData.m_decoderArray = jsonData["CAnimData"]["m_decoderArray"];
CAnimData.m_nMaxUniqueFrameIndex = jsonData["CAnimData"]["m_nMaxUniqueFrameIndex"];
CAnimData.m_segmentArray = jsonData["CAnimData"]["m_segmentArray"];

// Atribuições para IKSolverSettings_t
// IKSolverSettings_t Offsets
IKSolverSettings_t.m_SolverType = jsonData["IKSolverSettings_t"]["m_SolverType"];
IKSolverSettings_t.m_nNumIterations = jsonData["IKSolverSettings_t"]["m_nNumIterations"];

// Atribuições para CBinaryUpdateNode
// CBinaryUpdateNode Offsets
CBinaryUpdateNode.m_pChild1 = jsonData["CBinaryUpdateNode"]["m_pChild1"];
CBinaryUpdateNode.m_pChild2 = jsonData["CBinaryUpdateNode"]["m_pChild2"];
CBinaryUpdateNode.m_timingBehavior = jsonData["CBinaryUpdateNode"]["m_timingBehavior"];
CBinaryUpdateNode.m_flTimingBlend = jsonData["CBinaryUpdateNode"]["m_flTimingBlend"];
CBinaryUpdateNode.m_bResetChild1 = jsonData["CBinaryUpdateNode"]["m_bResetChild1"];
CBinaryUpdateNode.m_bResetChild2 = jsonData["CBinaryUpdateNode"]["m_bResetChild2"];

// Atribuições para CNmParameterizedBlendNode__BlendRange_t
// CNmParameterizedBlendNode__BlendRange_t Offsets
CNmParameterizedBlendNode__BlendRange_t.m_nInputIdx0 = jsonData["CNmParameterizedBlendNode__BlendRange_t"]["m_nInputIdx0"];
CNmParameterizedBlendNode__BlendRange_t.m_nInputIdx1 = jsonData["CNmParameterizedBlendNode__BlendRange_t"]["m_nInputIdx1"];
CNmParameterizedBlendNode__BlendRange_t.m_parameterValueRange = jsonData["CNmParameterizedBlendNode__BlendRange_t"]["m_parameterValueRange"];

// Atribuições para CAnimKeyData
// CAnimKeyData Offsets
CAnimKeyData.m_name = jsonData["CAnimKeyData"]["m_name"];
CAnimKeyData.m_boneArray = jsonData["CAnimKeyData"]["m_boneArray"];
CAnimKeyData.m_userArray = jsonData["CAnimKeyData"]["m_userArray"];
CAnimKeyData.m_morphArray = jsonData["CAnimKeyData"]["m_morphArray"];
CAnimKeyData.m_nChannelElements = jsonData["CAnimKeyData"]["m_nChannelElements"];
CAnimKeyData.m_dataChannelArray = jsonData["CAnimKeyData"]["m_dataChannelArray"];

// Atribuições para AttachmentHandle_t
// AttachmentHandle_t Offsets
AttachmentHandle_t.m_Value = jsonData["AttachmentHandle_t"]["m_Value"];

// Atribuições para CAnimMorphDifference
// CAnimMorphDifference Offsets
CAnimMorphDifference.m_name = jsonData["CAnimMorphDifference"]["m_name"];

// Atribuições para FootFixedData_t
// FootFixedData_t Offsets
FootFixedData_t.m_vToeOffset = jsonData["FootFixedData_t"]["m_vToeOffset"];
FootFixedData_t.m_vHeelOffset = jsonData["FootFixedData_t"]["m_vHeelOffset"];
FootFixedData_t.m_nTargetBoneIndex = jsonData["FootFixedData_t"]["m_nTargetBoneIndex"];
FootFixedData_t.m_nAnkleBoneIndex = jsonData["FootFixedData_t"]["m_nAnkleBoneIndex"];
FootFixedData_t.m_nIKAnchorBoneIndex = jsonData["FootFixedData_t"]["m_nIKAnchorBoneIndex"];
FootFixedData_t.m_ikChainIndex = jsonData["FootFixedData_t"]["m_ikChainIndex"];
FootFixedData_t.m_flMaxIKLength = jsonData["FootFixedData_t"]["m_flMaxIKLength"];
FootFixedData_t.m_nFootIndex = jsonData["FootFixedData_t"]["m_nFootIndex"];
FootFixedData_t.m_nTagIndex = jsonData["FootFixedData_t"]["m_nTagIndex"];
FootFixedData_t.m_flMaxRotationLeft = jsonData["FootFixedData_t"]["m_flMaxRotationLeft"];
FootFixedData_t.m_flMaxRotationRight = jsonData["FootFixedData_t"]["m_flMaxRotationRight"];

// Atribuições para CMotionGraphGroup
// CMotionGraphGroup Offsets
CMotionGraphGroup.m_searchDB = jsonData["CMotionGraphGroup"]["m_searchDB"];
CMotionGraphGroup.m_motionGraphs = jsonData["CMotionGraphGroup"]["m_motionGraphs"];
CMotionGraphGroup.m_motionGraphConfigs = jsonData["CMotionGraphGroup"]["m_motionGraphConfigs"];
CMotionGraphGroup.m_sampleToConfig = jsonData["CMotionGraphGroup"]["m_sampleToConfig"];
CMotionGraphGroup.m_hIsActiveScript = jsonData["CMotionGraphGroup"]["m_hIsActiveScript"];

// Atribuições para CNmVectorNegateNode__CDefinition
// CNmVectorNegateNode__CDefinition Offsets
CNmVectorNegateNode__CDefinition.m_nInputValueNodeIdx = jsonData["CNmVectorNegateNode__CDefinition"]["m_nInputValueNodeIdx"];

// Atribuições para CNmSyncTrack__Event_t
// CNmSyncTrack__Event_t Offsets
CNmSyncTrack__Event_t.m_ID = jsonData["CNmSyncTrack__Event_t"]["m_ID"];
CNmSyncTrack__Event_t.m_startTime = jsonData["CNmSyncTrack__Event_t"]["m_startTime"];
CNmSyncTrack__Event_t.m_duration = jsonData["CNmSyncTrack__Event_t"]["m_duration"];

// Atribuições para CNmTarget
// CNmTarget Offsets
CNmTarget.m_transform = jsonData["CNmTarget"]["m_transform"];
CNmTarget.m_boneID = jsonData["CNmTarget"]["m_boneID"];
CNmTarget.m_bIsBoneTarget = jsonData["CNmTarget"]["m_bIsBoneTarget"];
CNmTarget.m_bIsUsingBoneSpaceOffsets = jsonData["CNmTarget"]["m_bIsUsingBoneSpaceOffsets"];
CNmTarget.m_bHasOffsets = jsonData["CNmTarget"]["m_bHasOffsets"];
CNmTarget.m_bIsSet = jsonData["CNmTarget"]["m_bIsSet"];

// Atribuições para CWayPointHelperUpdateNode
// CWayPointHelperUpdateNode Offsets
CWayPointHelperUpdateNode.m_flStartCycle = jsonData["CWayPointHelperUpdateNode"]["m_flStartCycle"];
CWayPointHelperUpdateNode.m_flEndCycle = jsonData["CWayPointHelperUpdateNode"]["m_flEndCycle"];
CWayPointHelperUpdateNode.m_bOnlyGoals = jsonData["CWayPointHelperUpdateNode"]["m_bOnlyGoals"];
CWayPointHelperUpdateNode.m_bPreventOvershoot = jsonData["CWayPointHelperUpdateNode"]["m_bPreventOvershoot"];
CWayPointHelperUpdateNode.m_bPreventUndershoot = jsonData["CWayPointHelperUpdateNode"]["m_bPreventUndershoot"];

// Atribuições para CMoodVData
// CMoodVData Offsets
CMoodVData.m_sModelName = jsonData["CMoodVData"]["m_sModelName"];
CMoodVData.m_nMoodType = jsonData["CMoodVData"]["m_nMoodType"];
CMoodVData.m_animationLayers = jsonData["CMoodVData"]["m_animationLayers"];

// Atribuições para CModelConfigElement_AttachedModel
// CModelConfigElement_AttachedModel Offsets
CModelConfigElement_AttachedModel.m_InstanceName = jsonData["CModelConfigElement_AttachedModel"]["m_InstanceName"];
CModelConfigElement_AttachedModel.m_EntityClass = jsonData["CModelConfigElement_AttachedModel"]["m_EntityClass"];
CModelConfigElement_AttachedModel.m_hModel = jsonData["CModelConfigElement_AttachedModel"]["m_hModel"];
CModelConfigElement_AttachedModel.m_vOffset = jsonData["CModelConfigElement_AttachedModel"]["m_vOffset"];
CModelConfigElement_AttachedModel.m_aAngOffset = jsonData["CModelConfigElement_AttachedModel"]["m_aAngOffset"];
CModelConfigElement_AttachedModel.m_AttachmentName = jsonData["CModelConfigElement_AttachedModel"]["m_AttachmentName"];
CModelConfigElement_AttachedModel.m_LocalAttachmentOffsetName = jsonData["CModelConfigElement_AttachedModel"]["m_LocalAttachmentOffsetName"];
CModelConfigElement_AttachedModel.m_AttachmentType = jsonData["CModelConfigElement_AttachedModel"]["m_AttachmentType"];
CModelConfigElement_AttachedModel.m_bBoneMergeFlex = jsonData["CModelConfigElement_AttachedModel"]["m_bBoneMergeFlex"];
CModelConfigElement_AttachedModel.m_bUserSpecifiedColor = jsonData["CModelConfigElement_AttachedModel"]["m_bUserSpecifiedColor"];
CModelConfigElement_AttachedModel.m_bUserSpecifiedMaterialGroup = jsonData["CModelConfigElement_AttachedModel"]["m_bUserSpecifiedMaterialGroup"];
CModelConfigElement_AttachedModel.m_bAcceptParentMaterialDrivenDecals = jsonData["CModelConfigElement_AttachedModel"]["m_bAcceptParentMaterialDrivenDecals"];
CModelConfigElement_AttachedModel.m_BodygroupOnOtherModels = jsonData["CModelConfigElement_AttachedModel"]["m_BodygroupOnOtherModels"];
CModelConfigElement_AttachedModel.m_MaterialGroupOnOtherModels = jsonData["CModelConfigElement_AttachedModel"]["m_MaterialGroupOnOtherModels"];

// Atribuições para CAnimTagManagerUpdater
// CAnimTagManagerUpdater Offsets
CAnimTagManagerUpdater.m_tags = jsonData["CAnimTagManagerUpdater"]["m_tags"];

// Atribuições para buttons
// buttons Offsets
buttons.attack = jsonData["buttons"]["attack"];
buttons.attack2 = jsonData["buttons"]["attack2"];
buttons.back = jsonData["buttons"]["back"];
buttons.duck = jsonData["buttons"]["duck"];
buttons.forward = jsonData["buttons"]["forward"];
buttons.jump = jsonData["buttons"]["jump"];
buttons.left = jsonData["buttons"]["left"];
buttons.lookatweapon = jsonData["buttons"]["lookatweapon"];
buttons.reload = jsonData["buttons"]["reload"];
buttons.right = jsonData["buttons"]["right"];
buttons.showscores = jsonData["buttons"]["showscores"];
buttons.sprint = jsonData["buttons"]["sprint"];
buttons.turnleft = jsonData["buttons"]["turnleft"];
buttons.turnright = jsonData["buttons"]["turnright"];
buttons.use = jsonData["buttons"]["use"];
buttons.zoom = jsonData["buttons"]["zoom"];

// Atribuições para CCSPlayer_MovementServices
// CCSPlayer_MovementServices Offsets
CCSPlayer_MovementServices.m_flMaxFallVelocity = jsonData["CCSPlayer_MovementServices"]["m_flMaxFallVelocity"];
CCSPlayer_MovementServices.m_vecLadderNormal = jsonData["CCSPlayer_MovementServices"]["m_vecLadderNormal"];
CCSPlayer_MovementServices.m_nLadderSurfacePropIndex = jsonData["CCSPlayer_MovementServices"]["m_nLadderSurfacePropIndex"];
CCSPlayer_MovementServices.m_flDuckAmount = jsonData["CCSPlayer_MovementServices"]["m_flDuckAmount"];
CCSPlayer_MovementServices.m_flDuckSpeed = jsonData["CCSPlayer_MovementServices"]["m_flDuckSpeed"];
CCSPlayer_MovementServices.m_bDuckOverride = jsonData["CCSPlayer_MovementServices"]["m_bDuckOverride"];
CCSPlayer_MovementServices.m_bDesiresDuck = jsonData["CCSPlayer_MovementServices"]["m_bDesiresDuck"];
CCSPlayer_MovementServices.m_flDuckOffset = jsonData["CCSPlayer_MovementServices"]["m_flDuckOffset"];
CCSPlayer_MovementServices.m_nDuckTimeMsecs = jsonData["CCSPlayer_MovementServices"]["m_nDuckTimeMsecs"];
CCSPlayer_MovementServices.m_nDuckJumpTimeMsecs = jsonData["CCSPlayer_MovementServices"]["m_nDuckJumpTimeMsecs"];
CCSPlayer_MovementServices.m_nJumpTimeMsecs = jsonData["CCSPlayer_MovementServices"]["m_nJumpTimeMsecs"];
CCSPlayer_MovementServices.m_flLastDuckTime = jsonData["CCSPlayer_MovementServices"]["m_flLastDuckTime"];
CCSPlayer_MovementServices.m_vecLastPositionAtFullCrouchSpeed = jsonData["CCSPlayer_MovementServices"]["m_vecLastPositionAtFullCrouchSpeed"];
CCSPlayer_MovementServices.m_duckUntilOnGround = jsonData["CCSPlayer_MovementServices"]["m_duckUntilOnGround"];
CCSPlayer_MovementServices.m_bHasWalkMovedSinceLastJump = jsonData["CCSPlayer_MovementServices"]["m_bHasWalkMovedSinceLastJump"];
CCSPlayer_MovementServices.m_bInStuckTest = jsonData["CCSPlayer_MovementServices"]["m_bInStuckTest"];
CCSPlayer_MovementServices.m_flStuckCheckTime = jsonData["CCSPlayer_MovementServices"]["m_flStuckCheckTime"];
CCSPlayer_MovementServices.m_nTraceCount = jsonData["CCSPlayer_MovementServices"]["m_nTraceCount"];
CCSPlayer_MovementServices.m_StuckLast = jsonData["CCSPlayer_MovementServices"]["m_StuckLast"];
CCSPlayer_MovementServices.m_bSpeedCropped = jsonData["CCSPlayer_MovementServices"]["m_bSpeedCropped"];
CCSPlayer_MovementServices.m_flGroundMoveEfficiency = jsonData["CCSPlayer_MovementServices"]["m_flGroundMoveEfficiency"];
CCSPlayer_MovementServices.m_nOldWaterLevel = jsonData["CCSPlayer_MovementServices"]["m_nOldWaterLevel"];
CCSPlayer_MovementServices.m_flWaterEntryTime = jsonData["CCSPlayer_MovementServices"]["m_flWaterEntryTime"];
CCSPlayer_MovementServices.m_vecForward = jsonData["CCSPlayer_MovementServices"]["m_vecForward"];
CCSPlayer_MovementServices.m_vecLeft = jsonData["CCSPlayer_MovementServices"]["m_vecLeft"];
CCSPlayer_MovementServices.m_vecUp = jsonData["CCSPlayer_MovementServices"]["m_vecUp"];
CCSPlayer_MovementServices.m_nGameCodeHasMovedPlayerAfterCommand = jsonData["CCSPlayer_MovementServices"]["m_nGameCodeHasMovedPlayerAfterCommand"];
CCSPlayer_MovementServices.m_bOldJumpPressed = jsonData["CCSPlayer_MovementServices"]["m_bOldJumpPressed"];
CCSPlayer_MovementServices.m_flJumpPressedTime = jsonData["CCSPlayer_MovementServices"]["m_flJumpPressedTime"];
CCSPlayer_MovementServices.m_flJumpUntil = jsonData["CCSPlayer_MovementServices"]["m_flJumpUntil"];
CCSPlayer_MovementServices.m_flJumpVel = jsonData["CCSPlayer_MovementServices"]["m_flJumpVel"];
CCSPlayer_MovementServices.m_fStashGrenadeParameterWhen = jsonData["CCSPlayer_MovementServices"]["m_fStashGrenadeParameterWhen"];
CCSPlayer_MovementServices.m_nButtonDownMaskPrev = jsonData["CCSPlayer_MovementServices"]["m_nButtonDownMaskPrev"];
CCSPlayer_MovementServices.m_flOffsetTickCompleteTime = jsonData["CCSPlayer_MovementServices"]["m_flOffsetTickCompleteTime"];
CCSPlayer_MovementServices.m_flOffsetTickStashedSpeed = jsonData["CCSPlayer_MovementServices"]["m_flOffsetTickStashedSpeed"];
CCSPlayer_MovementServices.m_flStamina = jsonData["CCSPlayer_MovementServices"]["m_flStamina"];
CCSPlayer_MovementServices.m_flHeightAtJumpStart = jsonData["CCSPlayer_MovementServices"]["m_flHeightAtJumpStart"];
CCSPlayer_MovementServices.m_flMaxJumpHeightThisJump = jsonData["CCSPlayer_MovementServices"]["m_flMaxJumpHeightThisJump"];
CCSPlayer_MovementServices.m_flMaxJumpHeightLastJump = jsonData["CCSPlayer_MovementServices"]["m_flMaxJumpHeightLastJump"];
CCSPlayer_MovementServices.m_bMadeFootstepNoise = jsonData["CCSPlayer_MovementServices"]["m_bMadeFootstepNoise"];
CCSPlayer_MovementServices.m_iFootsteps = jsonData["CCSPlayer_MovementServices"]["m_iFootsteps"];

// Atribuições para sky3dparams_t
// sky3dparams_t Offsets
sky3dparams_t.scale = jsonData["sky3dparams_t"]["scale"];
sky3dparams_t.origin = jsonData["sky3dparams_t"]["origin"];
sky3dparams_t.bClip3DSkyBoxNearToWorldFar = jsonData["sky3dparams_t"]["bClip3DSkyBoxNearToWorldFar"];
sky3dparams_t.flClip3DSkyBoxNearToWorldFarOffset = jsonData["sky3dparams_t"]["flClip3DSkyBoxNearToWorldFarOffset"];
sky3dparams_t.fog = jsonData["sky3dparams_t"]["fog"];
sky3dparams_t.m_nWorldGroupID = jsonData["sky3dparams_t"]["m_nWorldGroupID"];

// Atribuições para C_Item
// C_Item Offsets
C_Item.m_pReticleHintTextName = jsonData["C_Item"]["m_pReticleHintTextName"];

// Atribuições para C_SoundEventPathCornerEntity
// C_SoundEventPathCornerEntity Offsets
C_SoundEventPathCornerEntity.m_vecCornerPairsNetworked = jsonData["C_SoundEventPathCornerEntity"]["m_vecCornerPairsNetworked"];

// Atribuições para C_CSGameRules
// C_CSGameRules Offsets
C_CSGameRules.m_bFreezePeriod = jsonData["C_CSGameRules"]["m_bFreezePeriod"];
C_CSGameRules.m_bWarmupPeriod = jsonData["C_CSGameRules"]["m_bWarmupPeriod"];
C_CSGameRules.m_fWarmupPeriodEnd = jsonData["C_CSGameRules"]["m_fWarmupPeriodEnd"];
C_CSGameRules.m_fWarmupPeriodStart = jsonData["C_CSGameRules"]["m_fWarmupPeriodStart"];
C_CSGameRules.m_bServerPaused = jsonData["C_CSGameRules"]["m_bServerPaused"];
C_CSGameRules.m_bTerroristTimeOutActive = jsonData["C_CSGameRules"]["m_bTerroristTimeOutActive"];
C_CSGameRules.m_bCTTimeOutActive = jsonData["C_CSGameRules"]["m_bCTTimeOutActive"];
C_CSGameRules.m_flTerroristTimeOutRemaining = jsonData["C_CSGameRules"]["m_flTerroristTimeOutRemaining"];
C_CSGameRules.m_flCTTimeOutRemaining = jsonData["C_CSGameRules"]["m_flCTTimeOutRemaining"];
C_CSGameRules.m_nTerroristTimeOuts = jsonData["C_CSGameRules"]["m_nTerroristTimeOuts"];
C_CSGameRules.m_nCTTimeOuts = jsonData["C_CSGameRules"]["m_nCTTimeOuts"];
C_CSGameRules.m_bTechnicalTimeOut = jsonData["C_CSGameRules"]["m_bTechnicalTimeOut"];
C_CSGameRules.m_bMatchWaitingForResume = jsonData["C_CSGameRules"]["m_bMatchWaitingForResume"];
C_CSGameRules.m_iRoundTime = jsonData["C_CSGameRules"]["m_iRoundTime"];
C_CSGameRules.m_fMatchStartTime = jsonData["C_CSGameRules"]["m_fMatchStartTime"];
C_CSGameRules.m_fRoundStartTime = jsonData["C_CSGameRules"]["m_fRoundStartTime"];
C_CSGameRules.m_flRestartRoundTime = jsonData["C_CSGameRules"]["m_flRestartRoundTime"];
C_CSGameRules.m_bGameRestart = jsonData["C_CSGameRules"]["m_bGameRestart"];
C_CSGameRules.m_flGameStartTime = jsonData["C_CSGameRules"]["m_flGameStartTime"];
C_CSGameRules.m_timeUntilNextPhaseStarts = jsonData["C_CSGameRules"]["m_timeUntilNextPhaseStarts"];
C_CSGameRules.m_gamePhase = jsonData["C_CSGameRules"]["m_gamePhase"];
C_CSGameRules.m_totalRoundsPlayed = jsonData["C_CSGameRules"]["m_totalRoundsPlayed"];
C_CSGameRules.m_nRoundsPlayedThisPhase = jsonData["C_CSGameRules"]["m_nRoundsPlayedThisPhase"];
C_CSGameRules.m_nOvertimePlaying = jsonData["C_CSGameRules"]["m_nOvertimePlaying"];
C_CSGameRules.m_iHostagesRemaining = jsonData["C_CSGameRules"]["m_iHostagesRemaining"];
C_CSGameRules.m_bAnyHostageReached = jsonData["C_CSGameRules"]["m_bAnyHostageReached"];
C_CSGameRules.m_bMapHasBombTarget = jsonData["C_CSGameRules"]["m_bMapHasBombTarget"];
C_CSGameRules.m_bMapHasRescueZone = jsonData["C_CSGameRules"]["m_bMapHasRescueZone"];
C_CSGameRules.m_bMapHasBuyZone = jsonData["C_CSGameRules"]["m_bMapHasBuyZone"];
C_CSGameRules.m_bIsQueuedMatchmaking = jsonData["C_CSGameRules"]["m_bIsQueuedMatchmaking"];
C_CSGameRules.m_nQueuedMatchmakingMode = jsonData["C_CSGameRules"]["m_nQueuedMatchmakingMode"];
C_CSGameRules.m_bIsValveDS = jsonData["C_CSGameRules"]["m_bIsValveDS"];
C_CSGameRules.m_bLogoMap = jsonData["C_CSGameRules"]["m_bLogoMap"];
C_CSGameRules.m_bPlayAllStepSoundsOnServer = jsonData["C_CSGameRules"]["m_bPlayAllStepSoundsOnServer"];
C_CSGameRules.m_iSpectatorSlotCount = jsonData["C_CSGameRules"]["m_iSpectatorSlotCount"];
C_CSGameRules.m_MatchDevice = jsonData["C_CSGameRules"]["m_MatchDevice"];
C_CSGameRules.m_bHasMatchStarted = jsonData["C_CSGameRules"]["m_bHasMatchStarted"];
C_CSGameRules.m_nNextMapInMapgroup = jsonData["C_CSGameRules"]["m_nNextMapInMapgroup"];
C_CSGameRules.m_szTournamentEventName = jsonData["C_CSGameRules"]["m_szTournamentEventName"];
C_CSGameRules.m_szTournamentEventStage = jsonData["C_CSGameRules"]["m_szTournamentEventStage"];
C_CSGameRules.m_szMatchStatTxt = jsonData["C_CSGameRules"]["m_szMatchStatTxt"];
C_CSGameRules.m_szTournamentPredictionsTxt = jsonData["C_CSGameRules"]["m_szTournamentPredictionsTxt"];
C_CSGameRules.m_nTournamentPredictionsPct = jsonData["C_CSGameRules"]["m_nTournamentPredictionsPct"];
C_CSGameRules.m_flCMMItemDropRevealStartTime = jsonData["C_CSGameRules"]["m_flCMMItemDropRevealStartTime"];
C_CSGameRules.m_flCMMItemDropRevealEndTime = jsonData["C_CSGameRules"]["m_flCMMItemDropRevealEndTime"];
C_CSGameRules.m_bIsDroppingItems = jsonData["C_CSGameRules"]["m_bIsDroppingItems"];
C_CSGameRules.m_bIsQuestEligible = jsonData["C_CSGameRules"]["m_bIsQuestEligible"];
C_CSGameRules.m_bIsHltvActive = jsonData["C_CSGameRules"]["m_bIsHltvActive"];
C_CSGameRules.m_arrProhibitedItemIndices = jsonData["C_CSGameRules"]["m_arrProhibitedItemIndices"];
C_CSGameRules.m_arrTournamentActiveCasterAccounts = jsonData["C_CSGameRules"]["m_arrTournamentActiveCasterAccounts"];
C_CSGameRules.m_numBestOfMaps = jsonData["C_CSGameRules"]["m_numBestOfMaps"];
C_CSGameRules.m_nHalloweenMaskListSeed = jsonData["C_CSGameRules"]["m_nHalloweenMaskListSeed"];
C_CSGameRules.m_bBombDropped = jsonData["C_CSGameRules"]["m_bBombDropped"];
C_CSGameRules.m_bBombPlanted = jsonData["C_CSGameRules"]["m_bBombPlanted"];
C_CSGameRules.m_iRoundWinStatus = jsonData["C_CSGameRules"]["m_iRoundWinStatus"];
C_CSGameRules.m_eRoundWinReason = jsonData["C_CSGameRules"]["m_eRoundWinReason"];
C_CSGameRules.m_bTCantBuy = jsonData["C_CSGameRules"]["m_bTCantBuy"];
C_CSGameRules.m_bCTCantBuy = jsonData["C_CSGameRules"]["m_bCTCantBuy"];
C_CSGameRules.m_iMatchStats_RoundResults = jsonData["C_CSGameRules"]["m_iMatchStats_RoundResults"];
C_CSGameRules.m_iMatchStats_PlayersAlive_CT = jsonData["C_CSGameRules"]["m_iMatchStats_PlayersAlive_CT"];
C_CSGameRules.m_iMatchStats_PlayersAlive_T = jsonData["C_CSGameRules"]["m_iMatchStats_PlayersAlive_T"];
C_CSGameRules.m_TeamRespawnWaveTimes = jsonData["C_CSGameRules"]["m_TeamRespawnWaveTimes"];
C_CSGameRules.m_flNextRespawnWave = jsonData["C_CSGameRules"]["m_flNextRespawnWave"];
C_CSGameRules.m_nServerQuestID = jsonData["C_CSGameRules"]["m_nServerQuestID"];
C_CSGameRules.m_vMinimapMins = jsonData["C_CSGameRules"]["m_vMinimapMins"];
C_CSGameRules.m_vMinimapMaxs = jsonData["C_CSGameRules"]["m_vMinimapMaxs"];
C_CSGameRules.m_MinimapVerticalSectionHeights = jsonData["C_CSGameRules"]["m_MinimapVerticalSectionHeights"];
C_CSGameRules.m_bSpawnedTerrorHuntHeavy = jsonData["C_CSGameRules"]["m_bSpawnedTerrorHuntHeavy"];
C_CSGameRules.m_nEndMatchMapGroupVoteTypes = jsonData["C_CSGameRules"]["m_nEndMatchMapGroupVoteTypes"];
C_CSGameRules.m_nEndMatchMapGroupVoteOptions = jsonData["C_CSGameRules"]["m_nEndMatchMapGroupVoteOptions"];
C_CSGameRules.m_nEndMatchMapVoteWinner = jsonData["C_CSGameRules"]["m_nEndMatchMapVoteWinner"];
C_CSGameRules.m_iNumConsecutiveCTLoses = jsonData["C_CSGameRules"]["m_iNumConsecutiveCTLoses"];
C_CSGameRules.m_iNumConsecutiveTerroristLoses = jsonData["C_CSGameRules"]["m_iNumConsecutiveTerroristLoses"];
C_CSGameRules.m_bMarkClientStopRecordAtRoundEnd = jsonData["C_CSGameRules"]["m_bMarkClientStopRecordAtRoundEnd"];
C_CSGameRules.m_nMatchAbortedEarlyReason = jsonData["C_CSGameRules"]["m_nMatchAbortedEarlyReason"];
C_CSGameRules.m_bHasTriggeredRoundStartMusic = jsonData["C_CSGameRules"]["m_bHasTriggeredRoundStartMusic"];
C_CSGameRules.m_bSwitchingTeamsAtRoundReset = jsonData["C_CSGameRules"]["m_bSwitchingTeamsAtRoundReset"];
C_CSGameRules.m_pGameModeRules = jsonData["C_CSGameRules"]["m_pGameModeRules"];
C_CSGameRules.m_RetakeRules = jsonData["C_CSGameRules"]["m_RetakeRules"];
C_CSGameRules.m_nMatchEndCount = jsonData["C_CSGameRules"]["m_nMatchEndCount"];
C_CSGameRules.m_nTTeamIntroVariant = jsonData["C_CSGameRules"]["m_nTTeamIntroVariant"];
C_CSGameRules.m_nCTTeamIntroVariant = jsonData["C_CSGameRules"]["m_nCTTeamIntroVariant"];
C_CSGameRules.m_bTeamIntroPeriod = jsonData["C_CSGameRules"]["m_bTeamIntroPeriod"];
C_CSGameRules.m_iRoundEndWinnerTeam = jsonData["C_CSGameRules"]["m_iRoundEndWinnerTeam"];
C_CSGameRules.m_eRoundEndReason = jsonData["C_CSGameRules"]["m_eRoundEndReason"];
C_CSGameRules.m_bRoundEndShowTimerDefend = jsonData["C_CSGameRules"]["m_bRoundEndShowTimerDefend"];
C_CSGameRules.m_iRoundEndTimerTime = jsonData["C_CSGameRules"]["m_iRoundEndTimerTime"];
C_CSGameRules.m_sRoundEndFunFactToken = jsonData["C_CSGameRules"]["m_sRoundEndFunFactToken"];
C_CSGameRules.m_iRoundEndFunFactPlayerSlot = jsonData["C_CSGameRules"]["m_iRoundEndFunFactPlayerSlot"];
C_CSGameRules.m_iRoundEndFunFactData1 = jsonData["C_CSGameRules"]["m_iRoundEndFunFactData1"];
C_CSGameRules.m_iRoundEndFunFactData2 = jsonData["C_CSGameRules"]["m_iRoundEndFunFactData2"];
C_CSGameRules.m_iRoundEndFunFactData3 = jsonData["C_CSGameRules"]["m_iRoundEndFunFactData3"];
C_CSGameRules.m_sRoundEndMessage = jsonData["C_CSGameRules"]["m_sRoundEndMessage"];
C_CSGameRules.m_iRoundEndPlayerCount = jsonData["C_CSGameRules"]["m_iRoundEndPlayerCount"];
C_CSGameRules.m_bRoundEndNoMusic = jsonData["C_CSGameRules"]["m_bRoundEndNoMusic"];
C_CSGameRules.m_iRoundEndLegacy = jsonData["C_CSGameRules"]["m_iRoundEndLegacy"];
C_CSGameRules.m_nRoundEndCount = jsonData["C_CSGameRules"]["m_nRoundEndCount"];
C_CSGameRules.m_iRoundStartRoundNumber = jsonData["C_CSGameRules"]["m_iRoundStartRoundNumber"];
C_CSGameRules.m_nRoundStartCount = jsonData["C_CSGameRules"]["m_nRoundStartCount"];
C_CSGameRules.m_flLastPerfSampleTime = jsonData["C_CSGameRules"]["m_flLastPerfSampleTime"];

// Atribuições para CBodyComponentSkeletonInstance
// CBodyComponentSkeletonInstance Offsets
CBodyComponentSkeletonInstance.m_skeletonInstance = jsonData["CBodyComponentSkeletonInstance"]["m_skeletonInstance"];

// Atribuições para C_BaseModelEntity
// C_BaseModelEntity Offsets
C_BaseModelEntity.m_CRenderComponent = jsonData["C_BaseModelEntity"]["m_CRenderComponent"];
C_BaseModelEntity.m_CHitboxComponent = jsonData["C_BaseModelEntity"]["m_CHitboxComponent"];
C_BaseModelEntity.m_bInitModelEffects = jsonData["C_BaseModelEntity"]["m_bInitModelEffects"];
C_BaseModelEntity.m_bIsStaticProp = jsonData["C_BaseModelEntity"]["m_bIsStaticProp"];
C_BaseModelEntity.m_nLastAddDecal = jsonData["C_BaseModelEntity"]["m_nLastAddDecal"];
C_BaseModelEntity.m_nDecalsAdded = jsonData["C_BaseModelEntity"]["m_nDecalsAdded"];
C_BaseModelEntity.m_iOldHealth = jsonData["C_BaseModelEntity"]["m_iOldHealth"];
C_BaseModelEntity.m_nRenderMode = jsonData["C_BaseModelEntity"]["m_nRenderMode"];
C_BaseModelEntity.m_nRenderFX = jsonData["C_BaseModelEntity"]["m_nRenderFX"];
C_BaseModelEntity.m_bAllowFadeInView = jsonData["C_BaseModelEntity"]["m_bAllowFadeInView"];
C_BaseModelEntity.m_clrRender = jsonData["C_BaseModelEntity"]["m_clrRender"];
C_BaseModelEntity.m_vecRenderAttributes = jsonData["C_BaseModelEntity"]["m_vecRenderAttributes"];
C_BaseModelEntity.m_bRenderToCubemaps = jsonData["C_BaseModelEntity"]["m_bRenderToCubemaps"];
C_BaseModelEntity.m_bNoInterpolate = jsonData["C_BaseModelEntity"]["m_bNoInterpolate"];
C_BaseModelEntity.m_Collision = jsonData["C_BaseModelEntity"]["m_Collision"];
C_BaseModelEntity.m_Glow = jsonData["C_BaseModelEntity"]["m_Glow"];
C_BaseModelEntity.m_flGlowBackfaceMult = jsonData["C_BaseModelEntity"]["m_flGlowBackfaceMult"];
C_BaseModelEntity.m_fadeMinDist = jsonData["C_BaseModelEntity"]["m_fadeMinDist"];
C_BaseModelEntity.m_fadeMaxDist = jsonData["C_BaseModelEntity"]["m_fadeMaxDist"];
C_BaseModelEntity.m_flFadeScale = jsonData["C_BaseModelEntity"]["m_flFadeScale"];
C_BaseModelEntity.m_flShadowStrength = jsonData["C_BaseModelEntity"]["m_flShadowStrength"];
C_BaseModelEntity.m_nObjectCulling = jsonData["C_BaseModelEntity"]["m_nObjectCulling"];
C_BaseModelEntity.m_nAddDecal = jsonData["C_BaseModelEntity"]["m_nAddDecal"];
C_BaseModelEntity.m_vDecalPosition = jsonData["C_BaseModelEntity"]["m_vDecalPosition"];
C_BaseModelEntity.m_vDecalForwardAxis = jsonData["C_BaseModelEntity"]["m_vDecalForwardAxis"];
C_BaseModelEntity.m_flDecalHealBloodRate = jsonData["C_BaseModelEntity"]["m_flDecalHealBloodRate"];
C_BaseModelEntity.m_flDecalHealHeightRate = jsonData["C_BaseModelEntity"]["m_flDecalHealHeightRate"];
C_BaseModelEntity.m_ConfigEntitiesToPropagateMaterialDecalsTo = jsonData["C_BaseModelEntity"]["m_ConfigEntitiesToPropagateMaterialDecalsTo"];
C_BaseModelEntity.m_vecViewOffset = jsonData["C_BaseModelEntity"]["m_vecViewOffset"];
C_BaseModelEntity.m_pClientAlphaProperty = jsonData["C_BaseModelEntity"]["m_pClientAlphaProperty"];
C_BaseModelEntity.m_ClientOverrideTint = jsonData["C_BaseModelEntity"]["m_ClientOverrideTint"];
C_BaseModelEntity.m_bUseClientOverrideTint = jsonData["C_BaseModelEntity"]["m_bUseClientOverrideTint"];

// Atribuições para C_FootstepControl
// C_FootstepControl Offsets
C_FootstepControl.m_source = jsonData["C_FootstepControl"]["m_source"];
C_FootstepControl.m_destination = jsonData["C_FootstepControl"]["m_destination"];

// Atribuições para C_PointClientUIHUD
// C_PointClientUIHUD Offsets
C_PointClientUIHUD.m_bCheckCSSClasses = jsonData["C_PointClientUIHUD"]["m_bCheckCSSClasses"];
C_PointClientUIHUD.m_bIgnoreInput = jsonData["C_PointClientUIHUD"]["m_bIgnoreInput"];
C_PointClientUIHUD.m_flWidth = jsonData["C_PointClientUIHUD"]["m_flWidth"];
C_PointClientUIHUD.m_flHeight = jsonData["C_PointClientUIHUD"]["m_flHeight"];
C_PointClientUIHUD.m_flDPI = jsonData["C_PointClientUIHUD"]["m_flDPI"];
C_PointClientUIHUD.m_flInteractDistance = jsonData["C_PointClientUIHUD"]["m_flInteractDistance"];
C_PointClientUIHUD.m_flDepthOffset = jsonData["C_PointClientUIHUD"]["m_flDepthOffset"];
C_PointClientUIHUD.m_unOwnerContext = jsonData["C_PointClientUIHUD"]["m_unOwnerContext"];
C_PointClientUIHUD.m_unHorizontalAlign = jsonData["C_PointClientUIHUD"]["m_unHorizontalAlign"];
C_PointClientUIHUD.m_unVerticalAlign = jsonData["C_PointClientUIHUD"]["m_unVerticalAlign"];
C_PointClientUIHUD.m_unOrientation = jsonData["C_PointClientUIHUD"]["m_unOrientation"];
C_PointClientUIHUD.m_bAllowInteractionFromAllSceneWorlds = jsonData["C_PointClientUIHUD"]["m_bAllowInteractionFromAllSceneWorlds"];
C_PointClientUIHUD.m_vecCSSClasses = jsonData["C_PointClientUIHUD"]["m_vecCSSClasses"];

// Atribuições para C_SpotlightEnd
// C_SpotlightEnd Offsets
C_SpotlightEnd.m_flLightScale = jsonData["C_SpotlightEnd"]["m_flLightScale"];
C_SpotlightEnd.m_Radius = jsonData["C_SpotlightEnd"]["m_Radius"];

// Atribuições para CEconItemAttribute
// CEconItemAttribute Offsets
CEconItemAttribute.m_iAttributeDefinitionIndex = jsonData["CEconItemAttribute"]["m_iAttributeDefinitionIndex"];
CEconItemAttribute.m_flValue = jsonData["CEconItemAttribute"]["m_flValue"];
CEconItemAttribute.m_flInitialValue = jsonData["CEconItemAttribute"]["m_flInitialValue"];
CEconItemAttribute.m_nRefundableCurrency = jsonData["CEconItemAttribute"]["m_nRefundableCurrency"];
CEconItemAttribute.m_bSetBonus = jsonData["CEconItemAttribute"]["m_bSetBonus"];

// Atribuições para C_PointCamera
// C_PointCamera Offsets
C_PointCamera.m_FOV = jsonData["C_PointCamera"]["m_FOV"];
C_PointCamera.m_Resolution = jsonData["C_PointCamera"]["m_Resolution"];
C_PointCamera.m_bFogEnable = jsonData["C_PointCamera"]["m_bFogEnable"];
C_PointCamera.m_FogColor = jsonData["C_PointCamera"]["m_FogColor"];
C_PointCamera.m_flFogStart = jsonData["C_PointCamera"]["m_flFogStart"];
C_PointCamera.m_flFogEnd = jsonData["C_PointCamera"]["m_flFogEnd"];
C_PointCamera.m_flFogMaxDensity = jsonData["C_PointCamera"]["m_flFogMaxDensity"];
C_PointCamera.m_bActive = jsonData["C_PointCamera"]["m_bActive"];
C_PointCamera.m_bUseScreenAspectRatio = jsonData["C_PointCamera"]["m_bUseScreenAspectRatio"];
C_PointCamera.m_flAspectRatio = jsonData["C_PointCamera"]["m_flAspectRatio"];
C_PointCamera.m_bNoSky = jsonData["C_PointCamera"]["m_bNoSky"];
C_PointCamera.m_fBrightness = jsonData["C_PointCamera"]["m_fBrightness"];
C_PointCamera.m_flZFar = jsonData["C_PointCamera"]["m_flZFar"];
C_PointCamera.m_flZNear = jsonData["C_PointCamera"]["m_flZNear"];
C_PointCamera.m_bCanHLTVUse = jsonData["C_PointCamera"]["m_bCanHLTVUse"];
C_PointCamera.m_bAlignWithParent = jsonData["C_PointCamera"]["m_bAlignWithParent"];
C_PointCamera.m_bDofEnabled = jsonData["C_PointCamera"]["m_bDofEnabled"];
C_PointCamera.m_flDofNearBlurry = jsonData["C_PointCamera"]["m_flDofNearBlurry"];
C_PointCamera.m_flDofNearCrisp = jsonData["C_PointCamera"]["m_flDofNearCrisp"];
C_PointCamera.m_flDofFarCrisp = jsonData["C_PointCamera"]["m_flDofFarCrisp"];
C_PointCamera.m_flDofFarBlurry = jsonData["C_PointCamera"]["m_flDofFarBlurry"];
C_PointCamera.m_flDofTiltToGround = jsonData["C_PointCamera"]["m_flDofTiltToGround"];
C_PointCamera.m_TargetFOV = jsonData["C_PointCamera"]["m_TargetFOV"];
C_PointCamera.m_DegreesPerSecond = jsonData["C_PointCamera"]["m_DegreesPerSecond"];
C_PointCamera.m_bIsOn = jsonData["C_PointCamera"]["m_bIsOn"];
C_PointCamera.m_pNext = jsonData["C_PointCamera"]["m_pNext"];

// Atribuições para C_EnvWind
// C_EnvWind Offsets
C_EnvWind.m_EnvWindShared = jsonData["C_EnvWind"]["m_EnvWindShared"];

// Atribuições para C_BaseCombatCharacter
// C_BaseCombatCharacter Offsets
C_BaseCombatCharacter.m_hMyWearables = jsonData["C_BaseCombatCharacter"]["m_hMyWearables"];
C_BaseCombatCharacter.m_leftFootAttachment = jsonData["C_BaseCombatCharacter"]["m_leftFootAttachment"];
C_BaseCombatCharacter.m_rightFootAttachment = jsonData["C_BaseCombatCharacter"]["m_rightFootAttachment"];
C_BaseCombatCharacter.m_nWaterWakeMode = jsonData["C_BaseCombatCharacter"]["m_nWaterWakeMode"];
C_BaseCombatCharacter.m_flWaterWorldZ = jsonData["C_BaseCombatCharacter"]["m_flWaterWorldZ"];
C_BaseCombatCharacter.m_flWaterNextTraceTime = jsonData["C_BaseCombatCharacter"]["m_flWaterNextTraceTime"];

// Atribuições para C_SoundEventSphereEntity
// C_SoundEventSphereEntity Offsets
C_SoundEventSphereEntity.m_flRadius = jsonData["C_SoundEventSphereEntity"]["m_flRadius"];

// Atribuições para C_SceneEntity
// C_SceneEntity Offsets
C_SceneEntity.m_bIsPlayingBack = jsonData["C_SceneEntity"]["m_bIsPlayingBack"];
C_SceneEntity.m_bPaused = jsonData["C_SceneEntity"]["m_bPaused"];
C_SceneEntity.m_bMultiplayer = jsonData["C_SceneEntity"]["m_bMultiplayer"];
C_SceneEntity.m_bAutogenerated = jsonData["C_SceneEntity"]["m_bAutogenerated"];
C_SceneEntity.m_flForceClientTime = jsonData["C_SceneEntity"]["m_flForceClientTime"];
C_SceneEntity.m_nSceneStringIndex = jsonData["C_SceneEntity"]["m_nSceneStringIndex"];
C_SceneEntity.m_bClientOnly = jsonData["C_SceneEntity"]["m_bClientOnly"];
C_SceneEntity.m_hOwner = jsonData["C_SceneEntity"]["m_hOwner"];
C_SceneEntity.m_hActorList = jsonData["C_SceneEntity"]["m_hActorList"];
C_SceneEntity.m_bWasPlaying = jsonData["C_SceneEntity"]["m_bWasPlaying"];
C_SceneEntity.m_QueuedEvents = jsonData["C_SceneEntity"]["m_QueuedEvents"];
C_SceneEntity.m_flCurrentTime = jsonData["C_SceneEntity"]["m_flCurrentTime"];

// Atribuições para CPlayer_CameraServices
// CPlayer_CameraServices Offsets
CPlayer_CameraServices.m_vecCsViewPunchAngle = jsonData["CPlayer_CameraServices"]["m_vecCsViewPunchAngle"];
CPlayer_CameraServices.m_nCsViewPunchAngleTick = jsonData["CPlayer_CameraServices"]["m_nCsViewPunchAngleTick"];
CPlayer_CameraServices.m_flCsViewPunchAngleTickRatio = jsonData["CPlayer_CameraServices"]["m_flCsViewPunchAngleTickRatio"];
CPlayer_CameraServices.m_PlayerFog = jsonData["CPlayer_CameraServices"]["m_PlayerFog"];
CPlayer_CameraServices.m_hColorCorrectionCtrl = jsonData["CPlayer_CameraServices"]["m_hColorCorrectionCtrl"];
CPlayer_CameraServices.m_hViewEntity = jsonData["CPlayer_CameraServices"]["m_hViewEntity"];
CPlayer_CameraServices.m_hTonemapController = jsonData["CPlayer_CameraServices"]["m_hTonemapController"];
CPlayer_CameraServices.m_audio = jsonData["CPlayer_CameraServices"]["m_audio"];
CPlayer_CameraServices.m_PostProcessingVolumes = jsonData["CPlayer_CameraServices"]["m_PostProcessingVolumes"];
CPlayer_CameraServices.m_flOldPlayerZ = jsonData["CPlayer_CameraServices"]["m_flOldPlayerZ"];
CPlayer_CameraServices.m_flOldPlayerViewOffsetZ = jsonData["CPlayer_CameraServices"]["m_flOldPlayerViewOffsetZ"];
CPlayer_CameraServices.m_CurrentFog = jsonData["CPlayer_CameraServices"]["m_CurrentFog"];
CPlayer_CameraServices.m_hOldFogController = jsonData["CPlayer_CameraServices"]["m_hOldFogController"];
CPlayer_CameraServices.m_bOverrideFogColor = jsonData["CPlayer_CameraServices"]["m_bOverrideFogColor"];
CPlayer_CameraServices.m_OverrideFogColor = jsonData["CPlayer_CameraServices"]["m_OverrideFogColor"];
CPlayer_CameraServices.m_bOverrideFogStartEnd = jsonData["CPlayer_CameraServices"]["m_bOverrideFogStartEnd"];
CPlayer_CameraServices.m_fOverrideFogStart = jsonData["CPlayer_CameraServices"]["m_fOverrideFogStart"];
CPlayer_CameraServices.m_fOverrideFogEnd = jsonData["CPlayer_CameraServices"]["m_fOverrideFogEnd"];
CPlayer_CameraServices.m_hActivePostProcessingVolume = jsonData["CPlayer_CameraServices"]["m_hActivePostProcessingVolume"];
CPlayer_CameraServices.m_angDemoViewAngles = jsonData["CPlayer_CameraServices"]["m_angDemoViewAngles"];
CPlayer_CameraServices.m_hTriggerSoundscapeList = jsonData["CPlayer_CameraServices"]["m_hTriggerSoundscapeList"];

// Atribuições para C_BaseCSGrenade
// C_BaseCSGrenade Offsets
C_BaseCSGrenade.m_bClientPredictDelete = jsonData["C_BaseCSGrenade"]["m_bClientPredictDelete"];
C_BaseCSGrenade.m_bRedraw = jsonData["C_BaseCSGrenade"]["m_bRedraw"];
C_BaseCSGrenade.m_bIsHeldByPlayer = jsonData["C_BaseCSGrenade"]["m_bIsHeldByPlayer"];
C_BaseCSGrenade.m_bPinPulled = jsonData["C_BaseCSGrenade"]["m_bPinPulled"];
C_BaseCSGrenade.m_bJumpThrow = jsonData["C_BaseCSGrenade"]["m_bJumpThrow"];
C_BaseCSGrenade.m_bThrowAnimating = jsonData["C_BaseCSGrenade"]["m_bThrowAnimating"];
C_BaseCSGrenade.m_fThrowTime = jsonData["C_BaseCSGrenade"]["m_fThrowTime"];
C_BaseCSGrenade.m_flThrowStrength = jsonData["C_BaseCSGrenade"]["m_flThrowStrength"];
C_BaseCSGrenade.m_flThrowStrengthApproach = jsonData["C_BaseCSGrenade"]["m_flThrowStrengthApproach"];
C_BaseCSGrenade.m_fDropTime = jsonData["C_BaseCSGrenade"]["m_fDropTime"];
C_BaseCSGrenade.m_fPinPullTime = jsonData["C_BaseCSGrenade"]["m_fPinPullTime"];
C_BaseCSGrenade.m_bJustPulledPin = jsonData["C_BaseCSGrenade"]["m_bJustPulledPin"];
C_BaseCSGrenade.m_nNextHoldTick = jsonData["C_BaseCSGrenade"]["m_nNextHoldTick"];
C_BaseCSGrenade.m_flNextHoldFrac = jsonData["C_BaseCSGrenade"]["m_flNextHoldFrac"];
C_BaseCSGrenade.m_hSwitchToWeaponAfterThrow = jsonData["C_BaseCSGrenade"]["m_hSwitchToWeaponAfterThrow"];

// Atribuições para C_FuncMonitor
// C_FuncMonitor Offsets
C_FuncMonitor.m_targetCamera = jsonData["C_FuncMonitor"]["m_targetCamera"];
C_FuncMonitor.m_nResolutionEnum = jsonData["C_FuncMonitor"]["m_nResolutionEnum"];
C_FuncMonitor.m_bRenderShadows = jsonData["C_FuncMonitor"]["m_bRenderShadows"];
C_FuncMonitor.m_bUseUniqueColorTarget = jsonData["C_FuncMonitor"]["m_bUseUniqueColorTarget"];
C_FuncMonitor.m_brushModelName = jsonData["C_FuncMonitor"]["m_brushModelName"];
C_FuncMonitor.m_hTargetCamera = jsonData["C_FuncMonitor"]["m_hTargetCamera"];
C_FuncMonitor.m_bEnabled = jsonData["C_FuncMonitor"]["m_bEnabled"];
C_FuncMonitor.m_bDraw3DSkybox = jsonData["C_FuncMonitor"]["m_bDraw3DSkybox"];

// Atribuições para C_RopeKeyframe__CPhysicsDelegate
// C_RopeKeyframe__CPhysicsDelegate Offsets
C_RopeKeyframe__CPhysicsDelegate.m_pKeyframe = jsonData["C_RopeKeyframe__CPhysicsDelegate"]["m_pKeyframe"];

// Atribuições para CBodyComponent
// CBodyComponent Offsets
CBodyComponent.m_pSceneNode = jsonData["CBodyComponent"]["m_pSceneNode"];
CBodyComponent.__m_pChainEntity = jsonData["CBodyComponent"]["__m_pChainEntity"];

// Atribuições para C_SoundAreaEntitySphere
// C_SoundAreaEntitySphere Offsets
C_SoundAreaEntitySphere.m_flRadius = jsonData["C_SoundAreaEntitySphere"]["m_flRadius"];

// Atribuições para C_LightGlow
// C_LightGlow Offsets
C_LightGlow.m_nHorizontalSize = jsonData["C_LightGlow"]["m_nHorizontalSize"];
C_LightGlow.m_nVerticalSize = jsonData["C_LightGlow"]["m_nVerticalSize"];
C_LightGlow.m_nMinDist = jsonData["C_LightGlow"]["m_nMinDist"];
C_LightGlow.m_nMaxDist = jsonData["C_LightGlow"]["m_nMaxDist"];
C_LightGlow.m_nOuterMaxDist = jsonData["C_LightGlow"]["m_nOuterMaxDist"];
C_LightGlow.m_flGlowProxySize = jsonData["C_LightGlow"]["m_flGlowProxySize"];
C_LightGlow.m_flHDRColorScale = jsonData["C_LightGlow"]["m_flHDRColorScale"];
C_LightGlow.m_GlowOverlay = jsonData["C_LightGlow"]["m_GlowOverlay"];

// Atribuições para CountdownTimer
// CountdownTimer Offsets
CountdownTimer.m_duration = jsonData["CountdownTimer"]["m_duration"];
CountdownTimer.m_timestamp = jsonData["CountdownTimer"]["m_timestamp"];
CountdownTimer.m_timescale = jsonData["CountdownTimer"]["m_timescale"];
CountdownTimer.m_nWorldGroupId = jsonData["CountdownTimer"]["m_nWorldGroupId"];

// Atribuições para CGameSceneNodeHandle
// CGameSceneNodeHandle Offsets
CGameSceneNodeHandle.m_hOwner = jsonData["CGameSceneNodeHandle"]["m_hOwner"];
CGameSceneNodeHandle.m_name = jsonData["CGameSceneNodeHandle"]["m_name"];

// Atribuições para PredictedDamageTag_t
// PredictedDamageTag_t Offsets
PredictedDamageTag_t.nTagTick = jsonData["PredictedDamageTag_t"]["nTagTick"];
PredictedDamageTag_t.flFlinchModSmall = jsonData["PredictedDamageTag_t"]["flFlinchModSmall"];
PredictedDamageTag_t.flFlinchModLarge = jsonData["PredictedDamageTag_t"]["flFlinchModLarge"];
PredictedDamageTag_t.flFriendlyFireDamageReductionRatio = jsonData["PredictedDamageTag_t"]["flFriendlyFireDamageReductionRatio"];

// Atribuições para C_ClientRagdoll
// C_ClientRagdoll Offsets
C_ClientRagdoll.m_bFadeOut = jsonData["C_ClientRagdoll"]["m_bFadeOut"];
C_ClientRagdoll.m_bImportant = jsonData["C_ClientRagdoll"]["m_bImportant"];
C_ClientRagdoll.m_flEffectTime = jsonData["C_ClientRagdoll"]["m_flEffectTime"];
C_ClientRagdoll.m_gibDespawnTime = jsonData["C_ClientRagdoll"]["m_gibDespawnTime"];
C_ClientRagdoll.m_iCurrentFriction = jsonData["C_ClientRagdoll"]["m_iCurrentFriction"];
C_ClientRagdoll.m_iMinFriction = jsonData["C_ClientRagdoll"]["m_iMinFriction"];
C_ClientRagdoll.m_iMaxFriction = jsonData["C_ClientRagdoll"]["m_iMaxFriction"];
C_ClientRagdoll.m_iFrictionAnimState = jsonData["C_ClientRagdoll"]["m_iFrictionAnimState"];
C_ClientRagdoll.m_bReleaseRagdoll = jsonData["C_ClientRagdoll"]["m_bReleaseRagdoll"];
C_ClientRagdoll.m_iEyeAttachment = jsonData["C_ClientRagdoll"]["m_iEyeAttachment"];
C_ClientRagdoll.m_bFadingOut = jsonData["C_ClientRagdoll"]["m_bFadingOut"];
C_ClientRagdoll.m_flScaleEnd = jsonData["C_ClientRagdoll"]["m_flScaleEnd"];
C_ClientRagdoll.m_flScaleTimeStart = jsonData["C_ClientRagdoll"]["m_flScaleTimeStart"];
C_ClientRagdoll.m_flScaleTimeEnd = jsonData["C_ClientRagdoll"]["m_flScaleTimeEnd"];

// Atribuições para C_GlobalLight
// C_GlobalLight Offsets
C_GlobalLight.m_WindClothForceHandle = jsonData["C_GlobalLight"]["m_WindClothForceHandle"];

// Atribuições para C_CSPlayerResource
// C_CSPlayerResource Offsets
C_CSPlayerResource.m_bHostageAlive = jsonData["C_CSPlayerResource"]["m_bHostageAlive"];
C_CSPlayerResource.m_isHostageFollowingSomeone = jsonData["C_CSPlayerResource"]["m_isHostageFollowingSomeone"];
C_CSPlayerResource.m_iHostageEntityIDs = jsonData["C_CSPlayerResource"]["m_iHostageEntityIDs"];
C_CSPlayerResource.m_bombsiteCenterA = jsonData["C_CSPlayerResource"]["m_bombsiteCenterA"];
C_CSPlayerResource.m_bombsiteCenterB = jsonData["C_CSPlayerResource"]["m_bombsiteCenterB"];
C_CSPlayerResource.m_hostageRescueX = jsonData["C_CSPlayerResource"]["m_hostageRescueX"];
C_CSPlayerResource.m_hostageRescueY = jsonData["C_CSPlayerResource"]["m_hostageRescueY"];
C_CSPlayerResource.m_hostageRescueZ = jsonData["C_CSPlayerResource"]["m_hostageRescueZ"];
C_CSPlayerResource.m_bEndMatchNextMapAllVoted = jsonData["C_CSPlayerResource"]["m_bEndMatchNextMapAllVoted"];
C_CSPlayerResource.m_foundGoalPositions = jsonData["C_CSPlayerResource"]["m_foundGoalPositions"];

// Atribuições para CSkeletonInstance
// CSkeletonInstance Offsets
CSkeletonInstance.m_modelState = jsonData["CSkeletonInstance"]["m_modelState"];
CSkeletonInstance.m_bIsAnimationEnabled = jsonData["CSkeletonInstance"]["m_bIsAnimationEnabled"];
CSkeletonInstance.m_bUseParentRenderBounds = jsonData["CSkeletonInstance"]["m_bUseParentRenderBounds"];
CSkeletonInstance.m_bDisableSolidCollisionsForHierarchy = jsonData["CSkeletonInstance"]["m_bDisableSolidCollisionsForHierarchy"];
CSkeletonInstance.m_bDirtyMotionType = jsonData["CSkeletonInstance"]["m_bDirtyMotionType"];
CSkeletonInstance.m_bIsGeneratingLatchedParentSpaceState = jsonData["CSkeletonInstance"]["m_bIsGeneratingLatchedParentSpaceState"];
CSkeletonInstance.m_materialGroup = jsonData["CSkeletonInstance"]["m_materialGroup"];
CSkeletonInstance.m_nHitboxSet = jsonData["CSkeletonInstance"]["m_nHitboxSet"];

// Atribuições para CBodyComponentBaseAnimGraph
// CBodyComponentBaseAnimGraph Offsets
CBodyComponentBaseAnimGraph.m_animationController = jsonData["CBodyComponentBaseAnimGraph"]["m_animationController"];

// Atribuições para CBodyComponentPoint
// CBodyComponentPoint Offsets
CBodyComponentPoint.m_sceneNode = jsonData["CBodyComponentPoint"]["m_sceneNode"];

// Atribuições para C_SmokeGrenadeProjectile
// C_SmokeGrenadeProjectile Offsets
C_SmokeGrenadeProjectile.m_nSmokeEffectTickBegin = jsonData["C_SmokeGrenadeProjectile"]["m_nSmokeEffectTickBegin"];
C_SmokeGrenadeProjectile.m_bDidSmokeEffect = jsonData["C_SmokeGrenadeProjectile"]["m_bDidSmokeEffect"];
C_SmokeGrenadeProjectile.m_nRandomSeed = jsonData["C_SmokeGrenadeProjectile"]["m_nRandomSeed"];
C_SmokeGrenadeProjectile.m_vSmokeColor = jsonData["C_SmokeGrenadeProjectile"]["m_vSmokeColor"];
C_SmokeGrenadeProjectile.m_vSmokeDetonationPos = jsonData["C_SmokeGrenadeProjectile"]["m_vSmokeDetonationPos"];
C_SmokeGrenadeProjectile.m_VoxelFrameData = jsonData["C_SmokeGrenadeProjectile"]["m_VoxelFrameData"];
C_SmokeGrenadeProjectile.m_bSmokeVolumeDataReceived = jsonData["C_SmokeGrenadeProjectile"]["m_bSmokeVolumeDataReceived"];
C_SmokeGrenadeProjectile.m_bSmokeEffectSpawned = jsonData["C_SmokeGrenadeProjectile"]["m_bSmokeEffectSpawned"];

// Atribuições para C_CSGO_MapPreviewCameraPath
// C_CSGO_MapPreviewCameraPath Offsets
C_CSGO_MapPreviewCameraPath.m_flZFar = jsonData["C_CSGO_MapPreviewCameraPath"]["m_flZFar"];
C_CSGO_MapPreviewCameraPath.m_flZNear = jsonData["C_CSGO_MapPreviewCameraPath"]["m_flZNear"];
C_CSGO_MapPreviewCameraPath.m_bLoop = jsonData["C_CSGO_MapPreviewCameraPath"]["m_bLoop"];
C_CSGO_MapPreviewCameraPath.m_bVerticalFOV = jsonData["C_CSGO_MapPreviewCameraPath"]["m_bVerticalFOV"];
C_CSGO_MapPreviewCameraPath.m_bConstantSpeed = jsonData["C_CSGO_MapPreviewCameraPath"]["m_bConstantSpeed"];
C_CSGO_MapPreviewCameraPath.m_flDuration = jsonData["C_CSGO_MapPreviewCameraPath"]["m_flDuration"];
C_CSGO_MapPreviewCameraPath.m_flPathLength = jsonData["C_CSGO_MapPreviewCameraPath"]["m_flPathLength"];
C_CSGO_MapPreviewCameraPath.m_flPathDuration = jsonData["C_CSGO_MapPreviewCameraPath"]["m_flPathDuration"];

// Atribuições para C_Inferno
// C_Inferno Offsets
C_Inferno.m_nfxFireDamageEffect = jsonData["C_Inferno"]["m_nfxFireDamageEffect"];
C_Inferno.m_hInfernoPointsSnapshot = jsonData["C_Inferno"]["m_hInfernoPointsSnapshot"];
C_Inferno.m_hInfernoFillerPointsSnapshot = jsonData["C_Inferno"]["m_hInfernoFillerPointsSnapshot"];
C_Inferno.m_hInfernoOutlinePointsSnapshot = jsonData["C_Inferno"]["m_hInfernoOutlinePointsSnapshot"];
C_Inferno.m_hInfernoClimbingOutlinePointsSnapshot = jsonData["C_Inferno"]["m_hInfernoClimbingOutlinePointsSnapshot"];
C_Inferno.m_hInfernoDecalsSnapshot = jsonData["C_Inferno"]["m_hInfernoDecalsSnapshot"];
C_Inferno.m_firePositions = jsonData["C_Inferno"]["m_firePositions"];
C_Inferno.m_fireParentPositions = jsonData["C_Inferno"]["m_fireParentPositions"];
C_Inferno.m_bFireIsBurning = jsonData["C_Inferno"]["m_bFireIsBurning"];
C_Inferno.m_BurnNormal = jsonData["C_Inferno"]["m_BurnNormal"];
C_Inferno.m_fireCount = jsonData["C_Inferno"]["m_fireCount"];
C_Inferno.m_nInfernoType = jsonData["C_Inferno"]["m_nInfernoType"];
C_Inferno.m_nFireLifetime = jsonData["C_Inferno"]["m_nFireLifetime"];
C_Inferno.m_bInPostEffectTime = jsonData["C_Inferno"]["m_bInPostEffectTime"];
C_Inferno.m_lastFireCount = jsonData["C_Inferno"]["m_lastFireCount"];
C_Inferno.m_nFireEffectTickBegin = jsonData["C_Inferno"]["m_nFireEffectTickBegin"];
C_Inferno.m_drawableCount = jsonData["C_Inferno"]["m_drawableCount"];
C_Inferno.m_blosCheck = jsonData["C_Inferno"]["m_blosCheck"];
C_Inferno.m_nlosperiod = jsonData["C_Inferno"]["m_nlosperiod"];
C_Inferno.m_maxFireHalfWidth = jsonData["C_Inferno"]["m_maxFireHalfWidth"];
C_Inferno.m_maxFireHeight = jsonData["C_Inferno"]["m_maxFireHeight"];
C_Inferno.m_minBounds = jsonData["C_Inferno"]["m_minBounds"];
C_Inferno.m_maxBounds = jsonData["C_Inferno"]["m_maxBounds"];
C_Inferno.m_flLastGrassBurnThink = jsonData["C_Inferno"]["m_flLastGrassBurnThink"];

// Atribuições para C_PlayerPing
// C_PlayerPing Offsets
C_PlayerPing.m_hPlayer = jsonData["C_PlayerPing"]["m_hPlayer"];
C_PlayerPing.m_hPingedEntity = jsonData["C_PlayerPing"]["m_hPingedEntity"];
C_PlayerPing.m_iType = jsonData["C_PlayerPing"]["m_iType"];
C_PlayerPing.m_bUrgent = jsonData["C_PlayerPing"]["m_bUrgent"];
C_PlayerPing.m_szPlaceName = jsonData["C_PlayerPing"]["m_szPlaceName"];

// Atribuições para C_CSTeam
// C_CSTeam Offsets
C_CSTeam.m_szTeamMatchStat = jsonData["C_CSTeam"]["m_szTeamMatchStat"];
C_CSTeam.m_numMapVictories = jsonData["C_CSTeam"]["m_numMapVictories"];
C_CSTeam.m_bSurrendered = jsonData["C_CSTeam"]["m_bSurrendered"];
C_CSTeam.m_scoreFirstHalf = jsonData["C_CSTeam"]["m_scoreFirstHalf"];
C_CSTeam.m_scoreSecondHalf = jsonData["C_CSTeam"]["m_scoreSecondHalf"];
C_CSTeam.m_scoreOvertime = jsonData["C_CSTeam"]["m_scoreOvertime"];
C_CSTeam.m_szClanTeamname = jsonData["C_CSTeam"]["m_szClanTeamname"];
C_CSTeam.m_iClanID = jsonData["C_CSTeam"]["m_iClanID"];
C_CSTeam.m_szTeamFlagImage = jsonData["C_CSTeam"]["m_szTeamFlagImage"];
C_CSTeam.m_szTeamLogoImage = jsonData["C_CSTeam"]["m_szTeamLogoImage"];

// Atribuições para C_CSGO_MapPreviewCameraPathNode
// C_CSGO_MapPreviewCameraPathNode Offsets
C_CSGO_MapPreviewCameraPathNode.m_szParentPathUniqueID = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_szParentPathUniqueID"];
C_CSGO_MapPreviewCameraPathNode.m_nPathIndex = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_nPathIndex"];
C_CSGO_MapPreviewCameraPathNode.m_vInTangentLocal = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_vInTangentLocal"];
C_CSGO_MapPreviewCameraPathNode.m_vOutTangentLocal = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_vOutTangentLocal"];
C_CSGO_MapPreviewCameraPathNode.m_flFOV = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_flFOV"];
C_CSGO_MapPreviewCameraPathNode.m_flCameraSpeed = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_flCameraSpeed"];
C_CSGO_MapPreviewCameraPathNode.m_flEaseIn = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_flEaseIn"];
C_CSGO_MapPreviewCameraPathNode.m_flEaseOut = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_flEaseOut"];
C_CSGO_MapPreviewCameraPathNode.m_vInTangentWorld = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_vInTangentWorld"];
C_CSGO_MapPreviewCameraPathNode.m_vOutTangentWorld = jsonData["C_CSGO_MapPreviewCameraPathNode"]["m_vOutTangentWorld"];

// Atribuições para C_CSPlayerPawn
// C_CSPlayerPawn Offsets
C_CSPlayerPawn.m_pBulletServices = jsonData["C_CSPlayerPawn"]["m_pBulletServices"];
C_CSPlayerPawn.m_pHostageServices = jsonData["C_CSPlayerPawn"]["m_pHostageServices"];
C_CSPlayerPawn.m_pBuyServices = jsonData["C_CSPlayerPawn"]["m_pBuyServices"];
C_CSPlayerPawn.m_pGlowServices = jsonData["C_CSPlayerPawn"]["m_pGlowServices"];
C_CSPlayerPawn.m_pActionTrackingServices = jsonData["C_CSPlayerPawn"]["m_pActionTrackingServices"];
C_CSPlayerPawn.m_flHealthShotBoostExpirationTime = jsonData["C_CSPlayerPawn"]["m_flHealthShotBoostExpirationTime"];
C_CSPlayerPawn.m_flLastFiredWeaponTime = jsonData["C_CSPlayerPawn"]["m_flLastFiredWeaponTime"];
C_CSPlayerPawn.m_bHasFemaleVoice = jsonData["C_CSPlayerPawn"]["m_bHasFemaleVoice"];
C_CSPlayerPawn.m_flLandingTimeSeconds = jsonData["C_CSPlayerPawn"]["m_flLandingTimeSeconds"];
C_CSPlayerPawn.m_flOldFallVelocity = jsonData["C_CSPlayerPawn"]["m_flOldFallVelocity"];
C_CSPlayerPawn.m_szLastPlaceName = jsonData["C_CSPlayerPawn"]["m_szLastPlaceName"];
C_CSPlayerPawn.m_bPrevDefuser = jsonData["C_CSPlayerPawn"]["m_bPrevDefuser"];
C_CSPlayerPawn.m_bPrevHelmet = jsonData["C_CSPlayerPawn"]["m_bPrevHelmet"];
C_CSPlayerPawn.m_nPrevArmorVal = jsonData["C_CSPlayerPawn"]["m_nPrevArmorVal"];
C_CSPlayerPawn.m_nPrevGrenadeAmmoCount = jsonData["C_CSPlayerPawn"]["m_nPrevGrenadeAmmoCount"];
C_CSPlayerPawn.m_unPreviousWeaponHash = jsonData["C_CSPlayerPawn"]["m_unPreviousWeaponHash"];
C_CSPlayerPawn.m_unWeaponHash = jsonData["C_CSPlayerPawn"]["m_unWeaponHash"];
C_CSPlayerPawn.m_bInBuyZone = jsonData["C_CSPlayerPawn"]["m_bInBuyZone"];
C_CSPlayerPawn.m_bPreviouslyInBuyZone = jsonData["C_CSPlayerPawn"]["m_bPreviouslyInBuyZone"];
C_CSPlayerPawn.m_aimPunchAngle = jsonData["C_CSPlayerPawn"]["m_aimPunchAngle"];
C_CSPlayerPawn.m_aimPunchAngleVel = jsonData["C_CSPlayerPawn"]["m_aimPunchAngleVel"];
C_CSPlayerPawn.m_aimPunchTickBase = jsonData["C_CSPlayerPawn"]["m_aimPunchTickBase"];
C_CSPlayerPawn.m_aimPunchTickFraction = jsonData["C_CSPlayerPawn"]["m_aimPunchTickFraction"];
C_CSPlayerPawn.m_aimPunchCache = jsonData["C_CSPlayerPawn"]["m_aimPunchCache"];
C_CSPlayerPawn.m_bInLanding = jsonData["C_CSPlayerPawn"]["m_bInLanding"];
C_CSPlayerPawn.m_flLandingStartTime = jsonData["C_CSPlayerPawn"]["m_flLandingStartTime"];
C_CSPlayerPawn.m_bInHostageRescueZone = jsonData["C_CSPlayerPawn"]["m_bInHostageRescueZone"];
C_CSPlayerPawn.m_bInBombZone = jsonData["C_CSPlayerPawn"]["m_bInBombZone"];
C_CSPlayerPawn.m_bIsBuyMenuOpen = jsonData["C_CSPlayerPawn"]["m_bIsBuyMenuOpen"];
C_CSPlayerPawn.m_flTimeOfLastInjury = jsonData["C_CSPlayerPawn"]["m_flTimeOfLastInjury"];
C_CSPlayerPawn.m_flNextSprayDecalTime = jsonData["C_CSPlayerPawn"]["m_flNextSprayDecalTime"];
C_CSPlayerPawn.m_iRetakesOffering = jsonData["C_CSPlayerPawn"]["m_iRetakesOffering"];
C_CSPlayerPawn.m_iRetakesOfferingCard = jsonData["C_CSPlayerPawn"]["m_iRetakesOfferingCard"];
C_CSPlayerPawn.m_bRetakesHasDefuseKit = jsonData["C_CSPlayerPawn"]["m_bRetakesHasDefuseKit"];
C_CSPlayerPawn.m_bRetakesMVPLastRound = jsonData["C_CSPlayerPawn"]["m_bRetakesMVPLastRound"];
C_CSPlayerPawn.m_iRetakesMVPBoostItem = jsonData["C_CSPlayerPawn"]["m_iRetakesMVPBoostItem"];
C_CSPlayerPawn.m_RetakesMVPBoostExtraUtility = jsonData["C_CSPlayerPawn"]["m_RetakesMVPBoostExtraUtility"];
C_CSPlayerPawn.m_bNeedToReApplyGloves = jsonData["C_CSPlayerPawn"]["m_bNeedToReApplyGloves"];
C_CSPlayerPawn.m_EconGloves = jsonData["C_CSPlayerPawn"]["m_EconGloves"];
C_CSPlayerPawn.m_nEconGlovesChanged = jsonData["C_CSPlayerPawn"]["m_nEconGlovesChanged"];
C_CSPlayerPawn.m_bMustSyncRagdollState = jsonData["C_CSPlayerPawn"]["m_bMustSyncRagdollState"];
C_CSPlayerPawn.m_nRagdollDamageBone = jsonData["C_CSPlayerPawn"]["m_nRagdollDamageBone"];
C_CSPlayerPawn.m_vRagdollDamageForce = jsonData["C_CSPlayerPawn"]["m_vRagdollDamageForce"];
C_CSPlayerPawn.m_vRagdollDamagePosition = jsonData["C_CSPlayerPawn"]["m_vRagdollDamagePosition"];
C_CSPlayerPawn.m_szRagdollDamageWeaponName = jsonData["C_CSPlayerPawn"]["m_szRagdollDamageWeaponName"];
C_CSPlayerPawn.m_bRagdollDamageHeadshot = jsonData["C_CSPlayerPawn"]["m_bRagdollDamageHeadshot"];
C_CSPlayerPawn.m_vRagdollServerOrigin = jsonData["C_CSPlayerPawn"]["m_vRagdollServerOrigin"];
C_CSPlayerPawn.m_bLastHeadBoneTransformIsValid = jsonData["C_CSPlayerPawn"]["m_bLastHeadBoneTransformIsValid"];
C_CSPlayerPawn.m_lastLandTime = jsonData["C_CSPlayerPawn"]["m_lastLandTime"];
C_CSPlayerPawn.m_bOnGroundLastTick = jsonData["C_CSPlayerPawn"]["m_bOnGroundLastTick"];
C_CSPlayerPawn.m_qDeathEyeAngles = jsonData["C_CSPlayerPawn"]["m_qDeathEyeAngles"];
C_CSPlayerPawn.m_bSkipOneHeadConstraintUpdate = jsonData["C_CSPlayerPawn"]["m_bSkipOneHeadConstraintUpdate"];
C_CSPlayerPawn.m_bLeftHanded = jsonData["C_CSPlayerPawn"]["m_bLeftHanded"];
C_CSPlayerPawn.m_fSwitchedHandednessTime = jsonData["C_CSPlayerPawn"]["m_fSwitchedHandednessTime"];
C_CSPlayerPawn.m_flViewmodelOffsetX = jsonData["C_CSPlayerPawn"]["m_flViewmodelOffsetX"];
C_CSPlayerPawn.m_flViewmodelOffsetY = jsonData["C_CSPlayerPawn"]["m_flViewmodelOffsetY"];
C_CSPlayerPawn.m_flViewmodelOffsetZ = jsonData["C_CSPlayerPawn"]["m_flViewmodelOffsetZ"];
C_CSPlayerPawn.m_flViewmodelFOV = jsonData["C_CSPlayerPawn"]["m_flViewmodelFOV"];
C_CSPlayerPawn.m_vecPlayerPatchEconIndices = jsonData["C_CSPlayerPawn"]["m_vecPlayerPatchEconIndices"];
C_CSPlayerPawn.m_GunGameImmunityColor = jsonData["C_CSPlayerPawn"]["m_GunGameImmunityColor"];
C_CSPlayerPawn.m_vecBulletHitModels = jsonData["C_CSPlayerPawn"]["m_vecBulletHitModels"];
C_CSPlayerPawn.m_bIsWalking = jsonData["C_CSPlayerPawn"]["m_bIsWalking"];
C_CSPlayerPawn.m_thirdPersonHeading = jsonData["C_CSPlayerPawn"]["m_thirdPersonHeading"];
C_CSPlayerPawn.m_flSlopeDropOffset = jsonData["C_CSPlayerPawn"]["m_flSlopeDropOffset"];
C_CSPlayerPawn.m_flSlopeDropHeight = jsonData["C_CSPlayerPawn"]["m_flSlopeDropHeight"];
C_CSPlayerPawn.m_vHeadConstraintOffset = jsonData["C_CSPlayerPawn"]["m_vHeadConstraintOffset"];
C_CSPlayerPawn.m_entitySpottedState = jsonData["C_CSPlayerPawn"]["m_entitySpottedState"];
C_CSPlayerPawn.m_bIsScoped = jsonData["C_CSPlayerPawn"]["m_bIsScoped"];
C_CSPlayerPawn.m_bResumeZoom = jsonData["C_CSPlayerPawn"]["m_bResumeZoom"];
C_CSPlayerPawn.m_bIsDefusing = jsonData["C_CSPlayerPawn"]["m_bIsDefusing"];
C_CSPlayerPawn.m_bIsGrabbingHostage = jsonData["C_CSPlayerPawn"]["m_bIsGrabbingHostage"];
C_CSPlayerPawn.m_iBlockingUseActionInProgress = jsonData["C_CSPlayerPawn"]["m_iBlockingUseActionInProgress"];
C_CSPlayerPawn.m_flEmitSoundTime = jsonData["C_CSPlayerPawn"]["m_flEmitSoundTime"];
C_CSPlayerPawn.m_bInNoDefuseArea = jsonData["C_CSPlayerPawn"]["m_bInNoDefuseArea"];
C_CSPlayerPawn.m_nWhichBombZone = jsonData["C_CSPlayerPawn"]["m_nWhichBombZone"];
C_CSPlayerPawn.m_iShotsFired = jsonData["C_CSPlayerPawn"]["m_iShotsFired"];
C_CSPlayerPawn.m_flFlinchStack = jsonData["C_CSPlayerPawn"]["m_flFlinchStack"];
C_CSPlayerPawn.m_flVelocityModifier = jsonData["C_CSPlayerPawn"]["m_flVelocityModifier"];
C_CSPlayerPawn.m_flHitHeading = jsonData["C_CSPlayerPawn"]["m_flHitHeading"];
C_CSPlayerPawn.m_nHitBodyPart = jsonData["C_CSPlayerPawn"]["m_nHitBodyPart"];
C_CSPlayerPawn.m_bWaitForNoAttack = jsonData["C_CSPlayerPawn"]["m_bWaitForNoAttack"];
C_CSPlayerPawn.m_ignoreLadderJumpTime = jsonData["C_CSPlayerPawn"]["m_ignoreLadderJumpTime"];
C_CSPlayerPawn.m_bKilledByHeadshot = jsonData["C_CSPlayerPawn"]["m_bKilledByHeadshot"];
C_CSPlayerPawn.m_ArmorValue = jsonData["C_CSPlayerPawn"]["m_ArmorValue"];
C_CSPlayerPawn.m_unCurrentEquipmentValue = jsonData["C_CSPlayerPawn"]["m_unCurrentEquipmentValue"];
C_CSPlayerPawn.m_unRoundStartEquipmentValue = jsonData["C_CSPlayerPawn"]["m_unRoundStartEquipmentValue"];
C_CSPlayerPawn.m_unFreezetimeEndEquipmentValue = jsonData["C_CSPlayerPawn"]["m_unFreezetimeEndEquipmentValue"];
C_CSPlayerPawn.m_nLastKillerIndex = jsonData["C_CSPlayerPawn"]["m_nLastKillerIndex"];
C_CSPlayerPawn.m_bOldIsScoped = jsonData["C_CSPlayerPawn"]["m_bOldIsScoped"];
C_CSPlayerPawn.m_bHasDeathInfo = jsonData["C_CSPlayerPawn"]["m_bHasDeathInfo"];
C_CSPlayerPawn.m_flDeathInfoTime = jsonData["C_CSPlayerPawn"]["m_flDeathInfoTime"];
C_CSPlayerPawn.m_vecDeathInfoOrigin = jsonData["C_CSPlayerPawn"]["m_vecDeathInfoOrigin"];
C_CSPlayerPawn.m_grenadeParameterStashTime = jsonData["C_CSPlayerPawn"]["m_grenadeParameterStashTime"];
C_CSPlayerPawn.m_bGrenadeParametersStashed = jsonData["C_CSPlayerPawn"]["m_bGrenadeParametersStashed"];
C_CSPlayerPawn.m_angStashedShootAngles = jsonData["C_CSPlayerPawn"]["m_angStashedShootAngles"];
C_CSPlayerPawn.m_vecStashedGrenadeThrowPosition = jsonData["C_CSPlayerPawn"]["m_vecStashedGrenadeThrowPosition"];
C_CSPlayerPawn.m_vecStashedVelocity = jsonData["C_CSPlayerPawn"]["m_vecStashedVelocity"];
C_CSPlayerPawn.m_angShootAngleHistory = jsonData["C_CSPlayerPawn"]["m_angShootAngleHistory"];
C_CSPlayerPawn.m_vecThrowPositionHistory = jsonData["C_CSPlayerPawn"]["m_vecThrowPositionHistory"];
C_CSPlayerPawn.m_vecVelocityHistory = jsonData["C_CSPlayerPawn"]["m_vecVelocityHistory"];
C_CSPlayerPawn.m_PredictedDamageTags = jsonData["C_CSPlayerPawn"]["m_PredictedDamageTags"];
C_CSPlayerPawn.m_nPrevHighestReceivedDamageTagTick = jsonData["C_CSPlayerPawn"]["m_nPrevHighestReceivedDamageTagTick"];
C_CSPlayerPawn.m_nHighestAppliedDamageTagTick = jsonData["C_CSPlayerPawn"]["m_nHighestAppliedDamageTagTick"];

// Atribuições para C_RagdollPropAttached
// C_RagdollPropAttached Offsets
C_RagdollPropAttached.m_boneIndexAttached = jsonData["C_RagdollPropAttached"]["m_boneIndexAttached"];
C_RagdollPropAttached.m_ragdollAttachedObjectIndex = jsonData["C_RagdollPropAttached"]["m_ragdollAttachedObjectIndex"];
C_RagdollPropAttached.m_attachmentPointBoneSpace = jsonData["C_RagdollPropAttached"]["m_attachmentPointBoneSpace"];
C_RagdollPropAttached.m_attachmentPointRagdollSpace = jsonData["C_RagdollPropAttached"]["m_attachmentPointRagdollSpace"];
C_RagdollPropAttached.m_vecOffset = jsonData["C_RagdollPropAttached"]["m_vecOffset"];
C_RagdollPropAttached.m_parentTime = jsonData["C_RagdollPropAttached"]["m_parentTime"];
C_RagdollPropAttached.m_bHasParent = jsonData["C_RagdollPropAttached"]["m_bHasParent"];

// Atribuições para C_BaseCSGrenadeProjectile
// C_BaseCSGrenadeProjectile Offsets
C_BaseCSGrenadeProjectile.m_vInitialPosition = jsonData["C_BaseCSGrenadeProjectile"]["m_vInitialPosition"];
C_BaseCSGrenadeProjectile.m_vInitialVelocity = jsonData["C_BaseCSGrenadeProjectile"]["m_vInitialVelocity"];
C_BaseCSGrenadeProjectile.m_nBounces = jsonData["C_BaseCSGrenadeProjectile"]["m_nBounces"];
C_BaseCSGrenadeProjectile.m_nExplodeEffectIndex = jsonData["C_BaseCSGrenadeProjectile"]["m_nExplodeEffectIndex"];
C_BaseCSGrenadeProjectile.m_nExplodeEffectTickBegin = jsonData["C_BaseCSGrenadeProjectile"]["m_nExplodeEffectTickBegin"];
C_BaseCSGrenadeProjectile.m_vecExplodeEffectOrigin = jsonData["C_BaseCSGrenadeProjectile"]["m_vecExplodeEffectOrigin"];
C_BaseCSGrenadeProjectile.m_flSpawnTime = jsonData["C_BaseCSGrenadeProjectile"]["m_flSpawnTime"];
C_BaseCSGrenadeProjectile.vecLastTrailLinePos = jsonData["C_BaseCSGrenadeProjectile"]["vecLastTrailLinePos"];
C_BaseCSGrenadeProjectile.flNextTrailLineTime = jsonData["C_BaseCSGrenadeProjectile"]["flNextTrailLineTime"];
C_BaseCSGrenadeProjectile.m_bExplodeEffectBegan = jsonData["C_BaseCSGrenadeProjectile"]["m_bExplodeEffectBegan"];
C_BaseCSGrenadeProjectile.m_bCanCreateGrenadeTrail = jsonData["C_BaseCSGrenadeProjectile"]["m_bCanCreateGrenadeTrail"];
C_BaseCSGrenadeProjectile.m_nSnapshotTrajectoryEffectIndex = jsonData["C_BaseCSGrenadeProjectile"]["m_nSnapshotTrajectoryEffectIndex"];
C_BaseCSGrenadeProjectile.m_hSnapshotTrajectoryParticleSnapshot = jsonData["C_BaseCSGrenadeProjectile"]["m_hSnapshotTrajectoryParticleSnapshot"];
C_BaseCSGrenadeProjectile.m_arrTrajectoryTrailPoints = jsonData["C_BaseCSGrenadeProjectile"]["m_arrTrajectoryTrailPoints"];
C_BaseCSGrenadeProjectile.m_arrTrajectoryTrailPointCreationTimes = jsonData["C_BaseCSGrenadeProjectile"]["m_arrTrajectoryTrailPointCreationTimes"];
C_BaseCSGrenadeProjectile.m_flTrajectoryTrailEffectCreationTime = jsonData["C_BaseCSGrenadeProjectile"]["m_flTrajectoryTrailEffectCreationTime"];

// Atribuições para C_BaseTrigger
// C_BaseTrigger Offsets
C_BaseTrigger.m_bDisabled = jsonData["C_BaseTrigger"]["m_bDisabled"];
C_BaseTrigger.m_bClientSidePredicted = jsonData["C_BaseTrigger"]["m_bClientSidePredicted"];

// Atribuições para C_WeaponBaseItem
// C_WeaponBaseItem Offsets
C_WeaponBaseItem.m_SequenceCompleteTimer = jsonData["C_WeaponBaseItem"]["m_SequenceCompleteTimer"];
C_WeaponBaseItem.m_bRedraw = jsonData["C_WeaponBaseItem"]["m_bRedraw"];

// Atribuições para CEffectData
// CEffectData Offsets
CEffectData.m_vOrigin = jsonData["CEffectData"]["m_vOrigin"];
CEffectData.m_vStart = jsonData["CEffectData"]["m_vStart"];
CEffectData.m_vNormal = jsonData["CEffectData"]["m_vNormal"];
CEffectData.m_vAngles = jsonData["CEffectData"]["m_vAngles"];
CEffectData.m_hEntity = jsonData["CEffectData"]["m_hEntity"];
CEffectData.m_hOtherEntity = jsonData["CEffectData"]["m_hOtherEntity"];
CEffectData.m_flScale = jsonData["CEffectData"]["m_flScale"];
CEffectData.m_flMagnitude = jsonData["CEffectData"]["m_flMagnitude"];
CEffectData.m_flRadius = jsonData["CEffectData"]["m_flRadius"];
CEffectData.m_nSurfaceProp = jsonData["CEffectData"]["m_nSurfaceProp"];
CEffectData.m_nEffectIndex = jsonData["CEffectData"]["m_nEffectIndex"];
CEffectData.m_nDamageType = jsonData["CEffectData"]["m_nDamageType"];
CEffectData.m_nPenetrate = jsonData["CEffectData"]["m_nPenetrate"];
CEffectData.m_nMaterial = jsonData["CEffectData"]["m_nMaterial"];
CEffectData.m_nHitBox = jsonData["CEffectData"]["m_nHitBox"];
CEffectData.m_nColor = jsonData["CEffectData"]["m_nColor"];
CEffectData.m_fFlags = jsonData["CEffectData"]["m_fFlags"];
CEffectData.m_nAttachmentIndex = jsonData["CEffectData"]["m_nAttachmentIndex"];
CEffectData.m_nAttachmentName = jsonData["CEffectData"]["m_nAttachmentName"];
CEffectData.m_iEffectName = jsonData["CEffectData"]["m_iEffectName"];
CEffectData.m_nExplosionType = jsonData["CEffectData"]["m_nExplosionType"];

// Atribuições para C_BaseButton
// C_BaseButton Offsets
C_BaseButton.m_glowEntity = jsonData["C_BaseButton"]["m_glowEntity"];
C_BaseButton.m_usable = jsonData["C_BaseButton"]["m_usable"];
C_BaseButton.m_szDisplayText = jsonData["C_BaseButton"]["m_szDisplayText"];

// Atribuições para CCSPlayer_ViewModelServices
// CCSPlayer_ViewModelServices Offsets
CCSPlayer_ViewModelServices.m_hViewModel = jsonData["CCSPlayer_ViewModelServices"]["m_hViewModel"];

// Atribuições para CPlayer_MovementServices_Humanoid
// CPlayer_MovementServices_Humanoid Offsets
CPlayer_MovementServices_Humanoid.m_flStepSoundTime = jsonData["CPlayer_MovementServices_Humanoid"]["m_flStepSoundTime"];
CPlayer_MovementServices_Humanoid.m_flFallVelocity = jsonData["CPlayer_MovementServices_Humanoid"]["m_flFallVelocity"];
CPlayer_MovementServices_Humanoid.m_bInCrouch = jsonData["CPlayer_MovementServices_Humanoid"]["m_bInCrouch"];
CPlayer_MovementServices_Humanoid.m_nCrouchState = jsonData["CPlayer_MovementServices_Humanoid"]["m_nCrouchState"];
CPlayer_MovementServices_Humanoid.m_flCrouchTransitionStartTime = jsonData["CPlayer_MovementServices_Humanoid"]["m_flCrouchTransitionStartTime"];
CPlayer_MovementServices_Humanoid.m_bDucked = jsonData["CPlayer_MovementServices_Humanoid"]["m_bDucked"];
CPlayer_MovementServices_Humanoid.m_bDucking = jsonData["CPlayer_MovementServices_Humanoid"]["m_bDucking"];
CPlayer_MovementServices_Humanoid.m_bInDuckJump = jsonData["CPlayer_MovementServices_Humanoid"]["m_bInDuckJump"];
CPlayer_MovementServices_Humanoid.m_groundNormal = jsonData["CPlayer_MovementServices_Humanoid"]["m_groundNormal"];
CPlayer_MovementServices_Humanoid.m_flSurfaceFriction = jsonData["CPlayer_MovementServices_Humanoid"]["m_flSurfaceFriction"];
CPlayer_MovementServices_Humanoid.m_surfaceProps = jsonData["CPlayer_MovementServices_Humanoid"]["m_surfaceProps"];
CPlayer_MovementServices_Humanoid.m_nStepside = jsonData["CPlayer_MovementServices_Humanoid"]["m_nStepside"];
CPlayer_MovementServices_Humanoid.m_iTargetVolume = jsonData["CPlayer_MovementServices_Humanoid"]["m_iTargetVolume"];
CPlayer_MovementServices_Humanoid.m_vecSmoothedVelocity = jsonData["CPlayer_MovementServices_Humanoid"]["m_vecSmoothedVelocity"];

// Atribuições para C_PointClientUIWorldPanel
// C_PointClientUIWorldPanel Offsets
C_PointClientUIWorldPanel.m_bForceRecreateNextUpdate = jsonData["C_PointClientUIWorldPanel"]["m_bForceRecreateNextUpdate"];
C_PointClientUIWorldPanel.m_bMoveViewToPlayerNextThink = jsonData["C_PointClientUIWorldPanel"]["m_bMoveViewToPlayerNextThink"];
C_PointClientUIWorldPanel.m_bCheckCSSClasses = jsonData["C_PointClientUIWorldPanel"]["m_bCheckCSSClasses"];
C_PointClientUIWorldPanel.m_anchorDeltaTransform = jsonData["C_PointClientUIWorldPanel"]["m_anchorDeltaTransform"];
C_PointClientUIWorldPanel.m_pOffScreenIndicator = jsonData["C_PointClientUIWorldPanel"]["m_pOffScreenIndicator"];
C_PointClientUIWorldPanel.m_bIgnoreInput = jsonData["C_PointClientUIWorldPanel"]["m_bIgnoreInput"];
C_PointClientUIWorldPanel.m_bLit = jsonData["C_PointClientUIWorldPanel"]["m_bLit"];
C_PointClientUIWorldPanel.m_bFollowPlayerAcrossTeleport = jsonData["C_PointClientUIWorldPanel"]["m_bFollowPlayerAcrossTeleport"];
C_PointClientUIWorldPanel.m_flWidth = jsonData["C_PointClientUIWorldPanel"]["m_flWidth"];
C_PointClientUIWorldPanel.m_flHeight = jsonData["C_PointClientUIWorldPanel"]["m_flHeight"];
C_PointClientUIWorldPanel.m_flDPI = jsonData["C_PointClientUIWorldPanel"]["m_flDPI"];
C_PointClientUIWorldPanel.m_flInteractDistance = jsonData["C_PointClientUIWorldPanel"]["m_flInteractDistance"];
C_PointClientUIWorldPanel.m_flDepthOffset = jsonData["C_PointClientUIWorldPanel"]["m_flDepthOffset"];
C_PointClientUIWorldPanel.m_unOwnerContext = jsonData["C_PointClientUIWorldPanel"]["m_unOwnerContext"];
C_PointClientUIWorldPanel.m_unHorizontalAlign = jsonData["C_PointClientUIWorldPanel"]["m_unHorizontalAlign"];
C_PointClientUIWorldPanel.m_unVerticalAlign = jsonData["C_PointClientUIWorldPanel"]["m_unVerticalAlign"];
C_PointClientUIWorldPanel.m_unOrientation = jsonData["C_PointClientUIWorldPanel"]["m_unOrientation"];
C_PointClientUIWorldPanel.m_bAllowInteractionFromAllSceneWorlds = jsonData["C_PointClientUIWorldPanel"]["m_bAllowInteractionFromAllSceneWorlds"];
C_PointClientUIWorldPanel.m_vecCSSClasses = jsonData["C_PointClientUIWorldPanel"]["m_vecCSSClasses"];
C_PointClientUIWorldPanel.m_bOpaque = jsonData["C_PointClientUIWorldPanel"]["m_bOpaque"];
C_PointClientUIWorldPanel.m_bNoDepth = jsonData["C_PointClientUIWorldPanel"]["m_bNoDepth"];
C_PointClientUIWorldPanel.m_bRenderBackface = jsonData["C_PointClientUIWorldPanel"]["m_bRenderBackface"];
C_PointClientUIWorldPanel.m_bUseOffScreenIndicator = jsonData["C_PointClientUIWorldPanel"]["m_bUseOffScreenIndicator"];
C_PointClientUIWorldPanel.m_bExcludeFromSaveGames = jsonData["C_PointClientUIWorldPanel"]["m_bExcludeFromSaveGames"];
C_PointClientUIWorldPanel.m_bGrabbable = jsonData["C_PointClientUIWorldPanel"]["m_bGrabbable"];
C_PointClientUIWorldPanel.m_bOnlyRenderToTexture = jsonData["C_PointClientUIWorldPanel"]["m_bOnlyRenderToTexture"];
C_PointClientUIWorldPanel.m_bDisableMipGen = jsonData["C_PointClientUIWorldPanel"]["m_bDisableMipGen"];
C_PointClientUIWorldPanel.m_nExplicitImageLayout = jsonData["C_PointClientUIWorldPanel"]["m_nExplicitImageLayout"];

// Atribuições para CCSGameModeRules_Deathmatch
// CCSGameModeRules_Deathmatch Offsets
CCSGameModeRules_Deathmatch.m_flDMBonusStartTime = jsonData["CCSGameModeRules_Deathmatch"]["m_flDMBonusStartTime"];
CCSGameModeRules_Deathmatch.m_flDMBonusTimeLength = jsonData["CCSGameModeRules_Deathmatch"]["m_flDMBonusTimeLength"];
CCSGameModeRules_Deathmatch.m_sDMBonusWeapon = jsonData["CCSGameModeRules_Deathmatch"]["m_sDMBonusWeapon"];

// Atribuições para C_GameRules
// C_GameRules Offsets
C_GameRules.__m_pChainEntity = jsonData["C_GameRules"]["__m_pChainEntity"];
C_GameRules.m_nTotalPausedTicks = jsonData["C_GameRules"]["m_nTotalPausedTicks"];
C_GameRules.m_nPauseStartTick = jsonData["C_GameRules"]["m_nPauseStartTick"];
C_GameRules.m_bGamePaused = jsonData["C_GameRules"]["m_bGamePaused"];

// Atribuições para C_Team
// C_Team Offsets
C_Team.m_aPlayerControllers = jsonData["C_Team"]["m_aPlayerControllers"];
C_Team.m_aPlayers = jsonData["C_Team"]["m_aPlayers"];
C_Team.m_iScore = jsonData["C_Team"]["m_iScore"];
C_Team.m_szTeamname = jsonData["C_Team"]["m_szTeamname"];

// Atribuições para C_SoundAreaEntityOrientedBox
// C_SoundAreaEntityOrientedBox Offsets
C_SoundAreaEntityOrientedBox.m_vMin = jsonData["C_SoundAreaEntityOrientedBox"]["m_vMin"];
C_SoundAreaEntityOrientedBox.m_vMax = jsonData["C_SoundAreaEntityOrientedBox"]["m_vMax"];

// Atribuições para C_TextureBasedAnimatable
// C_TextureBasedAnimatable Offsets
C_TextureBasedAnimatable.m_bLoop = jsonData["C_TextureBasedAnimatable"]["m_bLoop"];
C_TextureBasedAnimatable.m_flFPS = jsonData["C_TextureBasedAnimatable"]["m_flFPS"];
C_TextureBasedAnimatable.m_hPositionKeys = jsonData["C_TextureBasedAnimatable"]["m_hPositionKeys"];
C_TextureBasedAnimatable.m_hRotationKeys = jsonData["C_TextureBasedAnimatable"]["m_hRotationKeys"];
C_TextureBasedAnimatable.m_vAnimationBoundsMin = jsonData["C_TextureBasedAnimatable"]["m_vAnimationBoundsMin"];
C_TextureBasedAnimatable.m_vAnimationBoundsMax = jsonData["C_TextureBasedAnimatable"]["m_vAnimationBoundsMax"];
C_TextureBasedAnimatable.m_flStartTime = jsonData["C_TextureBasedAnimatable"]["m_flStartTime"];
C_TextureBasedAnimatable.m_flStartFrame = jsonData["C_TextureBasedAnimatable"]["m_flStartFrame"];

// Atribuições para CCSPlayer_WaterServices
// CCSPlayer_WaterServices Offsets
CCSPlayer_WaterServices.m_flWaterJumpTime = jsonData["CCSPlayer_WaterServices"]["m_flWaterJumpTime"];
CCSPlayer_WaterServices.m_vecWaterJumpVel = jsonData["CCSPlayer_WaterServices"]["m_vecWaterJumpVel"];
CCSPlayer_WaterServices.m_flSwimSoundTime = jsonData["CCSPlayer_WaterServices"]["m_flSwimSoundTime"];
CCSPlayer_WaterServices.m_NextDrownDamageTime = jsonData["CCSPlayer_WaterServices"]["m_NextDrownDamageTime"];
CCSPlayer_WaterServices.m_nDrownDmgRate = jsonData["CCSPlayer_WaterServices"]["m_nDrownDmgRate"];
CCSPlayer_WaterServices.m_AirFinishedTime = jsonData["CCSPlayer_WaterServices"]["m_AirFinishedTime"];

// Atribuições para CSkyboxReference
// CSkyboxReference Offsets
CSkyboxReference.m_worldGroupId = jsonData["CSkyboxReference"]["m_worldGroupId"];
CSkyboxReference.m_hSkyCamera = jsonData["CSkyboxReference"]["m_hSkyCamera"];

// Atribuições para CProjectedTextureBase
// CProjectedTextureBase Offsets
CProjectedTextureBase.m_hTargetEntity = jsonData["CProjectedTextureBase"]["m_hTargetEntity"];
CProjectedTextureBase.m_bState = jsonData["CProjectedTextureBase"]["m_bState"];
CProjectedTextureBase.m_bAlwaysUpdate = jsonData["CProjectedTextureBase"]["m_bAlwaysUpdate"];
CProjectedTextureBase.m_flLightFOV = jsonData["CProjectedTextureBase"]["m_flLightFOV"];
CProjectedTextureBase.m_bEnableShadows = jsonData["CProjectedTextureBase"]["m_bEnableShadows"];
CProjectedTextureBase.m_bSimpleProjection = jsonData["CProjectedTextureBase"]["m_bSimpleProjection"];
CProjectedTextureBase.m_bLightOnlyTarget = jsonData["CProjectedTextureBase"]["m_bLightOnlyTarget"];
CProjectedTextureBase.m_bLightWorld = jsonData["CProjectedTextureBase"]["m_bLightWorld"];
CProjectedTextureBase.m_bCameraSpace = jsonData["CProjectedTextureBase"]["m_bCameraSpace"];
CProjectedTextureBase.m_flBrightnessScale = jsonData["CProjectedTextureBase"]["m_flBrightnessScale"];
CProjectedTextureBase.m_LightColor = jsonData["CProjectedTextureBase"]["m_LightColor"];
CProjectedTextureBase.m_flIntensity = jsonData["CProjectedTextureBase"]["m_flIntensity"];
CProjectedTextureBase.m_flLinearAttenuation = jsonData["CProjectedTextureBase"]["m_flLinearAttenuation"];
CProjectedTextureBase.m_flQuadraticAttenuation = jsonData["CProjectedTextureBase"]["m_flQuadraticAttenuation"];
CProjectedTextureBase.m_bVolumetric = jsonData["CProjectedTextureBase"]["m_bVolumetric"];
CProjectedTextureBase.m_flVolumetricIntensity = jsonData["CProjectedTextureBase"]["m_flVolumetricIntensity"];
CProjectedTextureBase.m_flNoiseStrength = jsonData["CProjectedTextureBase"]["m_flNoiseStrength"];
CProjectedTextureBase.m_flFlashlightTime = jsonData["CProjectedTextureBase"]["m_flFlashlightTime"];
CProjectedTextureBase.m_nNumPlanes = jsonData["CProjectedTextureBase"]["m_nNumPlanes"];
CProjectedTextureBase.m_flPlaneOffset = jsonData["CProjectedTextureBase"]["m_flPlaneOffset"];
CProjectedTextureBase.m_flColorTransitionTime = jsonData["CProjectedTextureBase"]["m_flColorTransitionTime"];
CProjectedTextureBase.m_flAmbient = jsonData["CProjectedTextureBase"]["m_flAmbient"];
CProjectedTextureBase.m_SpotlightTextureName = jsonData["CProjectedTextureBase"]["m_SpotlightTextureName"];
CProjectedTextureBase.m_nSpotlightTextureFrame = jsonData["CProjectedTextureBase"]["m_nSpotlightTextureFrame"];
CProjectedTextureBase.m_nShadowQuality = jsonData["CProjectedTextureBase"]["m_nShadowQuality"];
CProjectedTextureBase.m_flNearZ = jsonData["CProjectedTextureBase"]["m_flNearZ"];
CProjectedTextureBase.m_flFarZ = jsonData["CProjectedTextureBase"]["m_flFarZ"];
CProjectedTextureBase.m_flProjectionSize = jsonData["CProjectedTextureBase"]["m_flProjectionSize"];
CProjectedTextureBase.m_flRotation = jsonData["CProjectedTextureBase"]["m_flRotation"];
CProjectedTextureBase.m_bFlipHorizontal = jsonData["CProjectedTextureBase"]["m_bFlipHorizontal"];

// Atribuições para CCSPlayerController_InventoryServices
// CCSPlayerController_InventoryServices Offsets
CCSPlayerController_InventoryServices.m_unMusicID = jsonData["CCSPlayerController_InventoryServices"]["m_unMusicID"];
CCSPlayerController_InventoryServices.m_rank = jsonData["CCSPlayerController_InventoryServices"]["m_rank"];
CCSPlayerController_InventoryServices.m_nPersonaDataPublicLevel = jsonData["CCSPlayerController_InventoryServices"]["m_nPersonaDataPublicLevel"];
CCSPlayerController_InventoryServices.m_nPersonaDataPublicCommendsLeader = jsonData["CCSPlayerController_InventoryServices"]["m_nPersonaDataPublicCommendsLeader"];
CCSPlayerController_InventoryServices.m_nPersonaDataPublicCommendsTeacher = jsonData["CCSPlayerController_InventoryServices"]["m_nPersonaDataPublicCommendsTeacher"];
CCSPlayerController_InventoryServices.m_nPersonaDataPublicCommendsFriendly = jsonData["CCSPlayerController_InventoryServices"]["m_nPersonaDataPublicCommendsFriendly"];
CCSPlayerController_InventoryServices.m_nPersonaDataXpTrailLevel = jsonData["CCSPlayerController_InventoryServices"]["m_nPersonaDataXpTrailLevel"];
CCSPlayerController_InventoryServices.m_vecServerAuthoritativeWeaponSlots = jsonData["CCSPlayerController_InventoryServices"]["m_vecServerAuthoritativeWeaponSlots"];
CCSPlayerController_InventoryServices.m_unEquippedPlayerSprayIDs = jsonData["CCSPlayerController_InventoryServices"]["m_unEquippedPlayerSprayIDs"];

// Atribuições para C_CSGOViewModel
// C_CSGOViewModel Offsets
C_CSGOViewModel.m_bShouldIgnoreOffsetAndAccuracy = jsonData["C_CSGOViewModel"]["m_bShouldIgnoreOffsetAndAccuracy"];
C_CSGOViewModel.m_nLastKnownAssociatedWeaponEntIndex = jsonData["C_CSGOViewModel"]["m_nLastKnownAssociatedWeaponEntIndex"];
C_CSGOViewModel.m_bNeedToQueueHighResComposite = jsonData["C_CSGOViewModel"]["m_bNeedToQueueHighResComposite"];
C_CSGOViewModel.m_vLoweredWeaponOffset = jsonData["C_CSGOViewModel"]["m_vLoweredWeaponOffset"];

// Atribuições para CScriptComponent
// CScriptComponent Offsets
CScriptComponent.m_scriptClassName = jsonData["CScriptComponent"]["m_scriptClassName"];

// Atribuições para C_EnvLightProbeVolume
// C_EnvLightProbeVolume Offsets
C_EnvLightProbeVolume.m_Entity_hLightProbeTexture = jsonData["C_EnvLightProbeVolume"]["m_Entity_hLightProbeTexture"];
C_EnvLightProbeVolume.m_Entity_hLightProbeDirectLightIndicesTexture = jsonData["C_EnvLightProbeVolume"]["m_Entity_hLightProbeDirectLightIndicesTexture"];
C_EnvLightProbeVolume.m_Entity_hLightProbeDirectLightScalarsTexture = jsonData["C_EnvLightProbeVolume"]["m_Entity_hLightProbeDirectLightScalarsTexture"];
C_EnvLightProbeVolume.m_Entity_hLightProbeDirectLightShadowsTexture = jsonData["C_EnvLightProbeVolume"]["m_Entity_hLightProbeDirectLightShadowsTexture"];
C_EnvLightProbeVolume.m_Entity_vBoxMins = jsonData["C_EnvLightProbeVolume"]["m_Entity_vBoxMins"];
C_EnvLightProbeVolume.m_Entity_vBoxMaxs = jsonData["C_EnvLightProbeVolume"]["m_Entity_vBoxMaxs"];
C_EnvLightProbeVolume.m_Entity_bMoveable = jsonData["C_EnvLightProbeVolume"]["m_Entity_bMoveable"];
C_EnvLightProbeVolume.m_Entity_nHandshake = jsonData["C_EnvLightProbeVolume"]["m_Entity_nHandshake"];
C_EnvLightProbeVolume.m_Entity_nPriority = jsonData["C_EnvLightProbeVolume"]["m_Entity_nPriority"];
C_EnvLightProbeVolume.m_Entity_bStartDisabled = jsonData["C_EnvLightProbeVolume"]["m_Entity_bStartDisabled"];
C_EnvLightProbeVolume.m_Entity_nLightProbeSizeX = jsonData["C_EnvLightProbeVolume"]["m_Entity_nLightProbeSizeX"];
C_EnvLightProbeVolume.m_Entity_nLightProbeSizeY = jsonData["C_EnvLightProbeVolume"]["m_Entity_nLightProbeSizeY"];
C_EnvLightProbeVolume.m_Entity_nLightProbeSizeZ = jsonData["C_EnvLightProbeVolume"]["m_Entity_nLightProbeSizeZ"];
C_EnvLightProbeVolume.m_Entity_nLightProbeAtlasX = jsonData["C_EnvLightProbeVolume"]["m_Entity_nLightProbeAtlasX"];
C_EnvLightProbeVolume.m_Entity_nLightProbeAtlasY = jsonData["C_EnvLightProbeVolume"]["m_Entity_nLightProbeAtlasY"];
C_EnvLightProbeVolume.m_Entity_nLightProbeAtlasZ = jsonData["C_EnvLightProbeVolume"]["m_Entity_nLightProbeAtlasZ"];
C_EnvLightProbeVolume.m_Entity_bEnabled = jsonData["C_EnvLightProbeVolume"]["m_Entity_bEnabled"];

// Atribuições para C_ViewmodelAttachmentModel
// C_ViewmodelAttachmentModel Offsets
C_ViewmodelAttachmentModel.m_bShouldFrontFaceCullLeftHanded = jsonData["C_ViewmodelAttachmentModel"]["m_bShouldFrontFaceCullLeftHanded"];
C_ViewmodelAttachmentModel.m_bCreatedLeftHanded = jsonData["C_ViewmodelAttachmentModel"]["m_bCreatedLeftHanded"];

// Atribuições para CSPerRoundStats_t
// CSPerRoundStats_t Offsets
CSPerRoundStats_t.m_iKills = jsonData["CSPerRoundStats_t"]["m_iKills"];
CSPerRoundStats_t.m_iDeaths = jsonData["CSPerRoundStats_t"]["m_iDeaths"];
CSPerRoundStats_t.m_iAssists = jsonData["CSPerRoundStats_t"]["m_iAssists"];
CSPerRoundStats_t.m_iDamage = jsonData["CSPerRoundStats_t"]["m_iDamage"];
CSPerRoundStats_t.m_iEquipmentValue = jsonData["CSPerRoundStats_t"]["m_iEquipmentValue"];
CSPerRoundStats_t.m_iMoneySaved = jsonData["CSPerRoundStats_t"]["m_iMoneySaved"];
CSPerRoundStats_t.m_iKillReward = jsonData["CSPerRoundStats_t"]["m_iKillReward"];
CSPerRoundStats_t.m_iLiveTime = jsonData["CSPerRoundStats_t"]["m_iLiveTime"];
CSPerRoundStats_t.m_iHeadShotKills = jsonData["CSPerRoundStats_t"]["m_iHeadShotKills"];
CSPerRoundStats_t.m_iObjective = jsonData["CSPerRoundStats_t"]["m_iObjective"];
CSPerRoundStats_t.m_iCashEarned = jsonData["CSPerRoundStats_t"]["m_iCashEarned"];
CSPerRoundStats_t.m_iUtilityDamage = jsonData["CSPerRoundStats_t"]["m_iUtilityDamage"];
CSPerRoundStats_t.m_iEnemiesFlashed = jsonData["CSPerRoundStats_t"]["m_iEnemiesFlashed"];

// Atribuições para C_TeamRoundTimer
// C_TeamRoundTimer Offsets
C_TeamRoundTimer.m_bTimerPaused = jsonData["C_TeamRoundTimer"]["m_bTimerPaused"];
C_TeamRoundTimer.m_flTimeRemaining = jsonData["C_TeamRoundTimer"]["m_flTimeRemaining"];
C_TeamRoundTimer.m_flTimerEndTime = jsonData["C_TeamRoundTimer"]["m_flTimerEndTime"];
C_TeamRoundTimer.m_bIsDisabled = jsonData["C_TeamRoundTimer"]["m_bIsDisabled"];
C_TeamRoundTimer.m_bShowInHUD = jsonData["C_TeamRoundTimer"]["m_bShowInHUD"];
C_TeamRoundTimer.m_nTimerLength = jsonData["C_TeamRoundTimer"]["m_nTimerLength"];
C_TeamRoundTimer.m_nTimerInitialLength = jsonData["C_TeamRoundTimer"]["m_nTimerInitialLength"];
C_TeamRoundTimer.m_nTimerMaxLength = jsonData["C_TeamRoundTimer"]["m_nTimerMaxLength"];
C_TeamRoundTimer.m_bAutoCountdown = jsonData["C_TeamRoundTimer"]["m_bAutoCountdown"];
C_TeamRoundTimer.m_nSetupTimeLength = jsonData["C_TeamRoundTimer"]["m_nSetupTimeLength"];
C_TeamRoundTimer.m_nState = jsonData["C_TeamRoundTimer"]["m_nState"];
C_TeamRoundTimer.m_bStartPaused = jsonData["C_TeamRoundTimer"]["m_bStartPaused"];
C_TeamRoundTimer.m_bInCaptureWatchState = jsonData["C_TeamRoundTimer"]["m_bInCaptureWatchState"];
C_TeamRoundTimer.m_flTotalTime = jsonData["C_TeamRoundTimer"]["m_flTotalTime"];
C_TeamRoundTimer.m_bStopWatchTimer = jsonData["C_TeamRoundTimer"]["m_bStopWatchTimer"];
C_TeamRoundTimer.m_bFireFinished = jsonData["C_TeamRoundTimer"]["m_bFireFinished"];
C_TeamRoundTimer.m_bFire5MinRemain = jsonData["C_TeamRoundTimer"]["m_bFire5MinRemain"];
C_TeamRoundTimer.m_bFire4MinRemain = jsonData["C_TeamRoundTimer"]["m_bFire4MinRemain"];
C_TeamRoundTimer.m_bFire3MinRemain = jsonData["C_TeamRoundTimer"]["m_bFire3MinRemain"];
C_TeamRoundTimer.m_bFire2MinRemain = jsonData["C_TeamRoundTimer"]["m_bFire2MinRemain"];
C_TeamRoundTimer.m_bFire1MinRemain = jsonData["C_TeamRoundTimer"]["m_bFire1MinRemain"];
C_TeamRoundTimer.m_bFire30SecRemain = jsonData["C_TeamRoundTimer"]["m_bFire30SecRemain"];
C_TeamRoundTimer.m_bFire10SecRemain = jsonData["C_TeamRoundTimer"]["m_bFire10SecRemain"];
C_TeamRoundTimer.m_bFire5SecRemain = jsonData["C_TeamRoundTimer"]["m_bFire5SecRemain"];
C_TeamRoundTimer.m_bFire4SecRemain = jsonData["C_TeamRoundTimer"]["m_bFire4SecRemain"];
C_TeamRoundTimer.m_bFire3SecRemain = jsonData["C_TeamRoundTimer"]["m_bFire3SecRemain"];
C_TeamRoundTimer.m_bFire2SecRemain = jsonData["C_TeamRoundTimer"]["m_bFire2SecRemain"];
C_TeamRoundTimer.m_bFire1SecRemain = jsonData["C_TeamRoundTimer"]["m_bFire1SecRemain"];
C_TeamRoundTimer.m_nOldTimerLength = jsonData["C_TeamRoundTimer"]["m_nOldTimerLength"];
C_TeamRoundTimer.m_nOldTimerState = jsonData["C_TeamRoundTimer"]["m_nOldTimerState"];

// Atribuições para WeaponPurchaseCount_t
// WeaponPurchaseCount_t Offsets
WeaponPurchaseCount_t.m_nItemDefIndex = jsonData["WeaponPurchaseCount_t"]["m_nItemDefIndex"];
WeaponPurchaseCount_t.m_nCount = jsonData["WeaponPurchaseCount_t"]["m_nCount"];

// Atribuições para CPathSimple
// CPathSimple Offsets
CPathSimple.m_pathString = jsonData["CPathSimple"]["m_pathString"];

// Atribuições para CCSPlayerBase_CameraServices
// CCSPlayerBase_CameraServices Offsets
CCSPlayerBase_CameraServices.m_iFOV = jsonData["CCSPlayerBase_CameraServices"]["m_iFOV"];
CCSPlayerBase_CameraServices.m_iFOVStart = jsonData["CCSPlayerBase_CameraServices"]["m_iFOVStart"];
CCSPlayerBase_CameraServices.m_flFOVTime = jsonData["CCSPlayerBase_CameraServices"]["m_flFOVTime"];
CCSPlayerBase_CameraServices.m_flFOVRate = jsonData["CCSPlayerBase_CameraServices"]["m_flFOVRate"];
CCSPlayerBase_CameraServices.m_hZoomOwner = jsonData["CCSPlayerBase_CameraServices"]["m_hZoomOwner"];
CCSPlayerBase_CameraServices.m_flLastShotFOV = jsonData["CCSPlayerBase_CameraServices"]["m_flLastShotFOV"];
CCSPlayerBase_CameraServices.m_hTriggerFogList = jsonData["CCSPlayerBase_CameraServices"]["m_hTriggerFogList"];
CCSPlayerBase_CameraServices.m_hLastFogTrigger = jsonData["CCSPlayerBase_CameraServices"]["m_hLastFogTrigger"];

// Atribuições para CPointOffScreenIndicatorUi
// CPointOffScreenIndicatorUi Offsets
CPointOffScreenIndicatorUi.m_bBeenEnabled = jsonData["CPointOffScreenIndicatorUi"]["m_bBeenEnabled"];
CPointOffScreenIndicatorUi.m_bHide = jsonData["CPointOffScreenIndicatorUi"]["m_bHide"];
CPointOffScreenIndicatorUi.m_flSeenTargetTime = jsonData["CPointOffScreenIndicatorUi"]["m_flSeenTargetTime"];
CPointOffScreenIndicatorUi.m_pTargetPanel = jsonData["CPointOffScreenIndicatorUi"]["m_pTargetPanel"];

// Atribuições para C_CSWeaponBaseGun
// C_CSWeaponBaseGun Offsets
C_CSWeaponBaseGun.m_zoomLevel = jsonData["C_CSWeaponBaseGun"]["m_zoomLevel"];
C_CSWeaponBaseGun.m_iBurstShotsRemaining = jsonData["C_CSWeaponBaseGun"]["m_iBurstShotsRemaining"];
C_CSWeaponBaseGun.m_iSilencerBodygroup = jsonData["C_CSWeaponBaseGun"]["m_iSilencerBodygroup"];
C_CSWeaponBaseGun.m_silencedModelIndex = jsonData["C_CSWeaponBaseGun"]["m_silencedModelIndex"];
C_CSWeaponBaseGun.m_inPrecache = jsonData["C_CSWeaponBaseGun"]["m_inPrecache"];
C_CSWeaponBaseGun.m_bNeedsBoltAction = jsonData["C_CSWeaponBaseGun"]["m_bNeedsBoltAction"];

// Atribuições para C_SkyCamera
// C_SkyCamera Offsets
C_SkyCamera.m_skyboxData = jsonData["C_SkyCamera"]["m_skyboxData"];
C_SkyCamera.m_skyboxSlotToken = jsonData["C_SkyCamera"]["m_skyboxSlotToken"];
C_SkyCamera.m_bUseAngles = jsonData["C_SkyCamera"]["m_bUseAngles"];
C_SkyCamera.m_pNext = jsonData["C_SkyCamera"]["m_pNext"];

// Atribuições para C_EntityDissolve
// C_EntityDissolve Offsets
C_EntityDissolve.m_flStartTime = jsonData["C_EntityDissolve"]["m_flStartTime"];
C_EntityDissolve.m_flFadeInStart = jsonData["C_EntityDissolve"]["m_flFadeInStart"];
C_EntityDissolve.m_flFadeInLength = jsonData["C_EntityDissolve"]["m_flFadeInLength"];
C_EntityDissolve.m_flFadeOutModelStart = jsonData["C_EntityDissolve"]["m_flFadeOutModelStart"];
C_EntityDissolve.m_flFadeOutModelLength = jsonData["C_EntityDissolve"]["m_flFadeOutModelLength"];
C_EntityDissolve.m_flFadeOutStart = jsonData["C_EntityDissolve"]["m_flFadeOutStart"];
C_EntityDissolve.m_flFadeOutLength = jsonData["C_EntityDissolve"]["m_flFadeOutLength"];
C_EntityDissolve.m_flNextSparkTime = jsonData["C_EntityDissolve"]["m_flNextSparkTime"];
C_EntityDissolve.m_nDissolveType = jsonData["C_EntityDissolve"]["m_nDissolveType"];
C_EntityDissolve.m_vDissolverOrigin = jsonData["C_EntityDissolve"]["m_vDissolverOrigin"];
C_EntityDissolve.m_nMagnitude = jsonData["C_EntityDissolve"]["m_nMagnitude"];
C_EntityDissolve.m_bCoreExplode = jsonData["C_EntityDissolve"]["m_bCoreExplode"];
C_EntityDissolve.m_bLinkedToServerEnt = jsonData["C_EntityDissolve"]["m_bLinkedToServerEnt"];

// Atribuições para C_fogplayerparams_t
// C_fogplayerparams_t Offsets
C_fogplayerparams_t.m_hCtrl = jsonData["C_fogplayerparams_t"]["m_hCtrl"];
C_fogplayerparams_t.m_flTransitionTime = jsonData["C_fogplayerparams_t"]["m_flTransitionTime"];
C_fogplayerparams_t.m_OldColor = jsonData["C_fogplayerparams_t"]["m_OldColor"];
C_fogplayerparams_t.m_flOldStart = jsonData["C_fogplayerparams_t"]["m_flOldStart"];
C_fogplayerparams_t.m_flOldEnd = jsonData["C_fogplayerparams_t"]["m_flOldEnd"];
C_fogplayerparams_t.m_flOldMaxDensity = jsonData["C_fogplayerparams_t"]["m_flOldMaxDensity"];
C_fogplayerparams_t.m_flOldHDRColorScale = jsonData["C_fogplayerparams_t"]["m_flOldHDRColorScale"];
C_fogplayerparams_t.m_flOldFarZ = jsonData["C_fogplayerparams_t"]["m_flOldFarZ"];
C_fogplayerparams_t.m_NewColor = jsonData["C_fogplayerparams_t"]["m_NewColor"];
C_fogplayerparams_t.m_flNewStart = jsonData["C_fogplayerparams_t"]["m_flNewStart"];
C_fogplayerparams_t.m_flNewEnd = jsonData["C_fogplayerparams_t"]["m_flNewEnd"];
C_fogplayerparams_t.m_flNewMaxDensity = jsonData["C_fogplayerparams_t"]["m_flNewMaxDensity"];
C_fogplayerparams_t.m_flNewHDRColorScale = jsonData["C_fogplayerparams_t"]["m_flNewHDRColorScale"];
C_fogplayerparams_t.m_flNewFarZ = jsonData["C_fogplayerparams_t"]["m_flNewFarZ"];

// Atribuições para C_CSPlayerPawnBase
// C_CSPlayerPawnBase Offsets
C_CSPlayerPawnBase.m_pPingServices = jsonData["C_CSPlayerPawnBase"]["m_pPingServices"];
C_CSPlayerPawnBase.m_pViewModelServices = jsonData["C_CSPlayerPawnBase"]["m_pViewModelServices"];
C_CSPlayerPawnBase.m_fRenderingClipPlane = jsonData["C_CSPlayerPawnBase"]["m_fRenderingClipPlane"];
C_CSPlayerPawnBase.m_nLastClipPlaneSetupFrame = jsonData["C_CSPlayerPawnBase"]["m_nLastClipPlaneSetupFrame"];
C_CSPlayerPawnBase.m_vecLastClipCameraPos = jsonData["C_CSPlayerPawnBase"]["m_vecLastClipCameraPos"];
C_CSPlayerPawnBase.m_vecLastClipCameraForward = jsonData["C_CSPlayerPawnBase"]["m_vecLastClipCameraForward"];
C_CSPlayerPawnBase.m_bClipHitStaticWorld = jsonData["C_CSPlayerPawnBase"]["m_bClipHitStaticWorld"];
C_CSPlayerPawnBase.m_bCachedPlaneIsValid = jsonData["C_CSPlayerPawnBase"]["m_bCachedPlaneIsValid"];
C_CSPlayerPawnBase.m_pClippingWeapon = jsonData["C_CSPlayerPawnBase"]["m_pClippingWeapon"];
C_CSPlayerPawnBase.m_previousPlayerState = jsonData["C_CSPlayerPawnBase"]["m_previousPlayerState"];
C_CSPlayerPawnBase.m_iPlayerState = jsonData["C_CSPlayerPawnBase"]["m_iPlayerState"];
C_CSPlayerPawnBase.m_bIsRescuing = jsonData["C_CSPlayerPawnBase"]["m_bIsRescuing"];
C_CSPlayerPawnBase.m_fImmuneToGunGameDamageTime = jsonData["C_CSPlayerPawnBase"]["m_fImmuneToGunGameDamageTime"];
C_CSPlayerPawnBase.m_fImmuneToGunGameDamageTimeLast = jsonData["C_CSPlayerPawnBase"]["m_fImmuneToGunGameDamageTimeLast"];
C_CSPlayerPawnBase.m_bGunGameImmunity = jsonData["C_CSPlayerPawnBase"]["m_bGunGameImmunity"];
C_CSPlayerPawnBase.m_bHasMovedSinceSpawn = jsonData["C_CSPlayerPawnBase"]["m_bHasMovedSinceSpawn"];
C_CSPlayerPawnBase.m_fMolotovUseTime = jsonData["C_CSPlayerPawnBase"]["m_fMolotovUseTime"];
C_CSPlayerPawnBase.m_fMolotovDamageTime = jsonData["C_CSPlayerPawnBase"]["m_fMolotovDamageTime"];
C_CSPlayerPawnBase.m_iThrowGrenadeCounter = jsonData["C_CSPlayerPawnBase"]["m_iThrowGrenadeCounter"];
C_CSPlayerPawnBase.m_flLastSpawnTimeIndex = jsonData["C_CSPlayerPawnBase"]["m_flLastSpawnTimeIndex"];
C_CSPlayerPawnBase.m_iProgressBarDuration = jsonData["C_CSPlayerPawnBase"]["m_iProgressBarDuration"];
C_CSPlayerPawnBase.m_flProgressBarStartTime = jsonData["C_CSPlayerPawnBase"]["m_flProgressBarStartTime"];
C_CSPlayerPawnBase.m_vecIntroStartEyePosition = jsonData["C_CSPlayerPawnBase"]["m_vecIntroStartEyePosition"];
C_CSPlayerPawnBase.m_vecIntroStartPlayerForward = jsonData["C_CSPlayerPawnBase"]["m_vecIntroStartPlayerForward"];
C_CSPlayerPawnBase.m_flClientDeathTime = jsonData["C_CSPlayerPawnBase"]["m_flClientDeathTime"];
C_CSPlayerPawnBase.m_bScreenTearFrameCaptured = jsonData["C_CSPlayerPawnBase"]["m_bScreenTearFrameCaptured"];
C_CSPlayerPawnBase.m_flFlashBangTime = jsonData["C_CSPlayerPawnBase"]["m_flFlashBangTime"];
C_CSPlayerPawnBase.m_flFlashScreenshotAlpha = jsonData["C_CSPlayerPawnBase"]["m_flFlashScreenshotAlpha"];
C_CSPlayerPawnBase.m_flFlashOverlayAlpha = jsonData["C_CSPlayerPawnBase"]["m_flFlashOverlayAlpha"];
C_CSPlayerPawnBase.m_bFlashBuildUp = jsonData["C_CSPlayerPawnBase"]["m_bFlashBuildUp"];
C_CSPlayerPawnBase.m_bFlashDspHasBeenCleared = jsonData["C_CSPlayerPawnBase"]["m_bFlashDspHasBeenCleared"];
C_CSPlayerPawnBase.m_bFlashScreenshotHasBeenGrabbed = jsonData["C_CSPlayerPawnBase"]["m_bFlashScreenshotHasBeenGrabbed"];
C_CSPlayerPawnBase.m_flFlashMaxAlpha = jsonData["C_CSPlayerPawnBase"]["m_flFlashMaxAlpha"];
C_CSPlayerPawnBase.m_flFlashDuration = jsonData["C_CSPlayerPawnBase"]["m_flFlashDuration"];
C_CSPlayerPawnBase.m_iHealthBarRenderMaskIndex = jsonData["C_CSPlayerPawnBase"]["m_iHealthBarRenderMaskIndex"];
C_CSPlayerPawnBase.m_flHealthFadeValue = jsonData["C_CSPlayerPawnBase"]["m_flHealthFadeValue"];
C_CSPlayerPawnBase.m_flHealthFadeAlpha = jsonData["C_CSPlayerPawnBase"]["m_flHealthFadeAlpha"];
C_CSPlayerPawnBase.m_flDeathCCWeight = jsonData["C_CSPlayerPawnBase"]["m_flDeathCCWeight"];
C_CSPlayerPawnBase.m_flPrevRoundEndTime = jsonData["C_CSPlayerPawnBase"]["m_flPrevRoundEndTime"];
C_CSPlayerPawnBase.m_flPrevMatchEndTime = jsonData["C_CSPlayerPawnBase"]["m_flPrevMatchEndTime"];
C_CSPlayerPawnBase.m_angEyeAngles = jsonData["C_CSPlayerPawnBase"]["m_angEyeAngles"];
C_CSPlayerPawnBase.m_fNextThinkPushAway = jsonData["C_CSPlayerPawnBase"]["m_fNextThinkPushAway"];
C_CSPlayerPawnBase.m_bShouldAutobuyDMWeapons = jsonData["C_CSPlayerPawnBase"]["m_bShouldAutobuyDMWeapons"];
C_CSPlayerPawnBase.m_bShouldAutobuyNow = jsonData["C_CSPlayerPawnBase"]["m_bShouldAutobuyNow"];
C_CSPlayerPawnBase.m_iIDEntIndex = jsonData["C_CSPlayerPawnBase"]["m_iIDEntIndex"];
C_CSPlayerPawnBase.m_delayTargetIDTimer = jsonData["C_CSPlayerPawnBase"]["m_delayTargetIDTimer"];
C_CSPlayerPawnBase.m_iTargetItemEntIdx = jsonData["C_CSPlayerPawnBase"]["m_iTargetItemEntIdx"];
C_CSPlayerPawnBase.m_iOldIDEntIndex = jsonData["C_CSPlayerPawnBase"]["m_iOldIDEntIndex"];
C_CSPlayerPawnBase.m_holdTargetIDTimer = jsonData["C_CSPlayerPawnBase"]["m_holdTargetIDTimer"];
C_CSPlayerPawnBase.m_flCurrentMusicStartTime = jsonData["C_CSPlayerPawnBase"]["m_flCurrentMusicStartTime"];
C_CSPlayerPawnBase.m_flMusicRoundStartTime = jsonData["C_CSPlayerPawnBase"]["m_flMusicRoundStartTime"];
C_CSPlayerPawnBase.m_bDeferStartMusicOnWarmup = jsonData["C_CSPlayerPawnBase"]["m_bDeferStartMusicOnWarmup"];
C_CSPlayerPawnBase.m_cycleLatch = jsonData["C_CSPlayerPawnBase"]["m_cycleLatch"];
C_CSPlayerPawnBase.m_serverIntendedCycle = jsonData["C_CSPlayerPawnBase"]["m_serverIntendedCycle"];
C_CSPlayerPawnBase.m_flLastSmokeOverlayAlpha = jsonData["C_CSPlayerPawnBase"]["m_flLastSmokeOverlayAlpha"];
C_CSPlayerPawnBase.m_flLastSmokeAge = jsonData["C_CSPlayerPawnBase"]["m_flLastSmokeAge"];
C_CSPlayerPawnBase.m_vLastSmokeOverlayColor = jsonData["C_CSPlayerPawnBase"]["m_vLastSmokeOverlayColor"];
C_CSPlayerPawnBase.m_nPlayerSmokedFx = jsonData["C_CSPlayerPawnBase"]["m_nPlayerSmokedFx"];
C_CSPlayerPawnBase.m_nPlayerInfernoBodyFx = jsonData["C_CSPlayerPawnBase"]["m_nPlayerInfernoBodyFx"];
C_CSPlayerPawnBase.m_nPlayerInfernoFootFx = jsonData["C_CSPlayerPawnBase"]["m_nPlayerInfernoFootFx"];
C_CSPlayerPawnBase.m_flNextMagDropTime = jsonData["C_CSPlayerPawnBase"]["m_flNextMagDropTime"];
C_CSPlayerPawnBase.m_nLastMagDropAttachmentIndex = jsonData["C_CSPlayerPawnBase"]["m_nLastMagDropAttachmentIndex"];
C_CSPlayerPawnBase.m_vecLastAliveLocalVelocity = jsonData["C_CSPlayerPawnBase"]["m_vecLastAliveLocalVelocity"];
C_CSPlayerPawnBase.m_bGuardianShouldSprayCustomXMark = jsonData["C_CSPlayerPawnBase"]["m_bGuardianShouldSprayCustomXMark"];
C_CSPlayerPawnBase.m_hOriginalController = jsonData["C_CSPlayerPawnBase"]["m_hOriginalController"];

// Atribuições para C_EnvWindShared
// C_EnvWindShared Offsets
C_EnvWindShared.m_flStartTime = jsonData["C_EnvWindShared"]["m_flStartTime"];
C_EnvWindShared.m_iWindSeed = jsonData["C_EnvWindShared"]["m_iWindSeed"];
C_EnvWindShared.m_iMinWind = jsonData["C_EnvWindShared"]["m_iMinWind"];
C_EnvWindShared.m_iMaxWind = jsonData["C_EnvWindShared"]["m_iMaxWind"];
C_EnvWindShared.m_windRadius = jsonData["C_EnvWindShared"]["m_windRadius"];
C_EnvWindShared.m_iMinGust = jsonData["C_EnvWindShared"]["m_iMinGust"];
C_EnvWindShared.m_iMaxGust = jsonData["C_EnvWindShared"]["m_iMaxGust"];
C_EnvWindShared.m_flMinGustDelay = jsonData["C_EnvWindShared"]["m_flMinGustDelay"];
C_EnvWindShared.m_flMaxGustDelay = jsonData["C_EnvWindShared"]["m_flMaxGustDelay"];
C_EnvWindShared.m_flGustDuration = jsonData["C_EnvWindShared"]["m_flGustDuration"];
C_EnvWindShared.m_iGustDirChange = jsonData["C_EnvWindShared"]["m_iGustDirChange"];
C_EnvWindShared.m_location = jsonData["C_EnvWindShared"]["m_location"];
C_EnvWindShared.m_iszGustSound = jsonData["C_EnvWindShared"]["m_iszGustSound"];
C_EnvWindShared.m_iWindDir = jsonData["C_EnvWindShared"]["m_iWindDir"];
C_EnvWindShared.m_flWindSpeed = jsonData["C_EnvWindShared"]["m_flWindSpeed"];
C_EnvWindShared.m_currentWindVector = jsonData["C_EnvWindShared"]["m_currentWindVector"];
C_EnvWindShared.m_CurrentSwayVector = jsonData["C_EnvWindShared"]["m_CurrentSwayVector"];
C_EnvWindShared.m_PrevSwayVector = jsonData["C_EnvWindShared"]["m_PrevSwayVector"];
C_EnvWindShared.m_iInitialWindDir = jsonData["C_EnvWindShared"]["m_iInitialWindDir"];
C_EnvWindShared.m_flInitialWindSpeed = jsonData["C_EnvWindShared"]["m_flInitialWindSpeed"];
C_EnvWindShared.m_flVariationTime = jsonData["C_EnvWindShared"]["m_flVariationTime"];
C_EnvWindShared.m_flSwayTime = jsonData["C_EnvWindShared"]["m_flSwayTime"];
C_EnvWindShared.m_flSimTime = jsonData["C_EnvWindShared"]["m_flSimTime"];
C_EnvWindShared.m_flSwitchTime = jsonData["C_EnvWindShared"]["m_flSwitchTime"];
C_EnvWindShared.m_flAveWindSpeed = jsonData["C_EnvWindShared"]["m_flAveWindSpeed"];
C_EnvWindShared.m_bGusting = jsonData["C_EnvWindShared"]["m_bGusting"];
C_EnvWindShared.m_flWindAngleVariation = jsonData["C_EnvWindShared"]["m_flWindAngleVariation"];
C_EnvWindShared.m_flWindSpeedVariation = jsonData["C_EnvWindShared"]["m_flWindSpeedVariation"];
C_EnvWindShared.m_hEntOwner = jsonData["C_EnvWindShared"]["m_hEntOwner"];

// Atribuições para C_PostProcessingVolume
// C_PostProcessingVolume Offsets
C_PostProcessingVolume.m_hPostSettings = jsonData["C_PostProcessingVolume"]["m_hPostSettings"];
C_PostProcessingVolume.m_flFadeDuration = jsonData["C_PostProcessingVolume"]["m_flFadeDuration"];
C_PostProcessingVolume.m_flMinLogExposure = jsonData["C_PostProcessingVolume"]["m_flMinLogExposure"];
C_PostProcessingVolume.m_flMaxLogExposure = jsonData["C_PostProcessingVolume"]["m_flMaxLogExposure"];
C_PostProcessingVolume.m_flMinExposure = jsonData["C_PostProcessingVolume"]["m_flMinExposure"];
C_PostProcessingVolume.m_flMaxExposure = jsonData["C_PostProcessingVolume"]["m_flMaxExposure"];
C_PostProcessingVolume.m_flExposureCompensation = jsonData["C_PostProcessingVolume"]["m_flExposureCompensation"];
C_PostProcessingVolume.m_flExposureFadeSpeedUp = jsonData["C_PostProcessingVolume"]["m_flExposureFadeSpeedUp"];
C_PostProcessingVolume.m_flExposureFadeSpeedDown = jsonData["C_PostProcessingVolume"]["m_flExposureFadeSpeedDown"];
C_PostProcessingVolume.m_flTonemapEVSmoothingRange = jsonData["C_PostProcessingVolume"]["m_flTonemapEVSmoothingRange"];
C_PostProcessingVolume.m_bMaster = jsonData["C_PostProcessingVolume"]["m_bMaster"];
C_PostProcessingVolume.m_bExposureControl = jsonData["C_PostProcessingVolume"]["m_bExposureControl"];
C_PostProcessingVolume.m_flRate = jsonData["C_PostProcessingVolume"]["m_flRate"];
C_PostProcessingVolume.m_flTonemapPercentTarget = jsonData["C_PostProcessingVolume"]["m_flTonemapPercentTarget"];
C_PostProcessingVolume.m_flTonemapPercentBrightPixels = jsonData["C_PostProcessingVolume"]["m_flTonemapPercentBrightPixels"];
C_PostProcessingVolume.m_flTonemapMinAvgLum = jsonData["C_PostProcessingVolume"]["m_flTonemapMinAvgLum"];

// Atribuições para CCSPlayer_PingServices
// CCSPlayer_PingServices Offsets
CCSPlayer_PingServices.m_hPlayerPing = jsonData["CCSPlayer_PingServices"]["m_hPlayerPing"];
CCSPlayer_PingServices.m_flPlayerPingTokens = jsonData["CCSPlayer_PingServices"]["m_flPlayerPingTokens"];

// Atribuições para C_AttributeContainer
// C_AttributeContainer Offsets
C_AttributeContainer.m_Item = jsonData["C_AttributeContainer"]["m_Item"];
C_AttributeContainer.m_iExternalItemProviderRegisteredToken = jsonData["C_AttributeContainer"]["m_iExternalItemProviderRegisteredToken"];
C_AttributeContainer.m_ullRegisteredAsItemID = jsonData["C_AttributeContainer"]["m_ullRegisteredAsItemID"];

// Atribuições para C_BaseFire
// C_BaseFire Offsets
C_BaseFire.m_flScale = jsonData["C_BaseFire"]["m_flScale"];
C_BaseFire.m_flStartScale = jsonData["C_BaseFire"]["m_flStartScale"];
C_BaseFire.m_flScaleTime = jsonData["C_BaseFire"]["m_flScaleTime"];
C_BaseFire.m_nFlags = jsonData["C_BaseFire"]["m_nFlags"];

// Atribuições para CBasePlayerController
// CBasePlayerController Offsets
CBasePlayerController.m_nFinalPredictedTick = jsonData["CBasePlayerController"]["m_nFinalPredictedTick"];
CBasePlayerController.m_CommandContext = jsonData["CBasePlayerController"]["m_CommandContext"];
CBasePlayerController.m_nInButtonsWhichAreToggles = jsonData["CBasePlayerController"]["m_nInButtonsWhichAreToggles"];
CBasePlayerController.m_nTickBase = jsonData["CBasePlayerController"]["m_nTickBase"];
CBasePlayerController.m_hPawn = jsonData["CBasePlayerController"]["m_hPawn"];
CBasePlayerController.m_bKnownTeamMismatch = jsonData["CBasePlayerController"]["m_bKnownTeamMismatch"];
CBasePlayerController.m_hPredictedPawn = jsonData["CBasePlayerController"]["m_hPredictedPawn"];
CBasePlayerController.m_nSplitScreenSlot = jsonData["CBasePlayerController"]["m_nSplitScreenSlot"];
CBasePlayerController.m_hSplitOwner = jsonData["CBasePlayerController"]["m_hSplitOwner"];
CBasePlayerController.m_hSplitScreenPlayers = jsonData["CBasePlayerController"]["m_hSplitScreenPlayers"];
CBasePlayerController.m_bIsHLTV = jsonData["CBasePlayerController"]["m_bIsHLTV"];
CBasePlayerController.m_iConnected = jsonData["CBasePlayerController"]["m_iConnected"];
CBasePlayerController.m_iszPlayerName = jsonData["CBasePlayerController"]["m_iszPlayerName"];
CBasePlayerController.m_steamID = jsonData["CBasePlayerController"]["m_steamID"];
CBasePlayerController.m_bIsLocalPlayerController = jsonData["CBasePlayerController"]["m_bIsLocalPlayerController"];
CBasePlayerController.m_iDesiredFOV = jsonData["CBasePlayerController"]["m_iDesiredFOV"];
CBasePlayerController.m_szNetworkIDString = jsonData["CBasePlayerController"]["m_szNetworkIDString"];
CBasePlayerController.m_fLerpTime = jsonData["CBasePlayerController"]["m_fLerpTime"];
CBasePlayerController.m_bLagCompensation = jsonData["CBasePlayerController"]["m_bLagCompensation"];
CBasePlayerController.m_bPredict = jsonData["CBasePlayerController"]["m_bPredict"];
CBasePlayerController.m_bAutoKickDisabled = jsonData["CBasePlayerController"]["m_bAutoKickDisabled"];
CBasePlayerController.m_bIsLowViolence = jsonData["CBasePlayerController"]["m_bIsLowViolence"];
CBasePlayerController.m_bGamePaused = jsonData["CBasePlayerController"]["m_bGamePaused"];
CBasePlayerController.m_iIgnoreGlobalChat = jsonData["CBasePlayerController"]["m_iIgnoreGlobalChat"];
CBasePlayerController.m_flLastPlayerTalkTime = jsonData["CBasePlayerController"]["m_flLastPlayerTalkTime"];
CBasePlayerController.m_flLastEntitySteadyState = jsonData["CBasePlayerController"]["m_flLastEntitySteadyState"];
CBasePlayerController.m_nAvailableEntitySteadyState = jsonData["CBasePlayerController"]["m_nAvailableEntitySteadyState"];
CBasePlayerController.m_bHasAnySteadyStateEnts = jsonData["CBasePlayerController"]["m_bHasAnySteadyStateEnts"];

// Atribuições para C_DecoyProjectile
// C_DecoyProjectile Offsets
C_DecoyProjectile.m_nDecoyShotTick = jsonData["C_DecoyProjectile"]["m_nDecoyShotTick"];
C_DecoyProjectile.m_nClientLastKnownDecoyShotTick = jsonData["C_DecoyProjectile"]["m_nClientLastKnownDecoyShotTick"];
C_DecoyProjectile.m_flTimeParticleEffectSpawn = jsonData["C_DecoyProjectile"]["m_flTimeParticleEffectSpawn"];

// Atribuições para C_CSGO_PreviewPlayer
// C_CSGO_PreviewPlayer Offsets
C_CSGO_PreviewPlayer.m_animgraph = jsonData["C_CSGO_PreviewPlayer"]["m_animgraph"];
C_CSGO_PreviewPlayer.m_animgraphCharacterModeString = jsonData["C_CSGO_PreviewPlayer"]["m_animgraphCharacterModeString"];
C_CSGO_PreviewPlayer.m_flInitialModelScale = jsonData["C_CSGO_PreviewPlayer"]["m_flInitialModelScale"];

// Atribuições para CBaseAnimGraphController
// CBaseAnimGraphController Offsets
CBaseAnimGraphController.m_animGraphNetworkedVars = jsonData["CBaseAnimGraphController"]["m_animGraphNetworkedVars"];
CBaseAnimGraphController.m_bSequenceFinished = jsonData["CBaseAnimGraphController"]["m_bSequenceFinished"];
CBaseAnimGraphController.m_flSoundSyncTime = jsonData["CBaseAnimGraphController"]["m_flSoundSyncTime"];
CBaseAnimGraphController.m_nActiveIKChainMask = jsonData["CBaseAnimGraphController"]["m_nActiveIKChainMask"];
CBaseAnimGraphController.m_hSequence = jsonData["CBaseAnimGraphController"]["m_hSequence"];
CBaseAnimGraphController.m_flSeqStartTime = jsonData["CBaseAnimGraphController"]["m_flSeqStartTime"];
CBaseAnimGraphController.m_flSeqFixedCycle = jsonData["CBaseAnimGraphController"]["m_flSeqFixedCycle"];
CBaseAnimGraphController.m_nAnimLoopMode = jsonData["CBaseAnimGraphController"]["m_nAnimLoopMode"];
CBaseAnimGraphController.m_flPlaybackRate = jsonData["CBaseAnimGraphController"]["m_flPlaybackRate"];
CBaseAnimGraphController.m_nNotifyState = jsonData["CBaseAnimGraphController"]["m_nNotifyState"];
CBaseAnimGraphController.m_bNetworkedAnimationInputsChanged = jsonData["CBaseAnimGraphController"]["m_bNetworkedAnimationInputsChanged"];
CBaseAnimGraphController.m_bNetworkedSequenceChanged = jsonData["CBaseAnimGraphController"]["m_bNetworkedSequenceChanged"];
CBaseAnimGraphController.m_bLastUpdateSkipped = jsonData["CBaseAnimGraphController"]["m_bLastUpdateSkipped"];
CBaseAnimGraphController.m_flPrevAnimUpdateTime = jsonData["CBaseAnimGraphController"]["m_flPrevAnimUpdateTime"];

// Atribuições para C_C4
// C_C4 Offsets
C_C4.m_szScreenText = jsonData["C_C4"]["m_szScreenText"];
C_C4.m_activeLightParticleIndex = jsonData["C_C4"]["m_activeLightParticleIndex"];
C_C4.m_eActiveLightEffect = jsonData["C_C4"]["m_eActiveLightEffect"];
C_C4.m_bStartedArming = jsonData["C_C4"]["m_bStartedArming"];
C_C4.m_fArmedTime = jsonData["C_C4"]["m_fArmedTime"];
C_C4.m_bBombPlacedAnimation = jsonData["C_C4"]["m_bBombPlacedAnimation"];
C_C4.m_bIsPlantingViaUse = jsonData["C_C4"]["m_bIsPlantingViaUse"];
C_C4.m_entitySpottedState = jsonData["C_C4"]["m_entitySpottedState"];
C_C4.m_nSpotRules = jsonData["C_C4"]["m_nSpotRules"];
C_C4.m_bPlayedArmingBeeps = jsonData["C_C4"]["m_bPlayedArmingBeeps"];
C_C4.m_bBombPlanted = jsonData["C_C4"]["m_bBombPlanted"];

// Atribuições para CBaseAnimGraph
// CBaseAnimGraph Offsets
CBaseAnimGraph.m_bInitiallyPopulateInterpHistory = jsonData["CBaseAnimGraph"]["m_bInitiallyPopulateInterpHistory"];
CBaseAnimGraph.m_bSuppressAnimEventSounds = jsonData["CBaseAnimGraph"]["m_bSuppressAnimEventSounds"];
CBaseAnimGraph.m_bAnimGraphUpdateEnabled = jsonData["CBaseAnimGraph"]["m_bAnimGraphUpdateEnabled"];
CBaseAnimGraph.m_flMaxSlopeDistance = jsonData["CBaseAnimGraph"]["m_flMaxSlopeDistance"];
CBaseAnimGraph.m_vLastSlopeCheckPos = jsonData["CBaseAnimGraph"]["m_vLastSlopeCheckPos"];
CBaseAnimGraph.m_bAnimationUpdateScheduled = jsonData["CBaseAnimGraph"]["m_bAnimationUpdateScheduled"];
CBaseAnimGraph.m_vecForce = jsonData["CBaseAnimGraph"]["m_vecForce"];
CBaseAnimGraph.m_nForceBone = jsonData["CBaseAnimGraph"]["m_nForceBone"];
CBaseAnimGraph.m_pClientsideRagdoll = jsonData["CBaseAnimGraph"]["m_pClientsideRagdoll"];
CBaseAnimGraph.m_bBuiltRagdoll = jsonData["CBaseAnimGraph"]["m_bBuiltRagdoll"];
CBaseAnimGraph.m_RagdollPose = jsonData["CBaseAnimGraph"]["m_RagdollPose"];
CBaseAnimGraph.m_bRagdollClientSide = jsonData["CBaseAnimGraph"]["m_bRagdollClientSide"];
CBaseAnimGraph.m_bHasAnimatedMaterialAttributes = jsonData["CBaseAnimGraph"]["m_bHasAnimatedMaterialAttributes"];
CBaseAnimGraph.m_pChoreoServices = jsonData["CBaseAnimGraph"]["m_pChoreoServices"];

// Atribuições para C_PathParticleRope
// C_PathParticleRope Offsets
C_PathParticleRope.m_bStartActive = jsonData["C_PathParticleRope"]["m_bStartActive"];
C_PathParticleRope.m_flMaxSimulationTime = jsonData["C_PathParticleRope"]["m_flMaxSimulationTime"];
C_PathParticleRope.m_iszEffectName = jsonData["C_PathParticleRope"]["m_iszEffectName"];
C_PathParticleRope.m_PathNodes_Name = jsonData["C_PathParticleRope"]["m_PathNodes_Name"];
C_PathParticleRope.m_flParticleSpacing = jsonData["C_PathParticleRope"]["m_flParticleSpacing"];
C_PathParticleRope.m_flSlack = jsonData["C_PathParticleRope"]["m_flSlack"];
C_PathParticleRope.m_flRadius = jsonData["C_PathParticleRope"]["m_flRadius"];
C_PathParticleRope.m_ColorTint = jsonData["C_PathParticleRope"]["m_ColorTint"];
C_PathParticleRope.m_nEffectState = jsonData["C_PathParticleRope"]["m_nEffectState"];
C_PathParticleRope.m_iEffectIndex = jsonData["C_PathParticleRope"]["m_iEffectIndex"];
C_PathParticleRope.m_PathNodes_Position = jsonData["C_PathParticleRope"]["m_PathNodes_Position"];
C_PathParticleRope.m_PathNodes_TangentIn = jsonData["C_PathParticleRope"]["m_PathNodes_TangentIn"];
C_PathParticleRope.m_PathNodes_TangentOut = jsonData["C_PathParticleRope"]["m_PathNodes_TangentOut"];
C_PathParticleRope.m_PathNodes_Color = jsonData["C_PathParticleRope"]["m_PathNodes_Color"];
C_PathParticleRope.m_PathNodes_PinEnabled = jsonData["C_PathParticleRope"]["m_PathNodes_PinEnabled"];
C_PathParticleRope.m_PathNodes_RadiusScale = jsonData["C_PathParticleRope"]["m_PathNodes_RadiusScale"];

// Atribuições para C_SoundEventAABBEntity
// C_SoundEventAABBEntity Offsets
C_SoundEventAABBEntity.m_vMins = jsonData["C_SoundEventAABBEntity"]["m_vMins"];
C_SoundEventAABBEntity.m_vMaxs = jsonData["C_SoundEventAABBEntity"]["m_vMaxs"];

// Atribuições para C_BasePlayerWeapon
// C_BasePlayerWeapon Offsets
C_BasePlayerWeapon.m_nNextPrimaryAttackTick = jsonData["C_BasePlayerWeapon"]["m_nNextPrimaryAttackTick"];
C_BasePlayerWeapon.m_flNextPrimaryAttackTickRatio = jsonData["C_BasePlayerWeapon"]["m_flNextPrimaryAttackTickRatio"];
C_BasePlayerWeapon.m_nNextSecondaryAttackTick = jsonData["C_BasePlayerWeapon"]["m_nNextSecondaryAttackTick"];
C_BasePlayerWeapon.m_flNextSecondaryAttackTickRatio = jsonData["C_BasePlayerWeapon"]["m_flNextSecondaryAttackTickRatio"];
C_BasePlayerWeapon.m_iClip1 = jsonData["C_BasePlayerWeapon"]["m_iClip1"];
C_BasePlayerWeapon.m_iClip2 = jsonData["C_BasePlayerWeapon"]["m_iClip2"];
C_BasePlayerWeapon.m_pReserveAmmo = jsonData["C_BasePlayerWeapon"]["m_pReserveAmmo"];

// Atribuições para CBasePlayerWeaponVData
// CBasePlayerWeaponVData Offsets
CBasePlayerWeaponVData.m_szWorldModel = jsonData["CBasePlayerWeaponVData"]["m_szWorldModel"];
CBasePlayerWeaponVData.m_sToolsOnlyOwnerModelName = jsonData["CBasePlayerWeaponVData"]["m_sToolsOnlyOwnerModelName"];
CBasePlayerWeaponVData.m_bBuiltRightHanded = jsonData["CBasePlayerWeaponVData"]["m_bBuiltRightHanded"];
CBasePlayerWeaponVData.m_bAllowFlipping = jsonData["CBasePlayerWeaponVData"]["m_bAllowFlipping"];
CBasePlayerWeaponVData.m_sMuzzleAttachment = jsonData["CBasePlayerWeaponVData"]["m_sMuzzleAttachment"];
CBasePlayerWeaponVData.m_szMuzzleFlashParticle = jsonData["CBasePlayerWeaponVData"]["m_szMuzzleFlashParticle"];
CBasePlayerWeaponVData.m_bLinkedCooldowns = jsonData["CBasePlayerWeaponVData"]["m_bLinkedCooldowns"];
CBasePlayerWeaponVData.m_iFlags = jsonData["CBasePlayerWeaponVData"]["m_iFlags"];
CBasePlayerWeaponVData.m_nPrimaryAmmoType = jsonData["CBasePlayerWeaponVData"]["m_nPrimaryAmmoType"];
CBasePlayerWeaponVData.m_nSecondaryAmmoType = jsonData["CBasePlayerWeaponVData"]["m_nSecondaryAmmoType"];
CBasePlayerWeaponVData.m_iMaxClip1 = jsonData["CBasePlayerWeaponVData"]["m_iMaxClip1"];
CBasePlayerWeaponVData.m_iMaxClip2 = jsonData["CBasePlayerWeaponVData"]["m_iMaxClip2"];
CBasePlayerWeaponVData.m_iDefaultClip1 = jsonData["CBasePlayerWeaponVData"]["m_iDefaultClip1"];
CBasePlayerWeaponVData.m_iDefaultClip2 = jsonData["CBasePlayerWeaponVData"]["m_iDefaultClip2"];
CBasePlayerWeaponVData.m_bReserveAmmoAsClips = jsonData["CBasePlayerWeaponVData"]["m_bReserveAmmoAsClips"];
CBasePlayerWeaponVData.m_iWeight = jsonData["CBasePlayerWeaponVData"]["m_iWeight"];
CBasePlayerWeaponVData.m_bAutoSwitchTo = jsonData["CBasePlayerWeaponVData"]["m_bAutoSwitchTo"];
CBasePlayerWeaponVData.m_bAutoSwitchFrom = jsonData["CBasePlayerWeaponVData"]["m_bAutoSwitchFrom"];
CBasePlayerWeaponVData.m_iRumbleEffect = jsonData["CBasePlayerWeaponVData"]["m_iRumbleEffect"];
CBasePlayerWeaponVData.m_iSlot = jsonData["CBasePlayerWeaponVData"]["m_iSlot"];
CBasePlayerWeaponVData.m_iPosition = jsonData["CBasePlayerWeaponVData"]["m_iPosition"];
CBasePlayerWeaponVData.m_aShootSounds = jsonData["CBasePlayerWeaponVData"]["m_aShootSounds"];

// Atribuições para C_Fish
// C_Fish Offsets
C_Fish.m_pos = jsonData["C_Fish"]["m_pos"];
C_Fish.m_vel = jsonData["C_Fish"]["m_vel"];
C_Fish.m_angles = jsonData["C_Fish"]["m_angles"];
C_Fish.m_localLifeState = jsonData["C_Fish"]["m_localLifeState"];
C_Fish.m_deathDepth = jsonData["C_Fish"]["m_deathDepth"];
C_Fish.m_deathAngle = jsonData["C_Fish"]["m_deathAngle"];
C_Fish.m_buoyancy = jsonData["C_Fish"]["m_buoyancy"];
C_Fish.m_wiggleTimer = jsonData["C_Fish"]["m_wiggleTimer"];
C_Fish.m_wigglePhase = jsonData["C_Fish"]["m_wigglePhase"];
C_Fish.m_wiggleRate = jsonData["C_Fish"]["m_wiggleRate"];
C_Fish.m_actualPos = jsonData["C_Fish"]["m_actualPos"];
C_Fish.m_actualAngles = jsonData["C_Fish"]["m_actualAngles"];
C_Fish.m_poolOrigin = jsonData["C_Fish"]["m_poolOrigin"];
C_Fish.m_waterLevel = jsonData["C_Fish"]["m_waterLevel"];
C_Fish.m_gotUpdate = jsonData["C_Fish"]["m_gotUpdate"];
C_Fish.m_x = jsonData["C_Fish"]["m_x"];
C_Fish.m_y = jsonData["C_Fish"]["m_y"];
C_Fish.m_z = jsonData["C_Fish"]["m_z"];
C_Fish.m_angle = jsonData["C_Fish"]["m_angle"];
C_Fish.m_errorHistory = jsonData["C_Fish"]["m_errorHistory"];
C_Fish.m_errorHistoryIndex = jsonData["C_Fish"]["m_errorHistoryIndex"];
C_Fish.m_errorHistoryCount = jsonData["C_Fish"]["m_errorHistoryCount"];
C_Fish.m_averageError = jsonData["C_Fish"]["m_averageError"];

// Atribuições para CTimeline
// CTimeline Offsets
CTimeline.m_flValues = jsonData["CTimeline"]["m_flValues"];
CTimeline.m_nValueCounts = jsonData["CTimeline"]["m_nValueCounts"];
CTimeline.m_nBucketCount = jsonData["CTimeline"]["m_nBucketCount"];
CTimeline.m_flInterval = jsonData["CTimeline"]["m_flInterval"];
CTimeline.m_flFinalValue = jsonData["CTimeline"]["m_flFinalValue"];
CTimeline.m_nCompressionType = jsonData["CTimeline"]["m_nCompressionType"];
CTimeline.m_bStopped = jsonData["CTimeline"]["m_bStopped"];

// Atribuições para C_BasePlayerPawn
// C_BasePlayerPawn Offsets
C_BasePlayerPawn.m_pWeaponServices = jsonData["C_BasePlayerPawn"]["m_pWeaponServices"];
C_BasePlayerPawn.m_pItemServices = jsonData["C_BasePlayerPawn"]["m_pItemServices"];
C_BasePlayerPawn.m_pAutoaimServices = jsonData["C_BasePlayerPawn"]["m_pAutoaimServices"];
C_BasePlayerPawn.m_pObserverServices = jsonData["C_BasePlayerPawn"]["m_pObserverServices"];
C_BasePlayerPawn.m_pWaterServices = jsonData["C_BasePlayerPawn"]["m_pWaterServices"];
C_BasePlayerPawn.m_pUseServices = jsonData["C_BasePlayerPawn"]["m_pUseServices"];
C_BasePlayerPawn.m_pFlashlightServices = jsonData["C_BasePlayerPawn"]["m_pFlashlightServices"];
C_BasePlayerPawn.m_pCameraServices = jsonData["C_BasePlayerPawn"]["m_pCameraServices"];
C_BasePlayerPawn.m_pMovementServices = jsonData["C_BasePlayerPawn"]["m_pMovementServices"];
C_BasePlayerPawn.m_ServerViewAngleChanges = jsonData["C_BasePlayerPawn"]["m_ServerViewAngleChanges"];
C_BasePlayerPawn.m_nHighestConsumedServerViewAngleChangeIndex = jsonData["C_BasePlayerPawn"]["m_nHighestConsumedServerViewAngleChangeIndex"];
C_BasePlayerPawn.v_angle = jsonData["C_BasePlayerPawn"]["v_angle"];
C_BasePlayerPawn.v_anglePrevious = jsonData["C_BasePlayerPawn"]["v_anglePrevious"];
C_BasePlayerPawn.m_iHideHUD = jsonData["C_BasePlayerPawn"]["m_iHideHUD"];
C_BasePlayerPawn.m_skybox3d = jsonData["C_BasePlayerPawn"]["m_skybox3d"];
C_BasePlayerPawn.m_flDeathTime = jsonData["C_BasePlayerPawn"]["m_flDeathTime"];
C_BasePlayerPawn.m_vecPredictionError = jsonData["C_BasePlayerPawn"]["m_vecPredictionError"];
C_BasePlayerPawn.m_flPredictionErrorTime = jsonData["C_BasePlayerPawn"]["m_flPredictionErrorTime"];
C_BasePlayerPawn.m_vecLastCameraSetupLocalOrigin = jsonData["C_BasePlayerPawn"]["m_vecLastCameraSetupLocalOrigin"];
C_BasePlayerPawn.m_flLastCameraSetupTime = jsonData["C_BasePlayerPawn"]["m_flLastCameraSetupTime"];
C_BasePlayerPawn.m_flFOVSensitivityAdjust = jsonData["C_BasePlayerPawn"]["m_flFOVSensitivityAdjust"];
C_BasePlayerPawn.m_flMouseSensitivity = jsonData["C_BasePlayerPawn"]["m_flMouseSensitivity"];
C_BasePlayerPawn.m_vOldOrigin = jsonData["C_BasePlayerPawn"]["m_vOldOrigin"];
C_BasePlayerPawn.m_flOldSimulationTime = jsonData["C_BasePlayerPawn"]["m_flOldSimulationTime"];
C_BasePlayerPawn.m_nLastExecutedCommandNumber = jsonData["C_BasePlayerPawn"]["m_nLastExecutedCommandNumber"];
C_BasePlayerPawn.m_nLastExecutedCommandTick = jsonData["C_BasePlayerPawn"]["m_nLastExecutedCommandTick"];
C_BasePlayerPawn.m_hController = jsonData["C_BasePlayerPawn"]["m_hController"];
C_BasePlayerPawn.m_bIsSwappingToPredictableController = jsonData["C_BasePlayerPawn"]["m_bIsSwappingToPredictableController"];

// Atribuições para CAttributeManager
// CAttributeManager Offsets
CAttributeManager.m_Providers = jsonData["CAttributeManager"]["m_Providers"];
CAttributeManager.m_iReapplyProvisionParity = jsonData["CAttributeManager"]["m_iReapplyProvisionParity"];
CAttributeManager.m_hOuter = jsonData["CAttributeManager"]["m_hOuter"];
CAttributeManager.m_bPreventLoopback = jsonData["CAttributeManager"]["m_bPreventLoopback"];
CAttributeManager.m_ProviderType = jsonData["CAttributeManager"]["m_ProviderType"];
CAttributeManager.m_CachedResults = jsonData["CAttributeManager"]["m_CachedResults"];

// Atribuições para CAnimGraphNetworkedVariables
// CAnimGraphNetworkedVariables Offsets
CAnimGraphNetworkedVariables.m_PredNetBoolVariables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetBoolVariables"];
CAnimGraphNetworkedVariables.m_PredNetByteVariables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetByteVariables"];
CAnimGraphNetworkedVariables.m_PredNetUInt16Variables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetUInt16Variables"];
CAnimGraphNetworkedVariables.m_PredNetIntVariables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetIntVariables"];
CAnimGraphNetworkedVariables.m_PredNetUInt32Variables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetUInt32Variables"];
CAnimGraphNetworkedVariables.m_PredNetUInt64Variables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetUInt64Variables"];
CAnimGraphNetworkedVariables.m_PredNetFloatVariables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetFloatVariables"];
CAnimGraphNetworkedVariables.m_PredNetVectorVariables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetVectorVariables"];
CAnimGraphNetworkedVariables.m_PredNetQuaternionVariables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetQuaternionVariables"];
CAnimGraphNetworkedVariables.m_PredNetGlobalSymbolVariables = jsonData["CAnimGraphNetworkedVariables"]["m_PredNetGlobalSymbolVariables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetBoolVariables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetBoolVariables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetByteVariables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetByteVariables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetUInt16Variables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetUInt16Variables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetIntVariables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetIntVariables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetUInt32Variables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetUInt32Variables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetUInt64Variables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetUInt64Variables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetFloatVariables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetFloatVariables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetVectorVariables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetVectorVariables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetQuaternionVariables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetQuaternionVariables"];
CAnimGraphNetworkedVariables.m_OwnerOnlyPredNetGlobalSymbolVariables = jsonData["CAnimGraphNetworkedVariables"]["m_OwnerOnlyPredNetGlobalSymbolVariables"];
CAnimGraphNetworkedVariables.m_nBoolVariablesCount = jsonData["CAnimGraphNetworkedVariables"]["m_nBoolVariablesCount"];
CAnimGraphNetworkedVariables.m_nOwnerOnlyBoolVariablesCount = jsonData["CAnimGraphNetworkedVariables"]["m_nOwnerOnlyBoolVariablesCount"];
CAnimGraphNetworkedVariables.m_nRandomSeedOffset = jsonData["CAnimGraphNetworkedVariables"]["m_nRandomSeedOffset"];
CAnimGraphNetworkedVariables.m_flLastTeleportTime = jsonData["CAnimGraphNetworkedVariables"]["m_flLastTeleportTime"];

// Atribuições para C_TriggerBuoyancy
// C_TriggerBuoyancy Offsets
C_TriggerBuoyancy.m_BuoyancyHelper = jsonData["C_TriggerBuoyancy"]["m_BuoyancyHelper"];
C_TriggerBuoyancy.m_flFluidDensity = jsonData["C_TriggerBuoyancy"]["m_flFluidDensity"];

// Atribuições para C_RopeKeyframe
// C_RopeKeyframe Offsets
C_RopeKeyframe.m_LinksTouchingSomething = jsonData["C_RopeKeyframe"]["m_LinksTouchingSomething"];
C_RopeKeyframe.m_nLinksTouchingSomething = jsonData["C_RopeKeyframe"]["m_nLinksTouchingSomething"];
C_RopeKeyframe.m_bApplyWind = jsonData["C_RopeKeyframe"]["m_bApplyWind"];
C_RopeKeyframe.m_fPrevLockedPoints = jsonData["C_RopeKeyframe"]["m_fPrevLockedPoints"];
C_RopeKeyframe.m_iForcePointMoveCounter = jsonData["C_RopeKeyframe"]["m_iForcePointMoveCounter"];
C_RopeKeyframe.m_bPrevEndPointPos = jsonData["C_RopeKeyframe"]["m_bPrevEndPointPos"];
C_RopeKeyframe.m_vPrevEndPointPos = jsonData["C_RopeKeyframe"]["m_vPrevEndPointPos"];
C_RopeKeyframe.m_flCurScroll = jsonData["C_RopeKeyframe"]["m_flCurScroll"];
C_RopeKeyframe.m_flScrollSpeed = jsonData["C_RopeKeyframe"]["m_flScrollSpeed"];
C_RopeKeyframe.m_RopeFlags = jsonData["C_RopeKeyframe"]["m_RopeFlags"];
C_RopeKeyframe.m_iRopeMaterialModelIndex = jsonData["C_RopeKeyframe"]["m_iRopeMaterialModelIndex"];
C_RopeKeyframe.m_LightValues = jsonData["C_RopeKeyframe"]["m_LightValues"];
C_RopeKeyframe.m_nSegments = jsonData["C_RopeKeyframe"]["m_nSegments"];
C_RopeKeyframe.m_hStartPoint = jsonData["C_RopeKeyframe"]["m_hStartPoint"];
C_RopeKeyframe.m_hEndPoint = jsonData["C_RopeKeyframe"]["m_hEndPoint"];
C_RopeKeyframe.m_iStartAttachment = jsonData["C_RopeKeyframe"]["m_iStartAttachment"];
C_RopeKeyframe.m_iEndAttachment = jsonData["C_RopeKeyframe"]["m_iEndAttachment"];
C_RopeKeyframe.m_Subdiv = jsonData["C_RopeKeyframe"]["m_Subdiv"];
C_RopeKeyframe.m_RopeLength = jsonData["C_RopeKeyframe"]["m_RopeLength"];
C_RopeKeyframe.m_Slack = jsonData["C_RopeKeyframe"]["m_Slack"];
C_RopeKeyframe.m_TextureScale = jsonData["C_RopeKeyframe"]["m_TextureScale"];
C_RopeKeyframe.m_fLockedPoints = jsonData["C_RopeKeyframe"]["m_fLockedPoints"];
C_RopeKeyframe.m_nChangeCount = jsonData["C_RopeKeyframe"]["m_nChangeCount"];
C_RopeKeyframe.m_Width = jsonData["C_RopeKeyframe"]["m_Width"];
C_RopeKeyframe.m_PhysicsDelegate = jsonData["C_RopeKeyframe"]["m_PhysicsDelegate"];
C_RopeKeyframe.m_hMaterial = jsonData["C_RopeKeyframe"]["m_hMaterial"];
C_RopeKeyframe.m_TextureHeight = jsonData["C_RopeKeyframe"]["m_TextureHeight"];
C_RopeKeyframe.m_vecImpulse = jsonData["C_RopeKeyframe"]["m_vecImpulse"];
C_RopeKeyframe.m_vecPreviousImpulse = jsonData["C_RopeKeyframe"]["m_vecPreviousImpulse"];
C_RopeKeyframe.m_flCurrentGustTimer = jsonData["C_RopeKeyframe"]["m_flCurrentGustTimer"];
C_RopeKeyframe.m_flCurrentGustLifetime = jsonData["C_RopeKeyframe"]["m_flCurrentGustLifetime"];
C_RopeKeyframe.m_flTimeToNextGust = jsonData["C_RopeKeyframe"]["m_flTimeToNextGust"];
C_RopeKeyframe.m_vWindDir = jsonData["C_RopeKeyframe"]["m_vWindDir"];
C_RopeKeyframe.m_vColorMod = jsonData["C_RopeKeyframe"]["m_vColorMod"];
C_RopeKeyframe.m_vCachedEndPointAttachmentPos = jsonData["C_RopeKeyframe"]["m_vCachedEndPointAttachmentPos"];
C_RopeKeyframe.m_vCachedEndPointAttachmentAngle = jsonData["C_RopeKeyframe"]["m_vCachedEndPointAttachmentAngle"];
C_RopeKeyframe.m_bConstrainBetweenEndpoints = jsonData["C_RopeKeyframe"]["m_bConstrainBetweenEndpoints"];
C_RopeKeyframe.m_bEndPointAttachmentPositionsDirty = jsonData["C_RopeKeyframe"]["m_bEndPointAttachmentPositionsDirty"];
C_RopeKeyframe.m_bEndPointAttachmentAnglesDirty = jsonData["C_RopeKeyframe"]["m_bEndPointAttachmentAnglesDirty"];
C_RopeKeyframe.m_bNewDataThisFrame = jsonData["C_RopeKeyframe"]["m_bNewDataThisFrame"];
C_RopeKeyframe.m_bPhysicsInitted = jsonData["C_RopeKeyframe"]["m_bPhysicsInitted"];

// Atribuições para C_GradientFog
// C_GradientFog Offsets
C_GradientFog.m_hGradientFogTexture = jsonData["C_GradientFog"]["m_hGradientFogTexture"];
C_GradientFog.m_flFogStartDistance = jsonData["C_GradientFog"]["m_flFogStartDistance"];
C_GradientFog.m_flFogEndDistance = jsonData["C_GradientFog"]["m_flFogEndDistance"];
C_GradientFog.m_bHeightFogEnabled = jsonData["C_GradientFog"]["m_bHeightFogEnabled"];
C_GradientFog.m_flFogStartHeight = jsonData["C_GradientFog"]["m_flFogStartHeight"];
C_GradientFog.m_flFogEndHeight = jsonData["C_GradientFog"]["m_flFogEndHeight"];
C_GradientFog.m_flFarZ = jsonData["C_GradientFog"]["m_flFarZ"];
C_GradientFog.m_flFogMaxOpacity = jsonData["C_GradientFog"]["m_flFogMaxOpacity"];
C_GradientFog.m_flFogFalloffExponent = jsonData["C_GradientFog"]["m_flFogFalloffExponent"];
C_GradientFog.m_flFogVerticalExponent = jsonData["C_GradientFog"]["m_flFogVerticalExponent"];
C_GradientFog.m_fogColor = jsonData["C_GradientFog"]["m_fogColor"];
C_GradientFog.m_flFogStrength = jsonData["C_GradientFog"]["m_flFogStrength"];
C_GradientFog.m_flFadeTime = jsonData["C_GradientFog"]["m_flFadeTime"];
C_GradientFog.m_bStartDisabled = jsonData["C_GradientFog"]["m_bStartDisabled"];
C_GradientFog.m_bIsEnabled = jsonData["C_GradientFog"]["m_bIsEnabled"];
C_GradientFog.m_bGradientFogNeedsTextures = jsonData["C_GradientFog"]["m_bGradientFogNeedsTextures"];

// Atribuições para EntitySpottedState_t
// EntitySpottedState_t Offsets
EntitySpottedState_t.m_bSpotted = jsonData["EntitySpottedState_t"]["m_bSpotted"];
EntitySpottedState_t.m_bSpottedByMask = jsonData["EntitySpottedState_t"]["m_bSpottedByMask"];

// Atribuições para C_CSGO_TeamPreviewCamera
// C_CSGO_TeamPreviewCamera Offsets
C_CSGO_TeamPreviewCamera.m_nVariant = jsonData["C_CSGO_TeamPreviewCamera"]["m_nVariant"];
C_CSGO_TeamPreviewCamera.m_bDofEnabled = jsonData["C_CSGO_TeamPreviewCamera"]["m_bDofEnabled"];
C_CSGO_TeamPreviewCamera.m_flDofNearBlurry = jsonData["C_CSGO_TeamPreviewCamera"]["m_flDofNearBlurry"];
C_CSGO_TeamPreviewCamera.m_flDofNearCrisp = jsonData["C_CSGO_TeamPreviewCamera"]["m_flDofNearCrisp"];
C_CSGO_TeamPreviewCamera.m_flDofFarCrisp = jsonData["C_CSGO_TeamPreviewCamera"]["m_flDofFarCrisp"];
C_CSGO_TeamPreviewCamera.m_flDofFarBlurry = jsonData["C_CSGO_TeamPreviewCamera"]["m_flDofFarBlurry"];
C_CSGO_TeamPreviewCamera.m_flDofTiltToGround = jsonData["C_CSGO_TeamPreviewCamera"]["m_flDofTiltToGround"];

// Atribuições para CCSPlayer_CameraServices
// CCSPlayer_CameraServices Offsets
CCSPlayer_CameraServices.m_flDeathCamTilt = jsonData["CCSPlayer_CameraServices"]["m_flDeathCamTilt"];
CCSPlayer_CameraServices.m_vClientScopeInaccuracy = jsonData["CCSPlayer_CameraServices"]["m_vClientScopeInaccuracy"];

// Atribuições para C_EconWearable
// C_EconWearable Offsets
C_EconWearable.m_nForceSkin = jsonData["C_EconWearable"]["m_nForceSkin"];
C_EconWearable.m_bAlwaysAllow = jsonData["C_EconWearable"]["m_bAlwaysAllow"];

// Atribuições para CSMatchStats_t
// CSMatchStats_t Offsets
CSMatchStats_t.m_iEnemy5Ks = jsonData["CSMatchStats_t"]["m_iEnemy5Ks"];
CSMatchStats_t.m_iEnemy4Ks = jsonData["CSMatchStats_t"]["m_iEnemy4Ks"];
CSMatchStats_t.m_iEnemy3Ks = jsonData["CSMatchStats_t"]["m_iEnemy3Ks"];
CSMatchStats_t.m_iEnemyKnifeKills = jsonData["CSMatchStats_t"]["m_iEnemyKnifeKills"];
CSMatchStats_t.m_iEnemyTaserKills = jsonData["CSMatchStats_t"]["m_iEnemyTaserKills"];
CSMatchStats_t.m_iEnemy2Ks = jsonData["CSMatchStats_t"]["m_iEnemy2Ks"];
CSMatchStats_t.m_iUtility_Count = jsonData["CSMatchStats_t"]["m_iUtility_Count"];
CSMatchStats_t.m_iUtility_Successes = jsonData["CSMatchStats_t"]["m_iUtility_Successes"];
CSMatchStats_t.m_iUtility_Enemies = jsonData["CSMatchStats_t"]["m_iUtility_Enemies"];
CSMatchStats_t.m_iFlash_Count = jsonData["CSMatchStats_t"]["m_iFlash_Count"];
CSMatchStats_t.m_iFlash_Successes = jsonData["CSMatchStats_t"]["m_iFlash_Successes"];
CSMatchStats_t.m_nHealthPointsRemovedTotal = jsonData["CSMatchStats_t"]["m_nHealthPointsRemovedTotal"];
CSMatchStats_t.m_nHealthPointsDealtTotal = jsonData["CSMatchStats_t"]["m_nHealthPointsDealtTotal"];
CSMatchStats_t.m_nShotsFiredTotal = jsonData["CSMatchStats_t"]["m_nShotsFiredTotal"];
CSMatchStats_t.m_nShotsOnTargetTotal = jsonData["CSMatchStats_t"]["m_nShotsOnTargetTotal"];
CSMatchStats_t.m_i1v1Count = jsonData["CSMatchStats_t"]["m_i1v1Count"];
CSMatchStats_t.m_i1v1Wins = jsonData["CSMatchStats_t"]["m_i1v1Wins"];
CSMatchStats_t.m_i1v2Count = jsonData["CSMatchStats_t"]["m_i1v2Count"];
CSMatchStats_t.m_i1v2Wins = jsonData["CSMatchStats_t"]["m_i1v2Wins"];
CSMatchStats_t.m_iEntryCount = jsonData["CSMatchStats_t"]["m_iEntryCount"];
CSMatchStats_t.m_iEntryWins = jsonData["CSMatchStats_t"]["m_iEntryWins"];

// Atribuições para C_EnvVolumetricFogVolume
// C_EnvVolumetricFogVolume Offsets
C_EnvVolumetricFogVolume.m_bActive = jsonData["C_EnvVolumetricFogVolume"]["m_bActive"];
C_EnvVolumetricFogVolume.m_vBoxMins = jsonData["C_EnvVolumetricFogVolume"]["m_vBoxMins"];
C_EnvVolumetricFogVolume.m_vBoxMaxs = jsonData["C_EnvVolumetricFogVolume"]["m_vBoxMaxs"];
C_EnvVolumetricFogVolume.m_bStartDisabled = jsonData["C_EnvVolumetricFogVolume"]["m_bStartDisabled"];
C_EnvVolumetricFogVolume.m_flStrength = jsonData["C_EnvVolumetricFogVolume"]["m_flStrength"];
C_EnvVolumetricFogVolume.m_nFalloffShape = jsonData["C_EnvVolumetricFogVolume"]["m_nFalloffShape"];
C_EnvVolumetricFogVolume.m_flFalloffExponent = jsonData["C_EnvVolumetricFogVolume"]["m_flFalloffExponent"];
C_EnvVolumetricFogVolume.m_flHeightFogDepth = jsonData["C_EnvVolumetricFogVolume"]["m_flHeightFogDepth"];
C_EnvVolumetricFogVolume.m_fHeightFogEdgeWidth = jsonData["C_EnvVolumetricFogVolume"]["m_fHeightFogEdgeWidth"];
C_EnvVolumetricFogVolume.m_fIndirectLightStrength = jsonData["C_EnvVolumetricFogVolume"]["m_fIndirectLightStrength"];
C_EnvVolumetricFogVolume.m_fSunLightStrength = jsonData["C_EnvVolumetricFogVolume"]["m_fSunLightStrength"];
C_EnvVolumetricFogVolume.m_fNoiseStrength = jsonData["C_EnvVolumetricFogVolume"]["m_fNoiseStrength"];
C_EnvVolumetricFogVolume.m_bOverrideIndirectLightStrength = jsonData["C_EnvVolumetricFogVolume"]["m_bOverrideIndirectLightStrength"];
C_EnvVolumetricFogVolume.m_bOverrideSunLightStrength = jsonData["C_EnvVolumetricFogVolume"]["m_bOverrideSunLightStrength"];
C_EnvVolumetricFogVolume.m_bOverrideNoiseStrength = jsonData["C_EnvVolumetricFogVolume"]["m_bOverrideNoiseStrength"];
C_EnvVolumetricFogVolume.m_bAllowLPVIndirect = jsonData["C_EnvVolumetricFogVolume"]["m_bAllowLPVIndirect"];

// Atribuições para C_FireSmoke
// C_FireSmoke Offsets
C_FireSmoke.m_nFlameModelIndex = jsonData["C_FireSmoke"]["m_nFlameModelIndex"];
C_FireSmoke.m_nFlameFromAboveModelIndex = jsonData["C_FireSmoke"]["m_nFlameFromAboveModelIndex"];
C_FireSmoke.m_flScaleRegister = jsonData["C_FireSmoke"]["m_flScaleRegister"];
C_FireSmoke.m_flScaleStart = jsonData["C_FireSmoke"]["m_flScaleStart"];
C_FireSmoke.m_flScaleEnd = jsonData["C_FireSmoke"]["m_flScaleEnd"];
C_FireSmoke.m_flScaleTimeStart = jsonData["C_FireSmoke"]["m_flScaleTimeStart"];
C_FireSmoke.m_flScaleTimeEnd = jsonData["C_FireSmoke"]["m_flScaleTimeEnd"];
C_FireSmoke.m_flChildFlameSpread = jsonData["C_FireSmoke"]["m_flChildFlameSpread"];
C_FireSmoke.m_flClipPerc = jsonData["C_FireSmoke"]["m_flClipPerc"];
C_FireSmoke.m_bClipTested = jsonData["C_FireSmoke"]["m_bClipTested"];
C_FireSmoke.m_bFadingOut = jsonData["C_FireSmoke"]["m_bFadingOut"];
C_FireSmoke.m_tParticleSpawn = jsonData["C_FireSmoke"]["m_tParticleSpawn"];
C_FireSmoke.m_pFireOverlay = jsonData["C_FireSmoke"]["m_pFireOverlay"];

// Atribuições para C_EnvCombinedLightProbeVolume
// C_EnvCombinedLightProbeVolume Offsets
C_EnvCombinedLightProbeVolume.m_Entity_Color = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_Color"];
C_EnvCombinedLightProbeVolume.m_Entity_flBrightness = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_flBrightness"];
C_EnvCombinedLightProbeVolume.m_Entity_hCubemapTexture = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_hCubemapTexture"];
C_EnvCombinedLightProbeVolume.m_Entity_bCustomCubemapTexture = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_bCustomCubemapTexture"];
C_EnvCombinedLightProbeVolume.m_Entity_hLightProbeTexture = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_hLightProbeTexture"];
C_EnvCombinedLightProbeVolume.m_Entity_hLightProbeDirectLightIndicesTexture = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_hLightProbeDirectLightIndicesTexture"];
C_EnvCombinedLightProbeVolume.m_Entity_hLightProbeDirectLightScalarsTexture = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_hLightProbeDirectLightScalarsTexture"];
C_EnvCombinedLightProbeVolume.m_Entity_hLightProbeDirectLightShadowsTexture = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_hLightProbeDirectLightShadowsTexture"];
C_EnvCombinedLightProbeVolume.m_Entity_vBoxMins = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_vBoxMins"];
C_EnvCombinedLightProbeVolume.m_Entity_vBoxMaxs = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_vBoxMaxs"];
C_EnvCombinedLightProbeVolume.m_Entity_bMoveable = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_bMoveable"];
C_EnvCombinedLightProbeVolume.m_Entity_nHandshake = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nHandshake"];
C_EnvCombinedLightProbeVolume.m_Entity_nEnvCubeMapArrayIndex = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nEnvCubeMapArrayIndex"];
C_EnvCombinedLightProbeVolume.m_Entity_nPriority = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nPriority"];
C_EnvCombinedLightProbeVolume.m_Entity_bStartDisabled = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_bStartDisabled"];
C_EnvCombinedLightProbeVolume.m_Entity_flEdgeFadeDist = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_flEdgeFadeDist"];
C_EnvCombinedLightProbeVolume.m_Entity_vEdgeFadeDists = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_vEdgeFadeDists"];
C_EnvCombinedLightProbeVolume.m_Entity_nLightProbeSizeX = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nLightProbeSizeX"];
C_EnvCombinedLightProbeVolume.m_Entity_nLightProbeSizeY = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nLightProbeSizeY"];
C_EnvCombinedLightProbeVolume.m_Entity_nLightProbeSizeZ = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nLightProbeSizeZ"];
C_EnvCombinedLightProbeVolume.m_Entity_nLightProbeAtlasX = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nLightProbeAtlasX"];
C_EnvCombinedLightProbeVolume.m_Entity_nLightProbeAtlasY = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nLightProbeAtlasY"];
C_EnvCombinedLightProbeVolume.m_Entity_nLightProbeAtlasZ = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_nLightProbeAtlasZ"];
C_EnvCombinedLightProbeVolume.m_Entity_bEnabled = jsonData["C_EnvCombinedLightProbeVolume"]["m_Entity_bEnabled"];

// Atribuições para ActiveModelConfig_t
// ActiveModelConfig_t Offsets
ActiveModelConfig_t.m_Handle = jsonData["ActiveModelConfig_t"]["m_Handle"];
ActiveModelConfig_t.m_Name = jsonData["ActiveModelConfig_t"]["m_Name"];
ActiveModelConfig_t.m_AssociatedEntities = jsonData["ActiveModelConfig_t"]["m_AssociatedEntities"];
ActiveModelConfig_t.m_AssociatedEntityNames = jsonData["ActiveModelConfig_t"]["m_AssociatedEntityNames"];

// Atribuições para CCSPlayer_BulletServices
// CCSPlayer_BulletServices Offsets
CCSPlayer_BulletServices.m_totalHitsOnServer = jsonData["CCSPlayer_BulletServices"]["m_totalHitsOnServer"];

// Atribuições para CLogicRelay
// CLogicRelay Offsets
CLogicRelay.m_OnTrigger = jsonData["CLogicRelay"]["m_OnTrigger"];
CLogicRelay.m_OnSpawn = jsonData["CLogicRelay"]["m_OnSpawn"];
CLogicRelay.m_bDisabled = jsonData["CLogicRelay"]["m_bDisabled"];
CLogicRelay.m_bWaitForRefire = jsonData["CLogicRelay"]["m_bWaitForRefire"];
CLogicRelay.m_bTriggerOnce = jsonData["CLogicRelay"]["m_bTriggerOnce"];
CLogicRelay.m_bFastRetrigger = jsonData["CLogicRelay"]["m_bFastRetrigger"];
CLogicRelay.m_bPassthoughCaller = jsonData["CLogicRelay"]["m_bPassthoughCaller"];

// Atribuições para C_PointCameraVFOV
// C_PointCameraVFOV Offsets
C_PointCameraVFOV.m_flVerticalFOV = jsonData["C_PointCameraVFOV"]["m_flVerticalFOV"];

// Atribuições para CCSPlayer_ItemServices
// CCSPlayer_ItemServices Offsets
CCSPlayer_ItemServices.m_bHasDefuser = jsonData["CCSPlayer_ItemServices"]["m_bHasDefuser"];
CCSPlayer_ItemServices.m_bHasHelmet = jsonData["CCSPlayer_ItemServices"]["m_bHasHelmet"];
CCSPlayer_ItemServices.m_bHasHeavyArmor = jsonData["CCSPlayer_ItemServices"]["m_bHasHeavyArmor"];

// Atribuições para C_BarnLight
// C_BarnLight Offsets
C_BarnLight.m_bEnabled = jsonData["C_BarnLight"]["m_bEnabled"];
C_BarnLight.m_nColorMode = jsonData["C_BarnLight"]["m_nColorMode"];
C_BarnLight.m_Color = jsonData["C_BarnLight"]["m_Color"];
C_BarnLight.m_flColorTemperature = jsonData["C_BarnLight"]["m_flColorTemperature"];
C_BarnLight.m_flBrightness = jsonData["C_BarnLight"]["m_flBrightness"];
C_BarnLight.m_flBrightnessScale = jsonData["C_BarnLight"]["m_flBrightnessScale"];
C_BarnLight.m_nDirectLight = jsonData["C_BarnLight"]["m_nDirectLight"];
C_BarnLight.m_nBakedShadowIndex = jsonData["C_BarnLight"]["m_nBakedShadowIndex"];
C_BarnLight.m_nLuminaireShape = jsonData["C_BarnLight"]["m_nLuminaireShape"];
C_BarnLight.m_flLuminaireSize = jsonData["C_BarnLight"]["m_flLuminaireSize"];
C_BarnLight.m_flLuminaireAnisotropy = jsonData["C_BarnLight"]["m_flLuminaireAnisotropy"];
C_BarnLight.m_LightStyleString = jsonData["C_BarnLight"]["m_LightStyleString"];
C_BarnLight.m_flLightStyleStartTime = jsonData["C_BarnLight"]["m_flLightStyleStartTime"];
C_BarnLight.m_QueuedLightStyleStrings = jsonData["C_BarnLight"]["m_QueuedLightStyleStrings"];
C_BarnLight.m_LightStyleEvents = jsonData["C_BarnLight"]["m_LightStyleEvents"];
C_BarnLight.m_LightStyleTargets = jsonData["C_BarnLight"]["m_LightStyleTargets"];
C_BarnLight.m_StyleEvent = jsonData["C_BarnLight"]["m_StyleEvent"];
C_BarnLight.m_hLightCookie = jsonData["C_BarnLight"]["m_hLightCookie"];
C_BarnLight.m_flShape = jsonData["C_BarnLight"]["m_flShape"];
C_BarnLight.m_flSoftX = jsonData["C_BarnLight"]["m_flSoftX"];
C_BarnLight.m_flSoftY = jsonData["C_BarnLight"]["m_flSoftY"];
C_BarnLight.m_flSkirt = jsonData["C_BarnLight"]["m_flSkirt"];
C_BarnLight.m_flSkirtNear = jsonData["C_BarnLight"]["m_flSkirtNear"];
C_BarnLight.m_vSizeParams = jsonData["C_BarnLight"]["m_vSizeParams"];
C_BarnLight.m_flRange = jsonData["C_BarnLight"]["m_flRange"];
C_BarnLight.m_vShear = jsonData["C_BarnLight"]["m_vShear"];
C_BarnLight.m_nBakeSpecularToCubemaps = jsonData["C_BarnLight"]["m_nBakeSpecularToCubemaps"];
C_BarnLight.m_vBakeSpecularToCubemapsSize = jsonData["C_BarnLight"]["m_vBakeSpecularToCubemapsSize"];
C_BarnLight.m_nCastShadows = jsonData["C_BarnLight"]["m_nCastShadows"];
C_BarnLight.m_nShadowMapSize = jsonData["C_BarnLight"]["m_nShadowMapSize"];
C_BarnLight.m_nShadowPriority = jsonData["C_BarnLight"]["m_nShadowPriority"];
C_BarnLight.m_bContactShadow = jsonData["C_BarnLight"]["m_bContactShadow"];
C_BarnLight.m_nBounceLight = jsonData["C_BarnLight"]["m_nBounceLight"];
C_BarnLight.m_flBounceScale = jsonData["C_BarnLight"]["m_flBounceScale"];
C_BarnLight.m_flMinRoughness = jsonData["C_BarnLight"]["m_flMinRoughness"];
C_BarnLight.m_vAlternateColor = jsonData["C_BarnLight"]["m_vAlternateColor"];
C_BarnLight.m_fAlternateColorBrightness = jsonData["C_BarnLight"]["m_fAlternateColorBrightness"];
C_BarnLight.m_nFog = jsonData["C_BarnLight"]["m_nFog"];
C_BarnLight.m_flFogStrength = jsonData["C_BarnLight"]["m_flFogStrength"];
C_BarnLight.m_nFogShadows = jsonData["C_BarnLight"]["m_nFogShadows"];
C_BarnLight.m_flFogScale = jsonData["C_BarnLight"]["m_flFogScale"];
C_BarnLight.m_bFogMixedShadows = jsonData["C_BarnLight"]["m_bFogMixedShadows"];
C_BarnLight.m_flFadeSizeStart = jsonData["C_BarnLight"]["m_flFadeSizeStart"];
C_BarnLight.m_flFadeSizeEnd = jsonData["C_BarnLight"]["m_flFadeSizeEnd"];
C_BarnLight.m_flShadowFadeSizeStart = jsonData["C_BarnLight"]["m_flShadowFadeSizeStart"];
C_BarnLight.m_flShadowFadeSizeEnd = jsonData["C_BarnLight"]["m_flShadowFadeSizeEnd"];
C_BarnLight.m_bPrecomputedFieldsValid = jsonData["C_BarnLight"]["m_bPrecomputedFieldsValid"];
C_BarnLight.m_vPrecomputedBoundsMins = jsonData["C_BarnLight"]["m_vPrecomputedBoundsMins"];
C_BarnLight.m_vPrecomputedBoundsMaxs = jsonData["C_BarnLight"]["m_vPrecomputedBoundsMaxs"];
C_BarnLight.m_vPrecomputedOBBOrigin = jsonData["C_BarnLight"]["m_vPrecomputedOBBOrigin"];
C_BarnLight.m_vPrecomputedOBBAngles = jsonData["C_BarnLight"]["m_vPrecomputedOBBAngles"];
C_BarnLight.m_vPrecomputedOBBExtent = jsonData["C_BarnLight"]["m_vPrecomputedOBBExtent"];
C_BarnLight.m_nPrecomputedSubFrusta = jsonData["C_BarnLight"]["m_nPrecomputedSubFrusta"];
C_BarnLight.m_vPrecomputedOBBOrigin0 = jsonData["C_BarnLight"]["m_vPrecomputedOBBOrigin0"];
C_BarnLight.m_vPrecomputedOBBAngles0 = jsonData["C_BarnLight"]["m_vPrecomputedOBBAngles0"];
C_BarnLight.m_vPrecomputedOBBExtent0 = jsonData["C_BarnLight"]["m_vPrecomputedOBBExtent0"];
C_BarnLight.m_vPrecomputedOBBOrigin1 = jsonData["C_BarnLight"]["m_vPrecomputedOBBOrigin1"];
C_BarnLight.m_vPrecomputedOBBAngles1 = jsonData["C_BarnLight"]["m_vPrecomputedOBBAngles1"];
C_BarnLight.m_vPrecomputedOBBExtent1 = jsonData["C_BarnLight"]["m_vPrecomputedOBBExtent1"];
C_BarnLight.m_vPrecomputedOBBOrigin2 = jsonData["C_BarnLight"]["m_vPrecomputedOBBOrigin2"];
C_BarnLight.m_vPrecomputedOBBAngles2 = jsonData["C_BarnLight"]["m_vPrecomputedOBBAngles2"];
C_BarnLight.m_vPrecomputedOBBExtent2 = jsonData["C_BarnLight"]["m_vPrecomputedOBBExtent2"];
C_BarnLight.m_vPrecomputedOBBOrigin3 = jsonData["C_BarnLight"]["m_vPrecomputedOBBOrigin3"];
C_BarnLight.m_vPrecomputedOBBAngles3 = jsonData["C_BarnLight"]["m_vPrecomputedOBBAngles3"];
C_BarnLight.m_vPrecomputedOBBExtent3 = jsonData["C_BarnLight"]["m_vPrecomputedOBBExtent3"];
C_BarnLight.m_vPrecomputedOBBOrigin4 = jsonData["C_BarnLight"]["m_vPrecomputedOBBOrigin4"];
C_BarnLight.m_vPrecomputedOBBAngles4 = jsonData["C_BarnLight"]["m_vPrecomputedOBBAngles4"];
C_BarnLight.m_vPrecomputedOBBExtent4 = jsonData["C_BarnLight"]["m_vPrecomputedOBBExtent4"];
C_BarnLight.m_vPrecomputedOBBOrigin5 = jsonData["C_BarnLight"]["m_vPrecomputedOBBOrigin5"];
C_BarnLight.m_vPrecomputedOBBAngles5 = jsonData["C_BarnLight"]["m_vPrecomputedOBBAngles5"];
C_BarnLight.m_vPrecomputedOBBExtent5 = jsonData["C_BarnLight"]["m_vPrecomputedOBBExtent5"];
C_BarnLight.m_bInitialBoneSetup = jsonData["C_BarnLight"]["m_bInitialBoneSetup"];
C_BarnLight.m_VisClusters = jsonData["C_BarnLight"]["m_VisClusters"];

// Atribuições para C_TonemapController2
// C_TonemapController2 Offsets
C_TonemapController2.m_flAutoExposureMin = jsonData["C_TonemapController2"]["m_flAutoExposureMin"];
C_TonemapController2.m_flAutoExposureMax = jsonData["C_TonemapController2"]["m_flAutoExposureMax"];
C_TonemapController2.m_flTonemapPercentTarget = jsonData["C_TonemapController2"]["m_flTonemapPercentTarget"];
C_TonemapController2.m_flTonemapPercentBrightPixels = jsonData["C_TonemapController2"]["m_flTonemapPercentBrightPixels"];
C_TonemapController2.m_flTonemapMinAvgLum = jsonData["C_TonemapController2"]["m_flTonemapMinAvgLum"];
C_TonemapController2.m_flExposureAdaptationSpeedUp = jsonData["C_TonemapController2"]["m_flExposureAdaptationSpeedUp"];
C_TonemapController2.m_flExposureAdaptationSpeedDown = jsonData["C_TonemapController2"]["m_flExposureAdaptationSpeedDown"];
C_TonemapController2.m_flTonemapEVSmoothingRange = jsonData["C_TonemapController2"]["m_flTonemapEVSmoothingRange"];

// Atribuições para CFuncWater
// CFuncWater Offsets
CFuncWater.m_BuoyancyHelper = jsonData["CFuncWater"]["m_BuoyancyHelper"];

// Atribuições para C_EconEntity
// C_EconEntity Offsets
C_EconEntity.m_flFlexDelayTime = jsonData["C_EconEntity"]["m_flFlexDelayTime"];
C_EconEntity.m_flFlexDelayedWeight = jsonData["C_EconEntity"]["m_flFlexDelayedWeight"];
C_EconEntity.m_bAttributesInitialized = jsonData["C_EconEntity"]["m_bAttributesInitialized"];
C_EconEntity.m_AttributeManager = jsonData["C_EconEntity"]["m_AttributeManager"];
C_EconEntity.m_OriginalOwnerXuidLow = jsonData["C_EconEntity"]["m_OriginalOwnerXuidLow"];
C_EconEntity.m_OriginalOwnerXuidHigh = jsonData["C_EconEntity"]["m_OriginalOwnerXuidHigh"];
C_EconEntity.m_nFallbackPaintKit = jsonData["C_EconEntity"]["m_nFallbackPaintKit"];
C_EconEntity.m_nFallbackSeed = jsonData["C_EconEntity"]["m_nFallbackSeed"];
C_EconEntity.m_flFallbackWear = jsonData["C_EconEntity"]["m_flFallbackWear"];
C_EconEntity.m_nFallbackStatTrak = jsonData["C_EconEntity"]["m_nFallbackStatTrak"];
C_EconEntity.m_bClientside = jsonData["C_EconEntity"]["m_bClientside"];
C_EconEntity.m_bParticleSystemsCreated = jsonData["C_EconEntity"]["m_bParticleSystemsCreated"];
C_EconEntity.m_vecAttachedParticles = jsonData["C_EconEntity"]["m_vecAttachedParticles"];
C_EconEntity.m_hViewmodelAttachment = jsonData["C_EconEntity"]["m_hViewmodelAttachment"];
C_EconEntity.m_iOldTeam = jsonData["C_EconEntity"]["m_iOldTeam"];
C_EconEntity.m_bAttachmentDirty = jsonData["C_EconEntity"]["m_bAttachmentDirty"];
C_EconEntity.m_nUnloadedModelIndex = jsonData["C_EconEntity"]["m_nUnloadedModelIndex"];
C_EconEntity.m_iNumOwnerValidationRetries = jsonData["C_EconEntity"]["m_iNumOwnerValidationRetries"];
C_EconEntity.m_hOldProvidee = jsonData["C_EconEntity"]["m_hOldProvidee"];
C_EconEntity.m_vecAttachedModels = jsonData["C_EconEntity"]["m_vecAttachedModels"];

// Atribuições para C_RectLight
// C_RectLight Offsets
C_RectLight.m_bShowLight = jsonData["C_RectLight"]["m_bShowLight"];

// Atribuições para C_ParticleSystem
// C_ParticleSystem Offsets
C_ParticleSystem.m_szSnapshotFileName = jsonData["C_ParticleSystem"]["m_szSnapshotFileName"];
C_ParticleSystem.m_bActive = jsonData["C_ParticleSystem"]["m_bActive"];
C_ParticleSystem.m_bFrozen = jsonData["C_ParticleSystem"]["m_bFrozen"];
C_ParticleSystem.m_flFreezeTransitionDuration = jsonData["C_ParticleSystem"]["m_flFreezeTransitionDuration"];
C_ParticleSystem.m_nStopType = jsonData["C_ParticleSystem"]["m_nStopType"];
C_ParticleSystem.m_bAnimateDuringGameplayPause = jsonData["C_ParticleSystem"]["m_bAnimateDuringGameplayPause"];
C_ParticleSystem.m_iEffectIndex = jsonData["C_ParticleSystem"]["m_iEffectIndex"];
C_ParticleSystem.m_flStartTime = jsonData["C_ParticleSystem"]["m_flStartTime"];
C_ParticleSystem.m_flPreSimTime = jsonData["C_ParticleSystem"]["m_flPreSimTime"];
C_ParticleSystem.m_vServerControlPoints = jsonData["C_ParticleSystem"]["m_vServerControlPoints"];
C_ParticleSystem.m_iServerControlPointAssignments = jsonData["C_ParticleSystem"]["m_iServerControlPointAssignments"];
C_ParticleSystem.m_hControlPointEnts = jsonData["C_ParticleSystem"]["m_hControlPointEnts"];
C_ParticleSystem.m_bNoSave = jsonData["C_ParticleSystem"]["m_bNoSave"];
C_ParticleSystem.m_bNoFreeze = jsonData["C_ParticleSystem"]["m_bNoFreeze"];
C_ParticleSystem.m_bNoRamp = jsonData["C_ParticleSystem"]["m_bNoRamp"];
C_ParticleSystem.m_bStartActive = jsonData["C_ParticleSystem"]["m_bStartActive"];
C_ParticleSystem.m_iszEffectName = jsonData["C_ParticleSystem"]["m_iszEffectName"];
C_ParticleSystem.m_iszControlPointNames = jsonData["C_ParticleSystem"]["m_iszControlPointNames"];
C_ParticleSystem.m_nDataCP = jsonData["C_ParticleSystem"]["m_nDataCP"];
C_ParticleSystem.m_vecDataCPValue = jsonData["C_ParticleSystem"]["m_vecDataCPValue"];
C_ParticleSystem.m_nTintCP = jsonData["C_ParticleSystem"]["m_nTintCP"];
C_ParticleSystem.m_clrTint = jsonData["C_ParticleSystem"]["m_clrTint"];
C_ParticleSystem.m_bOldActive = jsonData["C_ParticleSystem"]["m_bOldActive"];
C_ParticleSystem.m_bOldFrozen = jsonData["C_ParticleSystem"]["m_bOldFrozen"];

// Atribuições para C_CSGameRulesProxy
// C_CSGameRulesProxy Offsets
C_CSGameRulesProxy.m_pGameRules = jsonData["C_CSGameRulesProxy"]["m_pGameRules"];

// Atribuições para CPlayer_ObserverServices
// CPlayer_ObserverServices Offsets
CPlayer_ObserverServices.m_iObserverMode = jsonData["CPlayer_ObserverServices"]["m_iObserverMode"];
CPlayer_ObserverServices.m_hObserverTarget = jsonData["CPlayer_ObserverServices"]["m_hObserverTarget"];
CPlayer_ObserverServices.m_iObserverLastMode = jsonData["CPlayer_ObserverServices"]["m_iObserverLastMode"];
CPlayer_ObserverServices.m_bForcedObserverMode = jsonData["CPlayer_ObserverServices"]["m_bForcedObserverMode"];
CPlayer_ObserverServices.m_flObserverChaseDistance = jsonData["CPlayer_ObserverServices"]["m_flObserverChaseDistance"];
CPlayer_ObserverServices.m_flObserverChaseDistanceCalcTime = jsonData["CPlayer_ObserverServices"]["m_flObserverChaseDistanceCalcTime"];

// Atribuições para SequenceHistory_t
// SequenceHistory_t Offsets
SequenceHistory_t.m_hSequence = jsonData["SequenceHistory_t"]["m_hSequence"];
SequenceHistory_t.m_flSeqStartTime = jsonData["SequenceHistory_t"]["m_flSeqStartTime"];
SequenceHistory_t.m_flSeqFixedCycle = jsonData["SequenceHistory_t"]["m_flSeqFixedCycle"];
SequenceHistory_t.m_nSeqLoopMode = jsonData["SequenceHistory_t"]["m_nSeqLoopMode"];
SequenceHistory_t.m_flPlaybackRate = jsonData["SequenceHistory_t"]["m_flPlaybackRate"];
SequenceHistory_t.m_flCyclesPerSecond = jsonData["SequenceHistory_t"]["m_flCyclesPerSecond"];

// Atribuições para C_Multimeter
// C_Multimeter Offsets
C_Multimeter.m_hTargetC4 = jsonData["C_Multimeter"]["m_hTargetC4"];

// Atribuições para C_CsmFovOverride
// C_CsmFovOverride Offsets
C_CsmFovOverride.m_cameraName = jsonData["C_CsmFovOverride"]["m_cameraName"];
C_CsmFovOverride.m_flCsmFovOverrideValue = jsonData["C_CsmFovOverride"]["m_flCsmFovOverrideValue"];

// Atribuições para C_EnvDecal
// C_EnvDecal Offsets
C_EnvDecal.m_hDecalMaterial = jsonData["C_EnvDecal"]["m_hDecalMaterial"];
C_EnvDecal.m_flWidth = jsonData["C_EnvDecal"]["m_flWidth"];
C_EnvDecal.m_flHeight = jsonData["C_EnvDecal"]["m_flHeight"];
C_EnvDecal.m_flDepth = jsonData["C_EnvDecal"]["m_flDepth"];
C_EnvDecal.m_nRenderOrder = jsonData["C_EnvDecal"]["m_nRenderOrder"];
C_EnvDecal.m_bProjectOnWorld = jsonData["C_EnvDecal"]["m_bProjectOnWorld"];
C_EnvDecal.m_bProjectOnCharacters = jsonData["C_EnvDecal"]["m_bProjectOnCharacters"];
C_EnvDecal.m_bProjectOnWater = jsonData["C_EnvDecal"]["m_bProjectOnWater"];
C_EnvDecal.m_flDepthSortBias = jsonData["C_EnvDecal"]["m_flDepthSortBias"];

// Atribuições para C_ColorCorrection
// C_ColorCorrection Offsets
C_ColorCorrection.m_vecOrigin = jsonData["C_ColorCorrection"]["m_vecOrigin"];
C_ColorCorrection.m_MinFalloff = jsonData["C_ColorCorrection"]["m_MinFalloff"];
C_ColorCorrection.m_MaxFalloff = jsonData["C_ColorCorrection"]["m_MaxFalloff"];
C_ColorCorrection.m_flFadeInDuration = jsonData["C_ColorCorrection"]["m_flFadeInDuration"];
C_ColorCorrection.m_flFadeOutDuration = jsonData["C_ColorCorrection"]["m_flFadeOutDuration"];
C_ColorCorrection.m_flMaxWeight = jsonData["C_ColorCorrection"]["m_flMaxWeight"];
C_ColorCorrection.m_flCurWeight = jsonData["C_ColorCorrection"]["m_flCurWeight"];
C_ColorCorrection.m_netlookupFilename = jsonData["C_ColorCorrection"]["m_netlookupFilename"];
C_ColorCorrection.m_bEnabled = jsonData["C_ColorCorrection"]["m_bEnabled"];
C_ColorCorrection.m_bMaster = jsonData["C_ColorCorrection"]["m_bMaster"];
C_ColorCorrection.m_bClientSide = jsonData["C_ColorCorrection"]["m_bClientSide"];
C_ColorCorrection.m_bExclusive = jsonData["C_ColorCorrection"]["m_bExclusive"];
C_ColorCorrection.m_bEnabledOnClient = jsonData["C_ColorCorrection"]["m_bEnabledOnClient"];
C_ColorCorrection.m_flCurWeightOnClient = jsonData["C_ColorCorrection"]["m_flCurWeightOnClient"];
C_ColorCorrection.m_bFadingIn = jsonData["C_ColorCorrection"]["m_bFadingIn"];
C_ColorCorrection.m_flFadeStartWeight = jsonData["C_ColorCorrection"]["m_flFadeStartWeight"];
C_ColorCorrection.m_flFadeStartTime = jsonData["C_ColorCorrection"]["m_flFadeStartTime"];
C_ColorCorrection.m_flFadeDuration = jsonData["C_ColorCorrection"]["m_flFadeDuration"];

// Atribuições para CModelState
// CModelState Offsets
CModelState.m_hModel = jsonData["CModelState"]["m_hModel"];
CModelState.m_ModelName = jsonData["CModelState"]["m_ModelName"];
CModelState.m_bClientClothCreationSuppressed = jsonData["CModelState"]["m_bClientClothCreationSuppressed"];
CModelState.m_MeshGroupMask = jsonData["CModelState"]["m_MeshGroupMask"];
CModelState.m_nIdealMotionType = jsonData["CModelState"]["m_nIdealMotionType"];
CModelState.m_nForceLOD = jsonData["CModelState"]["m_nForceLOD"];
CModelState.m_nClothUpdateFlags = jsonData["CModelState"]["m_nClothUpdateFlags"];

// Atribuições para C_EconEntity__AttachedModelData_t
// C_EconEntity__AttachedModelData_t Offsets
C_EconEntity__AttachedModelData_t.m_iModelDisplayFlags = jsonData["C_EconEntity__AttachedModelData_t"]["m_iModelDisplayFlags"];

// Atribuições para CAttributeList
// CAttributeList Offsets
CAttributeList.m_Attributes = jsonData["CAttributeList"]["m_Attributes"];
CAttributeList.m_pManager = jsonData["CAttributeList"]["m_pManager"];

// Atribuições para C_BaseDoor
// C_BaseDoor Offsets
C_BaseDoor.m_bIsUsable = jsonData["C_BaseDoor"]["m_bIsUsable"];

// Atribuições para CGrenadeTracer
// CGrenadeTracer Offsets
CGrenadeTracer.m_flTracerDuration = jsonData["CGrenadeTracer"]["m_flTracerDuration"];
CGrenadeTracer.m_nType = jsonData["CGrenadeTracer"]["m_nType"];

// Atribuições para CBombTarget
// CBombTarget Offsets
CBombTarget.m_bBombPlantedHere = jsonData["CBombTarget"]["m_bBombPlantedHere"];
CBombTarget.m_OnBombExplode = jsonData["CBombTarget"]["m_OnBombExplode"];
CBombTarget.m_OnBombPlanted = jsonData["CBombTarget"]["m_OnBombPlanted"];
CBombTarget.m_OnBombDefused = jsonData["CBombTarget"]["m_OnBombDefused"];
CBombTarget.m_bIsBombSiteB = jsonData["CBombTarget"]["m_bIsBombSiteB"];
CBombTarget.m_bIsHeistBombTarget = jsonData["CBombTarget"]["m_bIsHeistBombTarget"];
CBombTarget.m_szMountTarget = jsonData["CBombTarget"]["m_szMountTarget"];
CBombTarget.m_hInstructorHint = jsonData["CBombTarget"]["m_hInstructorHint"];
CBombTarget.m_nBombSiteDesignation = jsonData["CBombTarget"]["m_nBombSiteDesignation"];

// Atribuições para C_PointClientUIDialog
// C_PointClientUIDialog Offsets
C_PointClientUIDialog.m_hActivator = jsonData["C_PointClientUIDialog"]["m_hActivator"];
C_PointClientUIDialog.m_bStartEnabled = jsonData["C_PointClientUIDialog"]["m_bStartEnabled"];

// Atribuições para CCSGameModeRules_ArmsRace
// CCSGameModeRules_ArmsRace Offsets
CCSGameModeRules_ArmsRace.m_WeaponSequence = jsonData["CCSGameModeRules_ArmsRace"]["m_WeaponSequence"];

// Atribuições para CPointChildModifier
// CPointChildModifier Offsets
CPointChildModifier.m_bOrphanInsteadOfDeletingChildrenOnRemove = jsonData["CPointChildModifier"]["m_bOrphanInsteadOfDeletingChildrenOnRemove"];

// Atribuições para CDamageRecord
// CDamageRecord Offsets
CDamageRecord.m_PlayerDamager = jsonData["CDamageRecord"]["m_PlayerDamager"];
CDamageRecord.m_PlayerRecipient = jsonData["CDamageRecord"]["m_PlayerRecipient"];
CDamageRecord.m_hPlayerControllerDamager = jsonData["CDamageRecord"]["m_hPlayerControllerDamager"];
CDamageRecord.m_hPlayerControllerRecipient = jsonData["CDamageRecord"]["m_hPlayerControllerRecipient"];
CDamageRecord.m_szPlayerDamagerName = jsonData["CDamageRecord"]["m_szPlayerDamagerName"];
CDamageRecord.m_szPlayerRecipientName = jsonData["CDamageRecord"]["m_szPlayerRecipientName"];
CDamageRecord.m_DamagerXuid = jsonData["CDamageRecord"]["m_DamagerXuid"];
CDamageRecord.m_RecipientXuid = jsonData["CDamageRecord"]["m_RecipientXuid"];
CDamageRecord.m_iBulletsDamage = jsonData["CDamageRecord"]["m_iBulletsDamage"];
CDamageRecord.m_iDamage = jsonData["CDamageRecord"]["m_iDamage"];
CDamageRecord.m_iActualHealthRemoved = jsonData["CDamageRecord"]["m_iActualHealthRemoved"];
CDamageRecord.m_iNumHits = jsonData["CDamageRecord"]["m_iNumHits"];
CDamageRecord.m_iLastBulletUpdate = jsonData["CDamageRecord"]["m_iLastBulletUpdate"];
CDamageRecord.m_bIsOtherEnemy = jsonData["CDamageRecord"]["m_bIsOtherEnemy"];
CDamageRecord.m_killType = jsonData["CDamageRecord"]["m_killType"];

// Atribuições para CCSPlayerController_DamageServices
// CCSPlayerController_DamageServices Offsets
CCSPlayerController_DamageServices.m_nSendUpdate = jsonData["CCSPlayerController_DamageServices"]["m_nSendUpdate"];
CCSPlayerController_DamageServices.m_DamageList = jsonData["CCSPlayerController_DamageServices"]["m_DamageList"];

// Atribuições para CRenderComponent
// CRenderComponent Offsets
CRenderComponent.__m_pChainEntity = jsonData["CRenderComponent"]["__m_pChainEntity"];
CRenderComponent.m_bIsRenderingWithViewModels = jsonData["CRenderComponent"]["m_bIsRenderingWithViewModels"];
CRenderComponent.m_nSplitscreenFlags = jsonData["CRenderComponent"]["m_nSplitscreenFlags"];
CRenderComponent.m_bEnableRendering = jsonData["CRenderComponent"]["m_bEnableRendering"];
CRenderComponent.m_bInterpolationReadyToDraw = jsonData["CRenderComponent"]["m_bInterpolationReadyToDraw"];

// Atribuições para C_SoundEventOBBEntity
// C_SoundEventOBBEntity Offsets
C_SoundEventOBBEntity.m_vMins = jsonData["C_SoundEventOBBEntity"]["m_vMins"];
C_SoundEventOBBEntity.m_vMaxs = jsonData["C_SoundEventOBBEntity"]["m_vMaxs"];

// Atribuições para CLightComponent
// CLightComponent Offsets
CLightComponent.__m_pChainEntity = jsonData["CLightComponent"]["__m_pChainEntity"];
CLightComponent.m_Color = jsonData["CLightComponent"]["m_Color"];
CLightComponent.m_SecondaryColor = jsonData["CLightComponent"]["m_SecondaryColor"];
CLightComponent.m_flBrightness = jsonData["CLightComponent"]["m_flBrightness"];
CLightComponent.m_flBrightnessScale = jsonData["CLightComponent"]["m_flBrightnessScale"];
CLightComponent.m_flBrightnessMult = jsonData["CLightComponent"]["m_flBrightnessMult"];
CLightComponent.m_flRange = jsonData["CLightComponent"]["m_flRange"];
CLightComponent.m_flFalloff = jsonData["CLightComponent"]["m_flFalloff"];
CLightComponent.m_flAttenuation0 = jsonData["CLightComponent"]["m_flAttenuation0"];
CLightComponent.m_flAttenuation1 = jsonData["CLightComponent"]["m_flAttenuation1"];
CLightComponent.m_flAttenuation2 = jsonData["CLightComponent"]["m_flAttenuation2"];
CLightComponent.m_flTheta = jsonData["CLightComponent"]["m_flTheta"];
CLightComponent.m_flPhi = jsonData["CLightComponent"]["m_flPhi"];
CLightComponent.m_hLightCookie = jsonData["CLightComponent"]["m_hLightCookie"];
CLightComponent.m_nCascades = jsonData["CLightComponent"]["m_nCascades"];
CLightComponent.m_nCastShadows = jsonData["CLightComponent"]["m_nCastShadows"];
CLightComponent.m_nShadowWidth = jsonData["CLightComponent"]["m_nShadowWidth"];
CLightComponent.m_nShadowHeight = jsonData["CLightComponent"]["m_nShadowHeight"];
CLightComponent.m_bRenderDiffuse = jsonData["CLightComponent"]["m_bRenderDiffuse"];
CLightComponent.m_nRenderSpecular = jsonData["CLightComponent"]["m_nRenderSpecular"];
CLightComponent.m_bRenderTransmissive = jsonData["CLightComponent"]["m_bRenderTransmissive"];
CLightComponent.m_flOrthoLightWidth = jsonData["CLightComponent"]["m_flOrthoLightWidth"];
CLightComponent.m_flOrthoLightHeight = jsonData["CLightComponent"]["m_flOrthoLightHeight"];
CLightComponent.m_nStyle = jsonData["CLightComponent"]["m_nStyle"];
CLightComponent.m_Pattern = jsonData["CLightComponent"]["m_Pattern"];
CLightComponent.m_nCascadeRenderStaticObjects = jsonData["CLightComponent"]["m_nCascadeRenderStaticObjects"];
CLightComponent.m_flShadowCascadeCrossFade = jsonData["CLightComponent"]["m_flShadowCascadeCrossFade"];
CLightComponent.m_flShadowCascadeDistanceFade = jsonData["CLightComponent"]["m_flShadowCascadeDistanceFade"];
CLightComponent.m_flShadowCascadeDistance0 = jsonData["CLightComponent"]["m_flShadowCascadeDistance0"];
CLightComponent.m_flShadowCascadeDistance1 = jsonData["CLightComponent"]["m_flShadowCascadeDistance1"];
CLightComponent.m_flShadowCascadeDistance2 = jsonData["CLightComponent"]["m_flShadowCascadeDistance2"];
CLightComponent.m_flShadowCascadeDistance3 = jsonData["CLightComponent"]["m_flShadowCascadeDistance3"];
CLightComponent.m_nShadowCascadeResolution0 = jsonData["CLightComponent"]["m_nShadowCascadeResolution0"];
CLightComponent.m_nShadowCascadeResolution1 = jsonData["CLightComponent"]["m_nShadowCascadeResolution1"];
CLightComponent.m_nShadowCascadeResolution2 = jsonData["CLightComponent"]["m_nShadowCascadeResolution2"];
CLightComponent.m_nShadowCascadeResolution3 = jsonData["CLightComponent"]["m_nShadowCascadeResolution3"];
CLightComponent.m_bUsesBakedShadowing = jsonData["CLightComponent"]["m_bUsesBakedShadowing"];
CLightComponent.m_nShadowPriority = jsonData["CLightComponent"]["m_nShadowPriority"];
CLightComponent.m_nBakedShadowIndex = jsonData["CLightComponent"]["m_nBakedShadowIndex"];
CLightComponent.m_bRenderToCubemaps = jsonData["CLightComponent"]["m_bRenderToCubemaps"];
CLightComponent.m_nDirectLight = jsonData["CLightComponent"]["m_nDirectLight"];
CLightComponent.m_nIndirectLight = jsonData["CLightComponent"]["m_nIndirectLight"];
CLightComponent.m_flFadeMinDist = jsonData["CLightComponent"]["m_flFadeMinDist"];
CLightComponent.m_flFadeMaxDist = jsonData["CLightComponent"]["m_flFadeMaxDist"];
CLightComponent.m_flShadowFadeMinDist = jsonData["CLightComponent"]["m_flShadowFadeMinDist"];
CLightComponent.m_flShadowFadeMaxDist = jsonData["CLightComponent"]["m_flShadowFadeMaxDist"];
CLightComponent.m_bEnabled = jsonData["CLightComponent"]["m_bEnabled"];
CLightComponent.m_bFlicker = jsonData["CLightComponent"]["m_bFlicker"];
CLightComponent.m_bPrecomputedFieldsValid = jsonData["CLightComponent"]["m_bPrecomputedFieldsValid"];
CLightComponent.m_vPrecomputedBoundsMins = jsonData["CLightComponent"]["m_vPrecomputedBoundsMins"];
CLightComponent.m_vPrecomputedBoundsMaxs = jsonData["CLightComponent"]["m_vPrecomputedBoundsMaxs"];
CLightComponent.m_vPrecomputedOBBOrigin = jsonData["CLightComponent"]["m_vPrecomputedOBBOrigin"];
CLightComponent.m_vPrecomputedOBBAngles = jsonData["CLightComponent"]["m_vPrecomputedOBBAngles"];
CLightComponent.m_vPrecomputedOBBExtent = jsonData["CLightComponent"]["m_vPrecomputedOBBExtent"];
CLightComponent.m_flPrecomputedMaxRange = jsonData["CLightComponent"]["m_flPrecomputedMaxRange"];
CLightComponent.m_nFogLightingMode = jsonData["CLightComponent"]["m_nFogLightingMode"];
CLightComponent.m_flFogContributionStength = jsonData["CLightComponent"]["m_flFogContributionStength"];
CLightComponent.m_flNearClipPlane = jsonData["CLightComponent"]["m_flNearClipPlane"];
CLightComponent.m_SkyColor = jsonData["CLightComponent"]["m_SkyColor"];
CLightComponent.m_flSkyIntensity = jsonData["CLightComponent"]["m_flSkyIntensity"];
CLightComponent.m_SkyAmbientBounce = jsonData["CLightComponent"]["m_SkyAmbientBounce"];
CLightComponent.m_bUseSecondaryColor = jsonData["CLightComponent"]["m_bUseSecondaryColor"];
CLightComponent.m_bMixedShadows = jsonData["CLightComponent"]["m_bMixedShadows"];
CLightComponent.m_flLightStyleStartTime = jsonData["CLightComponent"]["m_flLightStyleStartTime"];
CLightComponent.m_flCapsuleLength = jsonData["CLightComponent"]["m_flCapsuleLength"];
CLightComponent.m_flMinRoughness = jsonData["CLightComponent"]["m_flMinRoughness"];
CLightComponent.m_bPvsModifyEntity = jsonData["CLightComponent"]["m_bPvsModifyEntity"];

// Atribuições para C_EconItemView
// C_EconItemView Offsets
C_EconItemView.m_bInventoryImageRgbaRequested = jsonData["C_EconItemView"]["m_bInventoryImageRgbaRequested"];
C_EconItemView.m_bInventoryImageTriedCache = jsonData["C_EconItemView"]["m_bInventoryImageTriedCache"];
C_EconItemView.m_nInventoryImageRgbaWidth = jsonData["C_EconItemView"]["m_nInventoryImageRgbaWidth"];
C_EconItemView.m_nInventoryImageRgbaHeight = jsonData["C_EconItemView"]["m_nInventoryImageRgbaHeight"];
C_EconItemView.m_szCurrentLoadCachedFileName = jsonData["C_EconItemView"]["m_szCurrentLoadCachedFileName"];
C_EconItemView.m_bRestoreCustomMaterialAfterPrecache = jsonData["C_EconItemView"]["m_bRestoreCustomMaterialAfterPrecache"];
C_EconItemView.m_iItemDefinitionIndex = jsonData["C_EconItemView"]["m_iItemDefinitionIndex"];
C_EconItemView.m_iEntityQuality = jsonData["C_EconItemView"]["m_iEntityQuality"];
C_EconItemView.m_iEntityLevel = jsonData["C_EconItemView"]["m_iEntityLevel"];
C_EconItemView.m_iItemID = jsonData["C_EconItemView"]["m_iItemID"];
C_EconItemView.m_iItemIDHigh = jsonData["C_EconItemView"]["m_iItemIDHigh"];
C_EconItemView.m_iItemIDLow = jsonData["C_EconItemView"]["m_iItemIDLow"];
C_EconItemView.m_iAccountID = jsonData["C_EconItemView"]["m_iAccountID"];
C_EconItemView.m_iInventoryPosition = jsonData["C_EconItemView"]["m_iInventoryPosition"];
C_EconItemView.m_bInitialized = jsonData["C_EconItemView"]["m_bInitialized"];
C_EconItemView.m_bDisallowSOC = jsonData["C_EconItemView"]["m_bDisallowSOC"];
C_EconItemView.m_bIsStoreItem = jsonData["C_EconItemView"]["m_bIsStoreItem"];
C_EconItemView.m_bIsTradeItem = jsonData["C_EconItemView"]["m_bIsTradeItem"];
C_EconItemView.m_iEntityQuantity = jsonData["C_EconItemView"]["m_iEntityQuantity"];
C_EconItemView.m_iRarityOverride = jsonData["C_EconItemView"]["m_iRarityOverride"];
C_EconItemView.m_iQualityOverride = jsonData["C_EconItemView"]["m_iQualityOverride"];
C_EconItemView.m_iOriginOverride = jsonData["C_EconItemView"]["m_iOriginOverride"];
C_EconItemView.m_unClientFlags = jsonData["C_EconItemView"]["m_unClientFlags"];
C_EconItemView.m_unOverrideStyle = jsonData["C_EconItemView"]["m_unOverrideStyle"];
C_EconItemView.m_AttributeList = jsonData["C_EconItemView"]["m_AttributeList"];
C_EconItemView.m_NetworkedDynamicAttributes = jsonData["C_EconItemView"]["m_NetworkedDynamicAttributes"];
C_EconItemView.m_szCustomName = jsonData["C_EconItemView"]["m_szCustomName"];
C_EconItemView.m_szCustomNameOverride = jsonData["C_EconItemView"]["m_szCustomNameOverride"];
C_EconItemView.m_bInitializedTags = jsonData["C_EconItemView"]["m_bInitializedTags"];

// Atribuições para C_HandleTest
// C_HandleTest Offsets
C_HandleTest.m_Handle = jsonData["C_HandleTest"]["m_Handle"];
C_HandleTest.m_bSendHandle = jsonData["C_HandleTest"]["m_bSendHandle"];

// Atribuições para C_EnvWindClientside
// C_EnvWindClientside Offsets
C_EnvWindClientside.m_EnvWindShared = jsonData["C_EnvWindClientside"]["m_EnvWindShared"];

// Atribuições para C_WeaponShield
// C_WeaponShield Offsets
C_WeaponShield.m_flDisplayHealth = jsonData["C_WeaponShield"]["m_flDisplayHealth"];

// Atribuições para C_PointClientUIWorldTextPanel
// C_PointClientUIWorldTextPanel Offsets
C_PointClientUIWorldTextPanel.m_messageText = jsonData["C_PointClientUIWorldTextPanel"]["m_messageText"];

// Atribuições para CPlayer_MovementServices
// CPlayer_MovementServices Offsets
CPlayer_MovementServices.m_nImpulse = jsonData["CPlayer_MovementServices"]["m_nImpulse"];
CPlayer_MovementServices.m_nButtons = jsonData["CPlayer_MovementServices"]["m_nButtons"];
CPlayer_MovementServices.m_nQueuedButtonDownMask = jsonData["CPlayer_MovementServices"]["m_nQueuedButtonDownMask"];
CPlayer_MovementServices.m_nQueuedButtonChangeMask = jsonData["CPlayer_MovementServices"]["m_nQueuedButtonChangeMask"];
CPlayer_MovementServices.m_nButtonDoublePressed = jsonData["CPlayer_MovementServices"]["m_nButtonDoublePressed"];
CPlayer_MovementServices.m_pButtonPressedCmdNumber = jsonData["CPlayer_MovementServices"]["m_pButtonPressedCmdNumber"];
CPlayer_MovementServices.m_nLastCommandNumberProcessed = jsonData["CPlayer_MovementServices"]["m_nLastCommandNumberProcessed"];
CPlayer_MovementServices.m_nToggleButtonDownMask = jsonData["CPlayer_MovementServices"]["m_nToggleButtonDownMask"];
CPlayer_MovementServices.m_flMaxspeed = jsonData["CPlayer_MovementServices"]["m_flMaxspeed"];
CPlayer_MovementServices.m_arrForceSubtickMoveWhen = jsonData["CPlayer_MovementServices"]["m_arrForceSubtickMoveWhen"];
CPlayer_MovementServices.m_flForwardMove = jsonData["CPlayer_MovementServices"]["m_flForwardMove"];
CPlayer_MovementServices.m_flLeftMove = jsonData["CPlayer_MovementServices"]["m_flLeftMove"];
CPlayer_MovementServices.m_flUpMove = jsonData["CPlayer_MovementServices"]["m_flUpMove"];
CPlayer_MovementServices.m_vecLastMovementImpulses = jsonData["CPlayer_MovementServices"]["m_vecLastMovementImpulses"];
CPlayer_MovementServices.m_vecOldViewAngles = jsonData["CPlayer_MovementServices"]["m_vecOldViewAngles"];

// Atribuições para CBasePlayerVData
// CBasePlayerVData Offsets
CBasePlayerVData.m_sModelName = jsonData["CBasePlayerVData"]["m_sModelName"];
CBasePlayerVData.m_flHeadDamageMultiplier = jsonData["CBasePlayerVData"]["m_flHeadDamageMultiplier"];
CBasePlayerVData.m_flChestDamageMultiplier = jsonData["CBasePlayerVData"]["m_flChestDamageMultiplier"];
CBasePlayerVData.m_flStomachDamageMultiplier = jsonData["CBasePlayerVData"]["m_flStomachDamageMultiplier"];
CBasePlayerVData.m_flArmDamageMultiplier = jsonData["CBasePlayerVData"]["m_flArmDamageMultiplier"];
CBasePlayerVData.m_flLegDamageMultiplier = jsonData["CBasePlayerVData"]["m_flLegDamageMultiplier"];
CBasePlayerVData.m_flHoldBreathTime = jsonData["CBasePlayerVData"]["m_flHoldBreathTime"];
CBasePlayerVData.m_flDrowningDamageInterval = jsonData["CBasePlayerVData"]["m_flDrowningDamageInterval"];
CBasePlayerVData.m_nDrowningDamageInitial = jsonData["CBasePlayerVData"]["m_nDrowningDamageInitial"];
CBasePlayerVData.m_nDrowningDamageMax = jsonData["CBasePlayerVData"]["m_nDrowningDamageMax"];
CBasePlayerVData.m_nWaterSpeed = jsonData["CBasePlayerVData"]["m_nWaterSpeed"];
CBasePlayerVData.m_flUseRange = jsonData["CBasePlayerVData"]["m_flUseRange"];
CBasePlayerVData.m_flUseAngleTolerance = jsonData["CBasePlayerVData"]["m_flUseAngleTolerance"];
CBasePlayerVData.m_flCrouchTime = jsonData["CBasePlayerVData"]["m_flCrouchTime"];

// Atribuições para CCSPlayerController_InGameMoneyServices
// CCSPlayerController_InGameMoneyServices Offsets
CCSPlayerController_InGameMoneyServices.m_iAccount = jsonData["CCSPlayerController_InGameMoneyServices"]["m_iAccount"];
CCSPlayerController_InGameMoneyServices.m_iStartAccount = jsonData["CCSPlayerController_InGameMoneyServices"]["m_iStartAccount"];
CCSPlayerController_InGameMoneyServices.m_iTotalCashSpent = jsonData["CCSPlayerController_InGameMoneyServices"]["m_iTotalCashSpent"];
CCSPlayerController_InGameMoneyServices.m_iCashSpentThisRound = jsonData["CCSPlayerController_InGameMoneyServices"]["m_iCashSpentThisRound"];
CCSPlayerController_InGameMoneyServices.m_bReceivesMoneyNextRound = jsonData["CCSPlayerController_InGameMoneyServices"]["m_bReceivesMoneyNextRound"];
CCSPlayerController_InGameMoneyServices.m_iMoneyEarnedForNextRound = jsonData["CCSPlayerController_InGameMoneyServices"]["m_iMoneyEarnedForNextRound"];

// Atribuições para C_EnvWindShared__WindVariationEvent_t
// C_EnvWindShared__WindVariationEvent_t Offsets
C_EnvWindShared__WindVariationEvent_t.m_flWindAngleVariation = jsonData["C_EnvWindShared__WindVariationEvent_t"]["m_flWindAngleVariation"];
C_EnvWindShared__WindVariationEvent_t.m_flWindSpeedVariation = jsonData["C_EnvWindShared__WindVariationEvent_t"]["m_flWindSpeedVariation"];

// Atribuições para C_EnvParticleGlow
// C_EnvParticleGlow Offsets
C_EnvParticleGlow.m_flAlphaScale = jsonData["C_EnvParticleGlow"]["m_flAlphaScale"];
C_EnvParticleGlow.m_flRadiusScale = jsonData["C_EnvParticleGlow"]["m_flRadiusScale"];
C_EnvParticleGlow.m_flSelfIllumScale = jsonData["C_EnvParticleGlow"]["m_flSelfIllumScale"];
C_EnvParticleGlow.m_ColorTint = jsonData["C_EnvParticleGlow"]["m_ColorTint"];
C_EnvParticleGlow.m_hTextureOverride = jsonData["C_EnvParticleGlow"]["m_hTextureOverride"];

// Atribuições para C_SoundEventEntity
// C_SoundEventEntity Offsets
C_SoundEventEntity.m_bStartOnSpawn = jsonData["C_SoundEventEntity"]["m_bStartOnSpawn"];
C_SoundEventEntity.m_bToLocalPlayer = jsonData["C_SoundEventEntity"]["m_bToLocalPlayer"];
C_SoundEventEntity.m_bStopOnNew = jsonData["C_SoundEventEntity"]["m_bStopOnNew"];
C_SoundEventEntity.m_bSaveRestore = jsonData["C_SoundEventEntity"]["m_bSaveRestore"];
C_SoundEventEntity.m_bSavedIsPlaying = jsonData["C_SoundEventEntity"]["m_bSavedIsPlaying"];
C_SoundEventEntity.m_flSavedElapsedTime = jsonData["C_SoundEventEntity"]["m_flSavedElapsedTime"];
C_SoundEventEntity.m_iszSourceEntityName = jsonData["C_SoundEventEntity"]["m_iszSourceEntityName"];
C_SoundEventEntity.m_iszAttachmentName = jsonData["C_SoundEventEntity"]["m_iszAttachmentName"];
C_SoundEventEntity.m_onGUIDChanged = jsonData["C_SoundEventEntity"]["m_onGUIDChanged"];
C_SoundEventEntity.m_onSoundFinished = jsonData["C_SoundEventEntity"]["m_onSoundFinished"];
C_SoundEventEntity.m_flClientCullRadius = jsonData["C_SoundEventEntity"]["m_flClientCullRadius"];
C_SoundEventEntity.m_iszSoundName = jsonData["C_SoundEventEntity"]["m_iszSoundName"];
C_SoundEventEntity.m_hSource = jsonData["C_SoundEventEntity"]["m_hSource"];
C_SoundEventEntity.m_nEntityIndexSelection = jsonData["C_SoundEventEntity"]["m_nEntityIndexSelection"];
C_SoundEventEntity.m_bClientSideOnly = jsonData["C_SoundEventEntity"]["m_bClientSideOnly"];

// Atribuições para C_Sun
// C_Sun Offsets
C_Sun.m_fxSSSunFlareEffectIndex = jsonData["C_Sun"]["m_fxSSSunFlareEffectIndex"];
C_Sun.m_fxSunFlareEffectIndex = jsonData["C_Sun"]["m_fxSunFlareEffectIndex"];
C_Sun.m_fdistNormalize = jsonData["C_Sun"]["m_fdistNormalize"];
C_Sun.m_vSunPos = jsonData["C_Sun"]["m_vSunPos"];
C_Sun.m_vDirection = jsonData["C_Sun"]["m_vDirection"];
C_Sun.m_iszEffectName = jsonData["C_Sun"]["m_iszEffectName"];
C_Sun.m_iszSSEffectName = jsonData["C_Sun"]["m_iszSSEffectName"];
C_Sun.m_clrOverlay = jsonData["C_Sun"]["m_clrOverlay"];
C_Sun.m_bOn = jsonData["C_Sun"]["m_bOn"];
C_Sun.m_bmaxColor = jsonData["C_Sun"]["m_bmaxColor"];
C_Sun.m_flSize = jsonData["C_Sun"]["m_flSize"];
C_Sun.m_flHazeScale = jsonData["C_Sun"]["m_flHazeScale"];
C_Sun.m_flRotation = jsonData["C_Sun"]["m_flRotation"];
C_Sun.m_flHDRColorScale = jsonData["C_Sun"]["m_flHDRColorScale"];
C_Sun.m_flAlphaHaze = jsonData["C_Sun"]["m_flAlphaHaze"];
C_Sun.m_flAlphaScale = jsonData["C_Sun"]["m_flAlphaScale"];
C_Sun.m_flAlphaHdr = jsonData["C_Sun"]["m_flAlphaHdr"];
C_Sun.m_flFarZScale = jsonData["C_Sun"]["m_flFarZScale"];

// Atribuições para CCSPlayerController_ActionTrackingServices
// CCSPlayerController_ActionTrackingServices Offsets
CCSPlayerController_ActionTrackingServices.m_perRoundStats = jsonData["CCSPlayerController_ActionTrackingServices"]["m_perRoundStats"];
CCSPlayerController_ActionTrackingServices.m_matchStats = jsonData["CCSPlayerController_ActionTrackingServices"]["m_matchStats"];
CCSPlayerController_ActionTrackingServices.m_iNumRoundKills = jsonData["CCSPlayerController_ActionTrackingServices"]["m_iNumRoundKills"];
CCSPlayerController_ActionTrackingServices.m_iNumRoundKillsHeadshots = jsonData["CCSPlayerController_ActionTrackingServices"]["m_iNumRoundKillsHeadshots"];
CCSPlayerController_ActionTrackingServices.m_unTotalRoundDamageDealt = jsonData["CCSPlayerController_ActionTrackingServices"]["m_unTotalRoundDamageDealt"];

// Atribuições para CHitboxComponent
// CHitboxComponent Offsets
CHitboxComponent.m_bvDisabledHitGroups = jsonData["CHitboxComponent"]["m_bvDisabledHitGroups"];

// Atribuições para C_ColorCorrectionVolume
// C_ColorCorrectionVolume Offsets
C_ColorCorrectionVolume.m_LastEnterWeight = jsonData["C_ColorCorrectionVolume"]["m_LastEnterWeight"];
C_ColorCorrectionVolume.m_LastEnterTime = jsonData["C_ColorCorrectionVolume"]["m_LastEnterTime"];
C_ColorCorrectionVolume.m_LastExitWeight = jsonData["C_ColorCorrectionVolume"]["m_LastExitWeight"];
C_ColorCorrectionVolume.m_LastExitTime = jsonData["C_ColorCorrectionVolume"]["m_LastExitTime"];
C_ColorCorrectionVolume.m_bEnabled = jsonData["C_ColorCorrectionVolume"]["m_bEnabled"];
C_ColorCorrectionVolume.m_MaxWeight = jsonData["C_ColorCorrectionVolume"]["m_MaxWeight"];
C_ColorCorrectionVolume.m_FadeDuration = jsonData["C_ColorCorrectionVolume"]["m_FadeDuration"];
C_ColorCorrectionVolume.m_Weight = jsonData["C_ColorCorrectionVolume"]["m_Weight"];
C_ColorCorrectionVolume.m_lookupFilename = jsonData["C_ColorCorrectionVolume"]["m_lookupFilename"];

// Atribuições para C_BulletHitModel
// C_BulletHitModel Offsets
C_BulletHitModel.m_matLocal = jsonData["C_BulletHitModel"]["m_matLocal"];
C_BulletHitModel.m_iBoneIndex = jsonData["C_BulletHitModel"]["m_iBoneIndex"];
C_BulletHitModel.m_hPlayerParent = jsonData["C_BulletHitModel"]["m_hPlayerParent"];
C_BulletHitModel.m_bIsHit = jsonData["C_BulletHitModel"]["m_bIsHit"];
C_BulletHitModel.m_flTimeCreated = jsonData["C_BulletHitModel"]["m_flTimeCreated"];
C_BulletHitModel.m_vecStartPos = jsonData["C_BulletHitModel"]["m_vecStartPos"];

// Atribuições para C_MapVetoPickController
// C_MapVetoPickController Offsets
C_MapVetoPickController.m_nDraftType = jsonData["C_MapVetoPickController"]["m_nDraftType"];
C_MapVetoPickController.m_nTeamWinningCoinToss = jsonData["C_MapVetoPickController"]["m_nTeamWinningCoinToss"];
C_MapVetoPickController.m_nTeamWithFirstChoice = jsonData["C_MapVetoPickController"]["m_nTeamWithFirstChoice"];
C_MapVetoPickController.m_nVoteMapIdsList = jsonData["C_MapVetoPickController"]["m_nVoteMapIdsList"];
C_MapVetoPickController.m_nAccountIDs = jsonData["C_MapVetoPickController"]["m_nAccountIDs"];
C_MapVetoPickController.m_nMapId0 = jsonData["C_MapVetoPickController"]["m_nMapId0"];
C_MapVetoPickController.m_nMapId1 = jsonData["C_MapVetoPickController"]["m_nMapId1"];
C_MapVetoPickController.m_nMapId2 = jsonData["C_MapVetoPickController"]["m_nMapId2"];
C_MapVetoPickController.m_nMapId3 = jsonData["C_MapVetoPickController"]["m_nMapId3"];
C_MapVetoPickController.m_nMapId4 = jsonData["C_MapVetoPickController"]["m_nMapId4"];
C_MapVetoPickController.m_nMapId5 = jsonData["C_MapVetoPickController"]["m_nMapId5"];
C_MapVetoPickController.m_nStartingSide0 = jsonData["C_MapVetoPickController"]["m_nStartingSide0"];
C_MapVetoPickController.m_nCurrentPhase = jsonData["C_MapVetoPickController"]["m_nCurrentPhase"];
C_MapVetoPickController.m_nPhaseStartTick = jsonData["C_MapVetoPickController"]["m_nPhaseStartTick"];
C_MapVetoPickController.m_nPhaseDurationTicks = jsonData["C_MapVetoPickController"]["m_nPhaseDurationTicks"];
C_MapVetoPickController.m_nPostDataUpdateTick = jsonData["C_MapVetoPickController"]["m_nPostDataUpdateTick"];
C_MapVetoPickController.m_bDisabledHud = jsonData["C_MapVetoPickController"]["m_bDisabledHud"];

// Atribuições para C_OmniLight
// C_OmniLight Offsets
C_OmniLight.m_flInnerAngle = jsonData["C_OmniLight"]["m_flInnerAngle"];
C_OmniLight.m_flOuterAngle = jsonData["C_OmniLight"]["m_flOuterAngle"];
C_OmniLight.m_bShowLight = jsonData["C_OmniLight"]["m_bShowLight"];

// Atribuições para WeaponPurchaseTracker_t
// WeaponPurchaseTracker_t Offsets
WeaponPurchaseTracker_t.m_weaponPurchases = jsonData["WeaponPurchaseTracker_t"]["m_weaponPurchases"];

// Atribuições para C_RetakeGameRules
// C_RetakeGameRules Offsets
C_RetakeGameRules.m_nMatchSeed = jsonData["C_RetakeGameRules"]["m_nMatchSeed"];
C_RetakeGameRules.m_bBlockersPresent = jsonData["C_RetakeGameRules"]["m_bBlockersPresent"];
C_RetakeGameRules.m_bRoundInProgress = jsonData["C_RetakeGameRules"]["m_bRoundInProgress"];
C_RetakeGameRules.m_iFirstSecondHalfRound = jsonData["C_RetakeGameRules"]["m_iFirstSecondHalfRound"];
C_RetakeGameRules.m_iBombSite = jsonData["C_RetakeGameRules"]["m_iBombSite"];

// Atribuições para EngineCountdownTimer
// EngineCountdownTimer Offsets
EngineCountdownTimer.m_duration = jsonData["EngineCountdownTimer"]["m_duration"];
EngineCountdownTimer.m_timestamp = jsonData["EngineCountdownTimer"]["m_timestamp"];
EngineCountdownTimer.m_timescale = jsonData["EngineCountdownTimer"]["m_timescale"];

// Atribuições para C_BaseFlex__Emphasized_Phoneme
// C_BaseFlex__Emphasized_Phoneme Offsets
C_BaseFlex__Emphasized_Phoneme.m_sClassName = jsonData["C_BaseFlex__Emphasized_Phoneme"]["m_sClassName"];
C_BaseFlex__Emphasized_Phoneme.m_flAmount = jsonData["C_BaseFlex__Emphasized_Phoneme"]["m_flAmount"];
C_BaseFlex__Emphasized_Phoneme.m_bRequired = jsonData["C_BaseFlex__Emphasized_Phoneme"]["m_bRequired"];
C_BaseFlex__Emphasized_Phoneme.m_bBasechecked = jsonData["C_BaseFlex__Emphasized_Phoneme"]["m_bBasechecked"];
C_BaseFlex__Emphasized_Phoneme.m_bValid = jsonData["C_BaseFlex__Emphasized_Phoneme"]["m_bValid"];

// Atribuições para IntervalTimer
// IntervalTimer Offsets
IntervalTimer.m_timestamp = jsonData["IntervalTimer"]["m_timestamp"];
IntervalTimer.m_nWorldGroupId = jsonData["IntervalTimer"]["m_nWorldGroupId"];

// Atribuições para C_FuncLadder
// C_FuncLadder Offsets
C_FuncLadder.m_vecLadderDir = jsonData["C_FuncLadder"]["m_vecLadderDir"];
C_FuncLadder.m_Dismounts = jsonData["C_FuncLadder"]["m_Dismounts"];
C_FuncLadder.m_vecLocalTop = jsonData["C_FuncLadder"]["m_vecLocalTop"];
C_FuncLadder.m_vecPlayerMountPositionTop = jsonData["C_FuncLadder"]["m_vecPlayerMountPositionTop"];
C_FuncLadder.m_vecPlayerMountPositionBottom = jsonData["C_FuncLadder"]["m_vecPlayerMountPositionBottom"];
C_FuncLadder.m_flAutoRideSpeed = jsonData["C_FuncLadder"]["m_flAutoRideSpeed"];
C_FuncLadder.m_bDisabled = jsonData["C_FuncLadder"]["m_bDisabled"];
C_FuncLadder.m_bFakeLadder = jsonData["C_FuncLadder"]["m_bFakeLadder"];
C_FuncLadder.m_bHasSlack = jsonData["C_FuncLadder"]["m_bHasSlack"];

// Atribuições para CPlayer_WeaponServices
// CPlayer_WeaponServices Offsets
CPlayer_WeaponServices.m_hMyWeapons = jsonData["CPlayer_WeaponServices"]["m_hMyWeapons"];
CPlayer_WeaponServices.m_hActiveWeapon = jsonData["CPlayer_WeaponServices"]["m_hActiveWeapon"];
CPlayer_WeaponServices.m_hLastWeapon = jsonData["CPlayer_WeaponServices"]["m_hLastWeapon"];
CPlayer_WeaponServices.m_iAmmo = jsonData["CPlayer_WeaponServices"]["m_iAmmo"];
CPlayer_WeaponServices.m_bPreventWeaponPickup = jsonData["CPlayer_WeaponServices"]["m_bPreventWeaponPickup"];

// Atribuições para CAttributeManager__cached_attribute_float_t
// CAttributeManager__cached_attribute_float_t Offsets
CAttributeManager__cached_attribute_float_t.flIn = jsonData["CAttributeManager__cached_attribute_float_t"]["flIn"];
CAttributeManager__cached_attribute_float_t.iAttribHook = jsonData["CAttributeManager__cached_attribute_float_t"]["iAttribHook"];
CAttributeManager__cached_attribute_float_t.flOut = jsonData["CAttributeManager__cached_attribute_float_t"]["flOut"];

// Atribuições para C_BaseGrenade
// C_BaseGrenade Offsets
C_BaseGrenade.m_bHasWarnedAI = jsonData["C_BaseGrenade"]["m_bHasWarnedAI"];
C_BaseGrenade.m_bIsSmokeGrenade = jsonData["C_BaseGrenade"]["m_bIsSmokeGrenade"];
C_BaseGrenade.m_bIsLive = jsonData["C_BaseGrenade"]["m_bIsLive"];
C_BaseGrenade.m_DmgRadius = jsonData["C_BaseGrenade"]["m_DmgRadius"];
C_BaseGrenade.m_flDetonateTime = jsonData["C_BaseGrenade"]["m_flDetonateTime"];
C_BaseGrenade.m_flWarnAITime = jsonData["C_BaseGrenade"]["m_flWarnAITime"];
C_BaseGrenade.m_flDamage = jsonData["C_BaseGrenade"]["m_flDamage"];
C_BaseGrenade.m_iszBounceSound = jsonData["C_BaseGrenade"]["m_iszBounceSound"];
C_BaseGrenade.m_ExplosionSound = jsonData["C_BaseGrenade"]["m_ExplosionSound"];
C_BaseGrenade.m_hThrower = jsonData["C_BaseGrenade"]["m_hThrower"];
C_BaseGrenade.m_flNextAttack = jsonData["C_BaseGrenade"]["m_flNextAttack"];
C_BaseGrenade.m_hOriginalThrower = jsonData["C_BaseGrenade"]["m_hOriginalThrower"];

// Atribuições para CCSGameModeRules
// CCSGameModeRules Offsets
CCSGameModeRules.__m_pChainEntity = jsonData["CCSGameModeRules"]["__m_pChainEntity"];

// Atribuições para VPhysicsCollisionAttribute_t
// VPhysicsCollisionAttribute_t Offsets
VPhysicsCollisionAttribute_t.m_nInteractsAs = jsonData["VPhysicsCollisionAttribute_t"]["m_nInteractsAs"];
VPhysicsCollisionAttribute_t.m_nInteractsWith = jsonData["VPhysicsCollisionAttribute_t"]["m_nInteractsWith"];
VPhysicsCollisionAttribute_t.m_nInteractsExclude = jsonData["VPhysicsCollisionAttribute_t"]["m_nInteractsExclude"];
VPhysicsCollisionAttribute_t.m_nEntityId = jsonData["VPhysicsCollisionAttribute_t"]["m_nEntityId"];
VPhysicsCollisionAttribute_t.m_nOwnerId = jsonData["VPhysicsCollisionAttribute_t"]["m_nOwnerId"];
VPhysicsCollisionAttribute_t.m_nHierarchyId = jsonData["VPhysicsCollisionAttribute_t"]["m_nHierarchyId"];
VPhysicsCollisionAttribute_t.m_nCollisionGroup = jsonData["VPhysicsCollisionAttribute_t"]["m_nCollisionGroup"];
VPhysicsCollisionAttribute_t.m_nCollisionFunctionMask = jsonData["VPhysicsCollisionAttribute_t"]["m_nCollisionFunctionMask"];

// Atribuições para C_EnvVolumetricFogController
// C_EnvVolumetricFogController Offsets
C_EnvVolumetricFogController.m_flScattering = jsonData["C_EnvVolumetricFogController"]["m_flScattering"];
C_EnvVolumetricFogController.m_flAnisotropy = jsonData["C_EnvVolumetricFogController"]["m_flAnisotropy"];
C_EnvVolumetricFogController.m_flFadeSpeed = jsonData["C_EnvVolumetricFogController"]["m_flFadeSpeed"];
C_EnvVolumetricFogController.m_flDrawDistance = jsonData["C_EnvVolumetricFogController"]["m_flDrawDistance"];
C_EnvVolumetricFogController.m_flFadeInStart = jsonData["C_EnvVolumetricFogController"]["m_flFadeInStart"];
C_EnvVolumetricFogController.m_flFadeInEnd = jsonData["C_EnvVolumetricFogController"]["m_flFadeInEnd"];
C_EnvVolumetricFogController.m_flIndirectStrength = jsonData["C_EnvVolumetricFogController"]["m_flIndirectStrength"];
C_EnvVolumetricFogController.m_nVolumeDepth = jsonData["C_EnvVolumetricFogController"]["m_nVolumeDepth"];
C_EnvVolumetricFogController.m_fFirstVolumeSliceThickness = jsonData["C_EnvVolumetricFogController"]["m_fFirstVolumeSliceThickness"];
C_EnvVolumetricFogController.m_nIndirectTextureDimX = jsonData["C_EnvVolumetricFogController"]["m_nIndirectTextureDimX"];
C_EnvVolumetricFogController.m_nIndirectTextureDimY = jsonData["C_EnvVolumetricFogController"]["m_nIndirectTextureDimY"];
C_EnvVolumetricFogController.m_nIndirectTextureDimZ = jsonData["C_EnvVolumetricFogController"]["m_nIndirectTextureDimZ"];
C_EnvVolumetricFogController.m_vBoxMins = jsonData["C_EnvVolumetricFogController"]["m_vBoxMins"];
C_EnvVolumetricFogController.m_vBoxMaxs = jsonData["C_EnvVolumetricFogController"]["m_vBoxMaxs"];
C_EnvVolumetricFogController.m_bActive = jsonData["C_EnvVolumetricFogController"]["m_bActive"];
C_EnvVolumetricFogController.m_flStartAnisoTime = jsonData["C_EnvVolumetricFogController"]["m_flStartAnisoTime"];
C_EnvVolumetricFogController.m_flStartScatterTime = jsonData["C_EnvVolumetricFogController"]["m_flStartScatterTime"];
C_EnvVolumetricFogController.m_flStartDrawDistanceTime = jsonData["C_EnvVolumetricFogController"]["m_flStartDrawDistanceTime"];
C_EnvVolumetricFogController.m_flStartAnisotropy = jsonData["C_EnvVolumetricFogController"]["m_flStartAnisotropy"];
C_EnvVolumetricFogController.m_flStartScattering = jsonData["C_EnvVolumetricFogController"]["m_flStartScattering"];
C_EnvVolumetricFogController.m_flStartDrawDistance = jsonData["C_EnvVolumetricFogController"]["m_flStartDrawDistance"];
C_EnvVolumetricFogController.m_flDefaultAnisotropy = jsonData["C_EnvVolumetricFogController"]["m_flDefaultAnisotropy"];
C_EnvVolumetricFogController.m_flDefaultScattering = jsonData["C_EnvVolumetricFogController"]["m_flDefaultScattering"];
C_EnvVolumetricFogController.m_flDefaultDrawDistance = jsonData["C_EnvVolumetricFogController"]["m_flDefaultDrawDistance"];
C_EnvVolumetricFogController.m_bStartDisabled = jsonData["C_EnvVolumetricFogController"]["m_bStartDisabled"];
C_EnvVolumetricFogController.m_bEnableIndirect = jsonData["C_EnvVolumetricFogController"]["m_bEnableIndirect"];
C_EnvVolumetricFogController.m_bIndirectUseLPVs = jsonData["C_EnvVolumetricFogController"]["m_bIndirectUseLPVs"];
C_EnvVolumetricFogController.m_bIsMaster = jsonData["C_EnvVolumetricFogController"]["m_bIsMaster"];
C_EnvVolumetricFogController.m_hFogIndirectTexture = jsonData["C_EnvVolumetricFogController"]["m_hFogIndirectTexture"];
C_EnvVolumetricFogController.m_nForceRefreshCount = jsonData["C_EnvVolumetricFogController"]["m_nForceRefreshCount"];
C_EnvVolumetricFogController.m_fNoiseSpeed = jsonData["C_EnvVolumetricFogController"]["m_fNoiseSpeed"];
C_EnvVolumetricFogController.m_fNoiseStrength = jsonData["C_EnvVolumetricFogController"]["m_fNoiseStrength"];
C_EnvVolumetricFogController.m_vNoiseScale = jsonData["C_EnvVolumetricFogController"]["m_vNoiseScale"];
C_EnvVolumetricFogController.m_bFirstTime = jsonData["C_EnvVolumetricFogController"]["m_bFirstTime"];

// Atribuições para C_PointCommentaryNode
// C_PointCommentaryNode Offsets
C_PointCommentaryNode.m_bActive = jsonData["C_PointCommentaryNode"]["m_bActive"];
C_PointCommentaryNode.m_bWasActive = jsonData["C_PointCommentaryNode"]["m_bWasActive"];
C_PointCommentaryNode.m_flEndTime = jsonData["C_PointCommentaryNode"]["m_flEndTime"];
C_PointCommentaryNode.m_flStartTime = jsonData["C_PointCommentaryNode"]["m_flStartTime"];
C_PointCommentaryNode.m_flStartTimeInCommentary = jsonData["C_PointCommentaryNode"]["m_flStartTimeInCommentary"];
C_PointCommentaryNode.m_iszCommentaryFile = jsonData["C_PointCommentaryNode"]["m_iszCommentaryFile"];
C_PointCommentaryNode.m_iszTitle = jsonData["C_PointCommentaryNode"]["m_iszTitle"];
C_PointCommentaryNode.m_iszSpeakers = jsonData["C_PointCommentaryNode"]["m_iszSpeakers"];
C_PointCommentaryNode.m_iNodeNumber = jsonData["C_PointCommentaryNode"]["m_iNodeNumber"];
C_PointCommentaryNode.m_iNodeNumberMax = jsonData["C_PointCommentaryNode"]["m_iNodeNumberMax"];
C_PointCommentaryNode.m_bListenedTo = jsonData["C_PointCommentaryNode"]["m_bListenedTo"];
C_PointCommentaryNode.m_hViewPosition = jsonData["C_PointCommentaryNode"]["m_hViewPosition"];
C_PointCommentaryNode.m_bRestartAfterRestore = jsonData["C_PointCommentaryNode"]["m_bRestartAfterRestore"];

// Atribuições para audioparams_t
// audioparams_t Offsets
audioparams_t.localSound = jsonData["audioparams_t"]["localSound"];
audioparams_t.soundscapeIndex = jsonData["audioparams_t"]["soundscapeIndex"];
audioparams_t.localBits = jsonData["audioparams_t"]["localBits"];
audioparams_t.soundscapeEntityListIndex = jsonData["audioparams_t"]["soundscapeEntityListIndex"];
audioparams_t.soundEventHash = jsonData["audioparams_t"]["soundEventHash"];

// Atribuições para C_InfoVisibilityBox
// C_InfoVisibilityBox Offsets
C_InfoVisibilityBox.m_nMode = jsonData["C_InfoVisibilityBox"]["m_nMode"];
C_InfoVisibilityBox.m_vBoxSize = jsonData["C_InfoVisibilityBox"]["m_vBoxSize"];
C_InfoVisibilityBox.m_bEnabled = jsonData["C_InfoVisibilityBox"]["m_bEnabled"];

// Atribuições para C_FireSprite
// C_FireSprite Offsets
C_FireSprite.m_vecMoveDir = jsonData["C_FireSprite"]["m_vecMoveDir"];
C_FireSprite.m_bFadeFromAbove = jsonData["C_FireSprite"]["m_bFadeFromAbove"];

// Atribuições para C_Precipitation
// C_Precipitation Offsets
C_Precipitation.m_flDensity = jsonData["C_Precipitation"]["m_flDensity"];
C_Precipitation.m_flParticleInnerDist = jsonData["C_Precipitation"]["m_flParticleInnerDist"];
C_Precipitation.m_pParticleDef = jsonData["C_Precipitation"]["m_pParticleDef"];
C_Precipitation.m_tParticlePrecipTraceTimer = jsonData["C_Precipitation"]["m_tParticlePrecipTraceTimer"];
C_Precipitation.m_bActiveParticlePrecipEmitter = jsonData["C_Precipitation"]["m_bActiveParticlePrecipEmitter"];
C_Precipitation.m_bParticlePrecipInitialized = jsonData["C_Precipitation"]["m_bParticlePrecipInitialized"];
C_Precipitation.m_bHasSimulatedSinceLastSceneObjectUpdate = jsonData["C_Precipitation"]["m_bHasSimulatedSinceLastSceneObjectUpdate"];
C_Precipitation.m_nAvailableSheetSequencesMaxIndex = jsonData["C_Precipitation"]["m_nAvailableSheetSequencesMaxIndex"];

// Atribuições para CPrecipitationVData
// CPrecipitationVData Offsets
CPrecipitationVData.m_szParticlePrecipitationEffect = jsonData["CPrecipitationVData"]["m_szParticlePrecipitationEffect"];
CPrecipitationVData.m_flInnerDistance = jsonData["CPrecipitationVData"]["m_flInnerDistance"];
CPrecipitationVData.m_nAttachType = jsonData["CPrecipitationVData"]["m_nAttachType"];
CPrecipitationVData.m_bBatchSameVolumeType = jsonData["CPrecipitationVData"]["m_bBatchSameVolumeType"];
CPrecipitationVData.m_nRTEnvCP = jsonData["CPrecipitationVData"]["m_nRTEnvCP"];
CPrecipitationVData.m_nRTEnvCPComponent = jsonData["CPrecipitationVData"]["m_nRTEnvCPComponent"];
CPrecipitationVData.m_szModifier = jsonData["CPrecipitationVData"]["m_szModifier"];

// Atribuições para CBuoyancyHelper
// CBuoyancyHelper Offsets
CBuoyancyHelper.m_nFluidType = jsonData["CBuoyancyHelper"]["m_nFluidType"];
CBuoyancyHelper.m_flFluidDensity = jsonData["CBuoyancyHelper"]["m_flFluidDensity"];
CBuoyancyHelper.m_vecFractionOfWheelSubmergedForWheelFriction = jsonData["CBuoyancyHelper"]["m_vecFractionOfWheelSubmergedForWheelFriction"];
CBuoyancyHelper.m_vecWheelFrictionScales = jsonData["CBuoyancyHelper"]["m_vecWheelFrictionScales"];
CBuoyancyHelper.m_vecFractionOfWheelSubmergedForWheelDrag = jsonData["CBuoyancyHelper"]["m_vecFractionOfWheelSubmergedForWheelDrag"];
CBuoyancyHelper.m_vecWheelDrag = jsonData["CBuoyancyHelper"]["m_vecWheelDrag"];

// Atribuições para C_BaseClientUIEntity
// C_BaseClientUIEntity Offsets
C_BaseClientUIEntity.m_bEnabled = jsonData["C_BaseClientUIEntity"]["m_bEnabled"];
C_BaseClientUIEntity.m_DialogXMLName = jsonData["C_BaseClientUIEntity"]["m_DialogXMLName"];
C_BaseClientUIEntity.m_PanelClassName = jsonData["C_BaseClientUIEntity"]["m_PanelClassName"];
C_BaseClientUIEntity.m_PanelID = jsonData["C_BaseClientUIEntity"]["m_PanelID"];

// Atribuições para C_FuncTrackTrain
// C_FuncTrackTrain Offsets
C_FuncTrackTrain.m_nLongAxis = jsonData["C_FuncTrackTrain"]["m_nLongAxis"];
C_FuncTrackTrain.m_flRadius = jsonData["C_FuncTrackTrain"]["m_flRadius"];
C_FuncTrackTrain.m_flLineLength = jsonData["C_FuncTrackTrain"]["m_flLineLength"];

// Atribuições para CCSPlayer_ActionTrackingServices
// CCSPlayer_ActionTrackingServices Offsets
CCSPlayer_ActionTrackingServices.m_hLastWeaponBeforeC4AutoSwitch = jsonData["CCSPlayer_ActionTrackingServices"]["m_hLastWeaponBeforeC4AutoSwitch"];
CCSPlayer_ActionTrackingServices.m_bIsRescuing = jsonData["CCSPlayer_ActionTrackingServices"]["m_bIsRescuing"];
CCSPlayer_ActionTrackingServices.m_weaponPurchasesThisMatch = jsonData["CCSPlayer_ActionTrackingServices"]["m_weaponPurchasesThisMatch"];
CCSPlayer_ActionTrackingServices.m_weaponPurchasesThisRound = jsonData["CCSPlayer_ActionTrackingServices"]["m_weaponPurchasesThisRound"];

// Atribuições para shard_model_desc_t
// shard_model_desc_t Offsets
shard_model_desc_t.m_nModelID = jsonData["shard_model_desc_t"]["m_nModelID"];
shard_model_desc_t.m_hMaterialBase = jsonData["shard_model_desc_t"]["m_hMaterialBase"];
shard_model_desc_t.m_hMaterialDamageOverlay = jsonData["shard_model_desc_t"]["m_hMaterialDamageOverlay"];
shard_model_desc_t.m_solid = jsonData["shard_model_desc_t"]["m_solid"];
shard_model_desc_t.m_vecPanelSize = jsonData["shard_model_desc_t"]["m_vecPanelSize"];
shard_model_desc_t.m_vecStressPositionA = jsonData["shard_model_desc_t"]["m_vecStressPositionA"];
shard_model_desc_t.m_vecStressPositionB = jsonData["shard_model_desc_t"]["m_vecStressPositionB"];
shard_model_desc_t.m_vecPanelVertices = jsonData["shard_model_desc_t"]["m_vecPanelVertices"];
shard_model_desc_t.m_vInitialPanelVertices = jsonData["shard_model_desc_t"]["m_vInitialPanelVertices"];
shard_model_desc_t.m_flGlassHalfThickness = jsonData["shard_model_desc_t"]["m_flGlassHalfThickness"];
shard_model_desc_t.m_bHasParent = jsonData["shard_model_desc_t"]["m_bHasParent"];
shard_model_desc_t.m_bParentFrozen = jsonData["shard_model_desc_t"]["m_bParentFrozen"];
shard_model_desc_t.m_SurfacePropStringToken = jsonData["shard_model_desc_t"]["m_SurfacePropStringToken"];

// Atribuições para C_SceneEntity__QueuedEvents_t
// C_SceneEntity__QueuedEvents_t Offsets
C_SceneEntity__QueuedEvents_t.starttime = jsonData["C_SceneEntity__QueuedEvents_t"]["starttime"];

// Atribuições para CBaseProp
// CBaseProp Offsets
CBaseProp.m_bModelOverrodeBlockLOS = jsonData["CBaseProp"]["m_bModelOverrodeBlockLOS"];
CBaseProp.m_iShapeType = jsonData["CBaseProp"]["m_iShapeType"];
CBaseProp.m_bConformToCollisionBounds = jsonData["CBaseProp"]["m_bConformToCollisionBounds"];
CBaseProp.m_mPreferredCatchTransform = jsonData["CBaseProp"]["m_mPreferredCatchTransform"];

// Atribuições para CPointTemplate
// CPointTemplate Offsets
CPointTemplate.m_iszWorldName = jsonData["CPointTemplate"]["m_iszWorldName"];
CPointTemplate.m_iszSource2EntityLumpName = jsonData["CPointTemplate"]["m_iszSource2EntityLumpName"];
CPointTemplate.m_iszEntityFilterName = jsonData["CPointTemplate"]["m_iszEntityFilterName"];
CPointTemplate.m_flTimeoutInterval = jsonData["CPointTemplate"]["m_flTimeoutInterval"];
CPointTemplate.m_bAsynchronouslySpawnEntities = jsonData["CPointTemplate"]["m_bAsynchronouslySpawnEntities"];
CPointTemplate.m_pOutputOnSpawned = jsonData["CPointTemplate"]["m_pOutputOnSpawned"];
CPointTemplate.m_clientOnlyEntityBehavior = jsonData["CPointTemplate"]["m_clientOnlyEntityBehavior"];
CPointTemplate.m_ownerSpawnGroupType = jsonData["CPointTemplate"]["m_ownerSpawnGroupType"];
CPointTemplate.m_createdSpawnGroupHandles = jsonData["CPointTemplate"]["m_createdSpawnGroupHandles"];
CPointTemplate.m_SpawnedEntityHandles = jsonData["CPointTemplate"]["m_SpawnedEntityHandles"];
CPointTemplate.m_ScriptSpawnCallback = jsonData["CPointTemplate"]["m_ScriptSpawnCallback"];
CPointTemplate.m_ScriptCallbackScope = jsonData["CPointTemplate"]["m_ScriptCallbackScope"];

// Atribuições para C_CSGO_PreviewModel
// C_CSGO_PreviewModel Offsets
C_CSGO_PreviewModel.m_animgraph = jsonData["C_CSGO_PreviewModel"]["m_animgraph"];
C_CSGO_PreviewModel.m_animgraphCharacterModeString = jsonData["C_CSGO_PreviewModel"]["m_animgraphCharacterModeString"];
C_CSGO_PreviewModel.m_defaultAnim = jsonData["C_CSGO_PreviewModel"]["m_defaultAnim"];
C_CSGO_PreviewModel.m_nDefaultAnimLoopMode = jsonData["C_CSGO_PreviewModel"]["m_nDefaultAnimLoopMode"];
C_CSGO_PreviewModel.m_flInitialModelScale = jsonData["C_CSGO_PreviewModel"]["m_flInitialModelScale"];
C_CSGO_PreviewModel.m_sInitialWeaponState = jsonData["C_CSGO_PreviewModel"]["m_sInitialWeaponState"];

// Atribuições para CInfoDynamicShadowHint
// CInfoDynamicShadowHint Offsets
CInfoDynamicShadowHint.m_bDisabled = jsonData["CInfoDynamicShadowHint"]["m_bDisabled"];
CInfoDynamicShadowHint.m_flRange = jsonData["CInfoDynamicShadowHint"]["m_flRange"];
CInfoDynamicShadowHint.m_nImportance = jsonData["CInfoDynamicShadowHint"]["m_nImportance"];
CInfoDynamicShadowHint.m_nLightChoice = jsonData["CInfoDynamicShadowHint"]["m_nLightChoice"];
CInfoDynamicShadowHint.m_hLight = jsonData["CInfoDynamicShadowHint"]["m_hLight"];

// Atribuições para CGlowProperty
// CGlowProperty Offsets
CGlowProperty.m_fGlowColor = jsonData["CGlowProperty"]["m_fGlowColor"];
CGlowProperty.m_iGlowType = jsonData["CGlowProperty"]["m_iGlowType"];
CGlowProperty.m_iGlowTeam = jsonData["CGlowProperty"]["m_iGlowTeam"];
CGlowProperty.m_nGlowRange = jsonData["CGlowProperty"]["m_nGlowRange"];
CGlowProperty.m_nGlowRangeMin = jsonData["CGlowProperty"]["m_nGlowRangeMin"];
CGlowProperty.m_glowColorOverride = jsonData["CGlowProperty"]["m_glowColorOverride"];
CGlowProperty.m_bFlashing = jsonData["CGlowProperty"]["m_bFlashing"];
CGlowProperty.m_flGlowTime = jsonData["CGlowProperty"]["m_flGlowTime"];
CGlowProperty.m_flGlowStartTime = jsonData["CGlowProperty"]["m_flGlowStartTime"];
CGlowProperty.m_bEligibleForScreenHighlight = jsonData["CGlowProperty"]["m_bEligibleForScreenHighlight"];
CGlowProperty.m_bGlowing = jsonData["CGlowProperty"]["m_bGlowing"];

// Atribuições para C_TriggerPhysics
// C_TriggerPhysics Offsets
C_TriggerPhysics.m_gravityScale = jsonData["C_TriggerPhysics"]["m_gravityScale"];
C_TriggerPhysics.m_linearLimit = jsonData["C_TriggerPhysics"]["m_linearLimit"];
C_TriggerPhysics.m_linearDamping = jsonData["C_TriggerPhysics"]["m_linearDamping"];
C_TriggerPhysics.m_angularLimit = jsonData["C_TriggerPhysics"]["m_angularLimit"];
C_TriggerPhysics.m_angularDamping = jsonData["C_TriggerPhysics"]["m_angularDamping"];
C_TriggerPhysics.m_linearForce = jsonData["C_TriggerPhysics"]["m_linearForce"];
C_TriggerPhysics.m_flFrequency = jsonData["C_TriggerPhysics"]["m_flFrequency"];
C_TriggerPhysics.m_flDampingRatio = jsonData["C_TriggerPhysics"]["m_flDampingRatio"];
C_TriggerPhysics.m_vecLinearForcePointAt = jsonData["C_TriggerPhysics"]["m_vecLinearForcePointAt"];
C_TriggerPhysics.m_bCollapseToForcePoint = jsonData["C_TriggerPhysics"]["m_bCollapseToForcePoint"];
C_TriggerPhysics.m_vecLinearForcePointAtWorld = jsonData["C_TriggerPhysics"]["m_vecLinearForcePointAtWorld"];
C_TriggerPhysics.m_vecLinearForceDirection = jsonData["C_TriggerPhysics"]["m_vecLinearForceDirection"];
C_TriggerPhysics.m_bConvertToDebrisWhenPossible = jsonData["C_TriggerPhysics"]["m_bConvertToDebrisWhenPossible"];

// Atribuições para CCSPlayer_HostageServices
// CCSPlayer_HostageServices Offsets
CCSPlayer_HostageServices.m_hCarriedHostage = jsonData["CCSPlayer_HostageServices"]["m_hCarriedHostage"];
CCSPlayer_HostageServices.m_hCarriedHostageProp = jsonData["CCSPlayer_HostageServices"]["m_hCarriedHostageProp"];

// Atribuições para C_EnvCubemap
// C_EnvCubemap Offsets
C_EnvCubemap.m_Entity_hCubemapTexture = jsonData["C_EnvCubemap"]["m_Entity_hCubemapTexture"];
C_EnvCubemap.m_Entity_bCustomCubemapTexture = jsonData["C_EnvCubemap"]["m_Entity_bCustomCubemapTexture"];
C_EnvCubemap.m_Entity_flInfluenceRadius = jsonData["C_EnvCubemap"]["m_Entity_flInfluenceRadius"];
C_EnvCubemap.m_Entity_vBoxProjectMins = jsonData["C_EnvCubemap"]["m_Entity_vBoxProjectMins"];
C_EnvCubemap.m_Entity_vBoxProjectMaxs = jsonData["C_EnvCubemap"]["m_Entity_vBoxProjectMaxs"];
C_EnvCubemap.m_Entity_bMoveable = jsonData["C_EnvCubemap"]["m_Entity_bMoveable"];
C_EnvCubemap.m_Entity_nHandshake = jsonData["C_EnvCubemap"]["m_Entity_nHandshake"];
C_EnvCubemap.m_Entity_nEnvCubeMapArrayIndex = jsonData["C_EnvCubemap"]["m_Entity_nEnvCubeMapArrayIndex"];
C_EnvCubemap.m_Entity_nPriority = jsonData["C_EnvCubemap"]["m_Entity_nPriority"];
C_EnvCubemap.m_Entity_flEdgeFadeDist = jsonData["C_EnvCubemap"]["m_Entity_flEdgeFadeDist"];
C_EnvCubemap.m_Entity_vEdgeFadeDists = jsonData["C_EnvCubemap"]["m_Entity_vEdgeFadeDists"];
C_EnvCubemap.m_Entity_flDiffuseScale = jsonData["C_EnvCubemap"]["m_Entity_flDiffuseScale"];
C_EnvCubemap.m_Entity_bStartDisabled = jsonData["C_EnvCubemap"]["m_Entity_bStartDisabled"];
C_EnvCubemap.m_Entity_bDefaultEnvMap = jsonData["C_EnvCubemap"]["m_Entity_bDefaultEnvMap"];
C_EnvCubemap.m_Entity_bDefaultSpecEnvMap = jsonData["C_EnvCubemap"]["m_Entity_bDefaultSpecEnvMap"];
C_EnvCubemap.m_Entity_bIndoorCubeMap = jsonData["C_EnvCubemap"]["m_Entity_bIndoorCubeMap"];
C_EnvCubemap.m_Entity_bCopyDiffuseFromDefaultCubemap = jsonData["C_EnvCubemap"]["m_Entity_bCopyDiffuseFromDefaultCubemap"];
C_EnvCubemap.m_Entity_bEnabled = jsonData["C_EnvCubemap"]["m_Entity_bEnabled"];

// Atribuições para C_PredictedViewModel
// C_PredictedViewModel Offsets
C_PredictedViewModel.m_vPredictedLagOffset = jsonData["C_PredictedViewModel"]["m_vPredictedLagOffset"];
C_PredictedViewModel.m_targetSpeed = jsonData["C_PredictedViewModel"]["m_targetSpeed"];
C_PredictedViewModel.m_currentSpeed = jsonData["C_PredictedViewModel"]["m_currentSpeed"];

// Atribuições para C_PointValueRemapper
// C_PointValueRemapper Offsets
C_PointValueRemapper.m_bDisabled = jsonData["C_PointValueRemapper"]["m_bDisabled"];
C_PointValueRemapper.m_bDisabledOld = jsonData["C_PointValueRemapper"]["m_bDisabledOld"];
C_PointValueRemapper.m_bUpdateOnClient = jsonData["C_PointValueRemapper"]["m_bUpdateOnClient"];
C_PointValueRemapper.m_nInputType = jsonData["C_PointValueRemapper"]["m_nInputType"];
C_PointValueRemapper.m_hRemapLineStart = jsonData["C_PointValueRemapper"]["m_hRemapLineStart"];
C_PointValueRemapper.m_hRemapLineEnd = jsonData["C_PointValueRemapper"]["m_hRemapLineEnd"];
C_PointValueRemapper.m_flMaximumChangePerSecond = jsonData["C_PointValueRemapper"]["m_flMaximumChangePerSecond"];
C_PointValueRemapper.m_flDisengageDistance = jsonData["C_PointValueRemapper"]["m_flDisengageDistance"];
C_PointValueRemapper.m_flEngageDistance = jsonData["C_PointValueRemapper"]["m_flEngageDistance"];
C_PointValueRemapper.m_bRequiresUseKey = jsonData["C_PointValueRemapper"]["m_bRequiresUseKey"];
C_PointValueRemapper.m_nOutputType = jsonData["C_PointValueRemapper"]["m_nOutputType"];
C_PointValueRemapper.m_hOutputEntities = jsonData["C_PointValueRemapper"]["m_hOutputEntities"];
C_PointValueRemapper.m_nHapticsType = jsonData["C_PointValueRemapper"]["m_nHapticsType"];
C_PointValueRemapper.m_nMomentumType = jsonData["C_PointValueRemapper"]["m_nMomentumType"];
C_PointValueRemapper.m_flMomentumModifier = jsonData["C_PointValueRemapper"]["m_flMomentumModifier"];
C_PointValueRemapper.m_flSnapValue = jsonData["C_PointValueRemapper"]["m_flSnapValue"];
C_PointValueRemapper.m_flCurrentMomentum = jsonData["C_PointValueRemapper"]["m_flCurrentMomentum"];
C_PointValueRemapper.m_nRatchetType = jsonData["C_PointValueRemapper"]["m_nRatchetType"];
C_PointValueRemapper.m_flRatchetOffset = jsonData["C_PointValueRemapper"]["m_flRatchetOffset"];
C_PointValueRemapper.m_flInputOffset = jsonData["C_PointValueRemapper"]["m_flInputOffset"];
C_PointValueRemapper.m_bEngaged = jsonData["C_PointValueRemapper"]["m_bEngaged"];
C_PointValueRemapper.m_bFirstUpdate = jsonData["C_PointValueRemapper"]["m_bFirstUpdate"];
C_PointValueRemapper.m_flPreviousValue = jsonData["C_PointValueRemapper"]["m_flPreviousValue"];
C_PointValueRemapper.m_flPreviousUpdateTickTime = jsonData["C_PointValueRemapper"]["m_flPreviousUpdateTickTime"];
C_PointValueRemapper.m_vecPreviousTestPoint = jsonData["C_PointValueRemapper"]["m_vecPreviousTestPoint"];

// Atribuições para C_ItemDogtags
// C_ItemDogtags Offsets
C_ItemDogtags.m_OwningPlayer = jsonData["C_ItemDogtags"]["m_OwningPlayer"];
C_ItemDogtags.m_KillingPlayer = jsonData["C_ItemDogtags"]["m_KillingPlayer"];

// Atribuições para C_SoundOpvarSetPointBase
// C_SoundOpvarSetPointBase Offsets
C_SoundOpvarSetPointBase.m_iszStackName = jsonData["C_SoundOpvarSetPointBase"]["m_iszStackName"];
C_SoundOpvarSetPointBase.m_iszOperatorName = jsonData["C_SoundOpvarSetPointBase"]["m_iszOperatorName"];
C_SoundOpvarSetPointBase.m_iszOpvarName = jsonData["C_SoundOpvarSetPointBase"]["m_iszOpvarName"];
C_SoundOpvarSetPointBase.m_iOpvarIndex = jsonData["C_SoundOpvarSetPointBase"]["m_iOpvarIndex"];
C_SoundOpvarSetPointBase.m_bUseAutoCompare = jsonData["C_SoundOpvarSetPointBase"]["m_bUseAutoCompare"];

// Atribuições para CCSPlayer_BuyServices
// CCSPlayer_BuyServices Offsets
CCSPlayer_BuyServices.m_vecSellbackPurchaseEntries = jsonData["CCSPlayer_BuyServices"]["m_vecSellbackPurchaseEntries"];

// Atribuições para C_WeaponTaser
// C_WeaponTaser Offsets
C_WeaponTaser.m_fFireTime = jsonData["C_WeaponTaser"]["m_fFireTime"];
C_WeaponTaser.m_nLastAttackTick = jsonData["C_WeaponTaser"]["m_nLastAttackTick"];

// Atribuições para C_Fists
// C_Fists Offsets
C_Fists.m_bPlayingUninterruptableAct = jsonData["C_Fists"]["m_bPlayingUninterruptableAct"];
C_Fists.m_nUninterruptableActivity = jsonData["C_Fists"]["m_nUninterruptableActivity"];

// Atribuições para CInfoDynamicShadowHintBox
// CInfoDynamicShadowHintBox Offsets
CInfoDynamicShadowHintBox.m_vBoxMins = jsonData["CInfoDynamicShadowHintBox"]["m_vBoxMins"];
CInfoDynamicShadowHintBox.m_vBoxMaxs = jsonData["CInfoDynamicShadowHintBox"]["m_vBoxMaxs"];

// Atribuições para C_EnvCubemapFog
// C_EnvCubemapFog Offsets
C_EnvCubemapFog.m_flEndDistance = jsonData["C_EnvCubemapFog"]["m_flEndDistance"];
C_EnvCubemapFog.m_flStartDistance = jsonData["C_EnvCubemapFog"]["m_flStartDistance"];
C_EnvCubemapFog.m_flFogFalloffExponent = jsonData["C_EnvCubemapFog"]["m_flFogFalloffExponent"];
C_EnvCubemapFog.m_bHeightFogEnabled = jsonData["C_EnvCubemapFog"]["m_bHeightFogEnabled"];
C_EnvCubemapFog.m_flFogHeightWidth = jsonData["C_EnvCubemapFog"]["m_flFogHeightWidth"];
C_EnvCubemapFog.m_flFogHeightEnd = jsonData["C_EnvCubemapFog"]["m_flFogHeightEnd"];
C_EnvCubemapFog.m_flFogHeightStart = jsonData["C_EnvCubemapFog"]["m_flFogHeightStart"];
C_EnvCubemapFog.m_flFogHeightExponent = jsonData["C_EnvCubemapFog"]["m_flFogHeightExponent"];
C_EnvCubemapFog.m_flLODBias = jsonData["C_EnvCubemapFog"]["m_flLODBias"];
C_EnvCubemapFog.m_bActive = jsonData["C_EnvCubemapFog"]["m_bActive"];
C_EnvCubemapFog.m_bStartDisabled = jsonData["C_EnvCubemapFog"]["m_bStartDisabled"];
C_EnvCubemapFog.m_flFogMaxOpacity = jsonData["C_EnvCubemapFog"]["m_flFogMaxOpacity"];
C_EnvCubemapFog.m_nCubemapSourceType = jsonData["C_EnvCubemapFog"]["m_nCubemapSourceType"];
C_EnvCubemapFog.m_hSkyMaterial = jsonData["C_EnvCubemapFog"]["m_hSkyMaterial"];
C_EnvCubemapFog.m_iszSkyEntity = jsonData["C_EnvCubemapFog"]["m_iszSkyEntity"];
C_EnvCubemapFog.m_hFogCubemapTexture = jsonData["C_EnvCubemapFog"]["m_hFogCubemapTexture"];
C_EnvCubemapFog.m_bHasHeightFogEnd = jsonData["C_EnvCubemapFog"]["m_bHasHeightFogEnd"];
C_EnvCubemapFog.m_bFirstTime = jsonData["C_EnvCubemapFog"]["m_bFirstTime"];

// Atribuições para CCollisionProperty
// CCollisionProperty Offsets
CCollisionProperty.m_collisionAttribute = jsonData["CCollisionProperty"]["m_collisionAttribute"];
CCollisionProperty.m_vecMins = jsonData["CCollisionProperty"]["m_vecMins"];
CCollisionProperty.m_vecMaxs = jsonData["CCollisionProperty"]["m_vecMaxs"];
CCollisionProperty.m_usSolidFlags = jsonData["CCollisionProperty"]["m_usSolidFlags"];
CCollisionProperty.m_nSolidType = jsonData["CCollisionProperty"]["m_nSolidType"];
CCollisionProperty.m_triggerBloat = jsonData["CCollisionProperty"]["m_triggerBloat"];
CCollisionProperty.m_nSurroundType = jsonData["CCollisionProperty"]["m_nSurroundType"];
CCollisionProperty.m_CollisionGroup = jsonData["CCollisionProperty"]["m_CollisionGroup"];
CCollisionProperty.m_nEnablePhysics = jsonData["CCollisionProperty"]["m_nEnablePhysics"];
CCollisionProperty.m_flBoundingRadius = jsonData["CCollisionProperty"]["m_flBoundingRadius"];
CCollisionProperty.m_vecSpecifiedSurroundingMins = jsonData["CCollisionProperty"]["m_vecSpecifiedSurroundingMins"];
CCollisionProperty.m_vecSpecifiedSurroundingMaxs = jsonData["CCollisionProperty"]["m_vecSpecifiedSurroundingMaxs"];
CCollisionProperty.m_vecSurroundingMaxs = jsonData["CCollisionProperty"]["m_vecSurroundingMaxs"];
CCollisionProperty.m_vecSurroundingMins = jsonData["CCollisionProperty"]["m_vecSurroundingMins"];
CCollisionProperty.m_vCapsuleCenter1 = jsonData["CCollisionProperty"]["m_vCapsuleCenter1"];
CCollisionProperty.m_vCapsuleCenter2 = jsonData["CCollisionProperty"]["m_vCapsuleCenter2"];
CCollisionProperty.m_flCapsuleRadius = jsonData["CCollisionProperty"]["m_flCapsuleRadius"];

// Atribuições para CNetworkedSequenceOperation
// CNetworkedSequenceOperation Offsets
CNetworkedSequenceOperation.m_hSequence = jsonData["CNetworkedSequenceOperation"]["m_hSequence"];
CNetworkedSequenceOperation.m_flPrevCycle = jsonData["CNetworkedSequenceOperation"]["m_flPrevCycle"];
CNetworkedSequenceOperation.m_flCycle = jsonData["CNetworkedSequenceOperation"]["m_flCycle"];
CNetworkedSequenceOperation.m_flWeight = jsonData["CNetworkedSequenceOperation"]["m_flWeight"];
CNetworkedSequenceOperation.m_bSequenceChangeNetworked = jsonData["CNetworkedSequenceOperation"]["m_bSequenceChangeNetworked"];
CNetworkedSequenceOperation.m_bDiscontinuity = jsonData["CNetworkedSequenceOperation"]["m_bDiscontinuity"];
CNetworkedSequenceOperation.m_flPrevCycleFromDiscontinuity = jsonData["CNetworkedSequenceOperation"]["m_flPrevCycleFromDiscontinuity"];
CNetworkedSequenceOperation.m_flPrevCycleForAnimEventDetection = jsonData["CNetworkedSequenceOperation"]["m_flPrevCycleForAnimEventDetection"];

// Atribuições para C_PlayerSprayDecal
// C_PlayerSprayDecal Offsets
C_PlayerSprayDecal.m_nUniqueID = jsonData["C_PlayerSprayDecal"]["m_nUniqueID"];
C_PlayerSprayDecal.m_unAccountID = jsonData["C_PlayerSprayDecal"]["m_unAccountID"];
C_PlayerSprayDecal.m_unTraceID = jsonData["C_PlayerSprayDecal"]["m_unTraceID"];
C_PlayerSprayDecal.m_rtGcTime = jsonData["C_PlayerSprayDecal"]["m_rtGcTime"];
C_PlayerSprayDecal.m_vecEndPos = jsonData["C_PlayerSprayDecal"]["m_vecEndPos"];
C_PlayerSprayDecal.m_vecStart = jsonData["C_PlayerSprayDecal"]["m_vecStart"];
C_PlayerSprayDecal.m_vecLeft = jsonData["C_PlayerSprayDecal"]["m_vecLeft"];
C_PlayerSprayDecal.m_vecNormal = jsonData["C_PlayerSprayDecal"]["m_vecNormal"];
C_PlayerSprayDecal.m_nPlayer = jsonData["C_PlayerSprayDecal"]["m_nPlayer"];
C_PlayerSprayDecal.m_nEntity = jsonData["C_PlayerSprayDecal"]["m_nEntity"];
C_PlayerSprayDecal.m_nHitbox = jsonData["C_PlayerSprayDecal"]["m_nHitbox"];
C_PlayerSprayDecal.m_flCreationTime = jsonData["C_PlayerSprayDecal"]["m_flCreationTime"];
C_PlayerSprayDecal.m_nTintID = jsonData["C_PlayerSprayDecal"]["m_nTintID"];
C_PlayerSprayDecal.m_nVersion = jsonData["C_PlayerSprayDecal"]["m_nVersion"];
C_PlayerSprayDecal.m_ubSignature = jsonData["C_PlayerSprayDecal"]["m_ubSignature"];
C_PlayerSprayDecal.m_SprayRenderHelper = jsonData["C_PlayerSprayDecal"]["m_SprayRenderHelper"];

// Atribuições para EntityRenderAttribute_t
// EntityRenderAttribute_t Offsets
EntityRenderAttribute_t.m_ID = jsonData["EntityRenderAttribute_t"]["m_ID"];
EntityRenderAttribute_t.m_Values = jsonData["EntityRenderAttribute_t"]["m_Values"];

// Atribuições para C_ShatterGlassShardPhysics
// C_ShatterGlassShardPhysics Offsets
C_ShatterGlassShardPhysics.m_ShardDesc = jsonData["C_ShatterGlassShardPhysics"]["m_ShardDesc"];

// Atribuições para C_LightEntity
// C_LightEntity Offsets
C_LightEntity.m_CLightComponent = jsonData["C_LightEntity"]["m_CLightComponent"];

// Atribuições para C_PlayerVisibility
// C_PlayerVisibility Offsets
C_PlayerVisibility.m_flVisibilityStrength = jsonData["C_PlayerVisibility"]["m_flVisibilityStrength"];
C_PlayerVisibility.m_flFogDistanceMultiplier = jsonData["C_PlayerVisibility"]["m_flFogDistanceMultiplier"];
C_PlayerVisibility.m_flFogMaxDensityMultiplier = jsonData["C_PlayerVisibility"]["m_flFogMaxDensityMultiplier"];
C_PlayerVisibility.m_flFadeTime = jsonData["C_PlayerVisibility"]["m_flFadeTime"];
C_PlayerVisibility.m_bStartDisabled = jsonData["C_PlayerVisibility"]["m_bStartDisabled"];
C_PlayerVisibility.m_bIsEnabled = jsonData["C_PlayerVisibility"]["m_bIsEnabled"];

// Atribuições para fogparams_t
// fogparams_t Offsets
fogparams_t.dirPrimary = jsonData["fogparams_t"]["dirPrimary"];
fogparams_t.colorPrimary = jsonData["fogparams_t"]["colorPrimary"];
fogparams_t.colorSecondary = jsonData["fogparams_t"]["colorSecondary"];
fogparams_t.colorPrimaryLerpTo = jsonData["fogparams_t"]["colorPrimaryLerpTo"];
fogparams_t.colorSecondaryLerpTo = jsonData["fogparams_t"]["colorSecondaryLerpTo"];
fogparams_t.start = jsonData["fogparams_t"]["start"];
fogparams_t.end = jsonData["fogparams_t"]["end"];
fogparams_t.farz = jsonData["fogparams_t"]["farz"];
fogparams_t.maxdensity = jsonData["fogparams_t"]["maxdensity"];
fogparams_t.exponent = jsonData["fogparams_t"]["exponent"];
fogparams_t.HDRColorScale = jsonData["fogparams_t"]["HDRColorScale"];
fogparams_t.skyboxFogFactor = jsonData["fogparams_t"]["skyboxFogFactor"];
fogparams_t.skyboxFogFactorLerpTo = jsonData["fogparams_t"]["skyboxFogFactorLerpTo"];
fogparams_t.startLerpTo = jsonData["fogparams_t"]["startLerpTo"];
fogparams_t.endLerpTo = jsonData["fogparams_t"]["endLerpTo"];
fogparams_t.maxdensityLerpTo = jsonData["fogparams_t"]["maxdensityLerpTo"];
fogparams_t.lerptime = jsonData["fogparams_t"]["lerptime"];
fogparams_t.duration = jsonData["fogparams_t"]["duration"];
fogparams_t.blendtobackground = jsonData["fogparams_t"]["blendtobackground"];
fogparams_t.scattering = jsonData["fogparams_t"]["scattering"];
fogparams_t.locallightscale = jsonData["fogparams_t"]["locallightscale"];
fogparams_t.enable = jsonData["fogparams_t"]["enable"];
fogparams_t.blend = jsonData["fogparams_t"]["blend"];
fogparams_t.m_bNoReflectionFog = jsonData["fogparams_t"]["m_bNoReflectionFog"];
fogparams_t.m_bPadding = jsonData["fogparams_t"]["m_bPadding"];

// Atribuições para C_BaseFlex
// C_BaseFlex Offsets
C_BaseFlex.m_flexWeight = jsonData["C_BaseFlex"]["m_flexWeight"];
C_BaseFlex.m_vLookTargetPosition = jsonData["C_BaseFlex"]["m_vLookTargetPosition"];
C_BaseFlex.m_blinktoggle = jsonData["C_BaseFlex"]["m_blinktoggle"];
C_BaseFlex.m_nLastFlexUpdateFrameCount = jsonData["C_BaseFlex"]["m_nLastFlexUpdateFrameCount"];
C_BaseFlex.m_CachedViewTarget = jsonData["C_BaseFlex"]["m_CachedViewTarget"];
C_BaseFlex.m_nNextSceneEventId = jsonData["C_BaseFlex"]["m_nNextSceneEventId"];
C_BaseFlex.m_iBlink = jsonData["C_BaseFlex"]["m_iBlink"];
C_BaseFlex.m_blinktime = jsonData["C_BaseFlex"]["m_blinktime"];
C_BaseFlex.m_prevblinktoggle = jsonData["C_BaseFlex"]["m_prevblinktoggle"];
C_BaseFlex.m_iJawOpen = jsonData["C_BaseFlex"]["m_iJawOpen"];
C_BaseFlex.m_flJawOpenAmount = jsonData["C_BaseFlex"]["m_flJawOpenAmount"];
C_BaseFlex.m_flBlinkAmount = jsonData["C_BaseFlex"]["m_flBlinkAmount"];
C_BaseFlex.m_iMouthAttachment = jsonData["C_BaseFlex"]["m_iMouthAttachment"];
C_BaseFlex.m_iEyeAttachment = jsonData["C_BaseFlex"]["m_iEyeAttachment"];
C_BaseFlex.m_bResetFlexWeightsOnModelChange = jsonData["C_BaseFlex"]["m_bResetFlexWeightsOnModelChange"];
C_BaseFlex.m_nEyeOcclusionRendererBone = jsonData["C_BaseFlex"]["m_nEyeOcclusionRendererBone"];
C_BaseFlex.m_mEyeOcclusionRendererCameraToBoneTransform = jsonData["C_BaseFlex"]["m_mEyeOcclusionRendererCameraToBoneTransform"];
C_BaseFlex.m_vEyeOcclusionRendererHalfExtent = jsonData["C_BaseFlex"]["m_vEyeOcclusionRendererHalfExtent"];
C_BaseFlex.m_PhonemeClasses = jsonData["C_BaseFlex"]["m_PhonemeClasses"];

// Atribuições para C_RagdollManager
// C_RagdollManager Offsets
C_RagdollManager.m_iCurrentMaxRagdollCount = jsonData["C_RagdollManager"]["m_iCurrentMaxRagdollCount"];

// Atribuições para C_EnvSky
// C_EnvSky Offsets
C_EnvSky.m_hSkyMaterial = jsonData["C_EnvSky"]["m_hSkyMaterial"];
C_EnvSky.m_hSkyMaterialLightingOnly = jsonData["C_EnvSky"]["m_hSkyMaterialLightingOnly"];
C_EnvSky.m_bStartDisabled = jsonData["C_EnvSky"]["m_bStartDisabled"];
C_EnvSky.m_vTintColor = jsonData["C_EnvSky"]["m_vTintColor"];
C_EnvSky.m_vTintColorLightingOnly = jsonData["C_EnvSky"]["m_vTintColorLightingOnly"];
C_EnvSky.m_flBrightnessScale = jsonData["C_EnvSky"]["m_flBrightnessScale"];
C_EnvSky.m_nFogType = jsonData["C_EnvSky"]["m_nFogType"];
C_EnvSky.m_flFogMinStart = jsonData["C_EnvSky"]["m_flFogMinStart"];
C_EnvSky.m_flFogMinEnd = jsonData["C_EnvSky"]["m_flFogMinEnd"];
C_EnvSky.m_flFogMaxStart = jsonData["C_EnvSky"]["m_flFogMaxStart"];
C_EnvSky.m_flFogMaxEnd = jsonData["C_EnvSky"]["m_flFogMaxEnd"];
C_EnvSky.m_bEnabled = jsonData["C_EnvSky"]["m_bEnabled"];

// Atribuições para C_DynamicProp
// C_DynamicProp Offsets
C_DynamicProp.m_bUseHitboxesForRenderBox = jsonData["C_DynamicProp"]["m_bUseHitboxesForRenderBox"];
C_DynamicProp.m_bUseAnimGraph = jsonData["C_DynamicProp"]["m_bUseAnimGraph"];
C_DynamicProp.m_pOutputAnimBegun = jsonData["C_DynamicProp"]["m_pOutputAnimBegun"];
C_DynamicProp.m_pOutputAnimOver = jsonData["C_DynamicProp"]["m_pOutputAnimOver"];
C_DynamicProp.m_pOutputAnimLoopCycleOver = jsonData["C_DynamicProp"]["m_pOutputAnimLoopCycleOver"];
C_DynamicProp.m_OnAnimReachedStart = jsonData["C_DynamicProp"]["m_OnAnimReachedStart"];
C_DynamicProp.m_OnAnimReachedEnd = jsonData["C_DynamicProp"]["m_OnAnimReachedEnd"];
C_DynamicProp.m_iszIdleAnim = jsonData["C_DynamicProp"]["m_iszIdleAnim"];
C_DynamicProp.m_nIdleAnimLoopMode = jsonData["C_DynamicProp"]["m_nIdleAnimLoopMode"];
C_DynamicProp.m_bRandomizeCycle = jsonData["C_DynamicProp"]["m_bRandomizeCycle"];
C_DynamicProp.m_bStartDisabled = jsonData["C_DynamicProp"]["m_bStartDisabled"];
C_DynamicProp.m_bFiredStartEndOutput = jsonData["C_DynamicProp"]["m_bFiredStartEndOutput"];
C_DynamicProp.m_bForceNpcExclude = jsonData["C_DynamicProp"]["m_bForceNpcExclude"];
C_DynamicProp.m_bCreateNonSolid = jsonData["C_DynamicProp"]["m_bCreateNonSolid"];
C_DynamicProp.m_bIsOverrideProp = jsonData["C_DynamicProp"]["m_bIsOverrideProp"];
C_DynamicProp.m_iInitialGlowState = jsonData["C_DynamicProp"]["m_iInitialGlowState"];
C_DynamicProp.m_nGlowRange = jsonData["C_DynamicProp"]["m_nGlowRange"];
C_DynamicProp.m_nGlowRangeMin = jsonData["C_DynamicProp"]["m_nGlowRangeMin"];
C_DynamicProp.m_glowColor = jsonData["C_DynamicProp"]["m_glowColor"];
C_DynamicProp.m_nGlowTeam = jsonData["C_DynamicProp"]["m_nGlowTeam"];
C_DynamicProp.m_iCachedFrameCount = jsonData["C_DynamicProp"]["m_iCachedFrameCount"];
C_DynamicProp.m_vecCachedRenderMins = jsonData["C_DynamicProp"]["m_vecCachedRenderMins"];
C_DynamicProp.m_vecCachedRenderMaxs = jsonData["C_DynamicProp"]["m_vecCachedRenderMaxs"];

// Atribuições para CPropDataComponent
// CPropDataComponent Offsets
CPropDataComponent.m_flDmgModBullet = jsonData["CPropDataComponent"]["m_flDmgModBullet"];
CPropDataComponent.m_flDmgModClub = jsonData["CPropDataComponent"]["m_flDmgModClub"];
CPropDataComponent.m_flDmgModExplosive = jsonData["CPropDataComponent"]["m_flDmgModExplosive"];
CPropDataComponent.m_flDmgModFire = jsonData["CPropDataComponent"]["m_flDmgModFire"];
CPropDataComponent.m_iszPhysicsDamageTableName = jsonData["CPropDataComponent"]["m_iszPhysicsDamageTableName"];
CPropDataComponent.m_iszBasePropData = jsonData["CPropDataComponent"]["m_iszBasePropData"];
CPropDataComponent.m_nInteractions = jsonData["CPropDataComponent"]["m_nInteractions"];
CPropDataComponent.m_bSpawnMotionDisabled = jsonData["CPropDataComponent"]["m_bSpawnMotionDisabled"];
CPropDataComponent.m_nDisableTakePhysicsDamageSpawnFlag = jsonData["CPropDataComponent"]["m_nDisableTakePhysicsDamageSpawnFlag"];
CPropDataComponent.m_nMotionDisabledSpawnFlag = jsonData["CPropDataComponent"]["m_nMotionDisabledSpawnFlag"];

// Atribuições para C_KeychainModule
// C_KeychainModule Offsets
C_KeychainModule.m_nKeychainDefID = jsonData["C_KeychainModule"]["m_nKeychainDefID"];
C_KeychainModule.m_nKeychainSeed = jsonData["C_KeychainModule"]["m_nKeychainSeed"];

// Atribuições para CCitadelSoundOpvarSetOBB
// CCitadelSoundOpvarSetOBB Offsets
CCitadelSoundOpvarSetOBB.m_iszStackName = jsonData["CCitadelSoundOpvarSetOBB"]["m_iszStackName"];
CCitadelSoundOpvarSetOBB.m_iszOperatorName = jsonData["CCitadelSoundOpvarSetOBB"]["m_iszOperatorName"];
CCitadelSoundOpvarSetOBB.m_iszOpvarName = jsonData["CCitadelSoundOpvarSetOBB"]["m_iszOpvarName"];
CCitadelSoundOpvarSetOBB.m_vDistanceInnerMins = jsonData["CCitadelSoundOpvarSetOBB"]["m_vDistanceInnerMins"];
CCitadelSoundOpvarSetOBB.m_vDistanceInnerMaxs = jsonData["CCitadelSoundOpvarSetOBB"]["m_vDistanceInnerMaxs"];
CCitadelSoundOpvarSetOBB.m_vDistanceOuterMins = jsonData["CCitadelSoundOpvarSetOBB"]["m_vDistanceOuterMins"];
CCitadelSoundOpvarSetOBB.m_vDistanceOuterMaxs = jsonData["CCitadelSoundOpvarSetOBB"]["m_vDistanceOuterMaxs"];
CCitadelSoundOpvarSetOBB.m_nAABBDirection = jsonData["CCitadelSoundOpvarSetOBB"]["m_nAABBDirection"];

// Atribuições para SellbackPurchaseEntry_t
// SellbackPurchaseEntry_t Offsets
SellbackPurchaseEntry_t.m_unDefIdx = jsonData["SellbackPurchaseEntry_t"]["m_unDefIdx"];
SellbackPurchaseEntry_t.m_nCost = jsonData["SellbackPurchaseEntry_t"]["m_nCost"];
SellbackPurchaseEntry_t.m_nPrevArmor = jsonData["SellbackPurchaseEntry_t"]["m_nPrevArmor"];
SellbackPurchaseEntry_t.m_bPrevHelmet = jsonData["SellbackPurchaseEntry_t"]["m_bPrevHelmet"];
SellbackPurchaseEntry_t.m_hItem = jsonData["SellbackPurchaseEntry_t"]["m_hItem"];

// Atribuições para C_LocalTempEntity
// C_LocalTempEntity Offsets
C_LocalTempEntity.flags = jsonData["C_LocalTempEntity"]["flags"];
C_LocalTempEntity.die = jsonData["C_LocalTempEntity"]["die"];
C_LocalTempEntity.m_flFrameMax = jsonData["C_LocalTempEntity"]["m_flFrameMax"];
C_LocalTempEntity.x = jsonData["C_LocalTempEntity"]["x"];
C_LocalTempEntity.y = jsonData["C_LocalTempEntity"]["y"];
C_LocalTempEntity.fadeSpeed = jsonData["C_LocalTempEntity"]["fadeSpeed"];
C_LocalTempEntity.bounceFactor = jsonData["C_LocalTempEntity"]["bounceFactor"];
C_LocalTempEntity.hitSound = jsonData["C_LocalTempEntity"]["hitSound"];
C_LocalTempEntity.priority = jsonData["C_LocalTempEntity"]["priority"];
C_LocalTempEntity.tentOffset = jsonData["C_LocalTempEntity"]["tentOffset"];
C_LocalTempEntity.m_vecTempEntAngVelocity = jsonData["C_LocalTempEntity"]["m_vecTempEntAngVelocity"];
C_LocalTempEntity.tempent_renderamt = jsonData["C_LocalTempEntity"]["tempent_renderamt"];
C_LocalTempEntity.m_vecNormal = jsonData["C_LocalTempEntity"]["m_vecNormal"];
C_LocalTempEntity.m_flSpriteScale = jsonData["C_LocalTempEntity"]["m_flSpriteScale"];
C_LocalTempEntity.m_nFlickerFrame = jsonData["C_LocalTempEntity"]["m_nFlickerFrame"];
C_LocalTempEntity.m_flFrameRate = jsonData["C_LocalTempEntity"]["m_flFrameRate"];
C_LocalTempEntity.m_flFrame = jsonData["C_LocalTempEntity"]["m_flFrame"];
C_LocalTempEntity.m_pszImpactEffect = jsonData["C_LocalTempEntity"]["m_pszImpactEffect"];
C_LocalTempEntity.m_pszParticleEffect = jsonData["C_LocalTempEntity"]["m_pszParticleEffect"];
C_LocalTempEntity.m_bParticleCollision = jsonData["C_LocalTempEntity"]["m_bParticleCollision"];
C_LocalTempEntity.m_iLastCollisionFrame = jsonData["C_LocalTempEntity"]["m_iLastCollisionFrame"];
C_LocalTempEntity.m_vLastCollisionOrigin = jsonData["C_LocalTempEntity"]["m_vLastCollisionOrigin"];
C_LocalTempEntity.m_vecTempEntVelocity = jsonData["C_LocalTempEntity"]["m_vecTempEntVelocity"];
C_LocalTempEntity.m_vecPrevAbsOrigin = jsonData["C_LocalTempEntity"]["m_vecPrevAbsOrigin"];
C_LocalTempEntity.m_vecTempEntAcceleration = jsonData["C_LocalTempEntity"]["m_vecTempEntAcceleration"];

// Atribuições para C_EnvWindShared__WindAveEvent_t
// C_EnvWindShared__WindAveEvent_t Offsets
C_EnvWindShared__WindAveEvent_t.m_flStartWindSpeed = jsonData["C_EnvWindShared__WindAveEvent_t"]["m_flStartWindSpeed"];
C_EnvWindShared__WindAveEvent_t.m_flAveWindSpeed = jsonData["C_EnvWindShared__WindAveEvent_t"]["m_flAveWindSpeed"];

// Atribuições para C_MolotovProjectile
// C_MolotovProjectile Offsets
C_MolotovProjectile.m_bIsIncGrenade = jsonData["C_MolotovProjectile"]["m_bIsIncGrenade"];

// Atribuições para CInfoOffscreenPanoramaTexture
// CInfoOffscreenPanoramaTexture Offsets
CInfoOffscreenPanoramaTexture.m_bDisabled = jsonData["CInfoOffscreenPanoramaTexture"]["m_bDisabled"];
CInfoOffscreenPanoramaTexture.m_nResolutionX = jsonData["CInfoOffscreenPanoramaTexture"]["m_nResolutionX"];
CInfoOffscreenPanoramaTexture.m_nResolutionY = jsonData["CInfoOffscreenPanoramaTexture"]["m_nResolutionY"];
CInfoOffscreenPanoramaTexture.m_szLayoutFileName = jsonData["CInfoOffscreenPanoramaTexture"]["m_szLayoutFileName"];
CInfoOffscreenPanoramaTexture.m_RenderAttrName = jsonData["CInfoOffscreenPanoramaTexture"]["m_RenderAttrName"];
CInfoOffscreenPanoramaTexture.m_TargetEntities = jsonData["CInfoOffscreenPanoramaTexture"]["m_TargetEntities"];
CInfoOffscreenPanoramaTexture.m_nTargetChangeCount = jsonData["CInfoOffscreenPanoramaTexture"]["m_nTargetChangeCount"];
CInfoOffscreenPanoramaTexture.m_vecCSSClasses = jsonData["CInfoOffscreenPanoramaTexture"]["m_vecCSSClasses"];
CInfoOffscreenPanoramaTexture.m_bCheckCSSClasses = jsonData["CInfoOffscreenPanoramaTexture"]["m_bCheckCSSClasses"];
CInfoOffscreenPanoramaTexture.m_szTargetsName = jsonData["CInfoOffscreenPanoramaTexture"]["m_szTargetsName"];
CInfoOffscreenPanoramaTexture.m_AdditionalTargetEntities = jsonData["CInfoOffscreenPanoramaTexture"]["m_AdditionalTargetEntities"];

// Atribuições para C_DynamicLight
// C_DynamicLight Offsets
C_DynamicLight.m_Flags = jsonData["C_DynamicLight"]["m_Flags"];
C_DynamicLight.m_LightStyle = jsonData["C_DynamicLight"]["m_LightStyle"];
C_DynamicLight.m_Radius = jsonData["C_DynamicLight"]["m_Radius"];
C_DynamicLight.m_Exponent = jsonData["C_DynamicLight"]["m_Exponent"];
C_DynamicLight.m_InnerAngle = jsonData["C_DynamicLight"]["m_InnerAngle"];
C_DynamicLight.m_OuterAngle = jsonData["C_DynamicLight"]["m_OuterAngle"];
C_DynamicLight.m_SpotRadius = jsonData["C_DynamicLight"]["m_SpotRadius"];

// Atribuições para C_CSWeaponBase
// C_CSWeaponBase Offsets
C_CSWeaponBase.m_flFireSequenceStartTime = jsonData["C_CSWeaponBase"]["m_flFireSequenceStartTime"];
C_CSWeaponBase.m_nFireSequenceStartTimeChange = jsonData["C_CSWeaponBase"]["m_nFireSequenceStartTimeChange"];
C_CSWeaponBase.m_nFireSequenceStartTimeAck = jsonData["C_CSWeaponBase"]["m_nFireSequenceStartTimeAck"];
C_CSWeaponBase.m_ePlayerFireEvent = jsonData["C_CSWeaponBase"]["m_ePlayerFireEvent"];
C_CSWeaponBase.m_ePlayerFireEventAttackType = jsonData["C_CSWeaponBase"]["m_ePlayerFireEventAttackType"];
C_CSWeaponBase.m_seqIdle = jsonData["C_CSWeaponBase"]["m_seqIdle"];
C_CSWeaponBase.m_seqFirePrimary = jsonData["C_CSWeaponBase"]["m_seqFirePrimary"];
C_CSWeaponBase.m_seqFireSecondary = jsonData["C_CSWeaponBase"]["m_seqFireSecondary"];
C_CSWeaponBase.m_thirdPersonFireSequences = jsonData["C_CSWeaponBase"]["m_thirdPersonFireSequences"];
C_CSWeaponBase.m_hCurrentThirdPersonSequence = jsonData["C_CSWeaponBase"]["m_hCurrentThirdPersonSequence"];
C_CSWeaponBase.m_nSilencerBoneIndex = jsonData["C_CSWeaponBase"]["m_nSilencerBoneIndex"];
C_CSWeaponBase.m_thirdPersonSequences = jsonData["C_CSWeaponBase"]["m_thirdPersonSequences"];
C_CSWeaponBase.m_ClientPreviousWeaponState = jsonData["C_CSWeaponBase"]["m_ClientPreviousWeaponState"];
C_CSWeaponBase.m_iState = jsonData["C_CSWeaponBase"]["m_iState"];
C_CSWeaponBase.m_flCrosshairDistance = jsonData["C_CSWeaponBase"]["m_flCrosshairDistance"];
C_CSWeaponBase.m_iAmmoLastCheck = jsonData["C_CSWeaponBase"]["m_iAmmoLastCheck"];
C_CSWeaponBase.m_iAlpha = jsonData["C_CSWeaponBase"]["m_iAlpha"];
C_CSWeaponBase.m_iScopeTextureID = jsonData["C_CSWeaponBase"]["m_iScopeTextureID"];
C_CSWeaponBase.m_iCrosshairTextureID = jsonData["C_CSWeaponBase"]["m_iCrosshairTextureID"];
C_CSWeaponBase.m_flGunAccuracyPositionDeprecated = jsonData["C_CSWeaponBase"]["m_flGunAccuracyPositionDeprecated"];
C_CSWeaponBase.m_nLastEmptySoundCmdNum = jsonData["C_CSWeaponBase"]["m_nLastEmptySoundCmdNum"];
C_CSWeaponBase.m_nViewModelIndex = jsonData["C_CSWeaponBase"]["m_nViewModelIndex"];
C_CSWeaponBase.m_bReloadsWithClips = jsonData["C_CSWeaponBase"]["m_bReloadsWithClips"];
C_CSWeaponBase.m_flTimeWeaponIdle = jsonData["C_CSWeaponBase"]["m_flTimeWeaponIdle"];
C_CSWeaponBase.m_bFireOnEmpty = jsonData["C_CSWeaponBase"]["m_bFireOnEmpty"];
C_CSWeaponBase.m_OnPlayerPickup = jsonData["C_CSWeaponBase"]["m_OnPlayerPickup"];
C_CSWeaponBase.m_weaponMode = jsonData["C_CSWeaponBase"]["m_weaponMode"];
C_CSWeaponBase.m_flTurningInaccuracyDelta = jsonData["C_CSWeaponBase"]["m_flTurningInaccuracyDelta"];
C_CSWeaponBase.m_vecTurningInaccuracyEyeDirLast = jsonData["C_CSWeaponBase"]["m_vecTurningInaccuracyEyeDirLast"];
C_CSWeaponBase.m_flTurningInaccuracy = jsonData["C_CSWeaponBase"]["m_flTurningInaccuracy"];
C_CSWeaponBase.m_fAccuracyPenalty = jsonData["C_CSWeaponBase"]["m_fAccuracyPenalty"];
C_CSWeaponBase.m_flLastAccuracyUpdateTime = jsonData["C_CSWeaponBase"]["m_flLastAccuracyUpdateTime"];
C_CSWeaponBase.m_fAccuracySmoothedForZoom = jsonData["C_CSWeaponBase"]["m_fAccuracySmoothedForZoom"];
C_CSWeaponBase.m_fScopeZoomEndTime = jsonData["C_CSWeaponBase"]["m_fScopeZoomEndTime"];
C_CSWeaponBase.m_iRecoilIndex = jsonData["C_CSWeaponBase"]["m_iRecoilIndex"];
C_CSWeaponBase.m_flRecoilIndex = jsonData["C_CSWeaponBase"]["m_flRecoilIndex"];
C_CSWeaponBase.m_bBurstMode = jsonData["C_CSWeaponBase"]["m_bBurstMode"];
C_CSWeaponBase.m_flLastBurstModeChangeTime = jsonData["C_CSWeaponBase"]["m_flLastBurstModeChangeTime"];
C_CSWeaponBase.m_nPostponeFireReadyTicks = jsonData["C_CSWeaponBase"]["m_nPostponeFireReadyTicks"];
C_CSWeaponBase.m_flPostponeFireReadyFrac = jsonData["C_CSWeaponBase"]["m_flPostponeFireReadyFrac"];
C_CSWeaponBase.m_bInReload = jsonData["C_CSWeaponBase"]["m_bInReload"];
C_CSWeaponBase.m_bReloadVisuallyComplete = jsonData["C_CSWeaponBase"]["m_bReloadVisuallyComplete"];
C_CSWeaponBase.m_flDroppedAtTime = jsonData["C_CSWeaponBase"]["m_flDroppedAtTime"];
C_CSWeaponBase.m_bIsHauledBack = jsonData["C_CSWeaponBase"]["m_bIsHauledBack"];
C_CSWeaponBase.m_bSilencerOn = jsonData["C_CSWeaponBase"]["m_bSilencerOn"];
C_CSWeaponBase.m_flTimeSilencerSwitchComplete = jsonData["C_CSWeaponBase"]["m_flTimeSilencerSwitchComplete"];
C_CSWeaponBase.m_iOriginalTeamNumber = jsonData["C_CSWeaponBase"]["m_iOriginalTeamNumber"];
C_CSWeaponBase.m_iMostRecentTeamNumber = jsonData["C_CSWeaponBase"]["m_iMostRecentTeamNumber"];
C_CSWeaponBase.m_bDroppedNearBuyZone = jsonData["C_CSWeaponBase"]["m_bDroppedNearBuyZone"];
C_CSWeaponBase.m_flNextAttackRenderTimeOffset = jsonData["C_CSWeaponBase"]["m_flNextAttackRenderTimeOffset"];
C_CSWeaponBase.m_bClearWeaponIdentifyingUGC = jsonData["C_CSWeaponBase"]["m_bClearWeaponIdentifyingUGC"];
C_CSWeaponBase.m_bVisualsDataSet = jsonData["C_CSWeaponBase"]["m_bVisualsDataSet"];
C_CSWeaponBase.m_bOldFirstPersonSpectatedState = jsonData["C_CSWeaponBase"]["m_bOldFirstPersonSpectatedState"];
C_CSWeaponBase.m_bUIWeapon = jsonData["C_CSWeaponBase"]["m_bUIWeapon"];
C_CSWeaponBase.m_nCustomEconReloadEventId = jsonData["C_CSWeaponBase"]["m_nCustomEconReloadEventId"];
C_CSWeaponBase.m_hPrevOwner = jsonData["C_CSWeaponBase"]["m_hPrevOwner"];
C_CSWeaponBase.m_nDropTick = jsonData["C_CSWeaponBase"]["m_nDropTick"];
C_CSWeaponBase.m_donated = jsonData["C_CSWeaponBase"]["m_donated"];
C_CSWeaponBase.m_fLastShotTime = jsonData["C_CSWeaponBase"]["m_fLastShotTime"];
C_CSWeaponBase.m_bWasOwnedByCT = jsonData["C_CSWeaponBase"]["m_bWasOwnedByCT"];
C_CSWeaponBase.m_bWasOwnedByTerrorist = jsonData["C_CSWeaponBase"]["m_bWasOwnedByTerrorist"];
C_CSWeaponBase.m_gunHeat = jsonData["C_CSWeaponBase"]["m_gunHeat"];
C_CSWeaponBase.m_smokeAttachments = jsonData["C_CSWeaponBase"]["m_smokeAttachments"];
C_CSWeaponBase.m_lastSmokeTime = jsonData["C_CSWeaponBase"]["m_lastSmokeTime"];
C_CSWeaponBase.m_flNextClientFireBulletTime = jsonData["C_CSWeaponBase"]["m_flNextClientFireBulletTime"];
C_CSWeaponBase.m_flNextClientFireBulletTime_Repredict = jsonData["C_CSWeaponBase"]["m_flNextClientFireBulletTime_Repredict"];
C_CSWeaponBase.m_IronSightController = jsonData["C_CSWeaponBase"]["m_IronSightController"];
C_CSWeaponBase.m_iIronSightMode = jsonData["C_CSWeaponBase"]["m_iIronSightMode"];
C_CSWeaponBase.m_flLastLOSTraceFailureTime = jsonData["C_CSWeaponBase"]["m_flLastLOSTraceFailureTime"];
C_CSWeaponBase.m_iNumEmptyAttacks = jsonData["C_CSWeaponBase"]["m_iNumEmptyAttacks"];
C_CSWeaponBase.m_flLastMagDropRequestTime = jsonData["C_CSWeaponBase"]["m_flLastMagDropRequestTime"];
C_CSWeaponBase.m_flWatTickOffset = jsonData["C_CSWeaponBase"]["m_flWatTickOffset"];

// Atribuições para C_FuncElectrifiedVolume
// C_FuncElectrifiedVolume Offsets
C_FuncElectrifiedVolume.m_nAmbientEffect = jsonData["C_FuncElectrifiedVolume"]["m_nAmbientEffect"];
C_FuncElectrifiedVolume.m_EffectName = jsonData["C_FuncElectrifiedVolume"]["m_EffectName"];
C_FuncElectrifiedVolume.m_bState = jsonData["C_FuncElectrifiedVolume"]["m_bState"];

// Atribuições para CCSPlayer_WeaponServices
// CCSPlayer_WeaponServices Offsets
CCSPlayer_WeaponServices.m_flNextAttack = jsonData["CCSPlayer_WeaponServices"]["m_flNextAttack"];
CCSPlayer_WeaponServices.m_bIsLookingAtWeapon = jsonData["CCSPlayer_WeaponServices"]["m_bIsLookingAtWeapon"];
CCSPlayer_WeaponServices.m_bIsHoldingLookAtWeapon = jsonData["CCSPlayer_WeaponServices"]["m_bIsHoldingLookAtWeapon"];
CCSPlayer_WeaponServices.m_nOldShootPositionHistoryCount = jsonData["CCSPlayer_WeaponServices"]["m_nOldShootPositionHistoryCount"];
CCSPlayer_WeaponServices.m_nOldInputHistoryCount = jsonData["CCSPlayer_WeaponServices"]["m_nOldInputHistoryCount"];
CCSPlayer_WeaponServices.m_hSavedWeapon = jsonData["CCSPlayer_WeaponServices"]["m_hSavedWeapon"];
CCSPlayer_WeaponServices.m_nTimeToMelee = jsonData["CCSPlayer_WeaponServices"]["m_nTimeToMelee"];
CCSPlayer_WeaponServices.m_nTimeToSecondary = jsonData["CCSPlayer_WeaponServices"]["m_nTimeToSecondary"];
CCSPlayer_WeaponServices.m_nTimeToPrimary = jsonData["CCSPlayer_WeaponServices"]["m_nTimeToPrimary"];
CCSPlayer_WeaponServices.m_nTimeToSniperRifle = jsonData["CCSPlayer_WeaponServices"]["m_nTimeToSniperRifle"];
CCSPlayer_WeaponServices.m_bIsBeingGivenItem = jsonData["CCSPlayer_WeaponServices"]["m_bIsBeingGivenItem"];
CCSPlayer_WeaponServices.m_bIsPickingUpItemWithUse = jsonData["CCSPlayer_WeaponServices"]["m_bIsPickingUpItemWithUse"];
CCSPlayer_WeaponServices.m_bPickedUpWeapon = jsonData["CCSPlayer_WeaponServices"]["m_bPickedUpWeapon"];
CCSPlayer_WeaponServices.m_bDisableAutoDeploy = jsonData["CCSPlayer_WeaponServices"]["m_bDisableAutoDeploy"];
CCSPlayer_WeaponServices.m_bIsPickingUpGroundWeapon = jsonData["CCSPlayer_WeaponServices"]["m_bIsPickingUpGroundWeapon"];

// Atribuições para C_EnvDetailController
// C_EnvDetailController Offsets
C_EnvDetailController.m_flFadeStartDist = jsonData["C_EnvDetailController"]["m_flFadeStartDist"];
C_EnvDetailController.m_flFadeEndDist = jsonData["C_EnvDetailController"]["m_flFadeEndDist"];

// Atribuições para C_BaseEntity
// C_BaseEntity Offsets
C_BaseEntity.m_CBodyComponent = jsonData["C_BaseEntity"]["m_CBodyComponent"];
C_BaseEntity.m_NetworkTransmitComponent = jsonData["C_BaseEntity"]["m_NetworkTransmitComponent"];
C_BaseEntity.m_nLastThinkTick = jsonData["C_BaseEntity"]["m_nLastThinkTick"];
C_BaseEntity.m_pGameSceneNode = jsonData["C_BaseEntity"]["m_pGameSceneNode"];
C_BaseEntity.m_pRenderComponent = jsonData["C_BaseEntity"]["m_pRenderComponent"];
C_BaseEntity.m_pCollision = jsonData["C_BaseEntity"]["m_pCollision"];
C_BaseEntity.m_iMaxHealth = jsonData["C_BaseEntity"]["m_iMaxHealth"];
C_BaseEntity.m_iHealth = jsonData["C_BaseEntity"]["m_iHealth"];
C_BaseEntity.m_lifeState = jsonData["C_BaseEntity"]["m_lifeState"];
C_BaseEntity.m_bTakesDamage = jsonData["C_BaseEntity"]["m_bTakesDamage"];
C_BaseEntity.m_nTakeDamageFlags = jsonData["C_BaseEntity"]["m_nTakeDamageFlags"];
C_BaseEntity.m_nPlatformType = jsonData["C_BaseEntity"]["m_nPlatformType"];
C_BaseEntity.m_ubInterpolationFrame = jsonData["C_BaseEntity"]["m_ubInterpolationFrame"];
C_BaseEntity.m_hSceneObjectController = jsonData["C_BaseEntity"]["m_hSceneObjectController"];
C_BaseEntity.m_nNoInterpolationTick = jsonData["C_BaseEntity"]["m_nNoInterpolationTick"];
C_BaseEntity.m_nVisibilityNoInterpolationTick = jsonData["C_BaseEntity"]["m_nVisibilityNoInterpolationTick"];
C_BaseEntity.m_flProxyRandomValue = jsonData["C_BaseEntity"]["m_flProxyRandomValue"];
C_BaseEntity.m_iEFlags = jsonData["C_BaseEntity"]["m_iEFlags"];
C_BaseEntity.m_nWaterType = jsonData["C_BaseEntity"]["m_nWaterType"];
C_BaseEntity.m_bInterpolateEvenWithNoModel = jsonData["C_BaseEntity"]["m_bInterpolateEvenWithNoModel"];
C_BaseEntity.m_bPredictionEligible = jsonData["C_BaseEntity"]["m_bPredictionEligible"];
C_BaseEntity.m_bApplyLayerMatchIDToModel = jsonData["C_BaseEntity"]["m_bApplyLayerMatchIDToModel"];
C_BaseEntity.m_tokLayerMatchID = jsonData["C_BaseEntity"]["m_tokLayerMatchID"];
C_BaseEntity.m_nSubclassID = jsonData["C_BaseEntity"]["m_nSubclassID"];
C_BaseEntity.m_nSimulationTick = jsonData["C_BaseEntity"]["m_nSimulationTick"];
C_BaseEntity.m_iCurrentThinkContext = jsonData["C_BaseEntity"]["m_iCurrentThinkContext"];
C_BaseEntity.m_aThinkFunctions = jsonData["C_BaseEntity"]["m_aThinkFunctions"];
C_BaseEntity.m_bDisabledContextThinks = jsonData["C_BaseEntity"]["m_bDisabledContextThinks"];
C_BaseEntity.m_flAnimTime = jsonData["C_BaseEntity"]["m_flAnimTime"];
C_BaseEntity.m_flSimulationTime = jsonData["C_BaseEntity"]["m_flSimulationTime"];
C_BaseEntity.m_nSceneObjectOverrideFlags = jsonData["C_BaseEntity"]["m_nSceneObjectOverrideFlags"];
C_BaseEntity.m_bHasSuccessfullyInterpolated = jsonData["C_BaseEntity"]["m_bHasSuccessfullyInterpolated"];
C_BaseEntity.m_bHasAddedVarsToInterpolation = jsonData["C_BaseEntity"]["m_bHasAddedVarsToInterpolation"];
C_BaseEntity.m_bRenderEvenWhenNotSuccessfullyInterpolated = jsonData["C_BaseEntity"]["m_bRenderEvenWhenNotSuccessfullyInterpolated"];
C_BaseEntity.m_nInterpolationLatchDirtyFlags = jsonData["C_BaseEntity"]["m_nInterpolationLatchDirtyFlags"];
C_BaseEntity.m_ListEntry = jsonData["C_BaseEntity"]["m_ListEntry"];
C_BaseEntity.m_flCreateTime = jsonData["C_BaseEntity"]["m_flCreateTime"];
C_BaseEntity.m_flSpeed = jsonData["C_BaseEntity"]["m_flSpeed"];
C_BaseEntity.m_EntClientFlags = jsonData["C_BaseEntity"]["m_EntClientFlags"];
C_BaseEntity.m_bClientSideRagdoll = jsonData["C_BaseEntity"]["m_bClientSideRagdoll"];
C_BaseEntity.m_iTeamNum = jsonData["C_BaseEntity"]["m_iTeamNum"];
C_BaseEntity.m_spawnflags = jsonData["C_BaseEntity"]["m_spawnflags"];
C_BaseEntity.m_nNextThinkTick = jsonData["C_BaseEntity"]["m_nNextThinkTick"];
C_BaseEntity.m_fFlags = jsonData["C_BaseEntity"]["m_fFlags"];
C_BaseEntity.m_vecAbsVelocity = jsonData["C_BaseEntity"]["m_vecAbsVelocity"];
C_BaseEntity.m_vecVelocity = jsonData["C_BaseEntity"]["m_vecVelocity"];
C_BaseEntity.m_vecBaseVelocity = jsonData["C_BaseEntity"]["m_vecBaseVelocity"];
C_BaseEntity.m_hEffectEntity = jsonData["C_BaseEntity"]["m_hEffectEntity"];
C_BaseEntity.m_hOwnerEntity = jsonData["C_BaseEntity"]["m_hOwnerEntity"];
C_BaseEntity.m_MoveCollide = jsonData["C_BaseEntity"]["m_MoveCollide"];
C_BaseEntity.m_MoveType = jsonData["C_BaseEntity"]["m_MoveType"];
C_BaseEntity.m_nActualMoveType = jsonData["C_BaseEntity"]["m_nActualMoveType"];
C_BaseEntity.m_flWaterLevel = jsonData["C_BaseEntity"]["m_flWaterLevel"];
C_BaseEntity.m_fEffects = jsonData["C_BaseEntity"]["m_fEffects"];
C_BaseEntity.m_hGroundEntity = jsonData["C_BaseEntity"]["m_hGroundEntity"];
C_BaseEntity.m_nGroundBodyIndex = jsonData["C_BaseEntity"]["m_nGroundBodyIndex"];
C_BaseEntity.m_flFriction = jsonData["C_BaseEntity"]["m_flFriction"];
C_BaseEntity.m_flElasticity = jsonData["C_BaseEntity"]["m_flElasticity"];
C_BaseEntity.m_flGravityScale = jsonData["C_BaseEntity"]["m_flGravityScale"];
C_BaseEntity.m_flTimeScale = jsonData["C_BaseEntity"]["m_flTimeScale"];
C_BaseEntity.m_bAnimatedEveryTick = jsonData["C_BaseEntity"]["m_bAnimatedEveryTick"];
C_BaseEntity.m_flNavIgnoreUntilTime = jsonData["C_BaseEntity"]["m_flNavIgnoreUntilTime"];
C_BaseEntity.m_hThink = jsonData["C_BaseEntity"]["m_hThink"];
C_BaseEntity.m_fBBoxVisFlags = jsonData["C_BaseEntity"]["m_fBBoxVisFlags"];
C_BaseEntity.m_bPredictable = jsonData["C_BaseEntity"]["m_bPredictable"];
C_BaseEntity.m_bRenderWithViewModels = jsonData["C_BaseEntity"]["m_bRenderWithViewModels"];
C_BaseEntity.m_nSplitUserPlayerPredictionSlot = jsonData["C_BaseEntity"]["m_nSplitUserPlayerPredictionSlot"];
C_BaseEntity.m_nFirstPredictableCommand = jsonData["C_BaseEntity"]["m_nFirstPredictableCommand"];
C_BaseEntity.m_nLastPredictableCommand = jsonData["C_BaseEntity"]["m_nLastPredictableCommand"];
C_BaseEntity.m_hOldMoveParent = jsonData["C_BaseEntity"]["m_hOldMoveParent"];
C_BaseEntity.m_Particles = jsonData["C_BaseEntity"]["m_Particles"];
C_BaseEntity.m_vecPredictedScriptFloats = jsonData["C_BaseEntity"]["m_vecPredictedScriptFloats"];
C_BaseEntity.m_vecPredictedScriptFloatIDs = jsonData["C_BaseEntity"]["m_vecPredictedScriptFloatIDs"];
C_BaseEntity.m_nNextScriptVarRecordID = jsonData["C_BaseEntity"]["m_nNextScriptVarRecordID"];
C_BaseEntity.m_vecAngVelocity = jsonData["C_BaseEntity"]["m_vecAngVelocity"];
C_BaseEntity.m_DataChangeEventRef = jsonData["C_BaseEntity"]["m_DataChangeEventRef"];
C_BaseEntity.m_dependencies = jsonData["C_BaseEntity"]["m_dependencies"];
C_BaseEntity.m_nCreationTick = jsonData["C_BaseEntity"]["m_nCreationTick"];
C_BaseEntity.m_bAnimTimeChanged = jsonData["C_BaseEntity"]["m_bAnimTimeChanged"];
C_BaseEntity.m_bSimulationTimeChanged = jsonData["C_BaseEntity"]["m_bSimulationTimeChanged"];
C_BaseEntity.m_sUniqueHammerID = jsonData["C_BaseEntity"]["m_sUniqueHammerID"];
C_BaseEntity.m_nBloodType = jsonData["C_BaseEntity"]["m_nBloodType"];

// Atribuições para CEntityIdentity
// CEntityIdentity Offsets
CEntityIdentity.m_nameStringableIndex = jsonData["CEntityIdentity"]["m_nameStringableIndex"];
CEntityIdentity.m_name = jsonData["CEntityIdentity"]["m_name"];
CEntityIdentity.m_designerName = jsonData["CEntityIdentity"]["m_designerName"];
CEntityIdentity.m_flags = jsonData["CEntityIdentity"]["m_flags"];
CEntityIdentity.m_worldGroupId = jsonData["CEntityIdentity"]["m_worldGroupId"];
CEntityIdentity.m_fDataObjectTypes = jsonData["CEntityIdentity"]["m_fDataObjectTypes"];
CEntityIdentity.m_PathIndex = jsonData["CEntityIdentity"]["m_PathIndex"];
CEntityIdentity.m_pPrev = jsonData["CEntityIdentity"]["m_pPrev"];
CEntityIdentity.m_pNext = jsonData["CEntityIdentity"]["m_pNext"];
CEntityIdentity.m_pPrevByClass = jsonData["CEntityIdentity"]["m_pPrevByClass"];
CEntityIdentity.m_pNextByClass = jsonData["CEntityIdentity"]["m_pNextByClass"];

// Atribuições para C_StattrakModule
// C_StattrakModule Offsets
C_StattrakModule.m_bKnife = jsonData["C_StattrakModule"]["m_bKnife"];

// Atribuições para C_PhysicsProp
// C_PhysicsProp Offsets
C_PhysicsProp.m_bAwake = jsonData["C_PhysicsProp"]["m_bAwake"];

// Atribuições para C_BreakableProp
// C_BreakableProp Offsets
C_BreakableProp.m_CPropDataComponent = jsonData["C_BreakableProp"]["m_CPropDataComponent"];
C_BreakableProp.m_OnBreak = jsonData["C_BreakableProp"]["m_OnBreak"];
C_BreakableProp.m_OnHealthChanged = jsonData["C_BreakableProp"]["m_OnHealthChanged"];
C_BreakableProp.m_OnTakeDamage = jsonData["C_BreakableProp"]["m_OnTakeDamage"];
C_BreakableProp.m_impactEnergyScale = jsonData["C_BreakableProp"]["m_impactEnergyScale"];
C_BreakableProp.m_iMinHealthDmg = jsonData["C_BreakableProp"]["m_iMinHealthDmg"];
C_BreakableProp.m_flPressureDelay = jsonData["C_BreakableProp"]["m_flPressureDelay"];
C_BreakableProp.m_flDefBurstScale = jsonData["C_BreakableProp"]["m_flDefBurstScale"];
C_BreakableProp.m_vDefBurstOffset = jsonData["C_BreakableProp"]["m_vDefBurstOffset"];
C_BreakableProp.m_hBreaker = jsonData["C_BreakableProp"]["m_hBreaker"];
C_BreakableProp.m_PerformanceMode = jsonData["C_BreakableProp"]["m_PerformanceMode"];
C_BreakableProp.m_flPreventDamageBeforeTime = jsonData["C_BreakableProp"]["m_flPreventDamageBeforeTime"];
C_BreakableProp.m_BreakableContentsType = jsonData["C_BreakableProp"]["m_BreakableContentsType"];
C_BreakableProp.m_strBreakableContentsPropGroupOverride = jsonData["C_BreakableProp"]["m_strBreakableContentsPropGroupOverride"];
C_BreakableProp.m_strBreakableContentsParticleOverride = jsonData["C_BreakableProp"]["m_strBreakableContentsParticleOverride"];
C_BreakableProp.m_bHasBreakPiecesOrCommands = jsonData["C_BreakableProp"]["m_bHasBreakPiecesOrCommands"];
C_BreakableProp.m_explodeDamage = jsonData["C_BreakableProp"]["m_explodeDamage"];
C_BreakableProp.m_explodeRadius = jsonData["C_BreakableProp"]["m_explodeRadius"];
C_BreakableProp.m_explosionDelay = jsonData["C_BreakableProp"]["m_explosionDelay"];
C_BreakableProp.m_explosionBuildupSound = jsonData["C_BreakableProp"]["m_explosionBuildupSound"];
C_BreakableProp.m_explosionCustomEffect = jsonData["C_BreakableProp"]["m_explosionCustomEffect"];
C_BreakableProp.m_explosionCustomSound = jsonData["C_BreakableProp"]["m_explosionCustomSound"];
C_BreakableProp.m_explosionModifier = jsonData["C_BreakableProp"]["m_explosionModifier"];
C_BreakableProp.m_hPhysicsAttacker = jsonData["C_BreakableProp"]["m_hPhysicsAttacker"];
C_BreakableProp.m_flLastPhysicsInfluenceTime = jsonData["C_BreakableProp"]["m_flLastPhysicsInfluenceTime"];
C_BreakableProp.m_flDefaultFadeScale = jsonData["C_BreakableProp"]["m_flDefaultFadeScale"];
C_BreakableProp.m_hLastAttacker = jsonData["C_BreakableProp"]["m_hLastAttacker"];
C_BreakableProp.m_hFlareEnt = jsonData["C_BreakableProp"]["m_hFlareEnt"];
C_BreakableProp.m_noGhostCollision = jsonData["C_BreakableProp"]["m_noGhostCollision"];

// Atribuições para C_Beam
// C_Beam Offsets
C_Beam.m_flFrameRate = jsonData["C_Beam"]["m_flFrameRate"];
C_Beam.m_flHDRColorScale = jsonData["C_Beam"]["m_flHDRColorScale"];
C_Beam.m_flFireTime = jsonData["C_Beam"]["m_flFireTime"];
C_Beam.m_flDamage = jsonData["C_Beam"]["m_flDamage"];
C_Beam.m_nNumBeamEnts = jsonData["C_Beam"]["m_nNumBeamEnts"];
C_Beam.m_queryHandleHalo = jsonData["C_Beam"]["m_queryHandleHalo"];
C_Beam.m_hBaseMaterial = jsonData["C_Beam"]["m_hBaseMaterial"];
C_Beam.m_nHaloIndex = jsonData["C_Beam"]["m_nHaloIndex"];
C_Beam.m_nBeamType = jsonData["C_Beam"]["m_nBeamType"];
C_Beam.m_nBeamFlags = jsonData["C_Beam"]["m_nBeamFlags"];
C_Beam.m_hAttachEntity = jsonData["C_Beam"]["m_hAttachEntity"];
C_Beam.m_nAttachIndex = jsonData["C_Beam"]["m_nAttachIndex"];
C_Beam.m_fWidth = jsonData["C_Beam"]["m_fWidth"];
C_Beam.m_fEndWidth = jsonData["C_Beam"]["m_fEndWidth"];
C_Beam.m_fFadeLength = jsonData["C_Beam"]["m_fFadeLength"];
C_Beam.m_fHaloScale = jsonData["C_Beam"]["m_fHaloScale"];
C_Beam.m_fAmplitude = jsonData["C_Beam"]["m_fAmplitude"];
C_Beam.m_fStartFrame = jsonData["C_Beam"]["m_fStartFrame"];
C_Beam.m_fSpeed = jsonData["C_Beam"]["m_fSpeed"];
C_Beam.m_flFrame = jsonData["C_Beam"]["m_flFrame"];
C_Beam.m_nClipStyle = jsonData["C_Beam"]["m_nClipStyle"];
C_Beam.m_bTurnedOff = jsonData["C_Beam"]["m_bTurnedOff"];
C_Beam.m_vecEndPos = jsonData["C_Beam"]["m_vecEndPos"];
C_Beam.m_hEndEntity = jsonData["C_Beam"]["m_hEndEntity"];

// Atribuições para C_CSGO_TeamPreviewCharacterPosition
// C_CSGO_TeamPreviewCharacterPosition Offsets
C_CSGO_TeamPreviewCharacterPosition.m_nVariant = jsonData["C_CSGO_TeamPreviewCharacterPosition"]["m_nVariant"];
C_CSGO_TeamPreviewCharacterPosition.m_nRandom = jsonData["C_CSGO_TeamPreviewCharacterPosition"]["m_nRandom"];
C_CSGO_TeamPreviewCharacterPosition.m_nOrdinal = jsonData["C_CSGO_TeamPreviewCharacterPosition"]["m_nOrdinal"];
C_CSGO_TeamPreviewCharacterPosition.m_sWeaponName = jsonData["C_CSGO_TeamPreviewCharacterPosition"]["m_sWeaponName"];
C_CSGO_TeamPreviewCharacterPosition.m_xuid = jsonData["C_CSGO_TeamPreviewCharacterPosition"]["m_xuid"];
C_CSGO_TeamPreviewCharacterPosition.m_agentItem = jsonData["C_CSGO_TeamPreviewCharacterPosition"]["m_agentItem"];
C_CSGO_TeamPreviewCharacterPosition.m_glovesItem = jsonData["C_CSGO_TeamPreviewCharacterPosition"]["m_glovesItem"];
C_CSGO_TeamPreviewCharacterPosition.m_weaponItem = jsonData["C_CSGO_TeamPreviewCharacterPosition"]["m_weaponItem"];

// Atribuições para C_EnvScreenOverlay
// C_EnvScreenOverlay Offsets
C_EnvScreenOverlay.m_iszOverlayNames = jsonData["C_EnvScreenOverlay"]["m_iszOverlayNames"];
C_EnvScreenOverlay.m_flOverlayTimes = jsonData["C_EnvScreenOverlay"]["m_flOverlayTimes"];
C_EnvScreenOverlay.m_flStartTime = jsonData["C_EnvScreenOverlay"]["m_flStartTime"];
C_EnvScreenOverlay.m_iDesiredOverlay = jsonData["C_EnvScreenOverlay"]["m_iDesiredOverlay"];
C_EnvScreenOverlay.m_bIsActive = jsonData["C_EnvScreenOverlay"]["m_bIsActive"];
C_EnvScreenOverlay.m_bWasActive = jsonData["C_EnvScreenOverlay"]["m_bWasActive"];
C_EnvScreenOverlay.m_iCachedDesiredOverlay = jsonData["C_EnvScreenOverlay"]["m_iCachedDesiredOverlay"];
C_EnvScreenOverlay.m_iCurrentOverlay = jsonData["C_EnvScreenOverlay"]["m_iCurrentOverlay"];
C_EnvScreenOverlay.m_flCurrentOverlayTime = jsonData["C_EnvScreenOverlay"]["m_flCurrentOverlayTime"];

// Atribuições para CCSWeaponBaseVData
// CCSWeaponBaseVData Offsets
CCSWeaponBaseVData.m_WeaponType = jsonData["CCSWeaponBaseVData"]["m_WeaponType"];
CCSWeaponBaseVData.m_WeaponCategory = jsonData["CCSWeaponBaseVData"]["m_WeaponCategory"];
CCSWeaponBaseVData.m_szViewModel = jsonData["CCSWeaponBaseVData"]["m_szViewModel"];
CCSWeaponBaseVData.m_szPlayerModel = jsonData["CCSWeaponBaseVData"]["m_szPlayerModel"];
CCSWeaponBaseVData.m_szWorldDroppedModel = jsonData["CCSWeaponBaseVData"]["m_szWorldDroppedModel"];
CCSWeaponBaseVData.m_szAimsightLensMaskModel = jsonData["CCSWeaponBaseVData"]["m_szAimsightLensMaskModel"];
CCSWeaponBaseVData.m_szMagazineModel = jsonData["CCSWeaponBaseVData"]["m_szMagazineModel"];
CCSWeaponBaseVData.m_szHeatEffect = jsonData["CCSWeaponBaseVData"]["m_szHeatEffect"];
CCSWeaponBaseVData.m_szEjectBrassEffect = jsonData["CCSWeaponBaseVData"]["m_szEjectBrassEffect"];
CCSWeaponBaseVData.m_szMuzzleFlashParticleAlt = jsonData["CCSWeaponBaseVData"]["m_szMuzzleFlashParticleAlt"];
CCSWeaponBaseVData.m_szMuzzleFlashThirdPersonParticle = jsonData["CCSWeaponBaseVData"]["m_szMuzzleFlashThirdPersonParticle"];
CCSWeaponBaseVData.m_szMuzzleFlashThirdPersonParticleAlt = jsonData["CCSWeaponBaseVData"]["m_szMuzzleFlashThirdPersonParticleAlt"];
CCSWeaponBaseVData.m_szTracerParticle = jsonData["CCSWeaponBaseVData"]["m_szTracerParticle"];
CCSWeaponBaseVData.m_GearSlot = jsonData["CCSWeaponBaseVData"]["m_GearSlot"];
CCSWeaponBaseVData.m_GearSlotPosition = jsonData["CCSWeaponBaseVData"]["m_GearSlotPosition"];
CCSWeaponBaseVData.m_DefaultLoadoutSlot = jsonData["CCSWeaponBaseVData"]["m_DefaultLoadoutSlot"];
CCSWeaponBaseVData.m_sWrongTeamMsg = jsonData["CCSWeaponBaseVData"]["m_sWrongTeamMsg"];
CCSWeaponBaseVData.m_nPrice = jsonData["CCSWeaponBaseVData"]["m_nPrice"];
CCSWeaponBaseVData.m_nKillAward = jsonData["CCSWeaponBaseVData"]["m_nKillAward"];
CCSWeaponBaseVData.m_nPrimaryReserveAmmoMax = jsonData["CCSWeaponBaseVData"]["m_nPrimaryReserveAmmoMax"];
CCSWeaponBaseVData.m_nSecondaryReserveAmmoMax = jsonData["CCSWeaponBaseVData"]["m_nSecondaryReserveAmmoMax"];
CCSWeaponBaseVData.m_bMeleeWeapon = jsonData["CCSWeaponBaseVData"]["m_bMeleeWeapon"];
CCSWeaponBaseVData.m_bHasBurstMode = jsonData["CCSWeaponBaseVData"]["m_bHasBurstMode"];
CCSWeaponBaseVData.m_bIsRevolver = jsonData["CCSWeaponBaseVData"]["m_bIsRevolver"];
CCSWeaponBaseVData.m_bCannotShootUnderwater = jsonData["CCSWeaponBaseVData"]["m_bCannotShootUnderwater"];
CCSWeaponBaseVData.m_szName = jsonData["CCSWeaponBaseVData"]["m_szName"];
CCSWeaponBaseVData.m_szAnimExtension = jsonData["CCSWeaponBaseVData"]["m_szAnimExtension"];
CCSWeaponBaseVData.m_eSilencerType = jsonData["CCSWeaponBaseVData"]["m_eSilencerType"];
CCSWeaponBaseVData.m_nCrosshairMinDistance = jsonData["CCSWeaponBaseVData"]["m_nCrosshairMinDistance"];
CCSWeaponBaseVData.m_nCrosshairDeltaDistance = jsonData["CCSWeaponBaseVData"]["m_nCrosshairDeltaDistance"];
CCSWeaponBaseVData.m_bIsFullAuto = jsonData["CCSWeaponBaseVData"]["m_bIsFullAuto"];
CCSWeaponBaseVData.m_nNumBullets = jsonData["CCSWeaponBaseVData"]["m_nNumBullets"];
CCSWeaponBaseVData.m_flCycleTime = jsonData["CCSWeaponBaseVData"]["m_flCycleTime"];
CCSWeaponBaseVData.m_flMaxSpeed = jsonData["CCSWeaponBaseVData"]["m_flMaxSpeed"];
CCSWeaponBaseVData.m_flSpread = jsonData["CCSWeaponBaseVData"]["m_flSpread"];
CCSWeaponBaseVData.m_flInaccuracyCrouch = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyCrouch"];
CCSWeaponBaseVData.m_flInaccuracyStand = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyStand"];
CCSWeaponBaseVData.m_flInaccuracyJump = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyJump"];
CCSWeaponBaseVData.m_flInaccuracyLand = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyLand"];
CCSWeaponBaseVData.m_flInaccuracyLadder = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyLadder"];
CCSWeaponBaseVData.m_flInaccuracyFire = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyFire"];
CCSWeaponBaseVData.m_flInaccuracyMove = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyMove"];
CCSWeaponBaseVData.m_flRecoilAngle = jsonData["CCSWeaponBaseVData"]["m_flRecoilAngle"];
CCSWeaponBaseVData.m_flRecoilAngleVariance = jsonData["CCSWeaponBaseVData"]["m_flRecoilAngleVariance"];
CCSWeaponBaseVData.m_flRecoilMagnitude = jsonData["CCSWeaponBaseVData"]["m_flRecoilMagnitude"];
CCSWeaponBaseVData.m_flRecoilMagnitudeVariance = jsonData["CCSWeaponBaseVData"]["m_flRecoilMagnitudeVariance"];
CCSWeaponBaseVData.m_nTracerFrequency = jsonData["CCSWeaponBaseVData"]["m_nTracerFrequency"];
CCSWeaponBaseVData.m_flInaccuracyJumpInitial = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyJumpInitial"];
CCSWeaponBaseVData.m_flInaccuracyJumpApex = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyJumpApex"];
CCSWeaponBaseVData.m_flInaccuracyReload = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyReload"];
CCSWeaponBaseVData.m_nRecoilSeed = jsonData["CCSWeaponBaseVData"]["m_nRecoilSeed"];
CCSWeaponBaseVData.m_nSpreadSeed = jsonData["CCSWeaponBaseVData"]["m_nSpreadSeed"];
CCSWeaponBaseVData.m_flTimeToIdleAfterFire = jsonData["CCSWeaponBaseVData"]["m_flTimeToIdleAfterFire"];
CCSWeaponBaseVData.m_flIdleInterval = jsonData["CCSWeaponBaseVData"]["m_flIdleInterval"];
CCSWeaponBaseVData.m_flAttackMovespeedFactor = jsonData["CCSWeaponBaseVData"]["m_flAttackMovespeedFactor"];
CCSWeaponBaseVData.m_flHeatPerShot = jsonData["CCSWeaponBaseVData"]["m_flHeatPerShot"];
CCSWeaponBaseVData.m_flInaccuracyPitchShift = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyPitchShift"];
CCSWeaponBaseVData.m_flInaccuracyAltSoundThreshold = jsonData["CCSWeaponBaseVData"]["m_flInaccuracyAltSoundThreshold"];
CCSWeaponBaseVData.m_flBotAudibleRange = jsonData["CCSWeaponBaseVData"]["m_flBotAudibleRange"];
CCSWeaponBaseVData.m_szUseRadioSubtitle = jsonData["CCSWeaponBaseVData"]["m_szUseRadioSubtitle"];
CCSWeaponBaseVData.m_bUnzoomsAfterShot = jsonData["CCSWeaponBaseVData"]["m_bUnzoomsAfterShot"];
CCSWeaponBaseVData.m_bHideViewModelWhenZoomed = jsonData["CCSWeaponBaseVData"]["m_bHideViewModelWhenZoomed"];
CCSWeaponBaseVData.m_nZoomLevels = jsonData["CCSWeaponBaseVData"]["m_nZoomLevels"];
CCSWeaponBaseVData.m_nZoomFOV1 = jsonData["CCSWeaponBaseVData"]["m_nZoomFOV1"];
CCSWeaponBaseVData.m_nZoomFOV2 = jsonData["CCSWeaponBaseVData"]["m_nZoomFOV2"];
CCSWeaponBaseVData.m_flZoomTime0 = jsonData["CCSWeaponBaseVData"]["m_flZoomTime0"];
CCSWeaponBaseVData.m_flZoomTime1 = jsonData["CCSWeaponBaseVData"]["m_flZoomTime1"];
CCSWeaponBaseVData.m_flZoomTime2 = jsonData["CCSWeaponBaseVData"]["m_flZoomTime2"];
CCSWeaponBaseVData.m_flIronSightPullUpSpeed = jsonData["CCSWeaponBaseVData"]["m_flIronSightPullUpSpeed"];
CCSWeaponBaseVData.m_flIronSightPutDownSpeed = jsonData["CCSWeaponBaseVData"]["m_flIronSightPutDownSpeed"];
CCSWeaponBaseVData.m_flIronSightFOV = jsonData["CCSWeaponBaseVData"]["m_flIronSightFOV"];
CCSWeaponBaseVData.m_flIronSightPivotForward = jsonData["CCSWeaponBaseVData"]["m_flIronSightPivotForward"];
CCSWeaponBaseVData.m_flIronSightLooseness = jsonData["CCSWeaponBaseVData"]["m_flIronSightLooseness"];
CCSWeaponBaseVData.m_angPivotAngle = jsonData["CCSWeaponBaseVData"]["m_angPivotAngle"];
CCSWeaponBaseVData.m_vecIronSightEyePos = jsonData["CCSWeaponBaseVData"]["m_vecIronSightEyePos"];
CCSWeaponBaseVData.m_nDamage = jsonData["CCSWeaponBaseVData"]["m_nDamage"];
CCSWeaponBaseVData.m_flHeadshotMultiplier = jsonData["CCSWeaponBaseVData"]["m_flHeadshotMultiplier"];
CCSWeaponBaseVData.m_flArmorRatio = jsonData["CCSWeaponBaseVData"]["m_flArmorRatio"];
CCSWeaponBaseVData.m_flPenetration = jsonData["CCSWeaponBaseVData"]["m_flPenetration"];
CCSWeaponBaseVData.m_flRange = jsonData["CCSWeaponBaseVData"]["m_flRange"];
CCSWeaponBaseVData.m_flRangeModifier = jsonData["CCSWeaponBaseVData"]["m_flRangeModifier"];
CCSWeaponBaseVData.m_flFlinchVelocityModifierLarge = jsonData["CCSWeaponBaseVData"]["m_flFlinchVelocityModifierLarge"];
CCSWeaponBaseVData.m_flFlinchVelocityModifierSmall = jsonData["CCSWeaponBaseVData"]["m_flFlinchVelocityModifierSmall"];
CCSWeaponBaseVData.m_flRecoveryTimeCrouch = jsonData["CCSWeaponBaseVData"]["m_flRecoveryTimeCrouch"];
CCSWeaponBaseVData.m_flRecoveryTimeStand = jsonData["CCSWeaponBaseVData"]["m_flRecoveryTimeStand"];
CCSWeaponBaseVData.m_flRecoveryTimeCrouchFinal = jsonData["CCSWeaponBaseVData"]["m_flRecoveryTimeCrouchFinal"];
CCSWeaponBaseVData.m_flRecoveryTimeStandFinal = jsonData["CCSWeaponBaseVData"]["m_flRecoveryTimeStandFinal"];
CCSWeaponBaseVData.m_nRecoveryTransitionStartBullet = jsonData["CCSWeaponBaseVData"]["m_nRecoveryTransitionStartBullet"];
CCSWeaponBaseVData.m_nRecoveryTransitionEndBullet = jsonData["CCSWeaponBaseVData"]["m_nRecoveryTransitionEndBullet"];
CCSWeaponBaseVData.m_flThrowVelocity = jsonData["CCSWeaponBaseVData"]["m_flThrowVelocity"];
CCSWeaponBaseVData.m_vSmokeColor = jsonData["CCSWeaponBaseVData"]["m_vSmokeColor"];
CCSWeaponBaseVData.m_szAnimClass = jsonData["CCSWeaponBaseVData"]["m_szAnimClass"];

// Atribuições para C_PointWorldText
// C_PointWorldText Offsets
C_PointWorldText.m_bForceRecreateNextUpdate = jsonData["C_PointWorldText"]["m_bForceRecreateNextUpdate"];
C_PointWorldText.m_messageText = jsonData["C_PointWorldText"]["m_messageText"];
C_PointWorldText.m_FontName = jsonData["C_PointWorldText"]["m_FontName"];
C_PointWorldText.m_bEnabled = jsonData["C_PointWorldText"]["m_bEnabled"];
C_PointWorldText.m_bFullbright = jsonData["C_PointWorldText"]["m_bFullbright"];
C_PointWorldText.m_flWorldUnitsPerPx = jsonData["C_PointWorldText"]["m_flWorldUnitsPerPx"];
C_PointWorldText.m_flFontSize = jsonData["C_PointWorldText"]["m_flFontSize"];
C_PointWorldText.m_flDepthOffset = jsonData["C_PointWorldText"]["m_flDepthOffset"];
C_PointWorldText.m_Color = jsonData["C_PointWorldText"]["m_Color"];
C_PointWorldText.m_nJustifyHorizontal = jsonData["C_PointWorldText"]["m_nJustifyHorizontal"];
C_PointWorldText.m_nJustifyVertical = jsonData["C_PointWorldText"]["m_nJustifyVertical"];
C_PointWorldText.m_nReorientMode = jsonData["C_PointWorldText"]["m_nReorientMode"];

// Atribuições para CCSPlayerController
// CCSPlayerController Offsets
CCSPlayerController.m_pInGameMoneyServices = jsonData["CCSPlayerController"]["m_pInGameMoneyServices"];
CCSPlayerController.m_pInventoryServices = jsonData["CCSPlayerController"]["m_pInventoryServices"];
CCSPlayerController.m_pActionTrackingServices = jsonData["CCSPlayerController"]["m_pActionTrackingServices"];
CCSPlayerController.m_pDamageServices = jsonData["CCSPlayerController"]["m_pDamageServices"];
CCSPlayerController.m_iPing = jsonData["CCSPlayerController"]["m_iPing"];
CCSPlayerController.m_bHasCommunicationAbuseMute = jsonData["CCSPlayerController"]["m_bHasCommunicationAbuseMute"];
CCSPlayerController.m_szCrosshairCodes = jsonData["CCSPlayerController"]["m_szCrosshairCodes"];
CCSPlayerController.m_iPendingTeamNum = jsonData["CCSPlayerController"]["m_iPendingTeamNum"];
CCSPlayerController.m_flForceTeamTime = jsonData["CCSPlayerController"]["m_flForceTeamTime"];
CCSPlayerController.m_iCompTeammateColor = jsonData["CCSPlayerController"]["m_iCompTeammateColor"];
CCSPlayerController.m_bEverPlayedOnTeam = jsonData["CCSPlayerController"]["m_bEverPlayedOnTeam"];
CCSPlayerController.m_flPreviousForceJoinTeamTime = jsonData["CCSPlayerController"]["m_flPreviousForceJoinTeamTime"];
CCSPlayerController.m_szClan = jsonData["CCSPlayerController"]["m_szClan"];
CCSPlayerController.m_sSanitizedPlayerName = jsonData["CCSPlayerController"]["m_sSanitizedPlayerName"];
CCSPlayerController.m_iCoachingTeam = jsonData["CCSPlayerController"]["m_iCoachingTeam"];
CCSPlayerController.m_nPlayerDominated = jsonData["CCSPlayerController"]["m_nPlayerDominated"];
CCSPlayerController.m_nPlayerDominatingMe = jsonData["CCSPlayerController"]["m_nPlayerDominatingMe"];
CCSPlayerController.m_iCompetitiveRanking = jsonData["CCSPlayerController"]["m_iCompetitiveRanking"];
CCSPlayerController.m_iCompetitiveWins = jsonData["CCSPlayerController"]["m_iCompetitiveWins"];
CCSPlayerController.m_iCompetitiveRankType = jsonData["CCSPlayerController"]["m_iCompetitiveRankType"];
CCSPlayerController.m_iCompetitiveRankingPredicted_Win = jsonData["CCSPlayerController"]["m_iCompetitiveRankingPredicted_Win"];
CCSPlayerController.m_iCompetitiveRankingPredicted_Loss = jsonData["CCSPlayerController"]["m_iCompetitiveRankingPredicted_Loss"];
CCSPlayerController.m_iCompetitiveRankingPredicted_Tie = jsonData["CCSPlayerController"]["m_iCompetitiveRankingPredicted_Tie"];
CCSPlayerController.m_nEndMatchNextMapVote = jsonData["CCSPlayerController"]["m_nEndMatchNextMapVote"];
CCSPlayerController.m_unActiveQuestId = jsonData["CCSPlayerController"]["m_unActiveQuestId"];
CCSPlayerController.m_nQuestProgressReason = jsonData["CCSPlayerController"]["m_nQuestProgressReason"];
CCSPlayerController.m_unPlayerTvControlFlags = jsonData["CCSPlayerController"]["m_unPlayerTvControlFlags"];
CCSPlayerController.m_iDraftIndex = jsonData["CCSPlayerController"]["m_iDraftIndex"];
CCSPlayerController.m_msQueuedModeDisconnectionTimestamp = jsonData["CCSPlayerController"]["m_msQueuedModeDisconnectionTimestamp"];
CCSPlayerController.m_uiAbandonRecordedReason = jsonData["CCSPlayerController"]["m_uiAbandonRecordedReason"];
CCSPlayerController.m_bCannotBeKicked = jsonData["CCSPlayerController"]["m_bCannotBeKicked"];
CCSPlayerController.m_bEverFullyConnected = jsonData["CCSPlayerController"]["m_bEverFullyConnected"];
CCSPlayerController.m_bAbandonAllowsSurrender = jsonData["CCSPlayerController"]["m_bAbandonAllowsSurrender"];
CCSPlayerController.m_bAbandonOffersInstantSurrender = jsonData["CCSPlayerController"]["m_bAbandonOffersInstantSurrender"];
CCSPlayerController.m_bDisconnection1MinWarningPrinted = jsonData["CCSPlayerController"]["m_bDisconnection1MinWarningPrinted"];
CCSPlayerController.m_bScoreReported = jsonData["CCSPlayerController"]["m_bScoreReported"];
CCSPlayerController.m_nDisconnectionTick = jsonData["CCSPlayerController"]["m_nDisconnectionTick"];
CCSPlayerController.m_bControllingBot = jsonData["CCSPlayerController"]["m_bControllingBot"];
CCSPlayerController.m_bHasControlledBotThisRound = jsonData["CCSPlayerController"]["m_bHasControlledBotThisRound"];
CCSPlayerController.m_bHasBeenControlledByPlayerThisRound = jsonData["CCSPlayerController"]["m_bHasBeenControlledByPlayerThisRound"];
CCSPlayerController.m_nBotsControlledThisRound = jsonData["CCSPlayerController"]["m_nBotsControlledThisRound"];
CCSPlayerController.m_bCanControlObservedBot = jsonData["CCSPlayerController"]["m_bCanControlObservedBot"];
CCSPlayerController.m_hPlayerPawn = jsonData["CCSPlayerController"]["m_hPlayerPawn"];
CCSPlayerController.m_hObserverPawn = jsonData["CCSPlayerController"]["m_hObserverPawn"];
CCSPlayerController.m_bPawnIsAlive = jsonData["CCSPlayerController"]["m_bPawnIsAlive"];
CCSPlayerController.m_iPawnHealth = jsonData["CCSPlayerController"]["m_iPawnHealth"];
CCSPlayerController.m_iPawnArmor = jsonData["CCSPlayerController"]["m_iPawnArmor"];
CCSPlayerController.m_bPawnHasDefuser = jsonData["CCSPlayerController"]["m_bPawnHasDefuser"];
CCSPlayerController.m_bPawnHasHelmet = jsonData["CCSPlayerController"]["m_bPawnHasHelmet"];
CCSPlayerController.m_nPawnCharacterDefIndex = jsonData["CCSPlayerController"]["m_nPawnCharacterDefIndex"];
CCSPlayerController.m_iPawnLifetimeStart = jsonData["CCSPlayerController"]["m_iPawnLifetimeStart"];
CCSPlayerController.m_iPawnLifetimeEnd = jsonData["CCSPlayerController"]["m_iPawnLifetimeEnd"];
CCSPlayerController.m_iPawnBotDifficulty = jsonData["CCSPlayerController"]["m_iPawnBotDifficulty"];
CCSPlayerController.m_hOriginalControllerOfCurrentPawn = jsonData["CCSPlayerController"]["m_hOriginalControllerOfCurrentPawn"];
CCSPlayerController.m_iScore = jsonData["CCSPlayerController"]["m_iScore"];
CCSPlayerController.m_vecKills = jsonData["CCSPlayerController"]["m_vecKills"];
CCSPlayerController.m_bMvpNoMusic = jsonData["CCSPlayerController"]["m_bMvpNoMusic"];
CCSPlayerController.m_eMvpReason = jsonData["CCSPlayerController"]["m_eMvpReason"];
CCSPlayerController.m_iMusicKitID = jsonData["CCSPlayerController"]["m_iMusicKitID"];
CCSPlayerController.m_iMusicKitMVPs = jsonData["CCSPlayerController"]["m_iMusicKitMVPs"];
CCSPlayerController.m_iMVPs = jsonData["CCSPlayerController"]["m_iMVPs"];
CCSPlayerController.m_bIsPlayerNameDirty = jsonData["CCSPlayerController"]["m_bIsPlayerNameDirty"];
CCSPlayerController.m_bAttemptedToGetColor = jsonData["CCSPlayerController"]["m_bAttemptedToGetColor"];
CCSPlayerController.m_iTeammatePreferredColor = jsonData["CCSPlayerController"]["m_iTeammatePreferredColor"];
CCSPlayerController.m_bTeamChanged = jsonData["CCSPlayerController"]["m_bTeamChanged"];
CCSPlayerController.m_bInSwitchTeam = jsonData["CCSPlayerController"]["m_bInSwitchTeam"];
CCSPlayerController.m_bHasSeenJoinGame = jsonData["CCSPlayerController"]["m_bHasSeenJoinGame"];
CCSPlayerController.m_bJustBecameSpectator = jsonData["CCSPlayerController"]["m_bJustBecameSpectator"];
CCSPlayerController.m_bSwitchTeamsOnNextRoundReset = jsonData["CCSPlayerController"]["m_bSwitchTeamsOnNextRoundReset"];
CCSPlayerController.m_bRemoveAllItemsOnNextRoundReset = jsonData["CCSPlayerController"]["m_bRemoveAllItemsOnNextRoundReset"];
CCSPlayerController.m_szClanName = jsonData["CCSPlayerController"]["m_szClanName"];
CCSPlayerController.m_DesiredObserverMode = jsonData["CCSPlayerController"]["m_DesiredObserverMode"];
CCSPlayerController.m_hDesiredObserverTarget = jsonData["CCSPlayerController"]["m_hDesiredObserverTarget"];
CCSPlayerController.m_iRoundScore = jsonData["CCSPlayerController"]["m_iRoundScore"];
CCSPlayerController.m_iRoundsWon = jsonData["CCSPlayerController"]["m_iRoundsWon"];
CCSPlayerController.m_nUpdateCounter = jsonData["CCSPlayerController"]["m_nUpdateCounter"];
CCSPlayerController.m_flSmoothedPing = jsonData["CCSPlayerController"]["m_flSmoothedPing"];
CCSPlayerController.m_lastHeldVoteTimer = jsonData["CCSPlayerController"]["m_lastHeldVoteTimer"];
CCSPlayerController.m_bShowHints = jsonData["CCSPlayerController"]["m_bShowHints"];
CCSPlayerController.m_iNextTimeCheck = jsonData["CCSPlayerController"]["m_iNextTimeCheck"];
CCSPlayerController.m_bJustDidTeamKill = jsonData["CCSPlayerController"]["m_bJustDidTeamKill"];
CCSPlayerController.m_bPunishForTeamKill = jsonData["CCSPlayerController"]["m_bPunishForTeamKill"];
CCSPlayerController.m_bGaveTeamDamageWarning = jsonData["CCSPlayerController"]["m_bGaveTeamDamageWarning"];
CCSPlayerController.m_bGaveTeamDamageWarningThisRound = jsonData["CCSPlayerController"]["m_bGaveTeamDamageWarningThisRound"];
CCSPlayerController.m_dblLastReceivedPacketPlatFloatTime = jsonData["CCSPlayerController"]["m_dblLastReceivedPacketPlatFloatTime"];
CCSPlayerController.m_LastTeamDamageWarningTime = jsonData["CCSPlayerController"]["m_LastTeamDamageWarningTime"];
CCSPlayerController.m_LastTimePlayerWasDisconnectedForPawnsRemove = jsonData["CCSPlayerController"]["m_LastTimePlayerWasDisconnectedForPawnsRemove"];
CCSPlayerController.m_nSuspiciousHitCount = jsonData["CCSPlayerController"]["m_nSuspiciousHitCount"];
CCSPlayerController.m_nNonSuspiciousHitStreak = jsonData["CCSPlayerController"]["m_nNonSuspiciousHitStreak"];

// Atribuições para C_BasePropDoor
// C_BasePropDoor Offsets
C_BasePropDoor.m_eDoorState = jsonData["C_BasePropDoor"]["m_eDoorState"];
C_BasePropDoor.m_modelChanged = jsonData["C_BasePropDoor"]["m_modelChanged"];
C_BasePropDoor.m_bLocked = jsonData["C_BasePropDoor"]["m_bLocked"];
C_BasePropDoor.m_closedPosition = jsonData["C_BasePropDoor"]["m_closedPosition"];
C_BasePropDoor.m_closedAngles = jsonData["C_BasePropDoor"]["m_closedAngles"];
C_BasePropDoor.m_hMaster = jsonData["C_BasePropDoor"]["m_hMaster"];
C_BasePropDoor.m_vWhereToSetLightingOrigin = jsonData["C_BasePropDoor"]["m_vWhereToSetLightingOrigin"];

// Atribuições para C_NametagModule
// C_NametagModule Offsets
C_NametagModule.m_strNametagString = jsonData["C_NametagModule"]["m_strNametagString"];

// Atribuições para C_PhysPropClientside
// C_PhysPropClientside Offsets
C_PhysPropClientside.m_flTouchDelta = jsonData["C_PhysPropClientside"]["m_flTouchDelta"];
C_PhysPropClientside.m_fDeathTime = jsonData["C_PhysPropClientside"]["m_fDeathTime"];
C_PhysPropClientside.m_inertiaScale = jsonData["C_PhysPropClientside"]["m_inertiaScale"];
C_PhysPropClientside.m_vecDamagePosition = jsonData["C_PhysPropClientside"]["m_vecDamagePosition"];
C_PhysPropClientside.m_vecDamageDirection = jsonData["C_PhysPropClientside"]["m_vecDamageDirection"];
C_PhysPropClientside.m_nDamageType = jsonData["C_PhysPropClientside"]["m_nDamageType"];

// Atribuições para C_SoundAreaEntityBase
// C_SoundAreaEntityBase Offsets
C_SoundAreaEntityBase.m_bDisabled = jsonData["C_SoundAreaEntityBase"]["m_bDisabled"];
C_SoundAreaEntityBase.m_bWasEnabled = jsonData["C_SoundAreaEntityBase"]["m_bWasEnabled"];
C_SoundAreaEntityBase.m_iszSoundAreaType = jsonData["C_SoundAreaEntityBase"]["m_iszSoundAreaType"];
C_SoundAreaEntityBase.m_vPos = jsonData["C_SoundAreaEntityBase"]["m_vPos"];

// Atribuições para C_FogController
// C_FogController Offsets
C_FogController.m_fog = jsonData["C_FogController"]["m_fog"];
C_FogController.m_bUseAngles = jsonData["C_FogController"]["m_bUseAngles"];
C_FogController.m_iChangedVariables = jsonData["C_FogController"]["m_iChangedVariables"];

// Atribuições para CInfoWorldLayer
// CInfoWorldLayer Offsets
CInfoWorldLayer.m_pOutputOnEntitiesSpawned = jsonData["CInfoWorldLayer"]["m_pOutputOnEntitiesSpawned"];
CInfoWorldLayer.m_worldName = jsonData["CInfoWorldLayer"]["m_worldName"];
CInfoWorldLayer.m_layerName = jsonData["CInfoWorldLayer"]["m_layerName"];
CInfoWorldLayer.m_bWorldLayerVisible = jsonData["CInfoWorldLayer"]["m_bWorldLayerVisible"];
CInfoWorldLayer.m_bEntitiesSpawned = jsonData["CInfoWorldLayer"]["m_bEntitiesSpawned"];
CInfoWorldLayer.m_bCreateAsChildSpawnGroup = jsonData["CInfoWorldLayer"]["m_bCreateAsChildSpawnGroup"];
CInfoWorldLayer.m_hLayerSpawnGroup = jsonData["CInfoWorldLayer"]["m_hLayerSpawnGroup"];
CInfoWorldLayer.m_bWorldLayerActuallyVisible = jsonData["CInfoWorldLayer"]["m_bWorldLayerActuallyVisible"];

// Atribuições para C_PhysMagnet
// C_PhysMagnet Offsets
C_PhysMagnet.m_aAttachedObjectsFromServer = jsonData["C_PhysMagnet"]["m_aAttachedObjectsFromServer"];
C_PhysMagnet.m_aAttachedObjects = jsonData["C_PhysMagnet"]["m_aAttachedObjects"];

// Atribuições para C_FuncConveyor
// C_FuncConveyor Offsets
C_FuncConveyor.m_vecMoveDirEntitySpace = jsonData["C_FuncConveyor"]["m_vecMoveDirEntitySpace"];
C_FuncConveyor.m_flTargetSpeed = jsonData["C_FuncConveyor"]["m_flTargetSpeed"];
C_FuncConveyor.m_nTransitionStartTick = jsonData["C_FuncConveyor"]["m_nTransitionStartTick"];
C_FuncConveyor.m_nTransitionDurationTicks = jsonData["C_FuncConveyor"]["m_nTransitionDurationTicks"];
C_FuncConveyor.m_flTransitionStartSpeed = jsonData["C_FuncConveyor"]["m_flTransitionStartSpeed"];
C_FuncConveyor.m_hConveyorModels = jsonData["C_FuncConveyor"]["m_hConveyorModels"];
C_FuncConveyor.m_flCurrentConveyorOffset = jsonData["C_FuncConveyor"]["m_flCurrentConveyorOffset"];
C_FuncConveyor.m_flCurrentConveyorSpeed = jsonData["C_FuncConveyor"]["m_flCurrentConveyorSpeed"];

// Atribuições para CEntityInstance
// CEntityInstance Offsets
CEntityInstance.m_iszPrivateVScripts = jsonData["CEntityInstance"]["m_iszPrivateVScripts"];
CEntityInstance.m_pEntity = jsonData["CEntityInstance"]["m_pEntity"];
CEntityInstance.m_CScriptComponent = jsonData["CEntityInstance"]["m_CScriptComponent"];
CEntityInstance.m_bVisibleinPVS = jsonData["CEntityInstance"]["m_bVisibleinPVS"];

// Atribuições para ServerAuthoritativeWeaponSlot_t
// ServerAuthoritativeWeaponSlot_t Offsets
ServerAuthoritativeWeaponSlot_t.unClass = jsonData["ServerAuthoritativeWeaponSlot_t"]["unClass"];
ServerAuthoritativeWeaponSlot_t.unSlot = jsonData["ServerAuthoritativeWeaponSlot_t"]["unSlot"];
ServerAuthoritativeWeaponSlot_t.unItemDefIdx = jsonData["ServerAuthoritativeWeaponSlot_t"]["unItemDefIdx"];

// Atribuições para C_BaseViewModel
// C_BaseViewModel Offsets
C_BaseViewModel.m_vecLastFacing = jsonData["C_BaseViewModel"]["m_vecLastFacing"];
C_BaseViewModel.m_nViewModelIndex = jsonData["C_BaseViewModel"]["m_nViewModelIndex"];
C_BaseViewModel.m_nAnimationParity = jsonData["C_BaseViewModel"]["m_nAnimationParity"];
C_BaseViewModel.m_flAnimationStartTime = jsonData["C_BaseViewModel"]["m_flAnimationStartTime"];
C_BaseViewModel.m_hWeapon = jsonData["C_BaseViewModel"]["m_hWeapon"];
C_BaseViewModel.m_sVMName = jsonData["C_BaseViewModel"]["m_sVMName"];
C_BaseViewModel.m_sAnimationPrefix = jsonData["C_BaseViewModel"]["m_sAnimationPrefix"];
C_BaseViewModel.m_iCameraAttachment = jsonData["C_BaseViewModel"]["m_iCameraAttachment"];
C_BaseViewModel.m_vecLastCameraAngles = jsonData["C_BaseViewModel"]["m_vecLastCameraAngles"];
C_BaseViewModel.m_previousElapsedDuration = jsonData["C_BaseViewModel"]["m_previousElapsedDuration"];
C_BaseViewModel.m_previousCycle = jsonData["C_BaseViewModel"]["m_previousCycle"];
C_BaseViewModel.m_nOldAnimationParity = jsonData["C_BaseViewModel"]["m_nOldAnimationParity"];
C_BaseViewModel.m_hOldLayerSequence = jsonData["C_BaseViewModel"]["m_hOldLayerSequence"];
C_BaseViewModel.m_oldLayer = jsonData["C_BaseViewModel"]["m_oldLayer"];
C_BaseViewModel.m_oldLayerStartTime = jsonData["C_BaseViewModel"]["m_oldLayerStartTime"];
C_BaseViewModel.m_hControlPanel = jsonData["C_BaseViewModel"]["m_hControlPanel"];

// Atribuições para CGameSceneNode
// CGameSceneNode Offsets
CGameSceneNode.m_nodeToWorld = jsonData["CGameSceneNode"]["m_nodeToWorld"];
CGameSceneNode.m_pOwner = jsonData["CGameSceneNode"]["m_pOwner"];
CGameSceneNode.m_pParent = jsonData["CGameSceneNode"]["m_pParent"];
CGameSceneNode.m_pChild = jsonData["CGameSceneNode"]["m_pChild"];
CGameSceneNode.m_pNextSibling = jsonData["CGameSceneNode"]["m_pNextSibling"];
CGameSceneNode.m_hParent = jsonData["CGameSceneNode"]["m_hParent"];
CGameSceneNode.m_vecOrigin = jsonData["CGameSceneNode"]["m_vecOrigin"];
CGameSceneNode.m_angRotation = jsonData["CGameSceneNode"]["m_angRotation"];
CGameSceneNode.m_flScale = jsonData["CGameSceneNode"]["m_flScale"];
CGameSceneNode.m_vecAbsOrigin = jsonData["CGameSceneNode"]["m_vecAbsOrigin"];
CGameSceneNode.m_angAbsRotation = jsonData["CGameSceneNode"]["m_angAbsRotation"];
CGameSceneNode.m_flAbsScale = jsonData["CGameSceneNode"]["m_flAbsScale"];
CGameSceneNode.m_nParentAttachmentOrBone = jsonData["CGameSceneNode"]["m_nParentAttachmentOrBone"];
CGameSceneNode.m_bDebugAbsOriginChanges = jsonData["CGameSceneNode"]["m_bDebugAbsOriginChanges"];
CGameSceneNode.m_bDormant = jsonData["CGameSceneNode"]["m_bDormant"];
CGameSceneNode.m_bForceParentToBeNetworked = jsonData["CGameSceneNode"]["m_bForceParentToBeNetworked"];
CGameSceneNode.m_bDirtyHierarchy = jsonData["CGameSceneNode"]["m_bDirtyHierarchy"];
CGameSceneNode.m_bDirtyBoneMergeInfo = jsonData["CGameSceneNode"]["m_bDirtyBoneMergeInfo"];
CGameSceneNode.m_bNetworkedPositionChanged = jsonData["CGameSceneNode"]["m_bNetworkedPositionChanged"];
CGameSceneNode.m_bNetworkedAnglesChanged = jsonData["CGameSceneNode"]["m_bNetworkedAnglesChanged"];
CGameSceneNode.m_bNetworkedScaleChanged = jsonData["CGameSceneNode"]["m_bNetworkedScaleChanged"];
CGameSceneNode.m_bWillBeCallingPostDataUpdate = jsonData["CGameSceneNode"]["m_bWillBeCallingPostDataUpdate"];
CGameSceneNode.m_bBoneMergeFlex = jsonData["CGameSceneNode"]["m_bBoneMergeFlex"];
CGameSceneNode.m_nLatchAbsOrigin = jsonData["CGameSceneNode"]["m_nLatchAbsOrigin"];
CGameSceneNode.m_bDirtyBoneMergeBoneToRoot = jsonData["CGameSceneNode"]["m_bDirtyBoneMergeBoneToRoot"];
CGameSceneNode.m_nHierarchicalDepth = jsonData["CGameSceneNode"]["m_nHierarchicalDepth"];
CGameSceneNode.m_nHierarchyType = jsonData["CGameSceneNode"]["m_nHierarchyType"];
CGameSceneNode.m_nDoNotSetAnimTimeInInvalidatePhysicsCount = jsonData["CGameSceneNode"]["m_nDoNotSetAnimTimeInInvalidatePhysicsCount"];
CGameSceneNode.m_name = jsonData["CGameSceneNode"]["m_name"];
CGameSceneNode.m_hierarchyAttachName = jsonData["CGameSceneNode"]["m_hierarchyAttachName"];
CGameSceneNode.m_flZOffset = jsonData["CGameSceneNode"]["m_flZOffset"];
CGameSceneNode.m_flClientLocalScale = jsonData["CGameSceneNode"]["m_flClientLocalScale"];
CGameSceneNode.m_vRenderOrigin = jsonData["CGameSceneNode"]["m_vRenderOrigin"];

// Atribuições para CCSPointScript
// CCSPointScript Offsets
CCSPointScript.m_pParent = jsonData["CCSPointScript"]["m_pParent"];

// Atribuições para C_CSObserverPawn
// C_CSObserverPawn Offsets
C_CSObserverPawn.m_hDetectParentChange = jsonData["C_CSObserverPawn"]["m_hDetectParentChange"];

// Atribuições para C_EntityFlame
// C_EntityFlame Offsets
C_EntityFlame.m_hEntAttached = jsonData["C_EntityFlame"]["m_hEntAttached"];
C_EntityFlame.m_hOldAttached = jsonData["C_EntityFlame"]["m_hOldAttached"];
C_EntityFlame.m_bCheapEffect = jsonData["C_EntityFlame"]["m_bCheapEffect"];

// Atribuições para CCSObserver_ObserverServices
// CCSObserver_ObserverServices Offsets
CCSObserver_ObserverServices.m_hLastObserverTarget = jsonData["CCSObserver_ObserverServices"]["m_hLastObserverTarget"];
CCSObserver_ObserverServices.m_vecObserverInterpolateOffset = jsonData["CCSObserver_ObserverServices"]["m_vecObserverInterpolateOffset"];
CCSObserver_ObserverServices.m_vecObserverInterpStartPos = jsonData["CCSObserver_ObserverServices"]["m_vecObserverInterpStartPos"];
CCSObserver_ObserverServices.m_flObsInterp_PathLength = jsonData["CCSObserver_ObserverServices"]["m_flObsInterp_PathLength"];
CCSObserver_ObserverServices.m_qObsInterp_OrientationStart = jsonData["CCSObserver_ObserverServices"]["m_qObsInterp_OrientationStart"];
CCSObserver_ObserverServices.m_qObsInterp_OrientationTravelDir = jsonData["CCSObserver_ObserverServices"]["m_qObsInterp_OrientationTravelDir"];
CCSObserver_ObserverServices.m_obsInterpState = jsonData["CCSObserver_ObserverServices"]["m_obsInterpState"];
CCSObserver_ObserverServices.m_bObserverInterpolationNeedsDeferredSetup = jsonData["CCSObserver_ObserverServices"]["m_bObserverInterpolationNeedsDeferredSetup"];

// Atribuições para C_Hostage
// C_Hostage Offsets
C_Hostage.m_entitySpottedState = jsonData["C_Hostage"]["m_entitySpottedState"];
C_Hostage.m_leader = jsonData["C_Hostage"]["m_leader"];
C_Hostage.m_reuseTimer = jsonData["C_Hostage"]["m_reuseTimer"];
C_Hostage.m_vel = jsonData["C_Hostage"]["m_vel"];
C_Hostage.m_isRescued = jsonData["C_Hostage"]["m_isRescued"];
C_Hostage.m_jumpedThisFrame = jsonData["C_Hostage"]["m_jumpedThisFrame"];
C_Hostage.m_nHostageState = jsonData["C_Hostage"]["m_nHostageState"];
C_Hostage.m_bHandsHaveBeenCut = jsonData["C_Hostage"]["m_bHandsHaveBeenCut"];
C_Hostage.m_hHostageGrabber = jsonData["C_Hostage"]["m_hHostageGrabber"];
C_Hostage.m_fLastGrabTime = jsonData["C_Hostage"]["m_fLastGrabTime"];
C_Hostage.m_vecGrabbedPos = jsonData["C_Hostage"]["m_vecGrabbedPos"];
C_Hostage.m_flRescueStartTime = jsonData["C_Hostage"]["m_flRescueStartTime"];
C_Hostage.m_flGrabSuccessTime = jsonData["C_Hostage"]["m_flGrabSuccessTime"];
C_Hostage.m_flDropStartTime = jsonData["C_Hostage"]["m_flDropStartTime"];
C_Hostage.m_flDeadOrRescuedTime = jsonData["C_Hostage"]["m_flDeadOrRescuedTime"];
C_Hostage.m_blinkTimer = jsonData["C_Hostage"]["m_blinkTimer"];
C_Hostage.m_lookAt = jsonData["C_Hostage"]["m_lookAt"];
C_Hostage.m_lookAroundTimer = jsonData["C_Hostage"]["m_lookAroundTimer"];
C_Hostage.m_isInit = jsonData["C_Hostage"]["m_isInit"];
C_Hostage.m_eyeAttachment = jsonData["C_Hostage"]["m_eyeAttachment"];
C_Hostage.m_chestAttachment = jsonData["C_Hostage"]["m_chestAttachment"];
C_Hostage.m_pPredictionOwner = jsonData["C_Hostage"]["m_pPredictionOwner"];
C_Hostage.m_fNewestAlphaThinkTime = jsonData["C_Hostage"]["m_fNewestAlphaThinkTime"];

// Atribuições para C_Sprite
// C_Sprite Offsets
C_Sprite.m_hSpriteMaterial = jsonData["C_Sprite"]["m_hSpriteMaterial"];
C_Sprite.m_hAttachedToEntity = jsonData["C_Sprite"]["m_hAttachedToEntity"];
C_Sprite.m_nAttachment = jsonData["C_Sprite"]["m_nAttachment"];
C_Sprite.m_flSpriteFramerate = jsonData["C_Sprite"]["m_flSpriteFramerate"];
C_Sprite.m_flFrame = jsonData["C_Sprite"]["m_flFrame"];
C_Sprite.m_flDieTime = jsonData["C_Sprite"]["m_flDieTime"];
C_Sprite.m_nBrightness = jsonData["C_Sprite"]["m_nBrightness"];
C_Sprite.m_flBrightnessDuration = jsonData["C_Sprite"]["m_flBrightnessDuration"];
C_Sprite.m_flSpriteScale = jsonData["C_Sprite"]["m_flSpriteScale"];
C_Sprite.m_flScaleDuration = jsonData["C_Sprite"]["m_flScaleDuration"];
C_Sprite.m_bWorldSpaceScale = jsonData["C_Sprite"]["m_bWorldSpaceScale"];
C_Sprite.m_flGlowProxySize = jsonData["C_Sprite"]["m_flGlowProxySize"];
C_Sprite.m_flHDRColorScale = jsonData["C_Sprite"]["m_flHDRColorScale"];
C_Sprite.m_flLastTime = jsonData["C_Sprite"]["m_flLastTime"];
C_Sprite.m_flMaxFrame = jsonData["C_Sprite"]["m_flMaxFrame"];
C_Sprite.m_flStartScale = jsonData["C_Sprite"]["m_flStartScale"];
C_Sprite.m_flDestScale = jsonData["C_Sprite"]["m_flDestScale"];
C_Sprite.m_flScaleTimeStart = jsonData["C_Sprite"]["m_flScaleTimeStart"];
C_Sprite.m_nStartBrightness = jsonData["C_Sprite"]["m_nStartBrightness"];
C_Sprite.m_nDestBrightness = jsonData["C_Sprite"]["m_nDestBrightness"];
C_Sprite.m_flBrightnessTimeStart = jsonData["C_Sprite"]["m_flBrightnessTimeStart"];
C_Sprite.m_hOldSpriteMaterial = jsonData["C_Sprite"]["m_hOldSpriteMaterial"];
C_Sprite.m_nSpriteWidth = jsonData["C_Sprite"]["m_nSpriteWidth"];
C_Sprite.m_nSpriteHeight = jsonData["C_Sprite"]["m_nSpriteHeight"];

// Atribuições para C_PlantedC4
// C_PlantedC4 Offsets
C_PlantedC4.m_bBombTicking = jsonData["C_PlantedC4"]["m_bBombTicking"];
C_PlantedC4.m_nBombSite = jsonData["C_PlantedC4"]["m_nBombSite"];
C_PlantedC4.m_nSourceSoundscapeHash = jsonData["C_PlantedC4"]["m_nSourceSoundscapeHash"];
C_PlantedC4.m_entitySpottedState = jsonData["C_PlantedC4"]["m_entitySpottedState"];
C_PlantedC4.m_flNextGlow = jsonData["C_PlantedC4"]["m_flNextGlow"];
C_PlantedC4.m_flNextBeep = jsonData["C_PlantedC4"]["m_flNextBeep"];
C_PlantedC4.m_flC4Blow = jsonData["C_PlantedC4"]["m_flC4Blow"];
C_PlantedC4.m_bCannotBeDefused = jsonData["C_PlantedC4"]["m_bCannotBeDefused"];
C_PlantedC4.m_bHasExploded = jsonData["C_PlantedC4"]["m_bHasExploded"];
C_PlantedC4.m_flTimerLength = jsonData["C_PlantedC4"]["m_flTimerLength"];
C_PlantedC4.m_bBeingDefused = jsonData["C_PlantedC4"]["m_bBeingDefused"];
C_PlantedC4.m_bTriggerWarning = jsonData["C_PlantedC4"]["m_bTriggerWarning"];
C_PlantedC4.m_bExplodeWarning = jsonData["C_PlantedC4"]["m_bExplodeWarning"];
C_PlantedC4.m_bC4Activated = jsonData["C_PlantedC4"]["m_bC4Activated"];
C_PlantedC4.m_bTenSecWarning = jsonData["C_PlantedC4"]["m_bTenSecWarning"];
C_PlantedC4.m_flDefuseLength = jsonData["C_PlantedC4"]["m_flDefuseLength"];
C_PlantedC4.m_flDefuseCountDown = jsonData["C_PlantedC4"]["m_flDefuseCountDown"];
C_PlantedC4.m_bBombDefused = jsonData["C_PlantedC4"]["m_bBombDefused"];
C_PlantedC4.m_hBombDefuser = jsonData["C_PlantedC4"]["m_hBombDefuser"];
C_PlantedC4.m_hControlPanel = jsonData["C_PlantedC4"]["m_hControlPanel"];
C_PlantedC4.m_AttributeManager = jsonData["C_PlantedC4"]["m_AttributeManager"];
C_PlantedC4.m_hDefuserMultimeter = jsonData["C_PlantedC4"]["m_hDefuserMultimeter"];
C_PlantedC4.m_flNextRadarFlashTime = jsonData["C_PlantedC4"]["m_flNextRadarFlashTime"];
C_PlantedC4.m_bRadarFlash = jsonData["C_PlantedC4"]["m_bRadarFlash"];
C_PlantedC4.m_pBombDefuser = jsonData["C_PlantedC4"]["m_pBombDefuser"];
C_PlantedC4.m_fLastDefuseTime = jsonData["C_PlantedC4"]["m_fLastDefuseTime"];
C_PlantedC4.m_pPredictionOwner = jsonData["C_PlantedC4"]["m_pPredictionOwner"];
C_PlantedC4.m_vecC4ExplodeSpectatePos = jsonData["C_PlantedC4"]["m_vecC4ExplodeSpectatePos"];
C_PlantedC4.m_vecC4ExplodeSpectateAng = jsonData["C_PlantedC4"]["m_vecC4ExplodeSpectateAng"];
C_PlantedC4.m_flC4ExplodeSpectateDuration = jsonData["C_PlantedC4"]["m_flC4ExplodeSpectateDuration"];

// Atribuições para C_RagdollProp
// C_RagdollProp Offsets
C_RagdollProp.m_ragPos = jsonData["C_RagdollProp"]["m_ragPos"];
C_RagdollProp.m_ragAngles = jsonData["C_RagdollProp"]["m_ragAngles"];
C_RagdollProp.m_flBlendWeight = jsonData["C_RagdollProp"]["m_flBlendWeight"];
C_RagdollProp.m_hRagdollSource = jsonData["C_RagdollProp"]["m_hRagdollSource"];
C_RagdollProp.m_iEyeAttachment = jsonData["C_RagdollProp"]["m_iEyeAttachment"];
C_RagdollProp.m_flBlendWeightCurrent = jsonData["C_RagdollProp"]["m_flBlendWeightCurrent"];
C_RagdollProp.m_parentPhysicsBoneIndices = jsonData["C_RagdollProp"]["m_parentPhysicsBoneIndices"];
C_RagdollProp.m_worldSpaceBoneComputationOrder = jsonData["C_RagdollProp"]["m_worldSpaceBoneComputationOrder"];

// Atribuições para C_VoteController
// C_VoteController Offsets
C_VoteController.m_iActiveIssueIndex = jsonData["C_VoteController"]["m_iActiveIssueIndex"];
C_VoteController.m_iOnlyTeamToVote = jsonData["C_VoteController"]["m_iOnlyTeamToVote"];
C_VoteController.m_nVoteOptionCount = jsonData["C_VoteController"]["m_nVoteOptionCount"];
C_VoteController.m_nPotentialVotes = jsonData["C_VoteController"]["m_nPotentialVotes"];
C_VoteController.m_bVotesDirty = jsonData["C_VoteController"]["m_bVotesDirty"];
C_VoteController.m_bTypeDirty = jsonData["C_VoteController"]["m_bTypeDirty"];
C_VoteController.m_bIsYesNoVote = jsonData["C_VoteController"]["m_bIsYesNoVote"];

// Atribuições para ViewAngleServerChange_t
// ViewAngleServerChange_t Offsets
ViewAngleServerChange_t.nType = jsonData["ViewAngleServerChange_t"]["nType"];
ViewAngleServerChange_t.qAngle = jsonData["ViewAngleServerChange_t"]["qAngle"];
ViewAngleServerChange_t.nIndex = jsonData["ViewAngleServerChange_t"]["nIndex"];

// Atribuições para C_Chicken
// C_Chicken Offsets
C_Chicken.m_hHolidayHatAddon = jsonData["C_Chicken"]["m_hHolidayHatAddon"];
C_Chicken.m_jumpedThisFrame = jsonData["C_Chicken"]["m_jumpedThisFrame"];
C_Chicken.m_leader = jsonData["C_Chicken"]["m_leader"];
C_Chicken.m_AttributeManager = jsonData["C_Chicken"]["m_AttributeManager"];
C_Chicken.m_bAttributesInitialized = jsonData["C_Chicken"]["m_bAttributesInitialized"];
C_Chicken.m_hWaterWakeParticles = jsonData["C_Chicken"]["m_hWaterWakeParticles"];
C_Chicken.m_bIsPreviewModel = jsonData["C_Chicken"]["m_bIsPreviewModel"];

// Atribuições para PhysicsRagdollPose_t
// PhysicsRagdollPose_t Offsets
PhysicsRagdollPose_t.m_Transforms = jsonData["PhysicsRagdollPose_t"]["m_Transforms"];
PhysicsRagdollPose_t.m_hOwner = jsonData["PhysicsRagdollPose_t"]["m_hOwner"];

// Atribuições para EventSimpleLoopFrameUpdate_t
// EventSimpleLoopFrameUpdate_t Offsets
EventSimpleLoopFrameUpdate_t.m_LoopState = jsonData["EventSimpleLoopFrameUpdate_t"]["m_LoopState"];
EventSimpleLoopFrameUpdate_t.m_flRealTime = jsonData["EventSimpleLoopFrameUpdate_t"]["m_flRealTime"];
EventSimpleLoopFrameUpdate_t.m_flFrameTime = jsonData["EventSimpleLoopFrameUpdate_t"]["m_flFrameTime"];

// Atribuições para EventPostAdvanceTick_t
// EventPostAdvanceTick_t Offsets
EventPostAdvanceTick_t.m_nCurrentTick = jsonData["EventPostAdvanceTick_t"]["m_nCurrentTick"];
EventPostAdvanceTick_t.m_nCurrentTickThisFrame = jsonData["EventPostAdvanceTick_t"]["m_nCurrentTickThisFrame"];
EventPostAdvanceTick_t.m_nTotalTicksThisFrame = jsonData["EventPostAdvanceTick_t"]["m_nTotalTicksThisFrame"];
EventPostAdvanceTick_t.m_nTotalTicks = jsonData["EventPostAdvanceTick_t"]["m_nTotalTicks"];

// Atribuições para CEntityIOOutput
// CEntityIOOutput Offsets
CEntityIOOutput.m_Value = jsonData["CEntityIOOutput"]["m_Value"];

// Atribuições para EventClientSceneSystemThreadStateChange_t
// EventClientSceneSystemThreadStateChange_t Offsets
EventClientSceneSystemThreadStateChange_t.m_bThreadsActive = jsonData["EventClientSceneSystemThreadStateChange_t"]["m_bThreadsActive"];

// Atribuições para EventClientOutput_t
// EventClientOutput_t Offsets
EventClientOutput_t.m_LoopState = jsonData["EventClientOutput_t"]["m_LoopState"];
EventClientOutput_t.m_flRenderTime = jsonData["EventClientOutput_t"]["m_flRenderTime"];
EventClientOutput_t.m_flRealTime = jsonData["EventClientOutput_t"]["m_flRealTime"];
EventClientOutput_t.m_flRenderFrameTimeUnbounded = jsonData["EventClientOutput_t"]["m_flRenderFrameTimeUnbounded"];
EventClientOutput_t.m_bRenderOnly = jsonData["EventClientOutput_t"]["m_bRenderOnly"];

// Atribuições para CEntityComponentHelper
// CEntityComponentHelper Offsets
CEntityComponentHelper.m_flags = jsonData["CEntityComponentHelper"]["m_flags"];
CEntityComponentHelper.m_pInfo = jsonData["CEntityComponentHelper"]["m_pInfo"];
CEntityComponentHelper.m_nPriority = jsonData["CEntityComponentHelper"]["m_nPriority"];
CEntityComponentHelper.m_pNext = jsonData["CEntityComponentHelper"]["m_pNext"];

// Atribuições para GameTime_t
// GameTime_t Offsets
GameTime_t.m_Value = jsonData["GameTime_t"]["m_Value"];

// Atribuições para CNetworkVarChainer
// CNetworkVarChainer Offsets
CNetworkVarChainer.m_PathIndex = jsonData["CNetworkVarChainer"]["m_PathIndex"];

// Atribuições para EventClientPostOutput_t
// EventClientPostOutput_t Offsets
EventClientPostOutput_t.m_LoopState = jsonData["EventClientPostOutput_t"]["m_LoopState"];
EventClientPostOutput_t.m_flRenderTime = jsonData["EventClientPostOutput_t"]["m_flRenderTime"];
EventClientPostOutput_t.m_flRenderFrameTime = jsonData["EventClientPostOutput_t"]["m_flRenderFrameTime"];
EventClientPostOutput_t.m_flRenderFrameTimeUnbounded = jsonData["EventClientPostOutput_t"]["m_flRenderFrameTimeUnbounded"];
EventClientPostOutput_t.m_bRenderOnly = jsonData["EventClientPostOutput_t"]["m_bRenderOnly"];

// Atribuições para GameTick_t
// GameTick_t Offsets
GameTick_t.m_Value = jsonData["GameTick_t"]["m_Value"];

// Atribuições para EventClientPollInput_t
// EventClientPollInput_t Offsets
EventClientPollInput_t.m_LoopState = jsonData["EventClientPollInput_t"]["m_LoopState"];
EventClientPollInput_t.m_flRealTime = jsonData["EventClientPollInput_t"]["m_flRealTime"];

// Atribuições para EventPreDataUpdate_t
// EventPreDataUpdate_t Offsets
EventPreDataUpdate_t.m_nCount = jsonData["EventPreDataUpdate_t"]["m_nCount"];

// Atribuições para EventClientProcessGameInput_t
// EventClientProcessGameInput_t Offsets
EventClientProcessGameInput_t.m_LoopState = jsonData["EventClientProcessGameInput_t"]["m_LoopState"];
EventClientProcessGameInput_t.m_flRealTime = jsonData["EventClientProcessGameInput_t"]["m_flRealTime"];
EventClientProcessGameInput_t.m_flFrameTime = jsonData["EventClientProcessGameInput_t"]["m_flFrameTime"];

// Atribuições para EventFrameBoundary_t
// EventFrameBoundary_t Offsets
EventFrameBoundary_t.m_flFrameTime = jsonData["EventFrameBoundary_t"]["m_flFrameTime"];

// Atribuições para EventAppShutdown_t
// EventAppShutdown_t Offsets
EventAppShutdown_t.m_nDummy0 = jsonData["EventAppShutdown_t"]["m_nDummy0"];

// Atribuições para EventProfileStorageAvailable_t
// EventProfileStorageAvailable_t Offsets
EventProfileStorageAvailable_t.m_nSplitScreenSlot = jsonData["EventProfileStorageAvailable_t"]["m_nSplitScreenSlot"];

// Atribuições para EventPostDataUpdate_t
// EventPostDataUpdate_t Offsets
EventPostDataUpdate_t.m_nCount = jsonData["EventPostDataUpdate_t"]["m_nCount"];

// Atribuições para EventClientProcessNetworking_t
// EventClientProcessNetworking_t Offsets
EventClientProcessNetworking_t.m_nTickCount = jsonData["EventClientProcessNetworking_t"]["m_nTickCount"];

// Atribuições para EventAdvanceTick_t
// EventAdvanceTick_t Offsets
EventAdvanceTick_t.m_nCurrentTick = jsonData["EventAdvanceTick_t"]["m_nCurrentTick"];
EventAdvanceTick_t.m_nCurrentTickThisFrame = jsonData["EventAdvanceTick_t"]["m_nCurrentTickThisFrame"];
EventAdvanceTick_t.m_nTotalTicksThisFrame = jsonData["EventAdvanceTick_t"]["m_nTotalTicksThisFrame"];
EventAdvanceTick_t.m_nTotalTicks = jsonData["EventAdvanceTick_t"]["m_nTotalTicks"];

// Atribuições para EventClientPreOutput_t
// EventClientPreOutput_t Offsets
EventClientPreOutput_t.m_LoopState = jsonData["EventClientPreOutput_t"]["m_LoopState"];
EventClientPreOutput_t.m_flRenderTime = jsonData["EventClientPreOutput_t"]["m_flRenderTime"];
EventClientPreOutput_t.m_flRenderFrameTime = jsonData["EventClientPreOutput_t"]["m_flRenderFrameTime"];
EventClientPreOutput_t.m_flRenderFrameTimeUnbounded = jsonData["EventClientPreOutput_t"]["m_flRenderFrameTimeUnbounded"];
EventClientPreOutput_t.m_flRealTime = jsonData["EventClientPreOutput_t"]["m_flRealTime"];
EventClientPreOutput_t.m_bRenderOnly = jsonData["EventClientPreOutput_t"]["m_bRenderOnly"];

// Atribuições para EventClientFrameSimulate_t
// EventClientFrameSimulate_t Offsets
EventClientFrameSimulate_t.m_LoopState = jsonData["EventClientFrameSimulate_t"]["m_LoopState"];
EventClientFrameSimulate_t.m_flRealTime = jsonData["EventClientFrameSimulate_t"]["m_flRealTime"];
EventClientFrameSimulate_t.m_flFrameTime = jsonData["EventClientFrameSimulate_t"]["m_flFrameTime"];
EventClientFrameSimulate_t.m_bScheduleSendTickPacket = jsonData["EventClientFrameSimulate_t"]["m_bScheduleSendTickPacket"];

// Atribuições para EventSetTime_t
// EventSetTime_t Offsets
EventSetTime_t.m_LoopState = jsonData["EventSetTime_t"]["m_LoopState"];
EventSetTime_t.m_nClientOutputFrames = jsonData["EventSetTime_t"]["m_nClientOutputFrames"];
EventSetTime_t.m_flRealTime = jsonData["EventSetTime_t"]["m_flRealTime"];
EventSetTime_t.m_flRenderTime = jsonData["EventSetTime_t"]["m_flRenderTime"];
EventSetTime_t.m_flRenderFrameTime = jsonData["EventSetTime_t"]["m_flRenderFrameTime"];
EventSetTime_t.m_flRenderFrameTimeUnbounded = jsonData["EventSetTime_t"]["m_flRenderFrameTimeUnbounded"];
EventSetTime_t.m_flRenderFrameTimeUnscaled = jsonData["EventSetTime_t"]["m_flRenderFrameTimeUnscaled"];
EventSetTime_t.m_flTickRemainder = jsonData["EventSetTime_t"]["m_flTickRemainder"];

// Atribuições para EventSimulate_t
// EventSimulate_t Offsets
EventSimulate_t.m_LoopState = jsonData["EventSimulate_t"]["m_LoopState"];
EventSimulate_t.m_bFirstTick = jsonData["EventSimulate_t"]["m_bFirstTick"];
EventSimulate_t.m_bLastTick = jsonData["EventSimulate_t"]["m_bLastTick"];

// Atribuições para EntComponentInfo_t
// EntComponentInfo_t Offsets
EntComponentInfo_t.m_pName = jsonData["EntComponentInfo_t"]["m_pName"];
EntComponentInfo_t.m_pCPPClassname = jsonData["EntComponentInfo_t"]["m_pCPPClassname"];
EntComponentInfo_t.m_pNetworkDataReferencedDescription = jsonData["EntComponentInfo_t"]["m_pNetworkDataReferencedDescription"];
EntComponentInfo_t.m_pNetworkDataReferencedPtrPropDescription = jsonData["EntComponentInfo_t"]["m_pNetworkDataReferencedPtrPropDescription"];
EntComponentInfo_t.m_nRuntimeIndex = jsonData["EntComponentInfo_t"]["m_nRuntimeIndex"];
EntComponentInfo_t.m_nFlags = jsonData["EntComponentInfo_t"]["m_nFlags"];
EntComponentInfo_t.m_pBaseClassComponentHelper = jsonData["EntComponentInfo_t"]["m_pBaseClassComponentHelper"];

// Atribuições para EngineLoopState_t
// EngineLoopState_t Offsets
EngineLoopState_t.m_nPlatWindowWidth = jsonData["EngineLoopState_t"]["m_nPlatWindowWidth"];
EngineLoopState_t.m_nPlatWindowHeight = jsonData["EngineLoopState_t"]["m_nPlatWindowHeight"];
EngineLoopState_t.m_nRenderWidth = jsonData["EngineLoopState_t"]["m_nRenderWidth"];
EngineLoopState_t.m_nRenderHeight = jsonData["EngineLoopState_t"]["m_nRenderHeight"];

// Atribuições para EventClientPollNetworking_t
// EventClientPollNetworking_t Offsets
EventClientPollNetworking_t.m_nTickCount = jsonData["EventClientPollNetworking_t"]["m_nTickCount"];

// Atribuições para EventClientProcessInput_t
// EventClientProcessInput_t Offsets
EventClientProcessInput_t.m_LoopState = jsonData["EventClientProcessInput_t"]["m_LoopState"];
EventClientProcessInput_t.m_flRealTime = jsonData["EventClientProcessInput_t"]["m_flRealTime"];
EventClientProcessInput_t.m_flTickInterval = jsonData["EventClientProcessInput_t"]["m_flTickInterval"];
EventClientProcessInput_t.m_flTickStartTime = jsonData["EventClientProcessInput_t"]["m_flTickStartTime"];

// Atribuições para EmptyTestScript
// EmptyTestScript Offsets
EmptyTestScript.m_hTest = jsonData["EmptyTestScript"]["m_hTest"];

// Atribuições para CAnimScriptBase
// CAnimScriptBase Offsets
CAnimScriptBase.m_bIsValid = jsonData["CAnimScriptBase"]["m_bIsValid"];

// Atribuições para animationsystem_dll
// animationsystem_dll Offsets
animationsystem_dll.AnimationSystemUtils_001 = jsonData["animationsystem_dll"]["AnimationSystemUtils_001"];
animationsystem_dll.AnimationSystem_001 = jsonData["animationsystem_dll"]["AnimationSystem_001"];

// Atribuições para client_dll
// client_dll Offsets
client_dll.ClientToolsInfo_001 = jsonData["client_dll"]["ClientToolsInfo_001"];
client_dll.EmptyWorldService001_Client = jsonData["client_dll"]["EmptyWorldService001_Client"];
client_dll.GameClientExports001 = jsonData["client_dll"]["GameClientExports001"];
client_dll.LegacyGameUI001 = jsonData["client_dll"]["LegacyGameUI001"];
client_dll.Source2Client002 = jsonData["client_dll"]["Source2Client002"];
client_dll.Source2ClientConfig001 = jsonData["client_dll"]["Source2ClientConfig001"];
client_dll.Source2ClientPrediction001 = jsonData["client_dll"]["Source2ClientPrediction001"];
client_dll.Source2ClientUI001 = jsonData["client_dll"]["Source2ClientUI001"];
client_dll.dwCSGOInput = jsonData["client_dll"]["dwCSGOInput"];
client_dll.dwEntityList = jsonData["client_dll"]["dwEntityList"];
client_dll.dwGameEntitySystem = jsonData["client_dll"]["dwGameEntitySystem"];
client_dll.dwGameEntitySystem_highestEntityIndex = jsonData["client_dll"]["dwGameEntitySystem_highestEntityIndex"];
client_dll.dwGameRules = jsonData["client_dll"]["dwGameRules"];
client_dll.dwGlobalVars = jsonData["client_dll"]["dwGlobalVars"];
client_dll.dwGlowManager = jsonData["client_dll"]["dwGlowManager"];
client_dll.dwLocalPlayerController = jsonData["client_dll"]["dwLocalPlayerController"];
client_dll.dwLocalPlayerPawn = jsonData["client_dll"]["dwLocalPlayerPawn"];
client_dll.dwPlantedC4 = jsonData["client_dll"]["dwPlantedC4"];
client_dll.dwPrediction = jsonData["client_dll"]["dwPrediction"];
client_dll.dwSensitivity = jsonData["client_dll"]["dwSensitivity"];
client_dll.dwSensitivity_sensitivity = jsonData["client_dll"]["dwSensitivity_sensitivity"];
client_dll.dwViewAngles = jsonData["client_dll"]["dwViewAngles"];
client_dll.dwViewMatrix = jsonData["client_dll"]["dwViewMatrix"];
client_dll.dwViewRender = jsonData["client_dll"]["dwViewRender"];
client_dll.dwWeaponC4 = jsonData["client_dll"]["dwWeaponC4"];

// Atribuições para engine2_dll
// engine2_dll Offsets
engine2_dll.BenchmarkService001 = jsonData["engine2_dll"]["BenchmarkService001"];
engine2_dll.BugService001 = jsonData["engine2_dll"]["BugService001"];
engine2_dll.ClientServerEngineLoopService_001 = jsonData["engine2_dll"]["ClientServerEngineLoopService_001"];
engine2_dll.EngineGameUI001 = jsonData["engine2_dll"]["EngineGameUI001"];
engine2_dll.EngineServiceMgr001 = jsonData["engine2_dll"]["EngineServiceMgr001"];
engine2_dll.GameEventSystemClientV001 = jsonData["engine2_dll"]["GameEventSystemClientV001"];
engine2_dll.GameEventSystemServerV001 = jsonData["engine2_dll"]["GameEventSystemServerV001"];
engine2_dll.GameResourceServiceClientV001 = jsonData["engine2_dll"]["GameResourceServiceClientV001"];
engine2_dll.GameResourceServiceServerV001 = jsonData["engine2_dll"]["GameResourceServiceServerV001"];
engine2_dll.GameUIService_001 = jsonData["engine2_dll"]["GameUIService_001"];
engine2_dll.HostStateMgr001 = jsonData["engine2_dll"]["HostStateMgr001"];
engine2_dll.INETSUPPORT_001 = jsonData["engine2_dll"]["INETSUPPORT_001"];
engine2_dll.InputService_001 = jsonData["engine2_dll"]["InputService_001"];
engine2_dll.KeyValueCache001 = jsonData["engine2_dll"]["KeyValueCache001"];
engine2_dll.MapListService_001 = jsonData["engine2_dll"]["MapListService_001"];
engine2_dll.NetworkClientService_001 = jsonData["engine2_dll"]["NetworkClientService_001"];
engine2_dll.NetworkP2PService_001 = jsonData["engine2_dll"]["NetworkP2PService_001"];
engine2_dll.NetworkServerService_001 = jsonData["engine2_dll"]["NetworkServerService_001"];
engine2_dll.NetworkService_001 = jsonData["engine2_dll"]["NetworkService_001"];
engine2_dll.RenderService_001 = jsonData["engine2_dll"]["RenderService_001"];
engine2_dll.ScreenshotService001 = jsonData["engine2_dll"]["ScreenshotService001"];
engine2_dll.SimpleEngineLoopService_001 = jsonData["engine2_dll"]["SimpleEngineLoopService_001"];
engine2_dll.SoundService_001 = jsonData["engine2_dll"]["SoundService_001"];
engine2_dll.Source2EngineToClient001 = jsonData["engine2_dll"]["Source2EngineToClient001"];
engine2_dll.Source2EngineToClientStringTable001 = jsonData["engine2_dll"]["Source2EngineToClientStringTable001"];
engine2_dll.Source2EngineToServer001 = jsonData["engine2_dll"]["Source2EngineToServer001"];
engine2_dll.Source2EngineToServerStringTable001 = jsonData["engine2_dll"]["Source2EngineToServerStringTable001"];
engine2_dll.SplitScreenService_001 = jsonData["engine2_dll"]["SplitScreenService_001"];
engine2_dll.StatsService_001 = jsonData["engine2_dll"]["StatsService_001"];
engine2_dll.ToolService_001 = jsonData["engine2_dll"]["ToolService_001"];
engine2_dll.VENGINE_GAMEUIFUNCS_VERSION005 = jsonData["engine2_dll"]["VENGINE_GAMEUIFUNCS_VERSION005"];
engine2_dll.VProfService_001 = jsonData["engine2_dll"]["VProfService_001"];
engine2_dll.dwBuildNumber = jsonData["engine2_dll"]["dwBuildNumber"];
engine2_dll.dwNetworkGameClient = jsonData["engine2_dll"]["dwNetworkGameClient"];
engine2_dll.dwNetworkGameClient_clientTickCount = jsonData["engine2_dll"]["dwNetworkGameClient_clientTickCount"];
engine2_dll.dwNetworkGameClient_deltaTick = jsonData["engine2_dll"]["dwNetworkGameClient_deltaTick"];
engine2_dll.dwNetworkGameClient_isBackgroundMap = jsonData["engine2_dll"]["dwNetworkGameClient_isBackgroundMap"];
engine2_dll.dwNetworkGameClient_localPlayer = jsonData["engine2_dll"]["dwNetworkGameClient_localPlayer"];
engine2_dll.dwNetworkGameClient_maxClients = jsonData["engine2_dll"]["dwNetworkGameClient_maxClients"];
engine2_dll.dwNetworkGameClient_serverTickCount = jsonData["engine2_dll"]["dwNetworkGameClient_serverTickCount"];
engine2_dll.dwNetworkGameClient_signOnState = jsonData["engine2_dll"]["dwNetworkGameClient_signOnState"];
engine2_dll.dwWindowHeight = jsonData["engine2_dll"]["dwWindowHeight"];
engine2_dll.dwWindowWidth = jsonData["engine2_dll"]["dwWindowWidth"];

// Atribuições para filesystem_stdio_dll
// filesystem_stdio_dll Offsets
filesystem_stdio_dll.VAsyncFileSystem2_001 = jsonData["filesystem_stdio_dll"]["VAsyncFileSystem2_001"];
filesystem_stdio_dll.VFileSystem017 = jsonData["filesystem_stdio_dll"]["VFileSystem017"];

// Atribuições para host_dll
// host_dll Offsets
host_dll.DebugDrawQueueManager001 = jsonData["host_dll"]["DebugDrawQueueManager001"];
host_dll.GameModelInfo001 = jsonData["host_dll"]["GameModelInfo001"];
host_dll.GameSystem2HostHook = jsonData["host_dll"]["GameSystem2HostHook"];
host_dll.HostUtils001 = jsonData["host_dll"]["HostUtils001"];
host_dll.PredictionDiffManager001 = jsonData["host_dll"]["PredictionDiffManager001"];
host_dll.SaveRestoreDataVersion001 = jsonData["host_dll"]["SaveRestoreDataVersion001"];
host_dll.SinglePlayerSharedMemory001 = jsonData["host_dll"]["SinglePlayerSharedMemory001"];
host_dll.Source2Host001 = jsonData["host_dll"]["Source2Host001"];

// Atribuições para imemanager_dll
// imemanager_dll Offsets
imemanager_dll.IMEManager001 = jsonData["imemanager_dll"]["IMEManager001"];

// Atribuições para inputsystem_dll
// inputsystem_dll Offsets
inputsystem_dll.InputStackSystemVersion001 = jsonData["inputsystem_dll"]["InputStackSystemVersion001"];
inputsystem_dll.InputSystemVersion001 = jsonData["inputsystem_dll"]["InputSystemVersion001"];
inputsystem_dll.dwInputSystem = jsonData["inputsystem_dll"]["dwInputSystem"];

// Atribuições para localize_dll
// localize_dll Offsets
localize_dll.Localize_001 = jsonData["localize_dll"]["Localize_001"];

// Atribuições para matchmaking_dll
// matchmaking_dll Offsets
matchmaking_dll.GameTypes001 = jsonData["matchmaking_dll"]["GameTypes001"];
matchmaking_dll.MATCHFRAMEWORK_001 = jsonData["matchmaking_dll"]["MATCHFRAMEWORK_001"];
matchmaking_dll.dwGameTypes = jsonData["matchmaking_dll"]["dwGameTypes"];
matchmaking_dll.dwGameTypes_mapName = jsonData["matchmaking_dll"]["dwGameTypes_mapName"];

// Atribuições para materialsystem2_dll
// materialsystem2_dll Offsets
materialsystem2_dll.FontManager_001 = jsonData["materialsystem2_dll"]["FontManager_001"];
materialsystem2_dll.MaterialUtils_001 = jsonData["materialsystem2_dll"]["MaterialUtils_001"];
materialsystem2_dll.PostProcessingSystem_001 = jsonData["materialsystem2_dll"]["PostProcessingSystem_001"];
materialsystem2_dll.TextLayout_001 = jsonData["materialsystem2_dll"]["TextLayout_001"];
materialsystem2_dll.VMaterialSystem2_001 = jsonData["materialsystem2_dll"]["VMaterialSystem2_001"];

// Atribuições para meshsystem_dll
// meshsystem_dll Offsets
meshsystem_dll.MeshSystem001 = jsonData["meshsystem_dll"]["MeshSystem001"];

// Atribuições para navsystem_dll
// navsystem_dll Offsets
navsystem_dll.NavSystem001 = jsonData["navsystem_dll"]["NavSystem001"];

// Atribuições para networksystem_dll
// networksystem_dll Offsets
networksystem_dll.FlattenedSerializersVersion001 = jsonData["networksystem_dll"]["FlattenedSerializersVersion001"];
networksystem_dll.NetworkMessagesVersion001 = jsonData["networksystem_dll"]["NetworkMessagesVersion001"];
networksystem_dll.NetworkSystemVersion001 = jsonData["networksystem_dll"]["NetworkSystemVersion001"];
networksystem_dll.SerializedEntitiesVersion001 = jsonData["networksystem_dll"]["SerializedEntitiesVersion001"];

// Atribuições para panorama_dll
// panorama_dll Offsets
panorama_dll.PanoramaUIEngine001 = jsonData["panorama_dll"]["PanoramaUIEngine001"];

// Atribuições para panorama_text_pango_dll
// panorama_text_pango_dll Offsets
panorama_text_pango_dll.PanoramaTextServices001 = jsonData["panorama_text_pango_dll"]["PanoramaTextServices001"];

// Atribuições para panoramauiclient_dll
// panoramauiclient_dll Offsets
panoramauiclient_dll.PanoramaUIClient001 = jsonData["panoramauiclient_dll"]["PanoramaUIClient001"];

// Atribuições para particles_dll
// particles_dll Offsets
particles_dll.ParticleSystemMgr003 = jsonData["particles_dll"]["ParticleSystemMgr003"];

// Atribuições para pulse_system_dll
// pulse_system_dll Offsets
pulse_system_dll.IPulseSystem_001 = jsonData["pulse_system_dll"]["IPulseSystem_001"];

// Atribuições para rendersystemdx11_dll
// rendersystemdx11_dll Offsets
rendersystemdx11_dll.RenderDeviceMgr001 = jsonData["rendersystemdx11_dll"]["RenderDeviceMgr001"];
rendersystemdx11_dll.RenderUtils_001 = jsonData["rendersystemdx11_dll"]["RenderUtils_001"];
rendersystemdx11_dll.VRenderDeviceMgrBackdoor001 = jsonData["rendersystemdx11_dll"]["VRenderDeviceMgrBackdoor001"];

// Atribuições para resourcesystem_dll
// resourcesystem_dll Offsets
resourcesystem_dll.ResourceSystem013 = jsonData["resourcesystem_dll"]["ResourceSystem013"];

// Atribuições para scenefilecache_dll
// scenefilecache_dll Offsets
scenefilecache_dll.ResponseRulesCache001 = jsonData["scenefilecache_dll"]["ResponseRulesCache001"];
scenefilecache_dll.SceneFileCache002 = jsonData["scenefilecache_dll"]["SceneFileCache002"];

// Atribuições para scenesystem_dll
// scenesystem_dll Offsets
scenesystem_dll.RenderingPipelines_001 = jsonData["scenesystem_dll"]["RenderingPipelines_001"];
scenesystem_dll.SceneSystem_002 = jsonData["scenesystem_dll"]["SceneSystem_002"];
scenesystem_dll.SceneUtils_001 = jsonData["scenesystem_dll"]["SceneUtils_001"];

// Atribuições para schemasystem_dll
// schemasystem_dll Offsets
schemasystem_dll.SchemaSystem_001 = jsonData["schemasystem_dll"]["SchemaSystem_001"];

// Atribuições para server_dll
// server_dll Offsets
server_dll.EmptyWorldService001_Server = jsonData["server_dll"]["EmptyWorldService001_Server"];
server_dll.EntitySubclassUtilsV001 = jsonData["server_dll"]["EntitySubclassUtilsV001"];
server_dll.NavGameTest001 = jsonData["server_dll"]["NavGameTest001"];
server_dll.ServerToolsInfo_001 = jsonData["server_dll"]["ServerToolsInfo_001"];
server_dll.Source2GameClients001 = jsonData["server_dll"]["Source2GameClients001"];
server_dll.Source2GameDirector001 = jsonData["server_dll"]["Source2GameDirector001"];
server_dll.Source2GameEntities001 = jsonData["server_dll"]["Source2GameEntities001"];
server_dll.Source2Server001 = jsonData["server_dll"]["Source2Server001"];
server_dll.Source2ServerConfig001 = jsonData["server_dll"]["Source2ServerConfig001"];
server_dll.customnavsystem001 = jsonData["server_dll"]["customnavsystem001"];

// Atribuições para soundsystem_dll
// soundsystem_dll Offsets
soundsystem_dll.SoundOpSystem001 = jsonData["soundsystem_dll"]["SoundOpSystem001"];
soundsystem_dll.SoundOpSystemEdit001 = jsonData["soundsystem_dll"]["SoundOpSystemEdit001"];
soundsystem_dll.SoundSystem001 = jsonData["soundsystem_dll"]["SoundSystem001"];
soundsystem_dll.VMixEditTool001 = jsonData["soundsystem_dll"]["VMixEditTool001"];
soundsystem_dll.dwSoundSystem = jsonData["soundsystem_dll"]["dwSoundSystem"];
soundsystem_dll.dwSoundSystem_engineViewData = jsonData["soundsystem_dll"]["dwSoundSystem_engineViewData"];

// Atribuições para steamaudio_dll
// steamaudio_dll Offsets
steamaudio_dll.SteamAudio001 = jsonData["steamaudio_dll"]["SteamAudio001"];

// Atribuições para steamclient64_dll
// steamclient64_dll Offsets
steamclient64_dll.CLIENTENGINE_INTERFACE_VERSION005 = jsonData["steamclient64_dll"]["CLIENTENGINE_INTERFACE_VERSION005"];
steamclient64_dll.IVALIDATE001 = jsonData["steamclient64_dll"]["IVALIDATE001"];
steamclient64_dll.SteamClient006 = jsonData["steamclient64_dll"]["SteamClient006"];
steamclient64_dll.SteamClient007 = jsonData["steamclient64_dll"]["SteamClient007"];
steamclient64_dll.SteamClient008 = jsonData["steamclient64_dll"]["SteamClient008"];
steamclient64_dll.SteamClient009 = jsonData["steamclient64_dll"]["SteamClient009"];
steamclient64_dll.SteamClient010 = jsonData["steamclient64_dll"]["SteamClient010"];
steamclient64_dll.SteamClient011 = jsonData["steamclient64_dll"]["SteamClient011"];
steamclient64_dll.SteamClient012 = jsonData["steamclient64_dll"]["SteamClient012"];
steamclient64_dll.SteamClient013 = jsonData["steamclient64_dll"]["SteamClient013"];
steamclient64_dll.SteamClient014 = jsonData["steamclient64_dll"]["SteamClient014"];
steamclient64_dll.SteamClient015 = jsonData["steamclient64_dll"]["SteamClient015"];
steamclient64_dll.SteamClient016 = jsonData["steamclient64_dll"]["SteamClient016"];
steamclient64_dll.SteamClient017 = jsonData["steamclient64_dll"]["SteamClient017"];
steamclient64_dll.SteamClient018 = jsonData["steamclient64_dll"]["SteamClient018"];
steamclient64_dll.SteamClient019 = jsonData["steamclient64_dll"]["SteamClient019"];
steamclient64_dll.SteamClient020 = jsonData["steamclient64_dll"]["SteamClient020"];
steamclient64_dll.SteamClient021 = jsonData["steamclient64_dll"]["SteamClient021"];
steamclient64_dll.p2pvoice002 = jsonData["steamclient64_dll"]["p2pvoice002"];
steamclient64_dll.p2pvoicesingleton002 = jsonData["steamclient64_dll"]["p2pvoicesingleton002"];

// Atribuições para tier0_dll
// tier0_dll Offsets
tier0_dll.TestScriptMgr001 = jsonData["tier0_dll"]["TestScriptMgr001"];
tier0_dll.VEngineCvar007 = jsonData["tier0_dll"]["VEngineCvar007"];
tier0_dll.VProcessUtils002 = jsonData["tier0_dll"]["VProcessUtils002"];
tier0_dll.VStringTokenSystem001 = jsonData["tier0_dll"]["VStringTokenSystem001"];

// Atribuições para v8system_dll
// v8system_dll Offsets
v8system_dll.Source2V8System001 = jsonData["v8system_dll"]["Source2V8System001"];

// Atribuições para vphysics2_dll
// vphysics2_dll Offsets
vphysics2_dll.VPhysics2_Handle_Interface_001 = jsonData["vphysics2_dll"]["VPhysics2_Handle_Interface_001"];
vphysics2_dll.VPhysics2_Interface_001 = jsonData["vphysics2_dll"]["VPhysics2_Interface_001"];

// Atribuições para vscript_dll
// vscript_dll Offsets
vscript_dll.VScriptManager010 = jsonData["vscript_dll"]["VScriptManager010"];

// Atribuições para vstdlib_s64_dll
// vstdlib_s64_dll Offsets
vstdlib_s64_dll.IVALIDATE001 = jsonData["vstdlib_s64_dll"]["IVALIDATE001"];
vstdlib_s64_dll.VEngineCvar002 = jsonData["vstdlib_s64_dll"]["VEngineCvar002"];

// Atribuições para worldrenderer_dll
// worldrenderer_dll Offsets
worldrenderer_dll.WorldRendererMgr001 = jsonData["worldrenderer_dll"]["WorldRendererMgr001"];

// Atribuições para MaterialParam_t
// MaterialParam_t Offsets
MaterialParam_t.m_name = jsonData["MaterialParam_t"]["m_name"];

// Atribuições para MaterialParamVector_t
// MaterialParamVector_t Offsets
MaterialParamVector_t.m_value = jsonData["MaterialParamVector_t"]["m_value"];

// Atribuições para MaterialParamString_t
// MaterialParamString_t Offsets
MaterialParamString_t.m_value = jsonData["MaterialParamString_t"]["m_value"];

// Atribuições para PostProcessingResource_t
// PostProcessingResource_t Offsets
PostProcessingResource_t.m_bHasTonemapParams = jsonData["PostProcessingResource_t"]["m_bHasTonemapParams"];
PostProcessingResource_t.m_toneMapParams = jsonData["PostProcessingResource_t"]["m_toneMapParams"];
PostProcessingResource_t.m_bHasBloomParams = jsonData["PostProcessingResource_t"]["m_bHasBloomParams"];
PostProcessingResource_t.m_bloomParams = jsonData["PostProcessingResource_t"]["m_bloomParams"];
PostProcessingResource_t.m_bHasVignetteParams = jsonData["PostProcessingResource_t"]["m_bHasVignetteParams"];
PostProcessingResource_t.m_vignetteParams = jsonData["PostProcessingResource_t"]["m_vignetteParams"];
PostProcessingResource_t.m_bHasLocalContrastParams = jsonData["PostProcessingResource_t"]["m_bHasLocalContrastParams"];
PostProcessingResource_t.m_localConstrastParams = jsonData["PostProcessingResource_t"]["m_localConstrastParams"];
PostProcessingResource_t.m_nColorCorrectionVolumeDim = jsonData["PostProcessingResource_t"]["m_nColorCorrectionVolumeDim"];
PostProcessingResource_t.m_colorCorrectionVolumeData = jsonData["PostProcessingResource_t"]["m_colorCorrectionVolumeData"];
PostProcessingResource_t.m_bHasColorCorrection = jsonData["PostProcessingResource_t"]["m_bHasColorCorrection"];

// Atribuições para MaterialParamInt_t
// MaterialParamInt_t Offsets
MaterialParamInt_t.m_nValue = jsonData["MaterialParamInt_t"]["m_nValue"];

// Atribuições para PostProcessingVignetteParameters_t
// PostProcessingVignetteParameters_t Offsets
PostProcessingVignetteParameters_t.m_flVignetteStrength = jsonData["PostProcessingVignetteParameters_t"]["m_flVignetteStrength"];
PostProcessingVignetteParameters_t.m_vCenter = jsonData["PostProcessingVignetteParameters_t"]["m_vCenter"];
PostProcessingVignetteParameters_t.m_flRadius = jsonData["PostProcessingVignetteParameters_t"]["m_flRadius"];
PostProcessingVignetteParameters_t.m_flRoundness = jsonData["PostProcessingVignetteParameters_t"]["m_flRoundness"];
PostProcessingVignetteParameters_t.m_flFeather = jsonData["PostProcessingVignetteParameters_t"]["m_flFeather"];
PostProcessingVignetteParameters_t.m_vColorTint = jsonData["PostProcessingVignetteParameters_t"]["m_vColorTint"];

// Atribuições para PostProcessingLocalContrastParameters_t
// PostProcessingLocalContrastParameters_t Offsets
PostProcessingLocalContrastParameters_t.m_flLocalContrastStrength = jsonData["PostProcessingLocalContrastParameters_t"]["m_flLocalContrastStrength"];
PostProcessingLocalContrastParameters_t.m_flLocalContrastEdgeStrength = jsonData["PostProcessingLocalContrastParameters_t"]["m_flLocalContrastEdgeStrength"];
PostProcessingLocalContrastParameters_t.m_flLocalContrastVignetteStart = jsonData["PostProcessingLocalContrastParameters_t"]["m_flLocalContrastVignetteStart"];
PostProcessingLocalContrastParameters_t.m_flLocalContrastVignetteEnd = jsonData["PostProcessingLocalContrastParameters_t"]["m_flLocalContrastVignetteEnd"];
PostProcessingLocalContrastParameters_t.m_flLocalContrastVignetteBlur = jsonData["PostProcessingLocalContrastParameters_t"]["m_flLocalContrastVignetteBlur"];

// Atribuições para PostProcessingTonemapParameters_t
// PostProcessingTonemapParameters_t Offsets
PostProcessingTonemapParameters_t.m_flExposureBias = jsonData["PostProcessingTonemapParameters_t"]["m_flExposureBias"];
PostProcessingTonemapParameters_t.m_flShoulderStrength = jsonData["PostProcessingTonemapParameters_t"]["m_flShoulderStrength"];
PostProcessingTonemapParameters_t.m_flLinearStrength = jsonData["PostProcessingTonemapParameters_t"]["m_flLinearStrength"];
PostProcessingTonemapParameters_t.m_flLinearAngle = jsonData["PostProcessingTonemapParameters_t"]["m_flLinearAngle"];
PostProcessingTonemapParameters_t.m_flToeStrength = jsonData["PostProcessingTonemapParameters_t"]["m_flToeStrength"];
PostProcessingTonemapParameters_t.m_flToeNum = jsonData["PostProcessingTonemapParameters_t"]["m_flToeNum"];
PostProcessingTonemapParameters_t.m_flToeDenom = jsonData["PostProcessingTonemapParameters_t"]["m_flToeDenom"];
PostProcessingTonemapParameters_t.m_flWhitePoint = jsonData["PostProcessingTonemapParameters_t"]["m_flWhitePoint"];
PostProcessingTonemapParameters_t.m_flLuminanceSource = jsonData["PostProcessingTonemapParameters_t"]["m_flLuminanceSource"];
PostProcessingTonemapParameters_t.m_flExposureBiasShadows = jsonData["PostProcessingTonemapParameters_t"]["m_flExposureBiasShadows"];
PostProcessingTonemapParameters_t.m_flExposureBiasHighlights = jsonData["PostProcessingTonemapParameters_t"]["m_flExposureBiasHighlights"];
PostProcessingTonemapParameters_t.m_flMinShadowLum = jsonData["PostProcessingTonemapParameters_t"]["m_flMinShadowLum"];
PostProcessingTonemapParameters_t.m_flMaxShadowLum = jsonData["PostProcessingTonemapParameters_t"]["m_flMaxShadowLum"];
PostProcessingTonemapParameters_t.m_flMinHighlightLum = jsonData["PostProcessingTonemapParameters_t"]["m_flMinHighlightLum"];
PostProcessingTonemapParameters_t.m_flMaxHighlightLum = jsonData["PostProcessingTonemapParameters_t"]["m_flMaxHighlightLum"];

// Atribuições para MaterialParamBuffer_t
// MaterialParamBuffer_t Offsets
MaterialParamBuffer_t.m_value = jsonData["MaterialParamBuffer_t"]["m_value"];

// Atribuições para MaterialResourceData_t
// MaterialResourceData_t Offsets
MaterialResourceData_t.m_materialName = jsonData["MaterialResourceData_t"]["m_materialName"];
MaterialResourceData_t.m_shaderName = jsonData["MaterialResourceData_t"]["m_shaderName"];
MaterialResourceData_t.m_intParams = jsonData["MaterialResourceData_t"]["m_intParams"];
MaterialResourceData_t.m_floatParams = jsonData["MaterialResourceData_t"]["m_floatParams"];
MaterialResourceData_t.m_vectorParams = jsonData["MaterialResourceData_t"]["m_vectorParams"];
MaterialResourceData_t.m_textureParams = jsonData["MaterialResourceData_t"]["m_textureParams"];
MaterialResourceData_t.m_dynamicParams = jsonData["MaterialResourceData_t"]["m_dynamicParams"];
MaterialResourceData_t.m_dynamicTextureParams = jsonData["MaterialResourceData_t"]["m_dynamicTextureParams"];
MaterialResourceData_t.m_intAttributes = jsonData["MaterialResourceData_t"]["m_intAttributes"];
MaterialResourceData_t.m_floatAttributes = jsonData["MaterialResourceData_t"]["m_floatAttributes"];
MaterialResourceData_t.m_vectorAttributes = jsonData["MaterialResourceData_t"]["m_vectorAttributes"];
MaterialResourceData_t.m_textureAttributes = jsonData["MaterialResourceData_t"]["m_textureAttributes"];
MaterialResourceData_t.m_stringAttributes = jsonData["MaterialResourceData_t"]["m_stringAttributes"];
MaterialResourceData_t.m_renderAttributesUsed = jsonData["MaterialResourceData_t"]["m_renderAttributesUsed"];

// Atribuições para PostProcessingBloomParameters_t
// PostProcessingBloomParameters_t Offsets
PostProcessingBloomParameters_t.m_blendMode = jsonData["PostProcessingBloomParameters_t"]["m_blendMode"];
PostProcessingBloomParameters_t.m_flBloomStrength = jsonData["PostProcessingBloomParameters_t"]["m_flBloomStrength"];
PostProcessingBloomParameters_t.m_flScreenBloomStrength = jsonData["PostProcessingBloomParameters_t"]["m_flScreenBloomStrength"];
PostProcessingBloomParameters_t.m_flBlurBloomStrength = jsonData["PostProcessingBloomParameters_t"]["m_flBlurBloomStrength"];
PostProcessingBloomParameters_t.m_flBloomThreshold = jsonData["PostProcessingBloomParameters_t"]["m_flBloomThreshold"];
PostProcessingBloomParameters_t.m_flBloomThresholdWidth = jsonData["PostProcessingBloomParameters_t"]["m_flBloomThresholdWidth"];
PostProcessingBloomParameters_t.m_flSkyboxBloomStrength = jsonData["PostProcessingBloomParameters_t"]["m_flSkyboxBloomStrength"];
PostProcessingBloomParameters_t.m_flBloomStartValue = jsonData["PostProcessingBloomParameters_t"]["m_flBloomStartValue"];
PostProcessingBloomParameters_t.m_flBlurWeight = jsonData["PostProcessingBloomParameters_t"]["m_flBlurWeight"];
PostProcessingBloomParameters_t.m_vBlurTint = jsonData["PostProcessingBloomParameters_t"]["m_vBlurTint"];

// Atribuições para MaterialParamFloat_t
// MaterialParamFloat_t Offsets
MaterialParamFloat_t.m_flValue = jsonData["MaterialParamFloat_t"]["m_flValue"];

// Atribuições para MaterialParamTexture_t
// MaterialParamTexture_t Offsets
MaterialParamTexture_t.m_pValue = jsonData["MaterialParamTexture_t"]["m_pValue"];

// Atribuições para ChangeAccessorFieldPathIndex_t
// ChangeAccessorFieldPathIndex_t Offsets
ChangeAccessorFieldPathIndex_t.m_Value = jsonData["ChangeAccessorFieldPathIndex_t"]["m_Value"];

// Atribuições para C_OP_RemapGravityToVector
// C_OP_RemapGravityToVector Offsets
C_OP_RemapGravityToVector.m_vInput1 = jsonData["C_OP_RemapGravityToVector"]["m_vInput1"];
C_OP_RemapGravityToVector.m_nOutputField = jsonData["C_OP_RemapGravityToVector"]["m_nOutputField"];
C_OP_RemapGravityToVector.m_nSetMethod = jsonData["C_OP_RemapGravityToVector"]["m_nSetMethod"];
C_OP_RemapGravityToVector.m_bNormalizedOutput = jsonData["C_OP_RemapGravityToVector"]["m_bNormalizedOutput"];

// Atribuições para C_OP_Decay
// C_OP_Decay Offsets
C_OP_Decay.m_bRopeDecay = jsonData["C_OP_Decay"]["m_bRopeDecay"];
C_OP_Decay.m_bForcePreserveParticleOrder = jsonData["C_OP_Decay"]["m_bForcePreserveParticleOrder"];

// Atribuições para C_OP_RenderDeferredLight
// C_OP_RenderDeferredLight Offsets
C_OP_RenderDeferredLight.m_bUseAlphaTestWindow = jsonData["C_OP_RenderDeferredLight"]["m_bUseAlphaTestWindow"];
C_OP_RenderDeferredLight.m_bUseTexture = jsonData["C_OP_RenderDeferredLight"]["m_bUseTexture"];
C_OP_RenderDeferredLight.m_flRadiusScale = jsonData["C_OP_RenderDeferredLight"]["m_flRadiusScale"];
C_OP_RenderDeferredLight.m_flAlphaScale = jsonData["C_OP_RenderDeferredLight"]["m_flAlphaScale"];
C_OP_RenderDeferredLight.m_nAlpha2Field = jsonData["C_OP_RenderDeferredLight"]["m_nAlpha2Field"];
C_OP_RenderDeferredLight.m_vecColorScale = jsonData["C_OP_RenderDeferredLight"]["m_vecColorScale"];
C_OP_RenderDeferredLight.m_nColorBlendType = jsonData["C_OP_RenderDeferredLight"]["m_nColorBlendType"];
C_OP_RenderDeferredLight.m_flLightDistance = jsonData["C_OP_RenderDeferredLight"]["m_flLightDistance"];
C_OP_RenderDeferredLight.m_flStartFalloff = jsonData["C_OP_RenderDeferredLight"]["m_flStartFalloff"];
C_OP_RenderDeferredLight.m_flDistanceFalloff = jsonData["C_OP_RenderDeferredLight"]["m_flDistanceFalloff"];
C_OP_RenderDeferredLight.m_flSpotFoV = jsonData["C_OP_RenderDeferredLight"]["m_flSpotFoV"];
C_OP_RenderDeferredLight.m_nAlphaTestPointField = jsonData["C_OP_RenderDeferredLight"]["m_nAlphaTestPointField"];
C_OP_RenderDeferredLight.m_nAlphaTestRangeField = jsonData["C_OP_RenderDeferredLight"]["m_nAlphaTestRangeField"];
C_OP_RenderDeferredLight.m_nAlphaTestSharpnessField = jsonData["C_OP_RenderDeferredLight"]["m_nAlphaTestSharpnessField"];
C_OP_RenderDeferredLight.m_hTexture = jsonData["C_OP_RenderDeferredLight"]["m_hTexture"];
C_OP_RenderDeferredLight.m_nHSVShiftControlPoint = jsonData["C_OP_RenderDeferredLight"]["m_nHSVShiftControlPoint"];

// Atribuições para C_OP_RemapSpeedtoCP
// C_OP_RemapSpeedtoCP Offsets
C_OP_RemapSpeedtoCP.m_nInControlPointNumber = jsonData["C_OP_RemapSpeedtoCP"]["m_nInControlPointNumber"];
C_OP_RemapSpeedtoCP.m_nOutControlPointNumber = jsonData["C_OP_RemapSpeedtoCP"]["m_nOutControlPointNumber"];
C_OP_RemapSpeedtoCP.m_nField = jsonData["C_OP_RemapSpeedtoCP"]["m_nField"];
C_OP_RemapSpeedtoCP.m_flInputMin = jsonData["C_OP_RemapSpeedtoCP"]["m_flInputMin"];
C_OP_RemapSpeedtoCP.m_flInputMax = jsonData["C_OP_RemapSpeedtoCP"]["m_flInputMax"];
C_OP_RemapSpeedtoCP.m_flOutputMin = jsonData["C_OP_RemapSpeedtoCP"]["m_flOutputMin"];
C_OP_RemapSpeedtoCP.m_flOutputMax = jsonData["C_OP_RemapSpeedtoCP"]["m_flOutputMax"];
C_OP_RemapSpeedtoCP.m_bUseDeltaV = jsonData["C_OP_RemapSpeedtoCP"]["m_bUseDeltaV"];

// Atribuições para C_OP_RemapTransformToVelocity
// C_OP_RemapTransformToVelocity Offsets
C_OP_RemapTransformToVelocity.m_TransformInput = jsonData["C_OP_RemapTransformToVelocity"]["m_TransformInput"];

// Atribuições para CollisionGroupContext_t
// CollisionGroupContext_t Offsets
CollisionGroupContext_t.m_nCollisionGroupNumber = jsonData["CollisionGroupContext_t"]["m_nCollisionGroupNumber"];

// Atribuições para CParticleModelInput
// CParticleModelInput Offsets
CParticleModelInput.m_nType = jsonData["CParticleModelInput"]["m_nType"];
CParticleModelInput.m_NamedValue = jsonData["CParticleModelInput"]["m_NamedValue"];
CParticleModelInput.m_nControlPoint = jsonData["CParticleModelInput"]["m_nControlPoint"];

// Atribuições para CParticleFunctionPreEmission
// CParticleFunctionPreEmission Offsets
CParticleFunctionPreEmission.m_bRunOnce = jsonData["CParticleFunctionPreEmission"]["m_bRunOnce"];

// Atribuições para C_OP_FadeOutSimple
// C_OP_FadeOutSimple Offsets
C_OP_FadeOutSimple.m_flFadeOutTime = jsonData["C_OP_FadeOutSimple"]["m_flFadeOutTime"];
C_OP_FadeOutSimple.m_nFieldOutput = jsonData["C_OP_FadeOutSimple"]["m_nFieldOutput"];

// Atribuições para C_OP_SpringToVectorConstraint
// C_OP_SpringToVectorConstraint Offsets
C_OP_SpringToVectorConstraint.m_flRestLength = jsonData["C_OP_SpringToVectorConstraint"]["m_flRestLength"];
C_OP_SpringToVectorConstraint.m_flMinDistance = jsonData["C_OP_SpringToVectorConstraint"]["m_flMinDistance"];
C_OP_SpringToVectorConstraint.m_flMaxDistance = jsonData["C_OP_SpringToVectorConstraint"]["m_flMaxDistance"];
C_OP_SpringToVectorConstraint.m_flRestingLength = jsonData["C_OP_SpringToVectorConstraint"]["m_flRestingLength"];
C_OP_SpringToVectorConstraint.m_vecAnchorVector = jsonData["C_OP_SpringToVectorConstraint"]["m_vecAnchorVector"];

// Atribuições para C_OP_RenderRopes
// C_OP_RenderRopes Offsets
C_OP_RenderRopes.m_bEnableFadingAndClamping = jsonData["C_OP_RenderRopes"]["m_bEnableFadingAndClamping"];
C_OP_RenderRopes.m_flMinSize = jsonData["C_OP_RenderRopes"]["m_flMinSize"];
C_OP_RenderRopes.m_flMaxSize = jsonData["C_OP_RenderRopes"]["m_flMaxSize"];
C_OP_RenderRopes.m_flStartFadeSize = jsonData["C_OP_RenderRopes"]["m_flStartFadeSize"];
C_OP_RenderRopes.m_flEndFadeSize = jsonData["C_OP_RenderRopes"]["m_flEndFadeSize"];
C_OP_RenderRopes.m_flStartFadeDot = jsonData["C_OP_RenderRopes"]["m_flStartFadeDot"];
C_OP_RenderRopes.m_flEndFadeDot = jsonData["C_OP_RenderRopes"]["m_flEndFadeDot"];
C_OP_RenderRopes.m_flRadiusTaper = jsonData["C_OP_RenderRopes"]["m_flRadiusTaper"];
C_OP_RenderRopes.m_nMinTesselation = jsonData["C_OP_RenderRopes"]["m_nMinTesselation"];
C_OP_RenderRopes.m_nMaxTesselation = jsonData["C_OP_RenderRopes"]["m_nMaxTesselation"];
C_OP_RenderRopes.m_flTessScale = jsonData["C_OP_RenderRopes"]["m_flTessScale"];
C_OP_RenderRopes.m_flTextureVWorldSize = jsonData["C_OP_RenderRopes"]["m_flTextureVWorldSize"];
C_OP_RenderRopes.m_flTextureVScrollRate = jsonData["C_OP_RenderRopes"]["m_flTextureVScrollRate"];
C_OP_RenderRopes.m_flTextureVOffset = jsonData["C_OP_RenderRopes"]["m_flTextureVOffset"];
C_OP_RenderRopes.m_nTextureVParamsCP = jsonData["C_OP_RenderRopes"]["m_nTextureVParamsCP"];
C_OP_RenderRopes.m_bClampV = jsonData["C_OP_RenderRopes"]["m_bClampV"];
C_OP_RenderRopes.m_nScaleCP1 = jsonData["C_OP_RenderRopes"]["m_nScaleCP1"];
C_OP_RenderRopes.m_nScaleCP2 = jsonData["C_OP_RenderRopes"]["m_nScaleCP2"];
C_OP_RenderRopes.m_flScaleVSizeByControlPointDistance = jsonData["C_OP_RenderRopes"]["m_flScaleVSizeByControlPointDistance"];
C_OP_RenderRopes.m_flScaleVScrollByControlPointDistance = jsonData["C_OP_RenderRopes"]["m_flScaleVScrollByControlPointDistance"];
C_OP_RenderRopes.m_flScaleVOffsetByControlPointDistance = jsonData["C_OP_RenderRopes"]["m_flScaleVOffsetByControlPointDistance"];
C_OP_RenderRopes.m_bUseScalarForTextureCoordinate = jsonData["C_OP_RenderRopes"]["m_bUseScalarForTextureCoordinate"];
C_OP_RenderRopes.m_nScalarFieldForTextureCoordinate = jsonData["C_OP_RenderRopes"]["m_nScalarFieldForTextureCoordinate"];
C_OP_RenderRopes.m_flScalarAttributeTextureCoordScale = jsonData["C_OP_RenderRopes"]["m_flScalarAttributeTextureCoordScale"];
C_OP_RenderRopes.m_bReverseOrder = jsonData["C_OP_RenderRopes"]["m_bReverseOrder"];
C_OP_RenderRopes.m_bClosedLoop = jsonData["C_OP_RenderRopes"]["m_bClosedLoop"];
C_OP_RenderRopes.m_nOrientationType = jsonData["C_OP_RenderRopes"]["m_nOrientationType"];
C_OP_RenderRopes.m_nVectorFieldForOrientation = jsonData["C_OP_RenderRopes"]["m_nVectorFieldForOrientation"];
C_OP_RenderRopes.m_bDrawAsOpaque = jsonData["C_OP_RenderRopes"]["m_bDrawAsOpaque"];
C_OP_RenderRopes.m_bGenerateNormals = jsonData["C_OP_RenderRopes"]["m_bGenerateNormals"];

// Atribuições para C_INIT_StatusEffectCitadel
// C_INIT_StatusEffectCitadel Offsets
C_INIT_StatusEffectCitadel.m_flSFXColorWarpAmount = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXColorWarpAmount"];
C_INIT_StatusEffectCitadel.m_flSFXNormalAmount = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXNormalAmount"];
C_INIT_StatusEffectCitadel.m_flSFXMetalnessAmount = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXMetalnessAmount"];
C_INIT_StatusEffectCitadel.m_flSFXRoughnessAmount = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXRoughnessAmount"];
C_INIT_StatusEffectCitadel.m_flSFXSelfIllumAmount = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSelfIllumAmount"];
C_INIT_StatusEffectCitadel.m_flSFXSScale = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSScale"];
C_INIT_StatusEffectCitadel.m_flSFXSScrollX = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSScrollX"];
C_INIT_StatusEffectCitadel.m_flSFXSScrollY = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSScrollY"];
C_INIT_StatusEffectCitadel.m_flSFXSScrollZ = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSScrollZ"];
C_INIT_StatusEffectCitadel.m_flSFXSOffsetX = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSOffsetX"];
C_INIT_StatusEffectCitadel.m_flSFXSOffsetY = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSOffsetY"];
C_INIT_StatusEffectCitadel.m_flSFXSOffsetZ = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSOffsetZ"];
C_INIT_StatusEffectCitadel.m_nDetailCombo = jsonData["C_INIT_StatusEffectCitadel"]["m_nDetailCombo"];
C_INIT_StatusEffectCitadel.m_flSFXSDetailAmount = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSDetailAmount"];
C_INIT_StatusEffectCitadel.m_flSFXSDetailScale = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSDetailScale"];
C_INIT_StatusEffectCitadel.m_flSFXSDetailScrollX = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSDetailScrollX"];
C_INIT_StatusEffectCitadel.m_flSFXSDetailScrollY = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSDetailScrollY"];
C_INIT_StatusEffectCitadel.m_flSFXSDetailScrollZ = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSDetailScrollZ"];
C_INIT_StatusEffectCitadel.m_flSFXSUseModelUVs = jsonData["C_INIT_StatusEffectCitadel"]["m_flSFXSUseModelUVs"];

// Atribuições para C_OP_RenderSound
// C_OP_RenderSound Offsets
C_OP_RenderSound.m_flDurationScale = jsonData["C_OP_RenderSound"]["m_flDurationScale"];
C_OP_RenderSound.m_flSndLvlScale = jsonData["C_OP_RenderSound"]["m_flSndLvlScale"];
C_OP_RenderSound.m_flPitchScale = jsonData["C_OP_RenderSound"]["m_flPitchScale"];
C_OP_RenderSound.m_flVolumeScale = jsonData["C_OP_RenderSound"]["m_flVolumeScale"];
C_OP_RenderSound.m_nSndLvlField = jsonData["C_OP_RenderSound"]["m_nSndLvlField"];
C_OP_RenderSound.m_nDurationField = jsonData["C_OP_RenderSound"]["m_nDurationField"];
C_OP_RenderSound.m_nPitchField = jsonData["C_OP_RenderSound"]["m_nPitchField"];
C_OP_RenderSound.m_nVolumeField = jsonData["C_OP_RenderSound"]["m_nVolumeField"];
C_OP_RenderSound.m_nChannel = jsonData["C_OP_RenderSound"]["m_nChannel"];
C_OP_RenderSound.m_nCPReference = jsonData["C_OP_RenderSound"]["m_nCPReference"];
C_OP_RenderSound.m_pszSoundName = jsonData["C_OP_RenderSound"]["m_pszSoundName"];
C_OP_RenderSound.m_bSuppressStopSoundEvent = jsonData["C_OP_RenderSound"]["m_bSuppressStopSoundEvent"];

// Atribuições para CParticleVisibilityInputs
// CParticleVisibilityInputs Offsets
CParticleVisibilityInputs.m_flCameraBias = jsonData["CParticleVisibilityInputs"]["m_flCameraBias"];
CParticleVisibilityInputs.m_nCPin = jsonData["CParticleVisibilityInputs"]["m_nCPin"];
CParticleVisibilityInputs.m_flProxyRadius = jsonData["CParticleVisibilityInputs"]["m_flProxyRadius"];
CParticleVisibilityInputs.m_flInputMin = jsonData["CParticleVisibilityInputs"]["m_flInputMin"];
CParticleVisibilityInputs.m_flInputMax = jsonData["CParticleVisibilityInputs"]["m_flInputMax"];
CParticleVisibilityInputs.m_flInputPixelVisFade = jsonData["CParticleVisibilityInputs"]["m_flInputPixelVisFade"];
CParticleVisibilityInputs.m_flNoPixelVisibilityFallback = jsonData["CParticleVisibilityInputs"]["m_flNoPixelVisibilityFallback"];
CParticleVisibilityInputs.m_flDistanceInputMin = jsonData["CParticleVisibilityInputs"]["m_flDistanceInputMin"];
CParticleVisibilityInputs.m_flDistanceInputMax = jsonData["CParticleVisibilityInputs"]["m_flDistanceInputMax"];
CParticleVisibilityInputs.m_flDotInputMin = jsonData["CParticleVisibilityInputs"]["m_flDotInputMin"];
CParticleVisibilityInputs.m_flDotInputMax = jsonData["CParticleVisibilityInputs"]["m_flDotInputMax"];
CParticleVisibilityInputs.m_bDotCPAngles = jsonData["CParticleVisibilityInputs"]["m_bDotCPAngles"];
CParticleVisibilityInputs.m_bDotCameraAngles = jsonData["CParticleVisibilityInputs"]["m_bDotCameraAngles"];
CParticleVisibilityInputs.m_flAlphaScaleMin = jsonData["CParticleVisibilityInputs"]["m_flAlphaScaleMin"];
CParticleVisibilityInputs.m_flAlphaScaleMax = jsonData["CParticleVisibilityInputs"]["m_flAlphaScaleMax"];
CParticleVisibilityInputs.m_flRadiusScaleMin = jsonData["CParticleVisibilityInputs"]["m_flRadiusScaleMin"];
CParticleVisibilityInputs.m_flRadiusScaleMax = jsonData["CParticleVisibilityInputs"]["m_flRadiusScaleMax"];
CParticleVisibilityInputs.m_flRadiusScaleFOVBase = jsonData["CParticleVisibilityInputs"]["m_flRadiusScaleFOVBase"];
CParticleVisibilityInputs.m_bRightEye = jsonData["CParticleVisibilityInputs"]["m_bRightEye"];

// Atribuições para C_OP_SetControlPointsToParticle
// C_OP_SetControlPointsToParticle Offsets
C_OP_SetControlPointsToParticle.m_nChildGroupID = jsonData["C_OP_SetControlPointsToParticle"]["m_nChildGroupID"];
C_OP_SetControlPointsToParticle.m_nFirstControlPoint = jsonData["C_OP_SetControlPointsToParticle"]["m_nFirstControlPoint"];
C_OP_SetControlPointsToParticle.m_nNumControlPoints = jsonData["C_OP_SetControlPointsToParticle"]["m_nNumControlPoints"];
C_OP_SetControlPointsToParticle.m_nFirstSourcePoint = jsonData["C_OP_SetControlPointsToParticle"]["m_nFirstSourcePoint"];
C_OP_SetControlPointsToParticle.m_bSetOrientation = jsonData["C_OP_SetControlPointsToParticle"]["m_bSetOrientation"];
C_OP_SetControlPointsToParticle.m_nOrientationMode = jsonData["C_OP_SetControlPointsToParticle"]["m_nOrientationMode"];
C_OP_SetControlPointsToParticle.m_nSetParent = jsonData["C_OP_SetControlPointsToParticle"]["m_nSetParent"];

// Atribuições para C_OP_RemapSDFDistanceToVectorAttribute
// C_OP_RemapSDFDistanceToVectorAttribute Offsets
C_OP_RemapSDFDistanceToVectorAttribute.m_nVectorFieldOutput = jsonData["C_OP_RemapSDFDistanceToVectorAttribute"]["m_nVectorFieldOutput"];
C_OP_RemapSDFDistanceToVectorAttribute.m_nVectorFieldInput = jsonData["C_OP_RemapSDFDistanceToVectorAttribute"]["m_nVectorFieldInput"];
C_OP_RemapSDFDistanceToVectorAttribute.m_flMinDistance = jsonData["C_OP_RemapSDFDistanceToVectorAttribute"]["m_flMinDistance"];
C_OP_RemapSDFDistanceToVectorAttribute.m_flMaxDistance = jsonData["C_OP_RemapSDFDistanceToVectorAttribute"]["m_flMaxDistance"];
C_OP_RemapSDFDistanceToVectorAttribute.m_vValueBelowMin = jsonData["C_OP_RemapSDFDistanceToVectorAttribute"]["m_vValueBelowMin"];
C_OP_RemapSDFDistanceToVectorAttribute.m_vValueAtMin = jsonData["C_OP_RemapSDFDistanceToVectorAttribute"]["m_vValueAtMin"];
C_OP_RemapSDFDistanceToVectorAttribute.m_vValueAtMax = jsonData["C_OP_RemapSDFDistanceToVectorAttribute"]["m_vValueAtMax"];
C_OP_RemapSDFDistanceToVectorAttribute.m_vValueAboveMax = jsonData["C_OP_RemapSDFDistanceToVectorAttribute"]["m_vValueAboveMax"];

// Atribuições para C_OP_RemapCPVelocityToVector
// C_OP_RemapCPVelocityToVector Offsets
C_OP_RemapCPVelocityToVector.m_nControlPoint = jsonData["C_OP_RemapCPVelocityToVector"]["m_nControlPoint"];
C_OP_RemapCPVelocityToVector.m_nFieldOutput = jsonData["C_OP_RemapCPVelocityToVector"]["m_nFieldOutput"];
C_OP_RemapCPVelocityToVector.m_flScale = jsonData["C_OP_RemapCPVelocityToVector"]["m_flScale"];
C_OP_RemapCPVelocityToVector.m_bNormalize = jsonData["C_OP_RemapCPVelocityToVector"]["m_bNormalize"];

// Atribuições para C_OP_PointVectorAtNextParticle
// C_OP_PointVectorAtNextParticle Offsets
C_OP_PointVectorAtNextParticle.m_nFieldOutput = jsonData["C_OP_PointVectorAtNextParticle"]["m_nFieldOutput"];
C_OP_PointVectorAtNextParticle.m_flInterpolation = jsonData["C_OP_PointVectorAtNextParticle"]["m_flInterpolation"];

// Atribuições para ParticlePreviewBodyGroup_t
// ParticlePreviewBodyGroup_t Offsets
ParticlePreviewBodyGroup_t.m_bodyGroupName = jsonData["ParticlePreviewBodyGroup_t"]["m_bodyGroupName"];
ParticlePreviewBodyGroup_t.m_nValue = jsonData["ParticlePreviewBodyGroup_t"]["m_nValue"];

// Atribuições para C_OP_OscillateScalarSimple
// C_OP_OscillateScalarSimple Offsets
C_OP_OscillateScalarSimple.m_Rate = jsonData["C_OP_OscillateScalarSimple"]["m_Rate"];
C_OP_OscillateScalarSimple.m_Frequency = jsonData["C_OP_OscillateScalarSimple"]["m_Frequency"];
C_OP_OscillateScalarSimple.m_nField = jsonData["C_OP_OscillateScalarSimple"]["m_nField"];
C_OP_OscillateScalarSimple.m_flOscMult = jsonData["C_OP_OscillateScalarSimple"]["m_flOscMult"];
C_OP_OscillateScalarSimple.m_flOscAdd = jsonData["C_OP_OscillateScalarSimple"]["m_flOscAdd"];

// Atribuições para C_INIT_StatusEffect
// C_INIT_StatusEffect Offsets
C_INIT_StatusEffect.m_nDetail2Combo = jsonData["C_INIT_StatusEffect"]["m_nDetail2Combo"];
C_INIT_StatusEffect.m_flDetail2Rotation = jsonData["C_INIT_StatusEffect"]["m_flDetail2Rotation"];
C_INIT_StatusEffect.m_flDetail2Scale = jsonData["C_INIT_StatusEffect"]["m_flDetail2Scale"];
C_INIT_StatusEffect.m_flDetail2BlendFactor = jsonData["C_INIT_StatusEffect"]["m_flDetail2BlendFactor"];
C_INIT_StatusEffect.m_flColorWarpIntensity = jsonData["C_INIT_StatusEffect"]["m_flColorWarpIntensity"];
C_INIT_StatusEffect.m_flDiffuseWarpBlendToFull = jsonData["C_INIT_StatusEffect"]["m_flDiffuseWarpBlendToFull"];
C_INIT_StatusEffect.m_flEnvMapIntensity = jsonData["C_INIT_StatusEffect"]["m_flEnvMapIntensity"];
C_INIT_StatusEffect.m_flAmbientScale = jsonData["C_INIT_StatusEffect"]["m_flAmbientScale"];
C_INIT_StatusEffect.m_specularColor = jsonData["C_INIT_StatusEffect"]["m_specularColor"];
C_INIT_StatusEffect.m_flSpecularScale = jsonData["C_INIT_StatusEffect"]["m_flSpecularScale"];
C_INIT_StatusEffect.m_flSpecularExponent = jsonData["C_INIT_StatusEffect"]["m_flSpecularExponent"];
C_INIT_StatusEffect.m_flSpecularExponentBlendToFull = jsonData["C_INIT_StatusEffect"]["m_flSpecularExponentBlendToFull"];
C_INIT_StatusEffect.m_flSpecularBlendToFull = jsonData["C_INIT_StatusEffect"]["m_flSpecularBlendToFull"];
C_INIT_StatusEffect.m_rimLightColor = jsonData["C_INIT_StatusEffect"]["m_rimLightColor"];
C_INIT_StatusEffect.m_flRimLightScale = jsonData["C_INIT_StatusEffect"]["m_flRimLightScale"];
C_INIT_StatusEffect.m_flReflectionsTintByBaseBlendToNone = jsonData["C_INIT_StatusEffect"]["m_flReflectionsTintByBaseBlendToNone"];
C_INIT_StatusEffect.m_flMetalnessBlendToFull = jsonData["C_INIT_StatusEffect"]["m_flMetalnessBlendToFull"];
C_INIT_StatusEffect.m_flSelfIllumBlendToFull = jsonData["C_INIT_StatusEffect"]["m_flSelfIllumBlendToFull"];

// Atribuições para C_INIT_RtEnvCull
// C_INIT_RtEnvCull Offsets
C_INIT_RtEnvCull.m_vecTestDir = jsonData["C_INIT_RtEnvCull"]["m_vecTestDir"];
C_INIT_RtEnvCull.m_vecTestNormal = jsonData["C_INIT_RtEnvCull"]["m_vecTestNormal"];
C_INIT_RtEnvCull.m_bUseVelocity = jsonData["C_INIT_RtEnvCull"]["m_bUseVelocity"];
C_INIT_RtEnvCull.m_bCullOnMiss = jsonData["C_INIT_RtEnvCull"]["m_bCullOnMiss"];
C_INIT_RtEnvCull.m_bLifeAdjust = jsonData["C_INIT_RtEnvCull"]["m_bLifeAdjust"];
C_INIT_RtEnvCull.m_RtEnvName = jsonData["C_INIT_RtEnvCull"]["m_RtEnvName"];
C_INIT_RtEnvCull.m_nRTEnvCP = jsonData["C_INIT_RtEnvCull"]["m_nRTEnvCP"];
C_INIT_RtEnvCull.m_nComponent = jsonData["C_INIT_RtEnvCull"]["m_nComponent"];

// Atribuições para C_OP_ConstrainDistance
// C_OP_ConstrainDistance Offsets
C_OP_ConstrainDistance.m_fMinDistance = jsonData["C_OP_ConstrainDistance"]["m_fMinDistance"];
C_OP_ConstrainDistance.m_fMaxDistance = jsonData["C_OP_ConstrainDistance"]["m_fMaxDistance"];
C_OP_ConstrainDistance.m_nControlPointNumber = jsonData["C_OP_ConstrainDistance"]["m_nControlPointNumber"];
C_OP_ConstrainDistance.m_CenterOffset = jsonData["C_OP_ConstrainDistance"]["m_CenterOffset"];
C_OP_ConstrainDistance.m_bGlobalCenter = jsonData["C_OP_ConstrainDistance"]["m_bGlobalCenter"];

// Atribuições para C_INIT_RandomVector
// C_INIT_RandomVector Offsets
C_INIT_RandomVector.m_vecMin = jsonData["C_INIT_RandomVector"]["m_vecMin"];
C_INIT_RandomVector.m_vecMax = jsonData["C_INIT_RandomVector"]["m_vecMax"];
C_INIT_RandomVector.m_nFieldOutput = jsonData["C_INIT_RandomVector"]["m_nFieldOutput"];
C_INIT_RandomVector.m_randomnessParameters = jsonData["C_INIT_RandomVector"]["m_randomnessParameters"];

// Atribuições para C_INIT_InitialVelocityNoise
// C_INIT_InitialVelocityNoise Offsets
C_INIT_InitialVelocityNoise.m_vecAbsVal = jsonData["C_INIT_InitialVelocityNoise"]["m_vecAbsVal"];
C_INIT_InitialVelocityNoise.m_vecAbsValInv = jsonData["C_INIT_InitialVelocityNoise"]["m_vecAbsValInv"];
C_INIT_InitialVelocityNoise.m_vecOffsetLoc = jsonData["C_INIT_InitialVelocityNoise"]["m_vecOffsetLoc"];
C_INIT_InitialVelocityNoise.m_flOffset = jsonData["C_INIT_InitialVelocityNoise"]["m_flOffset"];
C_INIT_InitialVelocityNoise.m_vecOutputMin = jsonData["C_INIT_InitialVelocityNoise"]["m_vecOutputMin"];
C_INIT_InitialVelocityNoise.m_vecOutputMax = jsonData["C_INIT_InitialVelocityNoise"]["m_vecOutputMax"];
C_INIT_InitialVelocityNoise.m_flNoiseScale = jsonData["C_INIT_InitialVelocityNoise"]["m_flNoiseScale"];
C_INIT_InitialVelocityNoise.m_flNoiseScaleLoc = jsonData["C_INIT_InitialVelocityNoise"]["m_flNoiseScaleLoc"];
C_INIT_InitialVelocityNoise.m_TransformInput = jsonData["C_INIT_InitialVelocityNoise"]["m_TransformInput"];
C_INIT_InitialVelocityNoise.m_bIgnoreDt = jsonData["C_INIT_InitialVelocityNoise"]["m_bIgnoreDt"];

// Atribuições para ParticleChildrenInfo_t
// ParticleChildrenInfo_t Offsets
ParticleChildrenInfo_t.m_ChildRef = jsonData["ParticleChildrenInfo_t"]["m_ChildRef"];
ParticleChildrenInfo_t.m_flDelay = jsonData["ParticleChildrenInfo_t"]["m_flDelay"];
ParticleChildrenInfo_t.m_bEndCap = jsonData["ParticleChildrenInfo_t"]["m_bEndCap"];
ParticleChildrenInfo_t.m_bDisableChild = jsonData["ParticleChildrenInfo_t"]["m_bDisableChild"];
ParticleChildrenInfo_t.m_nDetailLevel = jsonData["ParticleChildrenInfo_t"]["m_nDetailLevel"];

// Atribuições para C_OP_RemapScalarOnceTimed
// C_OP_RemapScalarOnceTimed Offsets
C_OP_RemapScalarOnceTimed.m_bProportional = jsonData["C_OP_RemapScalarOnceTimed"]["m_bProportional"];
C_OP_RemapScalarOnceTimed.m_nFieldInput = jsonData["C_OP_RemapScalarOnceTimed"]["m_nFieldInput"];
C_OP_RemapScalarOnceTimed.m_nFieldOutput = jsonData["C_OP_RemapScalarOnceTimed"]["m_nFieldOutput"];
C_OP_RemapScalarOnceTimed.m_flInputMin = jsonData["C_OP_RemapScalarOnceTimed"]["m_flInputMin"];
C_OP_RemapScalarOnceTimed.m_flInputMax = jsonData["C_OP_RemapScalarOnceTimed"]["m_flInputMax"];
C_OP_RemapScalarOnceTimed.m_flOutputMin = jsonData["C_OP_RemapScalarOnceTimed"]["m_flOutputMin"];
C_OP_RemapScalarOnceTimed.m_flOutputMax = jsonData["C_OP_RemapScalarOnceTimed"]["m_flOutputMax"];
C_OP_RemapScalarOnceTimed.m_flRemapTime = jsonData["C_OP_RemapScalarOnceTimed"]["m_flRemapTime"];

// Atribuições para C_OP_PlaneCull
// C_OP_PlaneCull Offsets
C_OP_PlaneCull.m_nPlaneControlPoint = jsonData["C_OP_PlaneCull"]["m_nPlaneControlPoint"];
C_OP_PlaneCull.m_vecPlaneDirection = jsonData["C_OP_PlaneCull"]["m_vecPlaneDirection"];
C_OP_PlaneCull.m_bLocalSpace = jsonData["C_OP_PlaneCull"]["m_bLocalSpace"];
C_OP_PlaneCull.m_flPlaneOffset = jsonData["C_OP_PlaneCull"]["m_flPlaneOffset"];

// Atribuições para C_INIT_VelocityRandom
// C_INIT_VelocityRandom Offsets
C_INIT_VelocityRandom.m_nControlPointNumber = jsonData["C_INIT_VelocityRandom"]["m_nControlPointNumber"];
C_INIT_VelocityRandom.m_fSpeedMin = jsonData["C_INIT_VelocityRandom"]["m_fSpeedMin"];
C_INIT_VelocityRandom.m_fSpeedMax = jsonData["C_INIT_VelocityRandom"]["m_fSpeedMax"];
C_INIT_VelocityRandom.m_LocalCoordinateSystemSpeedMin = jsonData["C_INIT_VelocityRandom"]["m_LocalCoordinateSystemSpeedMin"];
C_INIT_VelocityRandom.m_LocalCoordinateSystemSpeedMax = jsonData["C_INIT_VelocityRandom"]["m_LocalCoordinateSystemSpeedMax"];
C_INIT_VelocityRandom.m_bIgnoreDT = jsonData["C_INIT_VelocityRandom"]["m_bIgnoreDT"];
C_INIT_VelocityRandom.m_randomnessParameters = jsonData["C_INIT_VelocityRandom"]["m_randomnessParameters"];

// Atribuições para C_OP_ModelDampenMovement
// C_OP_ModelDampenMovement Offsets
C_OP_ModelDampenMovement.m_nControlPointNumber = jsonData["C_OP_ModelDampenMovement"]["m_nControlPointNumber"];
C_OP_ModelDampenMovement.m_bBoundBox = jsonData["C_OP_ModelDampenMovement"]["m_bBoundBox"];
C_OP_ModelDampenMovement.m_bOutside = jsonData["C_OP_ModelDampenMovement"]["m_bOutside"];
C_OP_ModelDampenMovement.m_bUseBones = jsonData["C_OP_ModelDampenMovement"]["m_bUseBones"];
C_OP_ModelDampenMovement.m_HitboxSetName = jsonData["C_OP_ModelDampenMovement"]["m_HitboxSetName"];
C_OP_ModelDampenMovement.m_vecPosOffset = jsonData["C_OP_ModelDampenMovement"]["m_vecPosOffset"];
C_OP_ModelDampenMovement.m_fDrag = jsonData["C_OP_ModelDampenMovement"]["m_fDrag"];

// Atribuições para C_OP_TwistAroundAxis
// C_OP_TwistAroundAxis Offsets
C_OP_TwistAroundAxis.m_fForceAmount = jsonData["C_OP_TwistAroundAxis"]["m_fForceAmount"];
C_OP_TwistAroundAxis.m_TwistAxis = jsonData["C_OP_TwistAroundAxis"]["m_TwistAxis"];
C_OP_TwistAroundAxis.m_bLocalSpace = jsonData["C_OP_TwistAroundAxis"]["m_bLocalSpace"];
C_OP_TwistAroundAxis.m_nControlPointNumber = jsonData["C_OP_TwistAroundAxis"]["m_nControlPointNumber"];

// Atribuições para C_OP_TeleportBeam
// C_OP_TeleportBeam Offsets
C_OP_TeleportBeam.m_nCPPosition = jsonData["C_OP_TeleportBeam"]["m_nCPPosition"];
C_OP_TeleportBeam.m_nCPVelocity = jsonData["C_OP_TeleportBeam"]["m_nCPVelocity"];
C_OP_TeleportBeam.m_nCPMisc = jsonData["C_OP_TeleportBeam"]["m_nCPMisc"];
C_OP_TeleportBeam.m_nCPColor = jsonData["C_OP_TeleportBeam"]["m_nCPColor"];
C_OP_TeleportBeam.m_nCPInvalidColor = jsonData["C_OP_TeleportBeam"]["m_nCPInvalidColor"];
C_OP_TeleportBeam.m_nCPExtraArcData = jsonData["C_OP_TeleportBeam"]["m_nCPExtraArcData"];
C_OP_TeleportBeam.m_vGravity = jsonData["C_OP_TeleportBeam"]["m_vGravity"];
C_OP_TeleportBeam.m_flArcMaxDuration = jsonData["C_OP_TeleportBeam"]["m_flArcMaxDuration"];
C_OP_TeleportBeam.m_flSegmentBreak = jsonData["C_OP_TeleportBeam"]["m_flSegmentBreak"];
C_OP_TeleportBeam.m_flArcSpeed = jsonData["C_OP_TeleportBeam"]["m_flArcSpeed"];
C_OP_TeleportBeam.m_flAlpha = jsonData["C_OP_TeleportBeam"]["m_flAlpha"];

// Atribuições para C_OP_RemapExternalWindToCP
// C_OP_RemapExternalWindToCP Offsets
C_OP_RemapExternalWindToCP.m_nCP = jsonData["C_OP_RemapExternalWindToCP"]["m_nCP"];
C_OP_RemapExternalWindToCP.m_nCPOutput = jsonData["C_OP_RemapExternalWindToCP"]["m_nCPOutput"];
C_OP_RemapExternalWindToCP.m_vecScale = jsonData["C_OP_RemapExternalWindToCP"]["m_vecScale"];
C_OP_RemapExternalWindToCP.m_bSetMagnitude = jsonData["C_OP_RemapExternalWindToCP"]["m_bSetMagnitude"];
C_OP_RemapExternalWindToCP.m_nOutVectorField = jsonData["C_OP_RemapExternalWindToCP"]["m_nOutVectorField"];

// Atribuições para CBaseRendererSource2
// CBaseRendererSource2 Offsets
CBaseRendererSource2.m_flRadiusScale = jsonData["CBaseRendererSource2"]["m_flRadiusScale"];
CBaseRendererSource2.m_flAlphaScale = jsonData["CBaseRendererSource2"]["m_flAlphaScale"];
CBaseRendererSource2.m_flRollScale = jsonData["CBaseRendererSource2"]["m_flRollScale"];
CBaseRendererSource2.m_nAlpha2Field = jsonData["CBaseRendererSource2"]["m_nAlpha2Field"];
CBaseRendererSource2.m_vecColorScale = jsonData["CBaseRendererSource2"]["m_vecColorScale"];
CBaseRendererSource2.m_nColorBlendType = jsonData["CBaseRendererSource2"]["m_nColorBlendType"];
CBaseRendererSource2.m_nShaderType = jsonData["CBaseRendererSource2"]["m_nShaderType"];
CBaseRendererSource2.m_strShaderOverride = jsonData["CBaseRendererSource2"]["m_strShaderOverride"];
CBaseRendererSource2.m_flCenterXOffset = jsonData["CBaseRendererSource2"]["m_flCenterXOffset"];
CBaseRendererSource2.m_flCenterYOffset = jsonData["CBaseRendererSource2"]["m_flCenterYOffset"];
CBaseRendererSource2.m_flBumpStrength = jsonData["CBaseRendererSource2"]["m_flBumpStrength"];
CBaseRendererSource2.m_nCropTextureOverride = jsonData["CBaseRendererSource2"]["m_nCropTextureOverride"];
CBaseRendererSource2.m_vecTexturesInput = jsonData["CBaseRendererSource2"]["m_vecTexturesInput"];
CBaseRendererSource2.m_flAnimationRate = jsonData["CBaseRendererSource2"]["m_flAnimationRate"];
CBaseRendererSource2.m_nAnimationType = jsonData["CBaseRendererSource2"]["m_nAnimationType"];
CBaseRendererSource2.m_bAnimateInFPS = jsonData["CBaseRendererSource2"]["m_bAnimateInFPS"];
CBaseRendererSource2.m_flMotionVectorScaleU = jsonData["CBaseRendererSource2"]["m_flMotionVectorScaleU"];
CBaseRendererSource2.m_flMotionVectorScaleV = jsonData["CBaseRendererSource2"]["m_flMotionVectorScaleV"];
CBaseRendererSource2.m_flSelfIllumAmount = jsonData["CBaseRendererSource2"]["m_flSelfIllumAmount"];
CBaseRendererSource2.m_flDiffuseAmount = jsonData["CBaseRendererSource2"]["m_flDiffuseAmount"];
CBaseRendererSource2.m_flDiffuseClamp = jsonData["CBaseRendererSource2"]["m_flDiffuseClamp"];
CBaseRendererSource2.m_nLightingControlPoint = jsonData["CBaseRendererSource2"]["m_nLightingControlPoint"];
CBaseRendererSource2.m_nSelfIllumPerParticle = jsonData["CBaseRendererSource2"]["m_nSelfIllumPerParticle"];
CBaseRendererSource2.m_nOutputBlendMode = jsonData["CBaseRendererSource2"]["m_nOutputBlendMode"];
CBaseRendererSource2.m_bGammaCorrectVertexColors = jsonData["CBaseRendererSource2"]["m_bGammaCorrectVertexColors"];
CBaseRendererSource2.m_bSaturateColorPreAlphaBlend = jsonData["CBaseRendererSource2"]["m_bSaturateColorPreAlphaBlend"];
CBaseRendererSource2.m_flAddSelfAmount = jsonData["CBaseRendererSource2"]["m_flAddSelfAmount"];
CBaseRendererSource2.m_flDesaturation = jsonData["CBaseRendererSource2"]["m_flDesaturation"];
CBaseRendererSource2.m_flOverbrightFactor = jsonData["CBaseRendererSource2"]["m_flOverbrightFactor"];
CBaseRendererSource2.m_nHSVShiftControlPoint = jsonData["CBaseRendererSource2"]["m_nHSVShiftControlPoint"];
CBaseRendererSource2.m_nFogType = jsonData["CBaseRendererSource2"]["m_nFogType"];
CBaseRendererSource2.m_flFogAmount = jsonData["CBaseRendererSource2"]["m_flFogAmount"];
CBaseRendererSource2.m_bTintByFOW = jsonData["CBaseRendererSource2"]["m_bTintByFOW"];
CBaseRendererSource2.m_bTintByGlobalLight = jsonData["CBaseRendererSource2"]["m_bTintByGlobalLight"];
CBaseRendererSource2.m_nPerParticleAlphaReference = jsonData["CBaseRendererSource2"]["m_nPerParticleAlphaReference"];
CBaseRendererSource2.m_nPerParticleAlphaRefWindow = jsonData["CBaseRendererSource2"]["m_nPerParticleAlphaRefWindow"];
CBaseRendererSource2.m_nAlphaReferenceType = jsonData["CBaseRendererSource2"]["m_nAlphaReferenceType"];
CBaseRendererSource2.m_flAlphaReferenceSoftness = jsonData["CBaseRendererSource2"]["m_flAlphaReferenceSoftness"];
CBaseRendererSource2.m_flSourceAlphaValueToMapToZero = jsonData["CBaseRendererSource2"]["m_flSourceAlphaValueToMapToZero"];
CBaseRendererSource2.m_flSourceAlphaValueToMapToOne = jsonData["CBaseRendererSource2"]["m_flSourceAlphaValueToMapToOne"];
CBaseRendererSource2.m_bRefract = jsonData["CBaseRendererSource2"]["m_bRefract"];
CBaseRendererSource2.m_bRefractSolid = jsonData["CBaseRendererSource2"]["m_bRefractSolid"];
CBaseRendererSource2.m_flRefractAmount = jsonData["CBaseRendererSource2"]["m_flRefractAmount"];
CBaseRendererSource2.m_nRefractBlurRadius = jsonData["CBaseRendererSource2"]["m_nRefractBlurRadius"];
CBaseRendererSource2.m_nRefractBlurType = jsonData["CBaseRendererSource2"]["m_nRefractBlurType"];
CBaseRendererSource2.m_bOnlyRenderInEffectsBloomPass = jsonData["CBaseRendererSource2"]["m_bOnlyRenderInEffectsBloomPass"];
CBaseRendererSource2.m_bOnlyRenderInEffectsWaterPass = jsonData["CBaseRendererSource2"]["m_bOnlyRenderInEffectsWaterPass"];
CBaseRendererSource2.m_bUseMixedResolutionRendering = jsonData["CBaseRendererSource2"]["m_bUseMixedResolutionRendering"];
CBaseRendererSource2.m_bOnlyRenderInEffecsGameOverlay = jsonData["CBaseRendererSource2"]["m_bOnlyRenderInEffecsGameOverlay"];
CBaseRendererSource2.m_stencilTestID = jsonData["CBaseRendererSource2"]["m_stencilTestID"];
CBaseRendererSource2.m_bStencilTestExclude = jsonData["CBaseRendererSource2"]["m_bStencilTestExclude"];
CBaseRendererSource2.m_stencilWriteID = jsonData["CBaseRendererSource2"]["m_stencilWriteID"];
CBaseRendererSource2.m_bWriteStencilOnDepthPass = jsonData["CBaseRendererSource2"]["m_bWriteStencilOnDepthPass"];
CBaseRendererSource2.m_bWriteStencilOnDepthFail = jsonData["CBaseRendererSource2"]["m_bWriteStencilOnDepthFail"];
CBaseRendererSource2.m_bReverseZBuffering = jsonData["CBaseRendererSource2"]["m_bReverseZBuffering"];
CBaseRendererSource2.m_bDisableZBuffering = jsonData["CBaseRendererSource2"]["m_bDisableZBuffering"];
CBaseRendererSource2.m_nFeatheringMode = jsonData["CBaseRendererSource2"]["m_nFeatheringMode"];
CBaseRendererSource2.m_flFeatheringMinDist = jsonData["CBaseRendererSource2"]["m_flFeatheringMinDist"];
CBaseRendererSource2.m_flFeatheringMaxDist = jsonData["CBaseRendererSource2"]["m_flFeatheringMaxDist"];
CBaseRendererSource2.m_flFeatheringFilter = jsonData["CBaseRendererSource2"]["m_flFeatheringFilter"];
CBaseRendererSource2.m_flDepthBias = jsonData["CBaseRendererSource2"]["m_flDepthBias"];
CBaseRendererSource2.m_nSortMethod = jsonData["CBaseRendererSource2"]["m_nSortMethod"];
CBaseRendererSource2.m_bBlendFramesSeq0 = jsonData["CBaseRendererSource2"]["m_bBlendFramesSeq0"];
CBaseRendererSource2.m_bMaxLuminanceBlendingSequence0 = jsonData["CBaseRendererSource2"]["m_bMaxLuminanceBlendingSequence0"];

// Atribuições para C_OP_OrientTo2dDirection
// C_OP_OrientTo2dDirection Offsets
C_OP_OrientTo2dDirection.m_flRotOffset = jsonData["C_OP_OrientTo2dDirection"]["m_flRotOffset"];
C_OP_OrientTo2dDirection.m_flSpinStrength = jsonData["C_OP_OrientTo2dDirection"]["m_flSpinStrength"];
C_OP_OrientTo2dDirection.m_nFieldOutput = jsonData["C_OP_OrientTo2dDirection"]["m_nFieldOutput"];

// Atribuições para C_OP_RemapDotProductToCP
// C_OP_RemapDotProductToCP Offsets
C_OP_RemapDotProductToCP.m_nInputCP1 = jsonData["C_OP_RemapDotProductToCP"]["m_nInputCP1"];
C_OP_RemapDotProductToCP.m_nInputCP2 = jsonData["C_OP_RemapDotProductToCP"]["m_nInputCP2"];
C_OP_RemapDotProductToCP.m_nOutputCP = jsonData["C_OP_RemapDotProductToCP"]["m_nOutputCP"];
C_OP_RemapDotProductToCP.m_nOutVectorField = jsonData["C_OP_RemapDotProductToCP"]["m_nOutVectorField"];
C_OP_RemapDotProductToCP.m_flInputMin = jsonData["C_OP_RemapDotProductToCP"]["m_flInputMin"];
C_OP_RemapDotProductToCP.m_flInputMax = jsonData["C_OP_RemapDotProductToCP"]["m_flInputMax"];
C_OP_RemapDotProductToCP.m_flOutputMin = jsonData["C_OP_RemapDotProductToCP"]["m_flOutputMin"];
C_OP_RemapDotProductToCP.m_flOutputMax = jsonData["C_OP_RemapDotProductToCP"]["m_flOutputMax"];

// Atribuições para C_INIT_RemapParticleCountToNamedModelElementScalar
// C_INIT_RemapParticleCountToNamedModelElementScalar Offsets
C_INIT_RemapParticleCountToNamedModelElementScalar.m_hModel = jsonData["C_INIT_RemapParticleCountToNamedModelElementScalar"]["m_hModel"];
C_INIT_RemapParticleCountToNamedModelElementScalar.m_outputMinName = jsonData["C_INIT_RemapParticleCountToNamedModelElementScalar"]["m_outputMinName"];
C_INIT_RemapParticleCountToNamedModelElementScalar.m_outputMaxName = jsonData["C_INIT_RemapParticleCountToNamedModelElementScalar"]["m_outputMaxName"];
C_INIT_RemapParticleCountToNamedModelElementScalar.m_bModelFromRenderer = jsonData["C_INIT_RemapParticleCountToNamedModelElementScalar"]["m_bModelFromRenderer"];

// Atribuições para C_OP_RenderTrails
// C_OP_RenderTrails Offsets
C_OP_RenderTrails.m_bEnableFadingAndClamping = jsonData["C_OP_RenderTrails"]["m_bEnableFadingAndClamping"];
C_OP_RenderTrails.m_flStartFadeDot = jsonData["C_OP_RenderTrails"]["m_flStartFadeDot"];
C_OP_RenderTrails.m_flEndFadeDot = jsonData["C_OP_RenderTrails"]["m_flEndFadeDot"];
C_OP_RenderTrails.m_nPrevPntSource = jsonData["C_OP_RenderTrails"]["m_nPrevPntSource"];
C_OP_RenderTrails.m_flMaxLength = jsonData["C_OP_RenderTrails"]["m_flMaxLength"];
C_OP_RenderTrails.m_flMinLength = jsonData["C_OP_RenderTrails"]["m_flMinLength"];
C_OP_RenderTrails.m_bIgnoreDT = jsonData["C_OP_RenderTrails"]["m_bIgnoreDT"];
C_OP_RenderTrails.m_flConstrainRadiusToLengthRatio = jsonData["C_OP_RenderTrails"]["m_flConstrainRadiusToLengthRatio"];
C_OP_RenderTrails.m_flLengthScale = jsonData["C_OP_RenderTrails"]["m_flLengthScale"];
C_OP_RenderTrails.m_flLengthFadeInTime = jsonData["C_OP_RenderTrails"]["m_flLengthFadeInTime"];
C_OP_RenderTrails.m_flRadiusHeadTaper = jsonData["C_OP_RenderTrails"]["m_flRadiusHeadTaper"];
C_OP_RenderTrails.m_vecHeadColorScale = jsonData["C_OP_RenderTrails"]["m_vecHeadColorScale"];
C_OP_RenderTrails.m_flHeadAlphaScale = jsonData["C_OP_RenderTrails"]["m_flHeadAlphaScale"];
C_OP_RenderTrails.m_flRadiusTaper = jsonData["C_OP_RenderTrails"]["m_flRadiusTaper"];
C_OP_RenderTrails.m_vecTailColorScale = jsonData["C_OP_RenderTrails"]["m_vecTailColorScale"];
C_OP_RenderTrails.m_flTailAlphaScale = jsonData["C_OP_RenderTrails"]["m_flTailAlphaScale"];
C_OP_RenderTrails.m_nHorizCropField = jsonData["C_OP_RenderTrails"]["m_nHorizCropField"];
C_OP_RenderTrails.m_nVertCropField = jsonData["C_OP_RenderTrails"]["m_nVertCropField"];
C_OP_RenderTrails.m_flForwardShift = jsonData["C_OP_RenderTrails"]["m_flForwardShift"];
C_OP_RenderTrails.m_bFlipUVBasedOnPitchYaw = jsonData["C_OP_RenderTrails"]["m_bFlipUVBasedOnPitchYaw"];

// Atribuições para C_OP_SetControlPointPositionToTimeOfDayValue
// C_OP_SetControlPointPositionToTimeOfDayValue Offsets
C_OP_SetControlPointPositionToTimeOfDayValue.m_nControlPointNumber = jsonData["C_OP_SetControlPointPositionToTimeOfDayValue"]["m_nControlPointNumber"];
C_OP_SetControlPointPositionToTimeOfDayValue.m_pszTimeOfDayParameter = jsonData["C_OP_SetControlPointPositionToTimeOfDayValue"]["m_pszTimeOfDayParameter"];
C_OP_SetControlPointPositionToTimeOfDayValue.m_vecDefaultValue = jsonData["C_OP_SetControlPointPositionToTimeOfDayValue"]["m_vecDefaultValue"];

// Atribuições para C_OP_DecayMaintainCount
// C_OP_DecayMaintainCount Offsets
C_OP_DecayMaintainCount.m_nParticlesToMaintain = jsonData["C_OP_DecayMaintainCount"]["m_nParticlesToMaintain"];
C_OP_DecayMaintainCount.m_flDecayDelay = jsonData["C_OP_DecayMaintainCount"]["m_flDecayDelay"];
C_OP_DecayMaintainCount.m_nSnapshotControlPoint = jsonData["C_OP_DecayMaintainCount"]["m_nSnapshotControlPoint"];
C_OP_DecayMaintainCount.m_bLifespanDecay = jsonData["C_OP_DecayMaintainCount"]["m_bLifespanDecay"];
C_OP_DecayMaintainCount.m_flScale = jsonData["C_OP_DecayMaintainCount"]["m_flScale"];
C_OP_DecayMaintainCount.m_bKillNewest = jsonData["C_OP_DecayMaintainCount"]["m_bKillNewest"];

// Atribuições para C_INIT_RandomModelSequence
// C_INIT_RandomModelSequence Offsets
C_INIT_RandomModelSequence.m_ActivityName = jsonData["C_INIT_RandomModelSequence"]["m_ActivityName"];
C_INIT_RandomModelSequence.m_SequenceName = jsonData["C_INIT_RandomModelSequence"]["m_SequenceName"];
C_INIT_RandomModelSequence.m_hModel = jsonData["C_INIT_RandomModelSequence"]["m_hModel"];

// Atribuições para C_OP_ExternalGameImpulseForce
// C_OP_ExternalGameImpulseForce Offsets
C_OP_ExternalGameImpulseForce.m_flForceScale = jsonData["C_OP_ExternalGameImpulseForce"]["m_flForceScale"];
C_OP_ExternalGameImpulseForce.m_bRopes = jsonData["C_OP_ExternalGameImpulseForce"]["m_bRopes"];
C_OP_ExternalGameImpulseForce.m_bRopesZOnly = jsonData["C_OP_ExternalGameImpulseForce"]["m_bRopesZOnly"];
C_OP_ExternalGameImpulseForce.m_bExplosions = jsonData["C_OP_ExternalGameImpulseForce"]["m_bExplosions"];
C_OP_ExternalGameImpulseForce.m_bParticles = jsonData["C_OP_ExternalGameImpulseForce"]["m_bParticles"];

// Atribuições para C_OP_RemapAverageHitboxSpeedtoCP
// C_OP_RemapAverageHitboxSpeedtoCP Offsets
C_OP_RemapAverageHitboxSpeedtoCP.m_nInControlPointNumber = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_nInControlPointNumber"];
C_OP_RemapAverageHitboxSpeedtoCP.m_nOutControlPointNumber = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_nOutControlPointNumber"];
C_OP_RemapAverageHitboxSpeedtoCP.m_nField = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_nField"];
C_OP_RemapAverageHitboxSpeedtoCP.m_nHitboxDataType = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_nHitboxDataType"];
C_OP_RemapAverageHitboxSpeedtoCP.m_flInputMin = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_flInputMin"];
C_OP_RemapAverageHitboxSpeedtoCP.m_flInputMax = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_flInputMax"];
C_OP_RemapAverageHitboxSpeedtoCP.m_flOutputMin = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_flOutputMin"];
C_OP_RemapAverageHitboxSpeedtoCP.m_flOutputMax = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_flOutputMax"];
C_OP_RemapAverageHitboxSpeedtoCP.m_nHeightControlPointNumber = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_nHeightControlPointNumber"];
C_OP_RemapAverageHitboxSpeedtoCP.m_vecComparisonVelocity = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_vecComparisonVelocity"];
C_OP_RemapAverageHitboxSpeedtoCP.m_HitboxSetName = jsonData["C_OP_RemapAverageHitboxSpeedtoCP"]["m_HitboxSetName"];

// Atribuições para C_INIT_RandomAlpha
// C_INIT_RandomAlpha Offsets
C_INIT_RandomAlpha.m_nFieldOutput = jsonData["C_INIT_RandomAlpha"]["m_nFieldOutput"];
C_INIT_RandomAlpha.m_nAlphaMin = jsonData["C_INIT_RandomAlpha"]["m_nAlphaMin"];
C_INIT_RandomAlpha.m_nAlphaMax = jsonData["C_INIT_RandomAlpha"]["m_nAlphaMax"];
C_INIT_RandomAlpha.m_flAlphaRandExponent = jsonData["C_INIT_RandomAlpha"]["m_flAlphaRandExponent"];

// Atribuições para C_OP_NormalizeVector
// C_OP_NormalizeVector Offsets
C_OP_NormalizeVector.m_nFieldOutput = jsonData["C_OP_NormalizeVector"]["m_nFieldOutput"];
C_OP_NormalizeVector.m_flScale = jsonData["C_OP_NormalizeVector"]["m_flScale"];

// Atribuições para C_OP_FadeInSimple
// C_OP_FadeInSimple Offsets
C_OP_FadeInSimple.m_flFadeInTime = jsonData["C_OP_FadeInSimple"]["m_flFadeInTime"];
C_OP_FadeInSimple.m_nFieldOutput = jsonData["C_OP_FadeInSimple"]["m_nFieldOutput"];

// Atribuições para C_OP_RepeatedTriggerChildGroup
// C_OP_RepeatedTriggerChildGroup Offsets
C_OP_RepeatedTriggerChildGroup.m_nChildGroupID = jsonData["C_OP_RepeatedTriggerChildGroup"]["m_nChildGroupID"];
C_OP_RepeatedTriggerChildGroup.m_flClusterRefireTime = jsonData["C_OP_RepeatedTriggerChildGroup"]["m_flClusterRefireTime"];
C_OP_RepeatedTriggerChildGroup.m_flClusterSize = jsonData["C_OP_RepeatedTriggerChildGroup"]["m_flClusterSize"];
C_OP_RepeatedTriggerChildGroup.m_flClusterCooldown = jsonData["C_OP_RepeatedTriggerChildGroup"]["m_flClusterCooldown"];
C_OP_RepeatedTriggerChildGroup.m_bLimitChildCount = jsonData["C_OP_RepeatedTriggerChildGroup"]["m_bLimitChildCount"];

// Atribuições para C_OP_RenderTonemapController
// C_OP_RenderTonemapController Offsets
C_OP_RenderTonemapController.m_flTonemapLevel = jsonData["C_OP_RenderTonemapController"]["m_flTonemapLevel"];
C_OP_RenderTonemapController.m_flTonemapWeight = jsonData["C_OP_RenderTonemapController"]["m_flTonemapWeight"];
C_OP_RenderTonemapController.m_nTonemapLevelField = jsonData["C_OP_RenderTonemapController"]["m_nTonemapLevelField"];
C_OP_RenderTonemapController.m_nTonemapWeightField = jsonData["C_OP_RenderTonemapController"]["m_nTonemapWeightField"];

// Atribuições para C_OP_RemapVelocityToVector
// C_OP_RemapVelocityToVector Offsets
C_OP_RemapVelocityToVector.m_nFieldOutput = jsonData["C_OP_RemapVelocityToVector"]["m_nFieldOutput"];
C_OP_RemapVelocityToVector.m_flScale = jsonData["C_OP_RemapVelocityToVector"]["m_flScale"];
C_OP_RemapVelocityToVector.m_bNormalize = jsonData["C_OP_RemapVelocityToVector"]["m_bNormalize"];

// Atribuições para C_INIT_SetHitboxToClosest
// C_INIT_SetHitboxToClosest Offsets
C_INIT_SetHitboxToClosest.m_nControlPointNumber = jsonData["C_INIT_SetHitboxToClosest"]["m_nControlPointNumber"];
C_INIT_SetHitboxToClosest.m_nDesiredHitbox = jsonData["C_INIT_SetHitboxToClosest"]["m_nDesiredHitbox"];
C_INIT_SetHitboxToClosest.m_vecHitBoxScale = jsonData["C_INIT_SetHitboxToClosest"]["m_vecHitBoxScale"];
C_INIT_SetHitboxToClosest.m_HitboxSetName = jsonData["C_INIT_SetHitboxToClosest"]["m_HitboxSetName"];
C_INIT_SetHitboxToClosest.m_bUseBones = jsonData["C_INIT_SetHitboxToClosest"]["m_bUseBones"];
C_INIT_SetHitboxToClosest.m_bUseClosestPointOnHitbox = jsonData["C_INIT_SetHitboxToClosest"]["m_bUseClosestPointOnHitbox"];
C_INIT_SetHitboxToClosest.m_nTestType = jsonData["C_INIT_SetHitboxToClosest"]["m_nTestType"];
C_INIT_SetHitboxToClosest.m_flHybridRatio = jsonData["C_INIT_SetHitboxToClosest"]["m_flHybridRatio"];
C_INIT_SetHitboxToClosest.m_bUpdatePosition = jsonData["C_INIT_SetHitboxToClosest"]["m_bUpdatePosition"];

// Atribuições para C_INIT_RingWave
// C_INIT_RingWave Offsets
C_INIT_RingWave.m_TransformInput = jsonData["C_INIT_RingWave"]["m_TransformInput"];
C_INIT_RingWave.m_flParticlesPerOrbit = jsonData["C_INIT_RingWave"]["m_flParticlesPerOrbit"];
C_INIT_RingWave.m_flInitialRadius = jsonData["C_INIT_RingWave"]["m_flInitialRadius"];
C_INIT_RingWave.m_flThickness = jsonData["C_INIT_RingWave"]["m_flThickness"];
C_INIT_RingWave.m_flInitialSpeedMin = jsonData["C_INIT_RingWave"]["m_flInitialSpeedMin"];
C_INIT_RingWave.m_flInitialSpeedMax = jsonData["C_INIT_RingWave"]["m_flInitialSpeedMax"];
C_INIT_RingWave.m_flRoll = jsonData["C_INIT_RingWave"]["m_flRoll"];
C_INIT_RingWave.m_flPitch = jsonData["C_INIT_RingWave"]["m_flPitch"];
C_INIT_RingWave.m_flYaw = jsonData["C_INIT_RingWave"]["m_flYaw"];
C_INIT_RingWave.m_bEvenDistribution = jsonData["C_INIT_RingWave"]["m_bEvenDistribution"];
C_INIT_RingWave.m_bXYVelocityOnly = jsonData["C_INIT_RingWave"]["m_bXYVelocityOnly"];

// Atribuições para C_INIT_RandomTrailLength
// C_INIT_RandomTrailLength Offsets
C_INIT_RandomTrailLength.m_flMinLength = jsonData["C_INIT_RandomTrailLength"]["m_flMinLength"];
C_INIT_RandomTrailLength.m_flMaxLength = jsonData["C_INIT_RandomTrailLength"]["m_flMaxLength"];
C_INIT_RandomTrailLength.m_flLengthRandExponent = jsonData["C_INIT_RandomTrailLength"]["m_flLengthRandExponent"];

// Atribuições para C_OP_RemapScalar
// C_OP_RemapScalar Offsets
C_OP_RemapScalar.m_nFieldInput = jsonData["C_OP_RemapScalar"]["m_nFieldInput"];
C_OP_RemapScalar.m_nFieldOutput = jsonData["C_OP_RemapScalar"]["m_nFieldOutput"];
C_OP_RemapScalar.m_flInputMin = jsonData["C_OP_RemapScalar"]["m_flInputMin"];
C_OP_RemapScalar.m_flInputMax = jsonData["C_OP_RemapScalar"]["m_flInputMax"];
C_OP_RemapScalar.m_flOutputMin = jsonData["C_OP_RemapScalar"]["m_flOutputMin"];
C_OP_RemapScalar.m_flOutputMax = jsonData["C_OP_RemapScalar"]["m_flOutputMax"];
C_OP_RemapScalar.m_bOldCode = jsonData["C_OP_RemapScalar"]["m_bOldCode"];

// Atribuições para C_OP_DistanceBetweenTransforms
// C_OP_DistanceBetweenTransforms Offsets
C_OP_DistanceBetweenTransforms.m_nFieldOutput = jsonData["C_OP_DistanceBetweenTransforms"]["m_nFieldOutput"];
C_OP_DistanceBetweenTransforms.m_TransformStart = jsonData["C_OP_DistanceBetweenTransforms"]["m_TransformStart"];
C_OP_DistanceBetweenTransforms.m_TransformEnd = jsonData["C_OP_DistanceBetweenTransforms"]["m_TransformEnd"];
C_OP_DistanceBetweenTransforms.m_flInputMin = jsonData["C_OP_DistanceBetweenTransforms"]["m_flInputMin"];
C_OP_DistanceBetweenTransforms.m_flInputMax = jsonData["C_OP_DistanceBetweenTransforms"]["m_flInputMax"];
C_OP_DistanceBetweenTransforms.m_flOutputMin = jsonData["C_OP_DistanceBetweenTransforms"]["m_flOutputMin"];
C_OP_DistanceBetweenTransforms.m_flOutputMax = jsonData["C_OP_DistanceBetweenTransforms"]["m_flOutputMax"];
C_OP_DistanceBetweenTransforms.m_flMaxTraceLength = jsonData["C_OP_DistanceBetweenTransforms"]["m_flMaxTraceLength"];
C_OP_DistanceBetweenTransforms.m_flLOSScale = jsonData["C_OP_DistanceBetweenTransforms"]["m_flLOSScale"];
C_OP_DistanceBetweenTransforms.m_CollisionGroupName = jsonData["C_OP_DistanceBetweenTransforms"]["m_CollisionGroupName"];
C_OP_DistanceBetweenTransforms.m_nTraceSet = jsonData["C_OP_DistanceBetweenTransforms"]["m_nTraceSet"];
C_OP_DistanceBetweenTransforms.m_bLOS = jsonData["C_OP_DistanceBetweenTransforms"]["m_bLOS"];
C_OP_DistanceBetweenTransforms.m_nSetMethod = jsonData["C_OP_DistanceBetweenTransforms"]["m_nSetMethod"];

// Atribuições para C_OP_DecayOffscreen
// C_OP_DecayOffscreen Offsets
C_OP_DecayOffscreen.m_flOffscreenTime = jsonData["C_OP_DecayOffscreen"]["m_flOffscreenTime"];

// Atribuições para C_INIT_CreateSequentialPath
// C_INIT_CreateSequentialPath Offsets
C_INIT_CreateSequentialPath.m_fMaxDistance = jsonData["C_INIT_CreateSequentialPath"]["m_fMaxDistance"];
C_INIT_CreateSequentialPath.m_flNumToAssign = jsonData["C_INIT_CreateSequentialPath"]["m_flNumToAssign"];
C_INIT_CreateSequentialPath.m_bLoop = jsonData["C_INIT_CreateSequentialPath"]["m_bLoop"];
C_INIT_CreateSequentialPath.m_bCPPairs = jsonData["C_INIT_CreateSequentialPath"]["m_bCPPairs"];
C_INIT_CreateSequentialPath.m_bSaveOffset = jsonData["C_INIT_CreateSequentialPath"]["m_bSaveOffset"];
C_INIT_CreateSequentialPath.m_PathParams = jsonData["C_INIT_CreateSequentialPath"]["m_PathParams"];

// Atribuições para C_OP_EndCapTimedDecay
// C_OP_EndCapTimedDecay Offsets
C_OP_EndCapTimedDecay.m_flDecayTime = jsonData["C_OP_EndCapTimedDecay"]["m_flDecayTime"];

// Atribuições para C_OP_RemapDistanceToLineSegmentBase
// C_OP_RemapDistanceToLineSegmentBase Offsets
C_OP_RemapDistanceToLineSegmentBase.m_nCP0 = jsonData["C_OP_RemapDistanceToLineSegmentBase"]["m_nCP0"];
C_OP_RemapDistanceToLineSegmentBase.m_nCP1 = jsonData["C_OP_RemapDistanceToLineSegmentBase"]["m_nCP1"];
C_OP_RemapDistanceToLineSegmentBase.m_flMinInputValue = jsonData["C_OP_RemapDistanceToLineSegmentBase"]["m_flMinInputValue"];
C_OP_RemapDistanceToLineSegmentBase.m_flMaxInputValue = jsonData["C_OP_RemapDistanceToLineSegmentBase"]["m_flMaxInputValue"];
C_OP_RemapDistanceToLineSegmentBase.m_bInfiniteLine = jsonData["C_OP_RemapDistanceToLineSegmentBase"]["m_bInfiniteLine"];

// Atribuições para C_OP_ContinuousEmitter
// C_OP_ContinuousEmitter Offsets
C_OP_ContinuousEmitter.m_flEmissionDuration = jsonData["C_OP_ContinuousEmitter"]["m_flEmissionDuration"];
C_OP_ContinuousEmitter.m_flStartTime = jsonData["C_OP_ContinuousEmitter"]["m_flStartTime"];
C_OP_ContinuousEmitter.m_flEmitRate = jsonData["C_OP_ContinuousEmitter"]["m_flEmitRate"];
C_OP_ContinuousEmitter.m_flEmissionScale = jsonData["C_OP_ContinuousEmitter"]["m_flEmissionScale"];
C_OP_ContinuousEmitter.m_flScalePerParentParticle = jsonData["C_OP_ContinuousEmitter"]["m_flScalePerParentParticle"];
C_OP_ContinuousEmitter.m_bInitFromKilledParentParticles = jsonData["C_OP_ContinuousEmitter"]["m_bInitFromKilledParentParticles"];
C_OP_ContinuousEmitter.m_nEventType = jsonData["C_OP_ContinuousEmitter"]["m_nEventType"];
C_OP_ContinuousEmitter.m_nSnapshotControlPoint = jsonData["C_OP_ContinuousEmitter"]["m_nSnapshotControlPoint"];
C_OP_ContinuousEmitter.m_nLimitPerUpdate = jsonData["C_OP_ContinuousEmitter"]["m_nLimitPerUpdate"];
C_OP_ContinuousEmitter.m_bForceEmitOnFirstUpdate = jsonData["C_OP_ContinuousEmitter"]["m_bForceEmitOnFirstUpdate"];
C_OP_ContinuousEmitter.m_bForceEmitOnLastUpdate = jsonData["C_OP_ContinuousEmitter"]["m_bForceEmitOnLastUpdate"];

// Atribuições para C_OP_OscillateVectorSimple
// C_OP_OscillateVectorSimple Offsets
C_OP_OscillateVectorSimple.m_Rate = jsonData["C_OP_OscillateVectorSimple"]["m_Rate"];
C_OP_OscillateVectorSimple.m_Frequency = jsonData["C_OP_OscillateVectorSimple"]["m_Frequency"];
C_OP_OscillateVectorSimple.m_nField = jsonData["C_OP_OscillateVectorSimple"]["m_nField"];
C_OP_OscillateVectorSimple.m_flOscMult = jsonData["C_OP_OscillateVectorSimple"]["m_flOscMult"];
C_OP_OscillateVectorSimple.m_flOscAdd = jsonData["C_OP_OscillateVectorSimple"]["m_flOscAdd"];
C_OP_OscillateVectorSimple.m_bOffset = jsonData["C_OP_OscillateVectorSimple"]["m_bOffset"];

// Atribuições para C_INIT_SequenceLifeTime
// C_INIT_SequenceLifeTime Offsets
C_INIT_SequenceLifeTime.m_flFramerate = jsonData["C_INIT_SequenceLifeTime"]["m_flFramerate"];

// Atribuições para C_INIT_MoveBetweenPoints
// C_INIT_MoveBetweenPoints Offsets
C_INIT_MoveBetweenPoints.m_flSpeedMin = jsonData["C_INIT_MoveBetweenPoints"]["m_flSpeedMin"];
C_INIT_MoveBetweenPoints.m_flSpeedMax = jsonData["C_INIT_MoveBetweenPoints"]["m_flSpeedMax"];
C_INIT_MoveBetweenPoints.m_flEndSpread = jsonData["C_INIT_MoveBetweenPoints"]["m_flEndSpread"];
C_INIT_MoveBetweenPoints.m_flStartOffset = jsonData["C_INIT_MoveBetweenPoints"]["m_flStartOffset"];
C_INIT_MoveBetweenPoints.m_flEndOffset = jsonData["C_INIT_MoveBetweenPoints"]["m_flEndOffset"];
C_INIT_MoveBetweenPoints.m_nEndControlPointNumber = jsonData["C_INIT_MoveBetweenPoints"]["m_nEndControlPointNumber"];
C_INIT_MoveBetweenPoints.m_bTrailBias = jsonData["C_INIT_MoveBetweenPoints"]["m_bTrailBias"];

// Atribuições para C_INIT_RemapScalar
// C_INIT_RemapScalar Offsets
C_INIT_RemapScalar.m_nFieldInput = jsonData["C_INIT_RemapScalar"]["m_nFieldInput"];
C_INIT_RemapScalar.m_nFieldOutput = jsonData["C_INIT_RemapScalar"]["m_nFieldOutput"];
C_INIT_RemapScalar.m_flInputMin = jsonData["C_INIT_RemapScalar"]["m_flInputMin"];
C_INIT_RemapScalar.m_flInputMax = jsonData["C_INIT_RemapScalar"]["m_flInputMax"];
C_INIT_RemapScalar.m_flOutputMin = jsonData["C_INIT_RemapScalar"]["m_flOutputMin"];
C_INIT_RemapScalar.m_flOutputMax = jsonData["C_INIT_RemapScalar"]["m_flOutputMax"];
C_INIT_RemapScalar.m_flStartTime = jsonData["C_INIT_RemapScalar"]["m_flStartTime"];
C_INIT_RemapScalar.m_flEndTime = jsonData["C_INIT_RemapScalar"]["m_flEndTime"];
C_INIT_RemapScalar.m_nSetMethod = jsonData["C_INIT_RemapScalar"]["m_nSetMethod"];
C_INIT_RemapScalar.m_bActiveRange = jsonData["C_INIT_RemapScalar"]["m_bActiveRange"];
C_INIT_RemapScalar.m_flRemapBias = jsonData["C_INIT_RemapScalar"]["m_flRemapBias"];

// Atribuições para C_OP_SetUserEvent
// C_OP_SetUserEvent Offsets
C_OP_SetUserEvent.m_flInput = jsonData["C_OP_SetUserEvent"]["m_flInput"];
C_OP_SetUserEvent.m_flRisingEdge = jsonData["C_OP_SetUserEvent"]["m_flRisingEdge"];
C_OP_SetUserEvent.m_nRisingEventType = jsonData["C_OP_SetUserEvent"]["m_nRisingEventType"];
C_OP_SetUserEvent.m_flFallingEdge = jsonData["C_OP_SetUserEvent"]["m_flFallingEdge"];
C_OP_SetUserEvent.m_nFallingEventType = jsonData["C_OP_SetUserEvent"]["m_nFallingEventType"];

// Atribuições para C_OP_QuantizeFloat
// C_OP_QuantizeFloat Offsets
C_OP_QuantizeFloat.m_InputValue = jsonData["C_OP_QuantizeFloat"]["m_InputValue"];
C_OP_QuantizeFloat.m_nOutputField = jsonData["C_OP_QuantizeFloat"]["m_nOutputField"];

// Atribuições para C_OP_BasicMovement
// C_OP_BasicMovement Offsets
C_OP_BasicMovement.m_Gravity = jsonData["C_OP_BasicMovement"]["m_Gravity"];
C_OP_BasicMovement.m_fDrag = jsonData["C_OP_BasicMovement"]["m_fDrag"];
C_OP_BasicMovement.m_massControls = jsonData["C_OP_BasicMovement"]["m_massControls"];
C_OP_BasicMovement.m_nMaxConstraintPasses = jsonData["C_OP_BasicMovement"]["m_nMaxConstraintPasses"];
C_OP_BasicMovement.m_bUseNewCode = jsonData["C_OP_BasicMovement"]["m_bUseNewCode"];

// Atribuições para C_INIT_RandomNamedModelElement
// C_INIT_RandomNamedModelElement Offsets
C_INIT_RandomNamedModelElement.m_hModel = jsonData["C_INIT_RandomNamedModelElement"]["m_hModel"];
C_INIT_RandomNamedModelElement.m_names = jsonData["C_INIT_RandomNamedModelElement"]["m_names"];
C_INIT_RandomNamedModelElement.m_bShuffle = jsonData["C_INIT_RandomNamedModelElement"]["m_bShuffle"];
C_INIT_RandomNamedModelElement.m_bLinear = jsonData["C_INIT_RandomNamedModelElement"]["m_bLinear"];
C_INIT_RandomNamedModelElement.m_bModelFromRenderer = jsonData["C_INIT_RandomNamedModelElement"]["m_bModelFromRenderer"];
C_INIT_RandomNamedModelElement.m_nFieldOutput = jsonData["C_INIT_RandomNamedModelElement"]["m_nFieldOutput"];

// Atribuições para C_INIT_InitFromParentKilled
// C_INIT_InitFromParentKilled Offsets
C_INIT_InitFromParentKilled.m_nAttributeToCopy = jsonData["C_INIT_InitFromParentKilled"]["m_nAttributeToCopy"];
C_INIT_InitFromParentKilled.m_nEventType = jsonData["C_INIT_InitFromParentKilled"]["m_nEventType"];

// Atribuições para CParticleFunction
// CParticleFunction Offsets
CParticleFunction.m_flOpStrength = jsonData["CParticleFunction"]["m_flOpStrength"];
CParticleFunction.m_nOpEndCapState = jsonData["CParticleFunction"]["m_nOpEndCapState"];
CParticleFunction.m_flOpStartFadeInTime = jsonData["CParticleFunction"]["m_flOpStartFadeInTime"];
CParticleFunction.m_flOpEndFadeInTime = jsonData["CParticleFunction"]["m_flOpEndFadeInTime"];
CParticleFunction.m_flOpStartFadeOutTime = jsonData["CParticleFunction"]["m_flOpStartFadeOutTime"];
CParticleFunction.m_flOpEndFadeOutTime = jsonData["CParticleFunction"]["m_flOpEndFadeOutTime"];
CParticleFunction.m_flOpFadeOscillatePeriod = jsonData["CParticleFunction"]["m_flOpFadeOscillatePeriod"];
CParticleFunction.m_bNormalizeToStopTime = jsonData["CParticleFunction"]["m_bNormalizeToStopTime"];
CParticleFunction.m_flOpTimeOffsetMin = jsonData["CParticleFunction"]["m_flOpTimeOffsetMin"];
CParticleFunction.m_flOpTimeOffsetMax = jsonData["CParticleFunction"]["m_flOpTimeOffsetMax"];
CParticleFunction.m_nOpTimeOffsetSeed = jsonData["CParticleFunction"]["m_nOpTimeOffsetSeed"];
CParticleFunction.m_nOpTimeScaleSeed = jsonData["CParticleFunction"]["m_nOpTimeScaleSeed"];
CParticleFunction.m_flOpTimeScaleMin = jsonData["CParticleFunction"]["m_flOpTimeScaleMin"];
CParticleFunction.m_flOpTimeScaleMax = jsonData["CParticleFunction"]["m_flOpTimeScaleMax"];
CParticleFunction.m_bDisableOperator = jsonData["CParticleFunction"]["m_bDisableOperator"];
CParticleFunction.m_Notes = jsonData["CParticleFunction"]["m_Notes"];

// Atribuições para C_OP_GlobalLight
// C_OP_GlobalLight Offsets
C_OP_GlobalLight.m_flScale = jsonData["C_OP_GlobalLight"]["m_flScale"];
C_OP_GlobalLight.m_bClampLowerRange = jsonData["C_OP_GlobalLight"]["m_bClampLowerRange"];
C_OP_GlobalLight.m_bClampUpperRange = jsonData["C_OP_GlobalLight"]["m_bClampUpperRange"];

// Atribuições para C_INIT_OffsetVectorToVector
// C_INIT_OffsetVectorToVector Offsets
C_INIT_OffsetVectorToVector.m_nFieldInput = jsonData["C_INIT_OffsetVectorToVector"]["m_nFieldInput"];
C_INIT_OffsetVectorToVector.m_nFieldOutput = jsonData["C_INIT_OffsetVectorToVector"]["m_nFieldOutput"];
C_INIT_OffsetVectorToVector.m_vecOutputMin = jsonData["C_INIT_OffsetVectorToVector"]["m_vecOutputMin"];
C_INIT_OffsetVectorToVector.m_vecOutputMax = jsonData["C_INIT_OffsetVectorToVector"]["m_vecOutputMax"];
C_INIT_OffsetVectorToVector.m_randomnessParameters = jsonData["C_INIT_OffsetVectorToVector"]["m_randomnessParameters"];

// Atribuições para C_OP_SetPerChildControlPointFromAttribute
// C_OP_SetPerChildControlPointFromAttribute Offsets
C_OP_SetPerChildControlPointFromAttribute.m_nChildGroupID = jsonData["C_OP_SetPerChildControlPointFromAttribute"]["m_nChildGroupID"];
C_OP_SetPerChildControlPointFromAttribute.m_nFirstControlPoint = jsonData["C_OP_SetPerChildControlPointFromAttribute"]["m_nFirstControlPoint"];
C_OP_SetPerChildControlPointFromAttribute.m_nNumControlPoints = jsonData["C_OP_SetPerChildControlPointFromAttribute"]["m_nNumControlPoints"];
C_OP_SetPerChildControlPointFromAttribute.m_nParticleIncrement = jsonData["C_OP_SetPerChildControlPointFromAttribute"]["m_nParticleIncrement"];
C_OP_SetPerChildControlPointFromAttribute.m_nFirstSourcePoint = jsonData["C_OP_SetPerChildControlPointFromAttribute"]["m_nFirstSourcePoint"];
C_OP_SetPerChildControlPointFromAttribute.m_bNumBasedOnParticleCount = jsonData["C_OP_SetPerChildControlPointFromAttribute"]["m_bNumBasedOnParticleCount"];
C_OP_SetPerChildControlPointFromAttribute.m_nAttributeToRead = jsonData["C_OP_SetPerChildControlPointFromAttribute"]["m_nAttributeToRead"];
C_OP_SetPerChildControlPointFromAttribute.m_nCPField = jsonData["C_OP_SetPerChildControlPointFromAttribute"]["m_nCPField"];

// Atribuições para C_OP_SetParentControlPointsToChildCP
// C_OP_SetParentControlPointsToChildCP Offsets
C_OP_SetParentControlPointsToChildCP.m_nChildGroupID = jsonData["C_OP_SetParentControlPointsToChildCP"]["m_nChildGroupID"];
C_OP_SetParentControlPointsToChildCP.m_nChildControlPoint = jsonData["C_OP_SetParentControlPointsToChildCP"]["m_nChildControlPoint"];
C_OP_SetParentControlPointsToChildCP.m_nNumControlPoints = jsonData["C_OP_SetParentControlPointsToChildCP"]["m_nNumControlPoints"];
C_OP_SetParentControlPointsToChildCP.m_nFirstSourcePoint = jsonData["C_OP_SetParentControlPointsToChildCP"]["m_nFirstSourcePoint"];
C_OP_SetParentControlPointsToChildCP.m_bSetOrientation = jsonData["C_OP_SetParentControlPointsToChildCP"]["m_bSetOrientation"];

// Atribuições para C_OP_SDFForce
// C_OP_SDFForce Offsets
C_OP_SDFForce.m_flForceScale = jsonData["C_OP_SDFForce"]["m_flForceScale"];

// Atribuições para C_OP_BoxConstraint
// C_OP_BoxConstraint Offsets
C_OP_BoxConstraint.m_vecMin = jsonData["C_OP_BoxConstraint"]["m_vecMin"];
C_OP_BoxConstraint.m_vecMax = jsonData["C_OP_BoxConstraint"]["m_vecMax"];
C_OP_BoxConstraint.m_nCP = jsonData["C_OP_BoxConstraint"]["m_nCP"];
C_OP_BoxConstraint.m_bLocalSpace = jsonData["C_OP_BoxConstraint"]["m_bLocalSpace"];
C_OP_BoxConstraint.m_bAccountForRadius = jsonData["C_OP_BoxConstraint"]["m_bAccountForRadius"];

// Atribuições para C_INIT_CreatePhyllotaxis
// C_INIT_CreatePhyllotaxis Offsets
C_INIT_CreatePhyllotaxis.m_nControlPointNumber = jsonData["C_INIT_CreatePhyllotaxis"]["m_nControlPointNumber"];
C_INIT_CreatePhyllotaxis.m_nScaleCP = jsonData["C_INIT_CreatePhyllotaxis"]["m_nScaleCP"];
C_INIT_CreatePhyllotaxis.m_nComponent = jsonData["C_INIT_CreatePhyllotaxis"]["m_nComponent"];
C_INIT_CreatePhyllotaxis.m_fRadCentCore = jsonData["C_INIT_CreatePhyllotaxis"]["m_fRadCentCore"];
C_INIT_CreatePhyllotaxis.m_fRadPerPoint = jsonData["C_INIT_CreatePhyllotaxis"]["m_fRadPerPoint"];
C_INIT_CreatePhyllotaxis.m_fRadPerPointTo = jsonData["C_INIT_CreatePhyllotaxis"]["m_fRadPerPointTo"];
C_INIT_CreatePhyllotaxis.m_fpointAngle = jsonData["C_INIT_CreatePhyllotaxis"]["m_fpointAngle"];
C_INIT_CreatePhyllotaxis.m_fsizeOverall = jsonData["C_INIT_CreatePhyllotaxis"]["m_fsizeOverall"];
C_INIT_CreatePhyllotaxis.m_fRadBias = jsonData["C_INIT_CreatePhyllotaxis"]["m_fRadBias"];
C_INIT_CreatePhyllotaxis.m_fMinRad = jsonData["C_INIT_CreatePhyllotaxis"]["m_fMinRad"];
C_INIT_CreatePhyllotaxis.m_fDistBias = jsonData["C_INIT_CreatePhyllotaxis"]["m_fDistBias"];
C_INIT_CreatePhyllotaxis.m_bUseLocalCoords = jsonData["C_INIT_CreatePhyllotaxis"]["m_bUseLocalCoords"];
C_INIT_CreatePhyllotaxis.m_bUseWithContEmit = jsonData["C_INIT_CreatePhyllotaxis"]["m_bUseWithContEmit"];
C_INIT_CreatePhyllotaxis.m_bUseOrigRadius = jsonData["C_INIT_CreatePhyllotaxis"]["m_bUseOrigRadius"];

// Atribuições para C_OP_AttractToControlPoint
// C_OP_AttractToControlPoint Offsets
C_OP_AttractToControlPoint.m_vecComponentScale = jsonData["C_OP_AttractToControlPoint"]["m_vecComponentScale"];
C_OP_AttractToControlPoint.m_fForceAmount = jsonData["C_OP_AttractToControlPoint"]["m_fForceAmount"];
C_OP_AttractToControlPoint.m_fFalloffPower = jsonData["C_OP_AttractToControlPoint"]["m_fFalloffPower"];
C_OP_AttractToControlPoint.m_TransformInput = jsonData["C_OP_AttractToControlPoint"]["m_TransformInput"];
C_OP_AttractToControlPoint.m_fForceAmountMin = jsonData["C_OP_AttractToControlPoint"]["m_fForceAmountMin"];
C_OP_AttractToControlPoint.m_bApplyMinForce = jsonData["C_OP_AttractToControlPoint"]["m_bApplyMinForce"];

// Atribuições para C_INIT_RandomLifeTime
// C_INIT_RandomLifeTime Offsets
C_INIT_RandomLifeTime.m_fLifetimeMin = jsonData["C_INIT_RandomLifeTime"]["m_fLifetimeMin"];
C_INIT_RandomLifeTime.m_fLifetimeMax = jsonData["C_INIT_RandomLifeTime"]["m_fLifetimeMax"];
C_INIT_RandomLifeTime.m_fLifetimeRandExponent = jsonData["C_INIT_RandomLifeTime"]["m_fLifetimeRandExponent"];

// Atribuições para C_INIT_VelocityRadialRandom
// C_INIT_VelocityRadialRandom Offsets
C_INIT_VelocityRadialRandom.m_nControlPointNumber = jsonData["C_INIT_VelocityRadialRandom"]["m_nControlPointNumber"];
C_INIT_VelocityRadialRandom.m_fSpeedMin = jsonData["C_INIT_VelocityRadialRandom"]["m_fSpeedMin"];
C_INIT_VelocityRadialRandom.m_fSpeedMax = jsonData["C_INIT_VelocityRadialRandom"]["m_fSpeedMax"];
C_INIT_VelocityRadialRandom.m_vecLocalCoordinateSystemSpeedScale = jsonData["C_INIT_VelocityRadialRandom"]["m_vecLocalCoordinateSystemSpeedScale"];
C_INIT_VelocityRadialRandom.m_bIgnoreDelta = jsonData["C_INIT_VelocityRadialRandom"]["m_bIgnoreDelta"];

// Atribuições para C_INIT_RandomRadius
// C_INIT_RandomRadius Offsets
C_INIT_RandomRadius.m_flRadiusMin = jsonData["C_INIT_RandomRadius"]["m_flRadiusMin"];
C_INIT_RandomRadius.m_flRadiusMax = jsonData["C_INIT_RandomRadius"]["m_flRadiusMax"];
C_INIT_RandomRadius.m_flRadiusRandExponent = jsonData["C_INIT_RandomRadius"]["m_flRadiusRandExponent"];

// Atribuições para C_OP_Orient2DRelToCP
// C_OP_Orient2DRelToCP Offsets
C_OP_Orient2DRelToCP.m_flRotOffset = jsonData["C_OP_Orient2DRelToCP"]["m_flRotOffset"];
C_OP_Orient2DRelToCP.m_flSpinStrength = jsonData["C_OP_Orient2DRelToCP"]["m_flSpinStrength"];
C_OP_Orient2DRelToCP.m_nCP = jsonData["C_OP_Orient2DRelToCP"]["m_nCP"];
C_OP_Orient2DRelToCP.m_nFieldOutput = jsonData["C_OP_Orient2DRelToCP"]["m_nFieldOutput"];

// Atribuições para TextureControls_t
// TextureControls_t Offsets
TextureControls_t.m_flFinalTextureScaleU = jsonData["TextureControls_t"]["m_flFinalTextureScaleU"];
TextureControls_t.m_flFinalTextureScaleV = jsonData["TextureControls_t"]["m_flFinalTextureScaleV"];
TextureControls_t.m_flFinalTextureOffsetU = jsonData["TextureControls_t"]["m_flFinalTextureOffsetU"];
TextureControls_t.m_flFinalTextureOffsetV = jsonData["TextureControls_t"]["m_flFinalTextureOffsetV"];
TextureControls_t.m_flFinalTextureUVRotation = jsonData["TextureControls_t"]["m_flFinalTextureUVRotation"];
TextureControls_t.m_flZoomScale = jsonData["TextureControls_t"]["m_flZoomScale"];
TextureControls_t.m_flDistortion = jsonData["TextureControls_t"]["m_flDistortion"];
TextureControls_t.m_bRandomizeOffsets = jsonData["TextureControls_t"]["m_bRandomizeOffsets"];
TextureControls_t.m_bClampUVs = jsonData["TextureControls_t"]["m_bClampUVs"];
TextureControls_t.m_nPerParticleBlend = jsonData["TextureControls_t"]["m_nPerParticleBlend"];
TextureControls_t.m_nPerParticleScale = jsonData["TextureControls_t"]["m_nPerParticleScale"];
TextureControls_t.m_nPerParticleOffsetU = jsonData["TextureControls_t"]["m_nPerParticleOffsetU"];
TextureControls_t.m_nPerParticleOffsetV = jsonData["TextureControls_t"]["m_nPerParticleOffsetV"];
TextureControls_t.m_nPerParticleRotation = jsonData["TextureControls_t"]["m_nPerParticleRotation"];
TextureControls_t.m_nPerParticleZoom = jsonData["TextureControls_t"]["m_nPerParticleZoom"];
TextureControls_t.m_nPerParticleDistortion = jsonData["TextureControls_t"]["m_nPerParticleDistortion"];

// Atribuições para ControlPointReference_t
// ControlPointReference_t Offsets
ControlPointReference_t.m_controlPointNameString = jsonData["ControlPointReference_t"]["m_controlPointNameString"];
ControlPointReference_t.m_vOffsetFromControlPoint = jsonData["ControlPointReference_t"]["m_vOffsetFromControlPoint"];
ControlPointReference_t.m_bOffsetInLocalSpace = jsonData["ControlPointReference_t"]["m_bOffsetInLocalSpace"];

// Atribuições para C_OP_SetControlPointToVectorExpression
// C_OP_SetControlPointToVectorExpression Offsets
C_OP_SetControlPointToVectorExpression.m_nExpression = jsonData["C_OP_SetControlPointToVectorExpression"]["m_nExpression"];
C_OP_SetControlPointToVectorExpression.m_nOutputCP = jsonData["C_OP_SetControlPointToVectorExpression"]["m_nOutputCP"];
C_OP_SetControlPointToVectorExpression.m_vInput1 = jsonData["C_OP_SetControlPointToVectorExpression"]["m_vInput1"];
C_OP_SetControlPointToVectorExpression.m_vInput2 = jsonData["C_OP_SetControlPointToVectorExpression"]["m_vInput2"];
C_OP_SetControlPointToVectorExpression.m_bNormalizedOutput = jsonData["C_OP_SetControlPointToVectorExpression"]["m_bNormalizedOutput"];

// Atribuições para C_OP_LightningSnapshotGenerator
// C_OP_LightningSnapshotGenerator Offsets
C_OP_LightningSnapshotGenerator.m_nCPSnapshot = jsonData["C_OP_LightningSnapshotGenerator"]["m_nCPSnapshot"];
C_OP_LightningSnapshotGenerator.m_nCPStartPnt = jsonData["C_OP_LightningSnapshotGenerator"]["m_nCPStartPnt"];
C_OP_LightningSnapshotGenerator.m_nCPEndPnt = jsonData["C_OP_LightningSnapshotGenerator"]["m_nCPEndPnt"];
C_OP_LightningSnapshotGenerator.m_flSegments = jsonData["C_OP_LightningSnapshotGenerator"]["m_flSegments"];
C_OP_LightningSnapshotGenerator.m_flOffset = jsonData["C_OP_LightningSnapshotGenerator"]["m_flOffset"];
C_OP_LightningSnapshotGenerator.m_flOffsetDecay = jsonData["C_OP_LightningSnapshotGenerator"]["m_flOffsetDecay"];
C_OP_LightningSnapshotGenerator.m_flRecalcRate = jsonData["C_OP_LightningSnapshotGenerator"]["m_flRecalcRate"];
C_OP_LightningSnapshotGenerator.m_flUVScale = jsonData["C_OP_LightningSnapshotGenerator"]["m_flUVScale"];
C_OP_LightningSnapshotGenerator.m_flUVOffset = jsonData["C_OP_LightningSnapshotGenerator"]["m_flUVOffset"];
C_OP_LightningSnapshotGenerator.m_flSplitRate = jsonData["C_OP_LightningSnapshotGenerator"]["m_flSplitRate"];
C_OP_LightningSnapshotGenerator.m_flBranchTwist = jsonData["C_OP_LightningSnapshotGenerator"]["m_flBranchTwist"];
C_OP_LightningSnapshotGenerator.m_nBranchBehavior = jsonData["C_OP_LightningSnapshotGenerator"]["m_nBranchBehavior"];
C_OP_LightningSnapshotGenerator.m_flRadiusStart = jsonData["C_OP_LightningSnapshotGenerator"]["m_flRadiusStart"];
C_OP_LightningSnapshotGenerator.m_flRadiusEnd = jsonData["C_OP_LightningSnapshotGenerator"]["m_flRadiusEnd"];
C_OP_LightningSnapshotGenerator.m_flDedicatedPool = jsonData["C_OP_LightningSnapshotGenerator"]["m_flDedicatedPool"];

// Atribuições para C_INIT_RemapSpeedToScalar
// C_INIT_RemapSpeedToScalar Offsets
C_INIT_RemapSpeedToScalar.m_nFieldOutput = jsonData["C_INIT_RemapSpeedToScalar"]["m_nFieldOutput"];
C_INIT_RemapSpeedToScalar.m_nControlPointNumber = jsonData["C_INIT_RemapSpeedToScalar"]["m_nControlPointNumber"];
C_INIT_RemapSpeedToScalar.m_flStartTime = jsonData["C_INIT_RemapSpeedToScalar"]["m_flStartTime"];
C_INIT_RemapSpeedToScalar.m_flEndTime = jsonData["C_INIT_RemapSpeedToScalar"]["m_flEndTime"];
C_INIT_RemapSpeedToScalar.m_flInputMin = jsonData["C_INIT_RemapSpeedToScalar"]["m_flInputMin"];
C_INIT_RemapSpeedToScalar.m_flInputMax = jsonData["C_INIT_RemapSpeedToScalar"]["m_flInputMax"];
C_INIT_RemapSpeedToScalar.m_flOutputMin = jsonData["C_INIT_RemapSpeedToScalar"]["m_flOutputMin"];
C_INIT_RemapSpeedToScalar.m_flOutputMax = jsonData["C_INIT_RemapSpeedToScalar"]["m_flOutputMax"];
C_INIT_RemapSpeedToScalar.m_nSetMethod = jsonData["C_INIT_RemapSpeedToScalar"]["m_nSetMethod"];
C_INIT_RemapSpeedToScalar.m_bPerParticle = jsonData["C_INIT_RemapSpeedToScalar"]["m_bPerParticle"];

// Atribuições para C_INIT_RemapQAnglesToRotation
// C_INIT_RemapQAnglesToRotation Offsets
C_INIT_RemapQAnglesToRotation.m_TransformInput = jsonData["C_INIT_RemapQAnglesToRotation"]["m_TransformInput"];

// Atribuições para C_INIT_PositionWarp
// C_INIT_PositionWarp Offsets
C_INIT_PositionWarp.m_vecWarpMin = jsonData["C_INIT_PositionWarp"]["m_vecWarpMin"];
C_INIT_PositionWarp.m_vecWarpMax = jsonData["C_INIT_PositionWarp"]["m_vecWarpMax"];
C_INIT_PositionWarp.m_nScaleControlPointNumber = jsonData["C_INIT_PositionWarp"]["m_nScaleControlPointNumber"];
C_INIT_PositionWarp.m_nControlPointNumber = jsonData["C_INIT_PositionWarp"]["m_nControlPointNumber"];
C_INIT_PositionWarp.m_nRadiusComponent = jsonData["C_INIT_PositionWarp"]["m_nRadiusComponent"];
C_INIT_PositionWarp.m_flWarpTime = jsonData["C_INIT_PositionWarp"]["m_flWarpTime"];
C_INIT_PositionWarp.m_flWarpStartTime = jsonData["C_INIT_PositionWarp"]["m_flWarpStartTime"];
C_INIT_PositionWarp.m_flPrevPosScale = jsonData["C_INIT_PositionWarp"]["m_flPrevPosScale"];
C_INIT_PositionWarp.m_bInvertWarp = jsonData["C_INIT_PositionWarp"]["m_bInvertWarp"];
C_INIT_PositionWarp.m_bUseCount = jsonData["C_INIT_PositionWarp"]["m_bUseCount"];

// Atribuições para C_OP_SDFConstraint
// C_OP_SDFConstraint Offsets
C_OP_SDFConstraint.m_flMinDist = jsonData["C_OP_SDFConstraint"]["m_flMinDist"];
C_OP_SDFConstraint.m_flMaxDist = jsonData["C_OP_SDFConstraint"]["m_flMaxDist"];
C_OP_SDFConstraint.m_nMaxIterations = jsonData["C_OP_SDFConstraint"]["m_nMaxIterations"];

// Atribuições para C_OP_SetControlPointFieldToScalarExpression
// C_OP_SetControlPointFieldToScalarExpression Offsets
C_OP_SetControlPointFieldToScalarExpression.m_nExpression = jsonData["C_OP_SetControlPointFieldToScalarExpression"]["m_nExpression"];
C_OP_SetControlPointFieldToScalarExpression.m_flInput1 = jsonData["C_OP_SetControlPointFieldToScalarExpression"]["m_flInput1"];
C_OP_SetControlPointFieldToScalarExpression.m_flInput2 = jsonData["C_OP_SetControlPointFieldToScalarExpression"]["m_flInput2"];
C_OP_SetControlPointFieldToScalarExpression.m_flOutputRemap = jsonData["C_OP_SetControlPointFieldToScalarExpression"]["m_flOutputRemap"];
C_OP_SetControlPointFieldToScalarExpression.m_nOutputCP = jsonData["C_OP_SetControlPointFieldToScalarExpression"]["m_nOutputCP"];
C_OP_SetControlPointFieldToScalarExpression.m_nOutVectorField = jsonData["C_OP_SetControlPointFieldToScalarExpression"]["m_nOutVectorField"];

// Atribuições para C_INIT_RandomVectorComponent
// C_INIT_RandomVectorComponent Offsets
C_INIT_RandomVectorComponent.m_flMin = jsonData["C_INIT_RandomVectorComponent"]["m_flMin"];
C_INIT_RandomVectorComponent.m_flMax = jsonData["C_INIT_RandomVectorComponent"]["m_flMax"];
C_INIT_RandomVectorComponent.m_nFieldOutput = jsonData["C_INIT_RandomVectorComponent"]["m_nFieldOutput"];
C_INIT_RandomVectorComponent.m_nComponent = jsonData["C_INIT_RandomVectorComponent"]["m_nComponent"];

// Atribuições para C_OP_InheritFromParentParticles
// C_OP_InheritFromParentParticles Offsets
C_OP_InheritFromParentParticles.m_flScale = jsonData["C_OP_InheritFromParentParticles"]["m_flScale"];
C_OP_InheritFromParentParticles.m_nFieldOutput = jsonData["C_OP_InheritFromParentParticles"]["m_nFieldOutput"];
C_OP_InheritFromParentParticles.m_nIncrement = jsonData["C_OP_InheritFromParentParticles"]["m_nIncrement"];
C_OP_InheritFromParentParticles.m_bRandomDistribution = jsonData["C_OP_InheritFromParentParticles"]["m_bRandomDistribution"];

// Atribuições para C_INIT_SetVectorAttributeToVectorExpression
// C_INIT_SetVectorAttributeToVectorExpression Offsets
C_INIT_SetVectorAttributeToVectorExpression.m_nExpression = jsonData["C_INIT_SetVectorAttributeToVectorExpression"]["m_nExpression"];
C_INIT_SetVectorAttributeToVectorExpression.m_vInput1 = jsonData["C_INIT_SetVectorAttributeToVectorExpression"]["m_vInput1"];
C_INIT_SetVectorAttributeToVectorExpression.m_vInput2 = jsonData["C_INIT_SetVectorAttributeToVectorExpression"]["m_vInput2"];
C_INIT_SetVectorAttributeToVectorExpression.m_nOutputField = jsonData["C_INIT_SetVectorAttributeToVectorExpression"]["m_nOutputField"];
C_INIT_SetVectorAttributeToVectorExpression.m_nSetMethod = jsonData["C_INIT_SetVectorAttributeToVectorExpression"]["m_nSetMethod"];
C_INIT_SetVectorAttributeToVectorExpression.m_bNormalizedOutput = jsonData["C_INIT_SetVectorAttributeToVectorExpression"]["m_bNormalizedOutput"];

// Atribuições para C_OP_RemapTransformVisibilityToVector
// C_OP_RemapTransformVisibilityToVector Offsets
C_OP_RemapTransformVisibilityToVector.m_nSetMethod = jsonData["C_OP_RemapTransformVisibilityToVector"]["m_nSetMethod"];
C_OP_RemapTransformVisibilityToVector.m_TransformInput = jsonData["C_OP_RemapTransformVisibilityToVector"]["m_TransformInput"];
C_OP_RemapTransformVisibilityToVector.m_nFieldOutput = jsonData["C_OP_RemapTransformVisibilityToVector"]["m_nFieldOutput"];
C_OP_RemapTransformVisibilityToVector.m_flInputMin = jsonData["C_OP_RemapTransformVisibilityToVector"]["m_flInputMin"];
C_OP_RemapTransformVisibilityToVector.m_flInputMax = jsonData["C_OP_RemapTransformVisibilityToVector"]["m_flInputMax"];
C_OP_RemapTransformVisibilityToVector.m_vecOutputMin = jsonData["C_OP_RemapTransformVisibilityToVector"]["m_vecOutputMin"];
C_OP_RemapTransformVisibilityToVector.m_vecOutputMax = jsonData["C_OP_RemapTransformVisibilityToVector"]["m_vecOutputMax"];
C_OP_RemapTransformVisibilityToVector.m_flRadius = jsonData["C_OP_RemapTransformVisibilityToVector"]["m_flRadius"];

// Atribuições para C_OP_DirectionBetweenVecsToVec
// C_OP_DirectionBetweenVecsToVec Offsets
C_OP_DirectionBetweenVecsToVec.m_nFieldOutput = jsonData["C_OP_DirectionBetweenVecsToVec"]["m_nFieldOutput"];
C_OP_DirectionBetweenVecsToVec.m_vecPoint1 = jsonData["C_OP_DirectionBetweenVecsToVec"]["m_vecPoint1"];
C_OP_DirectionBetweenVecsToVec.m_vecPoint2 = jsonData["C_OP_DirectionBetweenVecsToVec"]["m_vecPoint2"];

// Atribuições para C_OP_MovementLoopInsideSphere
// C_OP_MovementLoopInsideSphere Offsets
C_OP_MovementLoopInsideSphere.m_nCP = jsonData["C_OP_MovementLoopInsideSphere"]["m_nCP"];
C_OP_MovementLoopInsideSphere.m_flDistance = jsonData["C_OP_MovementLoopInsideSphere"]["m_flDistance"];
C_OP_MovementLoopInsideSphere.m_vecScale = jsonData["C_OP_MovementLoopInsideSphere"]["m_vecScale"];
C_OP_MovementLoopInsideSphere.m_nDistSqrAttr = jsonData["C_OP_MovementLoopInsideSphere"]["m_nDistSqrAttr"];

// Atribuições para C_OP_RenderSimpleModelCollection
// C_OP_RenderSimpleModelCollection Offsets
C_OP_RenderSimpleModelCollection.m_bCenterOffset = jsonData["C_OP_RenderSimpleModelCollection"]["m_bCenterOffset"];
C_OP_RenderSimpleModelCollection.m_hModel = jsonData["C_OP_RenderSimpleModelCollection"]["m_hModel"];
C_OP_RenderSimpleModelCollection.m_modelInput = jsonData["C_OP_RenderSimpleModelCollection"]["m_modelInput"];
C_OP_RenderSimpleModelCollection.m_fSizeCullScale = jsonData["C_OP_RenderSimpleModelCollection"]["m_fSizeCullScale"];
C_OP_RenderSimpleModelCollection.m_bDisableShadows = jsonData["C_OP_RenderSimpleModelCollection"]["m_bDisableShadows"];
C_OP_RenderSimpleModelCollection.m_bDisableMotionBlur = jsonData["C_OP_RenderSimpleModelCollection"]["m_bDisableMotionBlur"];
C_OP_RenderSimpleModelCollection.m_bAcceptsDecals = jsonData["C_OP_RenderSimpleModelCollection"]["m_bAcceptsDecals"];
C_OP_RenderSimpleModelCollection.m_nAngularVelocityField = jsonData["C_OP_RenderSimpleModelCollection"]["m_nAngularVelocityField"];

// Atribuições para C_OP_QuantizeCPComponent
// C_OP_QuantizeCPComponent Offsets
C_OP_QuantizeCPComponent.m_flInputValue = jsonData["C_OP_QuantizeCPComponent"]["m_flInputValue"];
C_OP_QuantizeCPComponent.m_nCPOutput = jsonData["C_OP_QuantizeCPComponent"]["m_nCPOutput"];
C_OP_QuantizeCPComponent.m_nOutVectorField = jsonData["C_OP_QuantizeCPComponent"]["m_nOutVectorField"];
C_OP_QuantizeCPComponent.m_flQuantizeValue = jsonData["C_OP_QuantizeCPComponent"]["m_flQuantizeValue"];

// Atribuições para C_OP_PlayEndCapWhenFinished
// C_OP_PlayEndCapWhenFinished Offsets
C_OP_PlayEndCapWhenFinished.m_bFireOnEmissionEnd = jsonData["C_OP_PlayEndCapWhenFinished"]["m_bFireOnEmissionEnd"];
C_OP_PlayEndCapWhenFinished.m_bIncludeChildren = jsonData["C_OP_PlayEndCapWhenFinished"]["m_bIncludeChildren"];

// Atribuições para C_INIT_InitFloatCollection
// C_INIT_InitFloatCollection Offsets
C_INIT_InitFloatCollection.m_InputValue = jsonData["C_INIT_InitFloatCollection"]["m_InputValue"];
C_INIT_InitFloatCollection.m_nOutputField = jsonData["C_INIT_InitFloatCollection"]["m_nOutputField"];

// Atribuições para CPathParameters
// CPathParameters Offsets
CPathParameters.m_nStartControlPointNumber = jsonData["CPathParameters"]["m_nStartControlPointNumber"];
CPathParameters.m_nEndControlPointNumber = jsonData["CPathParameters"]["m_nEndControlPointNumber"];
CPathParameters.m_nBulgeControl = jsonData["CPathParameters"]["m_nBulgeControl"];
CPathParameters.m_flBulge = jsonData["CPathParameters"]["m_flBulge"];
CPathParameters.m_flMidPoint = jsonData["CPathParameters"]["m_flMidPoint"];
CPathParameters.m_vStartPointOffset = jsonData["CPathParameters"]["m_vStartPointOffset"];
CPathParameters.m_vMidPointOffset = jsonData["CPathParameters"]["m_vMidPointOffset"];
CPathParameters.m_vEndOffset = jsonData["CPathParameters"]["m_vEndOffset"];

// Atribuições para C_OP_RemapScalarEndCap
// C_OP_RemapScalarEndCap Offsets
C_OP_RemapScalarEndCap.m_nFieldInput = jsonData["C_OP_RemapScalarEndCap"]["m_nFieldInput"];
C_OP_RemapScalarEndCap.m_nFieldOutput = jsonData["C_OP_RemapScalarEndCap"]["m_nFieldOutput"];
C_OP_RemapScalarEndCap.m_flInputMin = jsonData["C_OP_RemapScalarEndCap"]["m_flInputMin"];
C_OP_RemapScalarEndCap.m_flInputMax = jsonData["C_OP_RemapScalarEndCap"]["m_flInputMax"];
C_OP_RemapScalarEndCap.m_flOutputMin = jsonData["C_OP_RemapScalarEndCap"]["m_flOutputMin"];
C_OP_RemapScalarEndCap.m_flOutputMax = jsonData["C_OP_RemapScalarEndCap"]["m_flOutputMax"];

// Atribuições para C_INIT_CreateFromPlaneCache
// C_INIT_CreateFromPlaneCache Offsets
C_INIT_CreateFromPlaneCache.m_vecOffsetMin = jsonData["C_INIT_CreateFromPlaneCache"]["m_vecOffsetMin"];
C_INIT_CreateFromPlaneCache.m_vecOffsetMax = jsonData["C_INIT_CreateFromPlaneCache"]["m_vecOffsetMax"];
C_INIT_CreateFromPlaneCache.m_bUseNormal = jsonData["C_INIT_CreateFromPlaneCache"]["m_bUseNormal"];

// Atribuições para C_OP_ControlPointToRadialScreenSpace
// C_OP_ControlPointToRadialScreenSpace Offsets
C_OP_ControlPointToRadialScreenSpace.m_nCPIn = jsonData["C_OP_ControlPointToRadialScreenSpace"]["m_nCPIn"];
C_OP_ControlPointToRadialScreenSpace.m_vecCP1Pos = jsonData["C_OP_ControlPointToRadialScreenSpace"]["m_vecCP1Pos"];
C_OP_ControlPointToRadialScreenSpace.m_nCPOut = jsonData["C_OP_ControlPointToRadialScreenSpace"]["m_nCPOut"];
C_OP_ControlPointToRadialScreenSpace.m_nCPOutField = jsonData["C_OP_ControlPointToRadialScreenSpace"]["m_nCPOutField"];
C_OP_ControlPointToRadialScreenSpace.m_nCPSSPosOut = jsonData["C_OP_ControlPointToRadialScreenSpace"]["m_nCPSSPosOut"];

// Atribuições para C_INIT_NormalOffset
// C_INIT_NormalOffset Offsets
C_INIT_NormalOffset.m_OffsetMin = jsonData["C_INIT_NormalOffset"]["m_OffsetMin"];
C_INIT_NormalOffset.m_OffsetMax = jsonData["C_INIT_NormalOffset"]["m_OffsetMax"];
C_INIT_NormalOffset.m_nControlPointNumber = jsonData["C_INIT_NormalOffset"]["m_nControlPointNumber"];
C_INIT_NormalOffset.m_bLocalCoords = jsonData["C_INIT_NormalOffset"]["m_bLocalCoords"];
C_INIT_NormalOffset.m_bNormalize = jsonData["C_INIT_NormalOffset"]["m_bNormalize"];

// Atribuições para C_OP_RemapDistanceToLineSegmentToVector
// C_OP_RemapDistanceToLineSegmentToVector Offsets
C_OP_RemapDistanceToLineSegmentToVector.m_nFieldOutput = jsonData["C_OP_RemapDistanceToLineSegmentToVector"]["m_nFieldOutput"];
C_OP_RemapDistanceToLineSegmentToVector.m_vMinOutputValue = jsonData["C_OP_RemapDistanceToLineSegmentToVector"]["m_vMinOutputValue"];
C_OP_RemapDistanceToLineSegmentToVector.m_vMaxOutputValue = jsonData["C_OP_RemapDistanceToLineSegmentToVector"]["m_vMaxOutputValue"];

// Atribuições para C_OP_RenderAsModels
// C_OP_RenderAsModels Offsets
C_OP_RenderAsModels.m_ModelList = jsonData["C_OP_RenderAsModels"]["m_ModelList"];
C_OP_RenderAsModels.m_flModelScale = jsonData["C_OP_RenderAsModels"]["m_flModelScale"];
C_OP_RenderAsModels.m_bFitToModelSize = jsonData["C_OP_RenderAsModels"]["m_bFitToModelSize"];
C_OP_RenderAsModels.m_bNonUniformScaling = jsonData["C_OP_RenderAsModels"]["m_bNonUniformScaling"];
C_OP_RenderAsModels.m_nXAxisScalingAttribute = jsonData["C_OP_RenderAsModels"]["m_nXAxisScalingAttribute"];
C_OP_RenderAsModels.m_nYAxisScalingAttribute = jsonData["C_OP_RenderAsModels"]["m_nYAxisScalingAttribute"];
C_OP_RenderAsModels.m_nZAxisScalingAttribute = jsonData["C_OP_RenderAsModels"]["m_nZAxisScalingAttribute"];
C_OP_RenderAsModels.m_nSizeCullBloat = jsonData["C_OP_RenderAsModels"]["m_nSizeCullBloat"];

// Atribuições para C_INIT_CreationNoise
// C_INIT_CreationNoise Offsets
C_INIT_CreationNoise.m_nFieldOutput = jsonData["C_INIT_CreationNoise"]["m_nFieldOutput"];
C_INIT_CreationNoise.m_bAbsVal = jsonData["C_INIT_CreationNoise"]["m_bAbsVal"];
C_INIT_CreationNoise.m_bAbsValInv = jsonData["C_INIT_CreationNoise"]["m_bAbsValInv"];
C_INIT_CreationNoise.m_flOffset = jsonData["C_INIT_CreationNoise"]["m_flOffset"];
C_INIT_CreationNoise.m_flOutputMin = jsonData["C_INIT_CreationNoise"]["m_flOutputMin"];
C_INIT_CreationNoise.m_flOutputMax = jsonData["C_INIT_CreationNoise"]["m_flOutputMax"];
C_INIT_CreationNoise.m_flNoiseScale = jsonData["C_INIT_CreationNoise"]["m_flNoiseScale"];
C_INIT_CreationNoise.m_flNoiseScaleLoc = jsonData["C_INIT_CreationNoise"]["m_flNoiseScaleLoc"];
C_INIT_CreationNoise.m_vecOffsetLoc = jsonData["C_INIT_CreationNoise"]["m_vecOffsetLoc"];
C_INIT_CreationNoise.m_flWorldTimeScale = jsonData["C_INIT_CreationNoise"]["m_flWorldTimeScale"];

// Atribuições para ParticleNamedValueConfiguration_t
// ParticleNamedValueConfiguration_t Offsets
ParticleNamedValueConfiguration_t.m_ConfigName = jsonData["ParticleNamedValueConfiguration_t"]["m_ConfigName"];
ParticleNamedValueConfiguration_t.m_ConfigValue = jsonData["ParticleNamedValueConfiguration_t"]["m_ConfigValue"];
ParticleNamedValueConfiguration_t.m_iAttachType = jsonData["ParticleNamedValueConfiguration_t"]["m_iAttachType"];
ParticleNamedValueConfiguration_t.m_BoundEntityPath = jsonData["ParticleNamedValueConfiguration_t"]["m_BoundEntityPath"];
ParticleNamedValueConfiguration_t.m_strEntityScope = jsonData["ParticleNamedValueConfiguration_t"]["m_strEntityScope"];
ParticleNamedValueConfiguration_t.m_strAttachmentName = jsonData["ParticleNamedValueConfiguration_t"]["m_strAttachmentName"];

// Atribuições para CParticleVecInput
// CParticleVecInput Offsets
CParticleVecInput.m_nType = jsonData["CParticleVecInput"]["m_nType"];
CParticleVecInput.m_vLiteralValue = jsonData["CParticleVecInput"]["m_vLiteralValue"];
CParticleVecInput.m_LiteralColor = jsonData["CParticleVecInput"]["m_LiteralColor"];
CParticleVecInput.m_NamedValue = jsonData["CParticleVecInput"]["m_NamedValue"];
CParticleVecInput.m_bFollowNamedValue = jsonData["CParticleVecInput"]["m_bFollowNamedValue"];
CParticleVecInput.m_nVectorAttribute = jsonData["CParticleVecInput"]["m_nVectorAttribute"];
CParticleVecInput.m_vVectorAttributeScale = jsonData["CParticleVecInput"]["m_vVectorAttributeScale"];
CParticleVecInput.m_nControlPoint = jsonData["CParticleVecInput"]["m_nControlPoint"];
CParticleVecInput.m_nDeltaControlPoint = jsonData["CParticleVecInput"]["m_nDeltaControlPoint"];
CParticleVecInput.m_vCPValueScale = jsonData["CParticleVecInput"]["m_vCPValueScale"];
CParticleVecInput.m_vCPRelativePosition = jsonData["CParticleVecInput"]["m_vCPRelativePosition"];
CParticleVecInput.m_vCPRelativeDir = jsonData["CParticleVecInput"]["m_vCPRelativeDir"];
CParticleVecInput.m_FloatComponentX = jsonData["CParticleVecInput"]["m_FloatComponentX"];
CParticleVecInput.m_FloatComponentY = jsonData["CParticleVecInput"]["m_FloatComponentY"];
CParticleVecInput.m_FloatComponentZ = jsonData["CParticleVecInput"]["m_FloatComponentZ"];
CParticleVecInput.m_FloatInterp = jsonData["CParticleVecInput"]["m_FloatInterp"];
CParticleVecInput.m_flInterpInput0 = jsonData["CParticleVecInput"]["m_flInterpInput0"];
CParticleVecInput.m_flInterpInput1 = jsonData["CParticleVecInput"]["m_flInterpInput1"];
CParticleVecInput.m_vInterpOutput0 = jsonData["CParticleVecInput"]["m_vInterpOutput0"];
CParticleVecInput.m_vInterpOutput1 = jsonData["CParticleVecInput"]["m_vInterpOutput1"];
CParticleVecInput.m_Gradient = jsonData["CParticleVecInput"]["m_Gradient"];
CParticleVecInput.m_vRandomMin = jsonData["CParticleVecInput"]["m_vRandomMin"];
CParticleVecInput.m_vRandomMax = jsonData["CParticleVecInput"]["m_vRandomMax"];

// Atribuições para C_OP_InstantaneousEmitter
// C_OP_InstantaneousEmitter Offsets
C_OP_InstantaneousEmitter.m_nParticlesToEmit = jsonData["C_OP_InstantaneousEmitter"]["m_nParticlesToEmit"];
C_OP_InstantaneousEmitter.m_flStartTime = jsonData["C_OP_InstantaneousEmitter"]["m_flStartTime"];
C_OP_InstantaneousEmitter.m_flInitFromKilledParentParticles = jsonData["C_OP_InstantaneousEmitter"]["m_flInitFromKilledParentParticles"];
C_OP_InstantaneousEmitter.m_nEventType = jsonData["C_OP_InstantaneousEmitter"]["m_nEventType"];
C_OP_InstantaneousEmitter.m_flParentParticleScale = jsonData["C_OP_InstantaneousEmitter"]["m_flParentParticleScale"];
C_OP_InstantaneousEmitter.m_nMaxEmittedPerFrame = jsonData["C_OP_InstantaneousEmitter"]["m_nMaxEmittedPerFrame"];
C_OP_InstantaneousEmitter.m_nSnapshotControlPoint = jsonData["C_OP_InstantaneousEmitter"]["m_nSnapshotControlPoint"];

// Atribuições para C_OP_ConstrainLineLength
// C_OP_ConstrainLineLength Offsets
C_OP_ConstrainLineLength.m_flMinDistance = jsonData["C_OP_ConstrainLineLength"]["m_flMinDistance"];
C_OP_ConstrainLineLength.m_flMaxDistance = jsonData["C_OP_ConstrainLineLength"]["m_flMaxDistance"];

// Atribuições para C_INIT_LifespanFromVelocity
// C_INIT_LifespanFromVelocity Offsets
C_INIT_LifespanFromVelocity.m_vecComponentScale = jsonData["C_INIT_LifespanFromVelocity"]["m_vecComponentScale"];
C_INIT_LifespanFromVelocity.m_flTraceOffset = jsonData["C_INIT_LifespanFromVelocity"]["m_flTraceOffset"];
C_INIT_LifespanFromVelocity.m_flMaxTraceLength = jsonData["C_INIT_LifespanFromVelocity"]["m_flMaxTraceLength"];
C_INIT_LifespanFromVelocity.m_flTraceTolerance = jsonData["C_INIT_LifespanFromVelocity"]["m_flTraceTolerance"];
C_INIT_LifespanFromVelocity.m_nMaxPlanes = jsonData["C_INIT_LifespanFromVelocity"]["m_nMaxPlanes"];
C_INIT_LifespanFromVelocity.m_CollisionGroupName = jsonData["C_INIT_LifespanFromVelocity"]["m_CollisionGroupName"];
C_INIT_LifespanFromVelocity.m_nTraceSet = jsonData["C_INIT_LifespanFromVelocity"]["m_nTraceSet"];
C_INIT_LifespanFromVelocity.m_bIncludeWater = jsonData["C_INIT_LifespanFromVelocity"]["m_bIncludeWater"];

// Atribuições para CBaseTrailRenderer
// CBaseTrailRenderer Offsets
CBaseTrailRenderer.m_nOrientationType = jsonData["CBaseTrailRenderer"]["m_nOrientationType"];
CBaseTrailRenderer.m_nOrientationControlPoint = jsonData["CBaseTrailRenderer"]["m_nOrientationControlPoint"];
CBaseTrailRenderer.m_flMinSize = jsonData["CBaseTrailRenderer"]["m_flMinSize"];
CBaseTrailRenderer.m_flMaxSize = jsonData["CBaseTrailRenderer"]["m_flMaxSize"];
CBaseTrailRenderer.m_flStartFadeSize = jsonData["CBaseTrailRenderer"]["m_flStartFadeSize"];
CBaseTrailRenderer.m_flEndFadeSize = jsonData["CBaseTrailRenderer"]["m_flEndFadeSize"];
CBaseTrailRenderer.m_bClampV = jsonData["CBaseTrailRenderer"]["m_bClampV"];

// Atribuições para C_INIT_VelocityFromCP
// C_INIT_VelocityFromCP Offsets
C_INIT_VelocityFromCP.m_velocityInput = jsonData["C_INIT_VelocityFromCP"]["m_velocityInput"];
C_INIT_VelocityFromCP.m_transformInput = jsonData["C_INIT_VelocityFromCP"]["m_transformInput"];
C_INIT_VelocityFromCP.m_flVelocityScale = jsonData["C_INIT_VelocityFromCP"]["m_flVelocityScale"];
C_INIT_VelocityFromCP.m_bDirectionOnly = jsonData["C_INIT_VelocityFromCP"]["m_bDirectionOnly"];

// Atribuições para C_OP_SetControlPointOrientation
// C_OP_SetControlPointOrientation Offsets
C_OP_SetControlPointOrientation.m_bUseWorldLocation = jsonData["C_OP_SetControlPointOrientation"]["m_bUseWorldLocation"];
C_OP_SetControlPointOrientation.m_bRandomize = jsonData["C_OP_SetControlPointOrientation"]["m_bRandomize"];
C_OP_SetControlPointOrientation.m_bSetOnce = jsonData["C_OP_SetControlPointOrientation"]["m_bSetOnce"];
C_OP_SetControlPointOrientation.m_nCP = jsonData["C_OP_SetControlPointOrientation"]["m_nCP"];
C_OP_SetControlPointOrientation.m_nHeadLocation = jsonData["C_OP_SetControlPointOrientation"]["m_nHeadLocation"];
C_OP_SetControlPointOrientation.m_vecRotation = jsonData["C_OP_SetControlPointOrientation"]["m_vecRotation"];
C_OP_SetControlPointOrientation.m_vecRotationB = jsonData["C_OP_SetControlPointOrientation"]["m_vecRotationB"];
C_OP_SetControlPointOrientation.m_flInterpolation = jsonData["C_OP_SetControlPointOrientation"]["m_flInterpolation"];

// Atribuições para C_OP_MovementSkinnedPositionFromCPSnapshot
// C_OP_MovementSkinnedPositionFromCPSnapshot Offsets
C_OP_MovementSkinnedPositionFromCPSnapshot.m_nSnapshotControlPointNumber = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_nSnapshotControlPointNumber"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_nControlPointNumber = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_nControlPointNumber"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_bRandom = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_bRandom"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_nRandomSeed = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_nRandomSeed"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_bSetNormal = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_bSetNormal"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_bSetRadius = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_bSetRadius"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_nIndexType = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_nIndexType"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_flReadIndex = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_flReadIndex"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_flIncrement = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_flIncrement"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_nFullLoopIncrement = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_nFullLoopIncrement"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_nSnapShotStartPoint = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_nSnapShotStartPoint"];
C_OP_MovementSkinnedPositionFromCPSnapshot.m_flInterpolation = jsonData["C_OP_MovementSkinnedPositionFromCPSnapshot"]["m_flInterpolation"];

// Atribuições para C_OP_OscillateVector
// C_OP_OscillateVector Offsets
C_OP_OscillateVector.m_RateMin = jsonData["C_OP_OscillateVector"]["m_RateMin"];
C_OP_OscillateVector.m_RateMax = jsonData["C_OP_OscillateVector"]["m_RateMax"];
C_OP_OscillateVector.m_FrequencyMin = jsonData["C_OP_OscillateVector"]["m_FrequencyMin"];
C_OP_OscillateVector.m_FrequencyMax = jsonData["C_OP_OscillateVector"]["m_FrequencyMax"];
C_OP_OscillateVector.m_nField = jsonData["C_OP_OscillateVector"]["m_nField"];
C_OP_OscillateVector.m_bProportional = jsonData["C_OP_OscillateVector"]["m_bProportional"];
C_OP_OscillateVector.m_bProportionalOp = jsonData["C_OP_OscillateVector"]["m_bProportionalOp"];
C_OP_OscillateVector.m_bOffset = jsonData["C_OP_OscillateVector"]["m_bOffset"];
C_OP_OscillateVector.m_flStartTime_min = jsonData["C_OP_OscillateVector"]["m_flStartTime_min"];
C_OP_OscillateVector.m_flStartTime_max = jsonData["C_OP_OscillateVector"]["m_flStartTime_max"];
C_OP_OscillateVector.m_flEndTime_min = jsonData["C_OP_OscillateVector"]["m_flEndTime_min"];
C_OP_OscillateVector.m_flEndTime_max = jsonData["C_OP_OscillateVector"]["m_flEndTime_max"];
C_OP_OscillateVector.m_flOscMult = jsonData["C_OP_OscillateVector"]["m_flOscMult"];
C_OP_OscillateVector.m_flOscAdd = jsonData["C_OP_OscillateVector"]["m_flOscAdd"];
C_OP_OscillateVector.m_flRateScale = jsonData["C_OP_OscillateVector"]["m_flRateScale"];

// Atribuições para C_OP_PositionLock
// C_OP_PositionLock Offsets
C_OP_PositionLock.m_TransformInput = jsonData["C_OP_PositionLock"]["m_TransformInput"];
C_OP_PositionLock.m_flStartTime_min = jsonData["C_OP_PositionLock"]["m_flStartTime_min"];
C_OP_PositionLock.m_flStartTime_max = jsonData["C_OP_PositionLock"]["m_flStartTime_max"];
C_OP_PositionLock.m_flStartTime_exp = jsonData["C_OP_PositionLock"]["m_flStartTime_exp"];
C_OP_PositionLock.m_flEndTime_min = jsonData["C_OP_PositionLock"]["m_flEndTime_min"];
C_OP_PositionLock.m_flEndTime_max = jsonData["C_OP_PositionLock"]["m_flEndTime_max"];
C_OP_PositionLock.m_flEndTime_exp = jsonData["C_OP_PositionLock"]["m_flEndTime_exp"];
C_OP_PositionLock.m_flRange = jsonData["C_OP_PositionLock"]["m_flRange"];
C_OP_PositionLock.m_flRangeBias = jsonData["C_OP_PositionLock"]["m_flRangeBias"];
C_OP_PositionLock.m_flJumpThreshold = jsonData["C_OP_PositionLock"]["m_flJumpThreshold"];
C_OP_PositionLock.m_flPrevPosScale = jsonData["C_OP_PositionLock"]["m_flPrevPosScale"];
C_OP_PositionLock.m_bLockRot = jsonData["C_OP_PositionLock"]["m_bLockRot"];
C_OP_PositionLock.m_vecScale = jsonData["C_OP_PositionLock"]["m_vecScale"];
C_OP_PositionLock.m_nFieldOutput = jsonData["C_OP_PositionLock"]["m_nFieldOutput"];
C_OP_PositionLock.m_nFieldOutputPrev = jsonData["C_OP_PositionLock"]["m_nFieldOutputPrev"];

// Atribuições para C_OP_RenderVRHapticEvent
// C_OP_RenderVRHapticEvent Offsets
C_OP_RenderVRHapticEvent.m_nHand = jsonData["C_OP_RenderVRHapticEvent"]["m_nHand"];
C_OP_RenderVRHapticEvent.m_nOutputHandCP = jsonData["C_OP_RenderVRHapticEvent"]["m_nOutputHandCP"];
C_OP_RenderVRHapticEvent.m_nOutputField = jsonData["C_OP_RenderVRHapticEvent"]["m_nOutputField"];
C_OP_RenderVRHapticEvent.m_flAmplitude = jsonData["C_OP_RenderVRHapticEvent"]["m_flAmplitude"];

// Atribuições para C_OP_SetControlPointToImpactPoint
// C_OP_SetControlPointToImpactPoint Offsets
C_OP_SetControlPointToImpactPoint.m_nCPOut = jsonData["C_OP_SetControlPointToImpactPoint"]["m_nCPOut"];
C_OP_SetControlPointToImpactPoint.m_nCPIn = jsonData["C_OP_SetControlPointToImpactPoint"]["m_nCPIn"];
C_OP_SetControlPointToImpactPoint.m_flUpdateRate = jsonData["C_OP_SetControlPointToImpactPoint"]["m_flUpdateRate"];
C_OP_SetControlPointToImpactPoint.m_flTraceLength = jsonData["C_OP_SetControlPointToImpactPoint"]["m_flTraceLength"];
C_OP_SetControlPointToImpactPoint.m_flStartOffset = jsonData["C_OP_SetControlPointToImpactPoint"]["m_flStartOffset"];
C_OP_SetControlPointToImpactPoint.m_flOffset = jsonData["C_OP_SetControlPointToImpactPoint"]["m_flOffset"];
C_OP_SetControlPointToImpactPoint.m_vecTraceDir = jsonData["C_OP_SetControlPointToImpactPoint"]["m_vecTraceDir"];
C_OP_SetControlPointToImpactPoint.m_CollisionGroupName = jsonData["C_OP_SetControlPointToImpactPoint"]["m_CollisionGroupName"];
C_OP_SetControlPointToImpactPoint.m_nTraceSet = jsonData["C_OP_SetControlPointToImpactPoint"]["m_nTraceSet"];
C_OP_SetControlPointToImpactPoint.m_bSetToEndpoint = jsonData["C_OP_SetControlPointToImpactPoint"]["m_bSetToEndpoint"];
C_OP_SetControlPointToImpactPoint.m_bTraceToClosestSurface = jsonData["C_OP_SetControlPointToImpactPoint"]["m_bTraceToClosestSurface"];
C_OP_SetControlPointToImpactPoint.m_bIncludeWater = jsonData["C_OP_SetControlPointToImpactPoint"]["m_bIncludeWater"];

// Atribuições para C_OP_InterpolateRadius
// C_OP_InterpolateRadius Offsets
C_OP_InterpolateRadius.m_flStartTime = jsonData["C_OP_InterpolateRadius"]["m_flStartTime"];
C_OP_InterpolateRadius.m_flEndTime = jsonData["C_OP_InterpolateRadius"]["m_flEndTime"];
C_OP_InterpolateRadius.m_flStartScale = jsonData["C_OP_InterpolateRadius"]["m_flStartScale"];
C_OP_InterpolateRadius.m_flEndScale = jsonData["C_OP_InterpolateRadius"]["m_flEndScale"];
C_OP_InterpolateRadius.m_bEaseInAndOut = jsonData["C_OP_InterpolateRadius"]["m_bEaseInAndOut"];
C_OP_InterpolateRadius.m_flBias = jsonData["C_OP_InterpolateRadius"]["m_flBias"];

// Atribuições para ParticleAttributeIndex_t
// ParticleAttributeIndex_t Offsets
ParticleAttributeIndex_t.m_Value = jsonData["ParticleAttributeIndex_t"]["m_Value"];

// Atribuições para C_OP_ReinitializeScalarEndCap
// C_OP_ReinitializeScalarEndCap Offsets
C_OP_ReinitializeScalarEndCap.m_nFieldOutput = jsonData["C_OP_ReinitializeScalarEndCap"]["m_nFieldOutput"];
C_OP_ReinitializeScalarEndCap.m_flOutputMin = jsonData["C_OP_ReinitializeScalarEndCap"]["m_flOutputMin"];
C_OP_ReinitializeScalarEndCap.m_flOutputMax = jsonData["C_OP_ReinitializeScalarEndCap"]["m_flOutputMax"];

// Atribuições para C_OP_TurbulenceForce
// C_OP_TurbulenceForce Offsets
C_OP_TurbulenceForce.m_flNoiseCoordScale0 = jsonData["C_OP_TurbulenceForce"]["m_flNoiseCoordScale0"];
C_OP_TurbulenceForce.m_flNoiseCoordScale1 = jsonData["C_OP_TurbulenceForce"]["m_flNoiseCoordScale1"];
C_OP_TurbulenceForce.m_flNoiseCoordScale2 = jsonData["C_OP_TurbulenceForce"]["m_flNoiseCoordScale2"];
C_OP_TurbulenceForce.m_flNoiseCoordScale3 = jsonData["C_OP_TurbulenceForce"]["m_flNoiseCoordScale3"];
C_OP_TurbulenceForce.m_vecNoiseAmount0 = jsonData["C_OP_TurbulenceForce"]["m_vecNoiseAmount0"];
C_OP_TurbulenceForce.m_vecNoiseAmount1 = jsonData["C_OP_TurbulenceForce"]["m_vecNoiseAmount1"];
C_OP_TurbulenceForce.m_vecNoiseAmount2 = jsonData["C_OP_TurbulenceForce"]["m_vecNoiseAmount2"];
C_OP_TurbulenceForce.m_vecNoiseAmount3 = jsonData["C_OP_TurbulenceForce"]["m_vecNoiseAmount3"];

// Atribuições para C_OP_RemapNamedModelElementOnceTimed
// C_OP_RemapNamedModelElementOnceTimed Offsets
C_OP_RemapNamedModelElementOnceTimed.m_hModel = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_hModel"];
C_OP_RemapNamedModelElementOnceTimed.m_inNames = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_inNames"];
C_OP_RemapNamedModelElementOnceTimed.m_outNames = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_outNames"];
C_OP_RemapNamedModelElementOnceTimed.m_fallbackNames = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_fallbackNames"];
C_OP_RemapNamedModelElementOnceTimed.m_bModelFromRenderer = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_bModelFromRenderer"];
C_OP_RemapNamedModelElementOnceTimed.m_bProportional = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_bProportional"];
C_OP_RemapNamedModelElementOnceTimed.m_nFieldInput = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_nFieldInput"];
C_OP_RemapNamedModelElementOnceTimed.m_nFieldOutput = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_nFieldOutput"];
C_OP_RemapNamedModelElementOnceTimed.m_flRemapTime = jsonData["C_OP_RemapNamedModelElementOnceTimed"]["m_flRemapTime"];

// Atribuições para C_OP_SetControlPointToPlayer
// C_OP_SetControlPointToPlayer Offsets
C_OP_SetControlPointToPlayer.m_nCP1 = jsonData["C_OP_SetControlPointToPlayer"]["m_nCP1"];
C_OP_SetControlPointToPlayer.m_vecCP1Pos = jsonData["C_OP_SetControlPointToPlayer"]["m_vecCP1Pos"];
C_OP_SetControlPointToPlayer.m_bOrientToEyes = jsonData["C_OP_SetControlPointToPlayer"]["m_bOrientToEyes"];

// Atribuições para C_OP_EndCapTimedFreeze
// C_OP_EndCapTimedFreeze Offsets
C_OP_EndCapTimedFreeze.m_flFreezeTime = jsonData["C_OP_EndCapTimedFreeze"]["m_flFreezeTime"];

// Atribuições para C_OP_RenderGpuImplicit
// C_OP_RenderGpuImplicit Offsets
C_OP_RenderGpuImplicit.m_bUsePerParticleRadius = jsonData["C_OP_RenderGpuImplicit"]["m_bUsePerParticleRadius"];
C_OP_RenderGpuImplicit.m_nVertexCountKb = jsonData["C_OP_RenderGpuImplicit"]["m_nVertexCountKb"];
C_OP_RenderGpuImplicit.m_nIndexCountKb = jsonData["C_OP_RenderGpuImplicit"]["m_nIndexCountKb"];
C_OP_RenderGpuImplicit.m_fGridSize = jsonData["C_OP_RenderGpuImplicit"]["m_fGridSize"];
C_OP_RenderGpuImplicit.m_fRadiusScale = jsonData["C_OP_RenderGpuImplicit"]["m_fRadiusScale"];
C_OP_RenderGpuImplicit.m_fIsosurfaceThreshold = jsonData["C_OP_RenderGpuImplicit"]["m_fIsosurfaceThreshold"];
C_OP_RenderGpuImplicit.m_nScaleCP = jsonData["C_OP_RenderGpuImplicit"]["m_nScaleCP"];
C_OP_RenderGpuImplicit.m_hMaterial = jsonData["C_OP_RenderGpuImplicit"]["m_hMaterial"];

// Atribuições para CNewParticleEffect
// CNewParticleEffect Offsets
CNewParticleEffect.m_pNext = jsonData["CNewParticleEffect"]["m_pNext"];
CNewParticleEffect.m_pPrev = jsonData["CNewParticleEffect"]["m_pPrev"];
CNewParticleEffect.m_pParticles = jsonData["CNewParticleEffect"]["m_pParticles"];
CNewParticleEffect.m_pDebugName = jsonData["CNewParticleEffect"]["m_pDebugName"];
CNewParticleEffect.m_bDontRemove = jsonData["CNewParticleEffect"]["m_bDontRemove"];
CNewParticleEffect.m_bRemove = jsonData["CNewParticleEffect"]["m_bRemove"];
CNewParticleEffect.m_bNeedsBBoxUpdate = jsonData["CNewParticleEffect"]["m_bNeedsBBoxUpdate"];
CNewParticleEffect.m_bIsFirstFrame = jsonData["CNewParticleEffect"]["m_bIsFirstFrame"];
CNewParticleEffect.m_bAutoUpdateBBox = jsonData["CNewParticleEffect"]["m_bAutoUpdateBBox"];
CNewParticleEffect.m_bAllocated = jsonData["CNewParticleEffect"]["m_bAllocated"];
CNewParticleEffect.m_bSimulate = jsonData["CNewParticleEffect"]["m_bSimulate"];
CNewParticleEffect.m_bShouldPerformCullCheck = jsonData["CNewParticleEffect"]["m_bShouldPerformCullCheck"];
CNewParticleEffect.m_bForceNoDraw = jsonData["CNewParticleEffect"]["m_bForceNoDraw"];
CNewParticleEffect.m_bShouldSave = jsonData["CNewParticleEffect"]["m_bShouldSave"];
CNewParticleEffect.m_bDisableAggregation = jsonData["CNewParticleEffect"]["m_bDisableAggregation"];
CNewParticleEffect.m_bShouldSimulateDuringGamePaused = jsonData["CNewParticleEffect"]["m_bShouldSimulateDuringGamePaused"];
CNewParticleEffect.m_bShouldCheckFoW = jsonData["CNewParticleEffect"]["m_bShouldCheckFoW"];
CNewParticleEffect.m_vSortOrigin = jsonData["CNewParticleEffect"]["m_vSortOrigin"];
CNewParticleEffect.m_flScale = jsonData["CNewParticleEffect"]["m_flScale"];
CNewParticleEffect.m_hOwner = jsonData["CNewParticleEffect"]["m_hOwner"];
CNewParticleEffect.m_pOwningParticleProperty = jsonData["CNewParticleEffect"]["m_pOwningParticleProperty"];
CNewParticleEffect.m_flFreezeTransitionStart = jsonData["CNewParticleEffect"]["m_flFreezeTransitionStart"];
CNewParticleEffect.m_flFreezeTransitionDuration = jsonData["CNewParticleEffect"]["m_flFreezeTransitionDuration"];
CNewParticleEffect.m_flFreezeTransitionOverride = jsonData["CNewParticleEffect"]["m_flFreezeTransitionOverride"];
CNewParticleEffect.m_bFreezeTransitionActive = jsonData["CNewParticleEffect"]["m_bFreezeTransitionActive"];
CNewParticleEffect.m_bFreezeTargetState = jsonData["CNewParticleEffect"]["m_bFreezeTargetState"];
CNewParticleEffect.m_bCanFreeze = jsonData["CNewParticleEffect"]["m_bCanFreeze"];
CNewParticleEffect.m_LastMin = jsonData["CNewParticleEffect"]["m_LastMin"];
CNewParticleEffect.m_LastMax = jsonData["CNewParticleEffect"]["m_LastMax"];
CNewParticleEffect.m_nSplitScreenUser = jsonData["CNewParticleEffect"]["m_nSplitScreenUser"];
CNewParticleEffect.m_vecAggregationCenter = jsonData["CNewParticleEffect"]["m_vecAggregationCenter"];
CNewParticleEffect.m_RefCount = jsonData["CNewParticleEffect"]["m_RefCount"];

// Atribuições para C_OP_SetRandomControlPointPosition
// C_OP_SetRandomControlPointPosition Offsets
C_OP_SetRandomControlPointPosition.m_bUseWorldLocation = jsonData["C_OP_SetRandomControlPointPosition"]["m_bUseWorldLocation"];
C_OP_SetRandomControlPointPosition.m_bOrient = jsonData["C_OP_SetRandomControlPointPosition"]["m_bOrient"];
C_OP_SetRandomControlPointPosition.m_nCP1 = jsonData["C_OP_SetRandomControlPointPosition"]["m_nCP1"];
C_OP_SetRandomControlPointPosition.m_nHeadLocation = jsonData["C_OP_SetRandomControlPointPosition"]["m_nHeadLocation"];
C_OP_SetRandomControlPointPosition.m_flReRandomRate = jsonData["C_OP_SetRandomControlPointPosition"]["m_flReRandomRate"];
C_OP_SetRandomControlPointPosition.m_vecCPMinPos = jsonData["C_OP_SetRandomControlPointPosition"]["m_vecCPMinPos"];
C_OP_SetRandomControlPointPosition.m_vecCPMaxPos = jsonData["C_OP_SetRandomControlPointPosition"]["m_vecCPMaxPos"];
C_OP_SetRandomControlPointPosition.m_flInterpolation = jsonData["C_OP_SetRandomControlPointPosition"]["m_flInterpolation"];

// Atribuições para C_OP_RemapTransformVisibilityToScalar
// C_OP_RemapTransformVisibilityToScalar Offsets
C_OP_RemapTransformVisibilityToScalar.m_nSetMethod = jsonData["C_OP_RemapTransformVisibilityToScalar"]["m_nSetMethod"];
C_OP_RemapTransformVisibilityToScalar.m_TransformInput = jsonData["C_OP_RemapTransformVisibilityToScalar"]["m_TransformInput"];
C_OP_RemapTransformVisibilityToScalar.m_nFieldOutput = jsonData["C_OP_RemapTransformVisibilityToScalar"]["m_nFieldOutput"];
C_OP_RemapTransformVisibilityToScalar.m_flInputMin = jsonData["C_OP_RemapTransformVisibilityToScalar"]["m_flInputMin"];
C_OP_RemapTransformVisibilityToScalar.m_flInputMax = jsonData["C_OP_RemapTransformVisibilityToScalar"]["m_flInputMax"];
C_OP_RemapTransformVisibilityToScalar.m_flOutputMin = jsonData["C_OP_RemapTransformVisibilityToScalar"]["m_flOutputMin"];
C_OP_RemapTransformVisibilityToScalar.m_flOutputMax = jsonData["C_OP_RemapTransformVisibilityToScalar"]["m_flOutputMax"];
C_OP_RemapTransformVisibilityToScalar.m_flRadius = jsonData["C_OP_RemapTransformVisibilityToScalar"]["m_flRadius"];

// Atribuições para C_OP_RemapControlPointDirectionToVector
// C_OP_RemapControlPointDirectionToVector Offsets
C_OP_RemapControlPointDirectionToVector.m_nFieldOutput = jsonData["C_OP_RemapControlPointDirectionToVector"]["m_nFieldOutput"];
C_OP_RemapControlPointDirectionToVector.m_flScale = jsonData["C_OP_RemapControlPointDirectionToVector"]["m_flScale"];
C_OP_RemapControlPointDirectionToVector.m_nControlPointNumber = jsonData["C_OP_RemapControlPointDirectionToVector"]["m_nControlPointNumber"];

// Atribuições para C_OP_DragRelativeToPlane
// C_OP_DragRelativeToPlane Offsets
C_OP_DragRelativeToPlane.m_flDragAtPlane = jsonData["C_OP_DragRelativeToPlane"]["m_flDragAtPlane"];
C_OP_DragRelativeToPlane.m_flFalloff = jsonData["C_OP_DragRelativeToPlane"]["m_flFalloff"];
C_OP_DragRelativeToPlane.m_bDirectional = jsonData["C_OP_DragRelativeToPlane"]["m_bDirectional"];
C_OP_DragRelativeToPlane.m_vecPlaneNormal = jsonData["C_OP_DragRelativeToPlane"]["m_vecPlaneNormal"];
C_OP_DragRelativeToPlane.m_nControlPointNumber = jsonData["C_OP_DragRelativeToPlane"]["m_nControlPointNumber"];

// Atribuições para C_OP_SetCPtoVector
// C_OP_SetCPtoVector Offsets
C_OP_SetCPtoVector.m_nCPInput = jsonData["C_OP_SetCPtoVector"]["m_nCPInput"];
C_OP_SetCPtoVector.m_nFieldOutput = jsonData["C_OP_SetCPtoVector"]["m_nFieldOutput"];

// Atribuições para ParticleNamedValueSource_t
// ParticleNamedValueSource_t Offsets
ParticleNamedValueSource_t.m_Name = jsonData["ParticleNamedValueSource_t"]["m_Name"];
ParticleNamedValueSource_t.m_IsPublic = jsonData["ParticleNamedValueSource_t"]["m_IsPublic"];
ParticleNamedValueSource_t.m_ValueType = jsonData["ParticleNamedValueSource_t"]["m_ValueType"];
ParticleNamedValueSource_t.m_DefaultConfig = jsonData["ParticleNamedValueSource_t"]["m_DefaultConfig"];
ParticleNamedValueSource_t.m_NamedConfigs = jsonData["ParticleNamedValueSource_t"]["m_NamedConfigs"];

// Atribuições para C_OP_SnapshotRigidSkinToBones
// C_OP_SnapshotRigidSkinToBones Offsets
C_OP_SnapshotRigidSkinToBones.m_bTransformNormals = jsonData["C_OP_SnapshotRigidSkinToBones"]["m_bTransformNormals"];
C_OP_SnapshotRigidSkinToBones.m_bTransformRadii = jsonData["C_OP_SnapshotRigidSkinToBones"]["m_bTransformRadii"];
C_OP_SnapshotRigidSkinToBones.m_nControlPointNumber = jsonData["C_OP_SnapshotRigidSkinToBones"]["m_nControlPointNumber"];

// Atribuições para C_OP_SetSingleControlPointPosition
// C_OP_SetSingleControlPointPosition Offsets
C_OP_SetSingleControlPointPosition.m_bSetOnce = jsonData["C_OP_SetSingleControlPointPosition"]["m_bSetOnce"];
C_OP_SetSingleControlPointPosition.m_nCP1 = jsonData["C_OP_SetSingleControlPointPosition"]["m_nCP1"];
C_OP_SetSingleControlPointPosition.m_vecCP1Pos = jsonData["C_OP_SetSingleControlPointPosition"]["m_vecCP1Pos"];
C_OP_SetSingleControlPointPosition.m_transformInput = jsonData["C_OP_SetSingleControlPointPosition"]["m_transformInput"];

// Atribuições para C_INIT_DistanceToNeighborCull
// C_INIT_DistanceToNeighborCull Offsets
C_INIT_DistanceToNeighborCull.m_flDistance = jsonData["C_INIT_DistanceToNeighborCull"]["m_flDistance"];
C_INIT_DistanceToNeighborCull.m_bIncludeRadii = jsonData["C_INIT_DistanceToNeighborCull"]["m_bIncludeRadii"];

// Atribuições para C_OP_RemapCPtoScalar
// C_OP_RemapCPtoScalar Offsets
C_OP_RemapCPtoScalar.m_nCPInput = jsonData["C_OP_RemapCPtoScalar"]["m_nCPInput"];
C_OP_RemapCPtoScalar.m_nFieldOutput = jsonData["C_OP_RemapCPtoScalar"]["m_nFieldOutput"];
C_OP_RemapCPtoScalar.m_nField = jsonData["C_OP_RemapCPtoScalar"]["m_nField"];
C_OP_RemapCPtoScalar.m_flInputMin = jsonData["C_OP_RemapCPtoScalar"]["m_flInputMin"];
C_OP_RemapCPtoScalar.m_flInputMax = jsonData["C_OP_RemapCPtoScalar"]["m_flInputMax"];
C_OP_RemapCPtoScalar.m_flOutputMin = jsonData["C_OP_RemapCPtoScalar"]["m_flOutputMin"];
C_OP_RemapCPtoScalar.m_flOutputMax = jsonData["C_OP_RemapCPtoScalar"]["m_flOutputMax"];
C_OP_RemapCPtoScalar.m_flStartTime = jsonData["C_OP_RemapCPtoScalar"]["m_flStartTime"];
C_OP_RemapCPtoScalar.m_flEndTime = jsonData["C_OP_RemapCPtoScalar"]["m_flEndTime"];
C_OP_RemapCPtoScalar.m_flInterpRate = jsonData["C_OP_RemapCPtoScalar"]["m_flInterpRate"];
C_OP_RemapCPtoScalar.m_nSetMethod = jsonData["C_OP_RemapCPtoScalar"]["m_nSetMethod"];

// Atribuições para CParticleFunctionRenderer
// CParticleFunctionRenderer Offsets
CParticleFunctionRenderer.VisibilityInputs = jsonData["CParticleFunctionRenderer"]["VisibilityInputs"];
CParticleFunctionRenderer.m_bCannotBeRefracted = jsonData["CParticleFunctionRenderer"]["m_bCannotBeRefracted"];
CParticleFunctionRenderer.m_bSkipRenderingOnMobile = jsonData["CParticleFunctionRenderer"]["m_bSkipRenderingOnMobile"];

// Atribuições para CParticleSystemDefinition
// CParticleSystemDefinition Offsets
CParticleSystemDefinition.m_nBehaviorVersion = jsonData["CParticleSystemDefinition"]["m_nBehaviorVersion"];
CParticleSystemDefinition.m_PreEmissionOperators = jsonData["CParticleSystemDefinition"]["m_PreEmissionOperators"];
CParticleSystemDefinition.m_Emitters = jsonData["CParticleSystemDefinition"]["m_Emitters"];
CParticleSystemDefinition.m_Initializers = jsonData["CParticleSystemDefinition"]["m_Initializers"];
CParticleSystemDefinition.m_Operators = jsonData["CParticleSystemDefinition"]["m_Operators"];
CParticleSystemDefinition.m_ForceGenerators = jsonData["CParticleSystemDefinition"]["m_ForceGenerators"];
CParticleSystemDefinition.m_Constraints = jsonData["CParticleSystemDefinition"]["m_Constraints"];
CParticleSystemDefinition.m_Renderers = jsonData["CParticleSystemDefinition"]["m_Renderers"];
CParticleSystemDefinition.m_Children = jsonData["CParticleSystemDefinition"]["m_Children"];
CParticleSystemDefinition.m_nFirstMultipleOverride_BackwardCompat = jsonData["CParticleSystemDefinition"]["m_nFirstMultipleOverride_BackwardCompat"];
CParticleSystemDefinition.m_nInitialParticles = jsonData["CParticleSystemDefinition"]["m_nInitialParticles"];
CParticleSystemDefinition.m_nMaxParticles = jsonData["CParticleSystemDefinition"]["m_nMaxParticles"];
CParticleSystemDefinition.m_nGroupID = jsonData["CParticleSystemDefinition"]["m_nGroupID"];
CParticleSystemDefinition.m_BoundingBoxMin = jsonData["CParticleSystemDefinition"]["m_BoundingBoxMin"];
CParticleSystemDefinition.m_BoundingBoxMax = jsonData["CParticleSystemDefinition"]["m_BoundingBoxMax"];
CParticleSystemDefinition.m_flDepthSortBias = jsonData["CParticleSystemDefinition"]["m_flDepthSortBias"];
CParticleSystemDefinition.m_nSortOverridePositionCP = jsonData["CParticleSystemDefinition"]["m_nSortOverridePositionCP"];
CParticleSystemDefinition.m_bInfiniteBounds = jsonData["CParticleSystemDefinition"]["m_bInfiniteBounds"];
CParticleSystemDefinition.m_bEnableNamedValues = jsonData["CParticleSystemDefinition"]["m_bEnableNamedValues"];
CParticleSystemDefinition.m_NamedValueDomain = jsonData["CParticleSystemDefinition"]["m_NamedValueDomain"];
CParticleSystemDefinition.m_NamedValueLocals = jsonData["CParticleSystemDefinition"]["m_NamedValueLocals"];
CParticleSystemDefinition.m_ConstantColor = jsonData["CParticleSystemDefinition"]["m_ConstantColor"];
CParticleSystemDefinition.m_ConstantNormal = jsonData["CParticleSystemDefinition"]["m_ConstantNormal"];
CParticleSystemDefinition.m_flConstantRadius = jsonData["CParticleSystemDefinition"]["m_flConstantRadius"];
CParticleSystemDefinition.m_flConstantRotation = jsonData["CParticleSystemDefinition"]["m_flConstantRotation"];
CParticleSystemDefinition.m_flConstantRotationSpeed = jsonData["CParticleSystemDefinition"]["m_flConstantRotationSpeed"];
CParticleSystemDefinition.m_flConstantLifespan = jsonData["CParticleSystemDefinition"]["m_flConstantLifespan"];
CParticleSystemDefinition.m_nConstantSequenceNumber = jsonData["CParticleSystemDefinition"]["m_nConstantSequenceNumber"];
CParticleSystemDefinition.m_nConstantSequenceNumber1 = jsonData["CParticleSystemDefinition"]["m_nConstantSequenceNumber1"];
CParticleSystemDefinition.m_nSnapshotControlPoint = jsonData["CParticleSystemDefinition"]["m_nSnapshotControlPoint"];
CParticleSystemDefinition.m_hSnapshot = jsonData["CParticleSystemDefinition"]["m_hSnapshot"];
CParticleSystemDefinition.m_pszCullReplacementName = jsonData["CParticleSystemDefinition"]["m_pszCullReplacementName"];
CParticleSystemDefinition.m_flCullRadius = jsonData["CParticleSystemDefinition"]["m_flCullRadius"];
CParticleSystemDefinition.m_flCullFillCost = jsonData["CParticleSystemDefinition"]["m_flCullFillCost"];
CParticleSystemDefinition.m_nCullControlPoint = jsonData["CParticleSystemDefinition"]["m_nCullControlPoint"];
CParticleSystemDefinition.m_hFallback = jsonData["CParticleSystemDefinition"]["m_hFallback"];
CParticleSystemDefinition.m_nFallbackMaxCount = jsonData["CParticleSystemDefinition"]["m_nFallbackMaxCount"];
CParticleSystemDefinition.m_hLowViolenceDef = jsonData["CParticleSystemDefinition"]["m_hLowViolenceDef"];
CParticleSystemDefinition.m_hReferenceReplacement = jsonData["CParticleSystemDefinition"]["m_hReferenceReplacement"];
CParticleSystemDefinition.m_flPreSimulationTime = jsonData["CParticleSystemDefinition"]["m_flPreSimulationTime"];
CParticleSystemDefinition.m_flStopSimulationAfterTime = jsonData["CParticleSystemDefinition"]["m_flStopSimulationAfterTime"];
CParticleSystemDefinition.m_flMaximumTimeStep = jsonData["CParticleSystemDefinition"]["m_flMaximumTimeStep"];
CParticleSystemDefinition.m_flMaximumSimTime = jsonData["CParticleSystemDefinition"]["m_flMaximumSimTime"];
CParticleSystemDefinition.m_flMinimumSimTime = jsonData["CParticleSystemDefinition"]["m_flMinimumSimTime"];
CParticleSystemDefinition.m_flMinimumTimeStep = jsonData["CParticleSystemDefinition"]["m_flMinimumTimeStep"];
CParticleSystemDefinition.m_nMinimumFrames = jsonData["CParticleSystemDefinition"]["m_nMinimumFrames"];
CParticleSystemDefinition.m_nMinCPULevel = jsonData["CParticleSystemDefinition"]["m_nMinCPULevel"];
CParticleSystemDefinition.m_nMinGPULevel = jsonData["CParticleSystemDefinition"]["m_nMinGPULevel"];
CParticleSystemDefinition.m_flNoDrawTimeToGoToSleep = jsonData["CParticleSystemDefinition"]["m_flNoDrawTimeToGoToSleep"];
CParticleSystemDefinition.m_flMaxDrawDistance = jsonData["CParticleSystemDefinition"]["m_flMaxDrawDistance"];
CParticleSystemDefinition.m_flStartFadeDistance = jsonData["CParticleSystemDefinition"]["m_flStartFadeDistance"];
CParticleSystemDefinition.m_flMaxCreationDistance = jsonData["CParticleSystemDefinition"]["m_flMaxCreationDistance"];
CParticleSystemDefinition.m_nAggregationMinAvailableParticles = jsonData["CParticleSystemDefinition"]["m_nAggregationMinAvailableParticles"];
CParticleSystemDefinition.m_flAggregateRadius = jsonData["CParticleSystemDefinition"]["m_flAggregateRadius"];
CParticleSystemDefinition.m_bShouldBatch = jsonData["CParticleSystemDefinition"]["m_bShouldBatch"];
CParticleSystemDefinition.m_bShouldHitboxesFallbackToRenderBounds = jsonData["CParticleSystemDefinition"]["m_bShouldHitboxesFallbackToRenderBounds"];
CParticleSystemDefinition.m_bShouldHitboxesFallbackToSnapshot = jsonData["CParticleSystemDefinition"]["m_bShouldHitboxesFallbackToSnapshot"];
CParticleSystemDefinition.m_bShouldHitboxesFallbackToCollisionHulls = jsonData["CParticleSystemDefinition"]["m_bShouldHitboxesFallbackToCollisionHulls"];
CParticleSystemDefinition.m_nViewModelEffect = jsonData["CParticleSystemDefinition"]["m_nViewModelEffect"];
CParticleSystemDefinition.m_bScreenSpaceEffect = jsonData["CParticleSystemDefinition"]["m_bScreenSpaceEffect"];
CParticleSystemDefinition.m_pszTargetLayerID = jsonData["CParticleSystemDefinition"]["m_pszTargetLayerID"];
CParticleSystemDefinition.m_nSkipRenderControlPoint = jsonData["CParticleSystemDefinition"]["m_nSkipRenderControlPoint"];
CParticleSystemDefinition.m_nAllowRenderControlPoint = jsonData["CParticleSystemDefinition"]["m_nAllowRenderControlPoint"];
CParticleSystemDefinition.m_bShouldSort = jsonData["CParticleSystemDefinition"]["m_bShouldSort"];
CParticleSystemDefinition.m_controlPointConfigurations = jsonData["CParticleSystemDefinition"]["m_controlPointConfigurations"];

// Atribuições para C_OP_PercentageBetweenTransformsVector
// C_OP_PercentageBetweenTransformsVector Offsets
C_OP_PercentageBetweenTransformsVector.m_nFieldOutput = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_nFieldOutput"];
C_OP_PercentageBetweenTransformsVector.m_flInputMin = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_flInputMin"];
C_OP_PercentageBetweenTransformsVector.m_flInputMax = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_flInputMax"];
C_OP_PercentageBetweenTransformsVector.m_vecOutputMin = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_vecOutputMin"];
C_OP_PercentageBetweenTransformsVector.m_vecOutputMax = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_vecOutputMax"];
C_OP_PercentageBetweenTransformsVector.m_TransformStart = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_TransformStart"];
C_OP_PercentageBetweenTransformsVector.m_TransformEnd = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_TransformEnd"];
C_OP_PercentageBetweenTransformsVector.m_nSetMethod = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_nSetMethod"];
C_OP_PercentageBetweenTransformsVector.m_bActiveRange = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_bActiveRange"];
C_OP_PercentageBetweenTransformsVector.m_bRadialCheck = jsonData["C_OP_PercentageBetweenTransformsVector"]["m_bRadialCheck"];

// Atribuições para C_OP_RenderScreenVelocityRotate
// C_OP_RenderScreenVelocityRotate Offsets
C_OP_RenderScreenVelocityRotate.m_flRotateRateDegrees = jsonData["C_OP_RenderScreenVelocityRotate"]["m_flRotateRateDegrees"];
C_OP_RenderScreenVelocityRotate.m_flForwardDegrees = jsonData["C_OP_RenderScreenVelocityRotate"]["m_flForwardDegrees"];

// Atribuições para C_OP_UpdateLightSource
// C_OP_UpdateLightSource Offsets
C_OP_UpdateLightSource.m_vColorTint = jsonData["C_OP_UpdateLightSource"]["m_vColorTint"];
C_OP_UpdateLightSource.m_flBrightnessScale = jsonData["C_OP_UpdateLightSource"]["m_flBrightnessScale"];
C_OP_UpdateLightSource.m_flRadiusScale = jsonData["C_OP_UpdateLightSource"]["m_flRadiusScale"];
C_OP_UpdateLightSource.m_flMinimumLightingRadius = jsonData["C_OP_UpdateLightSource"]["m_flMinimumLightingRadius"];
C_OP_UpdateLightSource.m_flMaximumLightingRadius = jsonData["C_OP_UpdateLightSource"]["m_flMaximumLightingRadius"];
C_OP_UpdateLightSource.m_flPositionDampingConstant = jsonData["C_OP_UpdateLightSource"]["m_flPositionDampingConstant"];

// Atribuições para C_INIT_CreateWithinBox
// C_INIT_CreateWithinBox Offsets
C_INIT_CreateWithinBox.m_vecMin = jsonData["C_INIT_CreateWithinBox"]["m_vecMin"];
C_INIT_CreateWithinBox.m_vecMax = jsonData["C_INIT_CreateWithinBox"]["m_vecMax"];
C_INIT_CreateWithinBox.m_nControlPointNumber = jsonData["C_INIT_CreateWithinBox"]["m_nControlPointNumber"];
C_INIT_CreateWithinBox.m_bLocalSpace = jsonData["C_INIT_CreateWithinBox"]["m_bLocalSpace"];
C_INIT_CreateWithinBox.m_randomnessParameters = jsonData["C_INIT_CreateWithinBox"]["m_randomnessParameters"];

// Atribuições para C_OP_ChooseRandomChildrenInGroup
// C_OP_ChooseRandomChildrenInGroup Offsets
C_OP_ChooseRandomChildrenInGroup.m_nChildGroupID = jsonData["C_OP_ChooseRandomChildrenInGroup"]["m_nChildGroupID"];
C_OP_ChooseRandomChildrenInGroup.m_flNumberOfChildren = jsonData["C_OP_ChooseRandomChildrenInGroup"]["m_flNumberOfChildren"];

// Atribuições para C_OP_ControlpointLight
// C_OP_ControlpointLight Offsets
C_OP_ControlpointLight.m_flScale = jsonData["C_OP_ControlpointLight"]["m_flScale"];
C_OP_ControlpointLight.m_nControlPoint1 = jsonData["C_OP_ControlpointLight"]["m_nControlPoint1"];
C_OP_ControlpointLight.m_nControlPoint2 = jsonData["C_OP_ControlpointLight"]["m_nControlPoint2"];
C_OP_ControlpointLight.m_nControlPoint3 = jsonData["C_OP_ControlpointLight"]["m_nControlPoint3"];
C_OP_ControlpointLight.m_nControlPoint4 = jsonData["C_OP_ControlpointLight"]["m_nControlPoint4"];
C_OP_ControlpointLight.m_vecCPOffset1 = jsonData["C_OP_ControlpointLight"]["m_vecCPOffset1"];
C_OP_ControlpointLight.m_vecCPOffset2 = jsonData["C_OP_ControlpointLight"]["m_vecCPOffset2"];
C_OP_ControlpointLight.m_vecCPOffset3 = jsonData["C_OP_ControlpointLight"]["m_vecCPOffset3"];
C_OP_ControlpointLight.m_vecCPOffset4 = jsonData["C_OP_ControlpointLight"]["m_vecCPOffset4"];
C_OP_ControlpointLight.m_LightFiftyDist1 = jsonData["C_OP_ControlpointLight"]["m_LightFiftyDist1"];
C_OP_ControlpointLight.m_LightZeroDist1 = jsonData["C_OP_ControlpointLight"]["m_LightZeroDist1"];
C_OP_ControlpointLight.m_LightFiftyDist2 = jsonData["C_OP_ControlpointLight"]["m_LightFiftyDist2"];
C_OP_ControlpointLight.m_LightZeroDist2 = jsonData["C_OP_ControlpointLight"]["m_LightZeroDist2"];
C_OP_ControlpointLight.m_LightFiftyDist3 = jsonData["C_OP_ControlpointLight"]["m_LightFiftyDist3"];
C_OP_ControlpointLight.m_LightZeroDist3 = jsonData["C_OP_ControlpointLight"]["m_LightZeroDist3"];
C_OP_ControlpointLight.m_LightFiftyDist4 = jsonData["C_OP_ControlpointLight"]["m_LightFiftyDist4"];
C_OP_ControlpointLight.m_LightZeroDist4 = jsonData["C_OP_ControlpointLight"]["m_LightZeroDist4"];
C_OP_ControlpointLight.m_LightColor1 = jsonData["C_OP_ControlpointLight"]["m_LightColor1"];
C_OP_ControlpointLight.m_LightColor2 = jsonData["C_OP_ControlpointLight"]["m_LightColor2"];
C_OP_ControlpointLight.m_LightColor3 = jsonData["C_OP_ControlpointLight"]["m_LightColor3"];
C_OP_ControlpointLight.m_LightColor4 = jsonData["C_OP_ControlpointLight"]["m_LightColor4"];
C_OP_ControlpointLight.m_bLightType1 = jsonData["C_OP_ControlpointLight"]["m_bLightType1"];
C_OP_ControlpointLight.m_bLightType2 = jsonData["C_OP_ControlpointLight"]["m_bLightType2"];
C_OP_ControlpointLight.m_bLightType3 = jsonData["C_OP_ControlpointLight"]["m_bLightType3"];
C_OP_ControlpointLight.m_bLightType4 = jsonData["C_OP_ControlpointLight"]["m_bLightType4"];
C_OP_ControlpointLight.m_bLightDynamic1 = jsonData["C_OP_ControlpointLight"]["m_bLightDynamic1"];
C_OP_ControlpointLight.m_bLightDynamic2 = jsonData["C_OP_ControlpointLight"]["m_bLightDynamic2"];
C_OP_ControlpointLight.m_bLightDynamic3 = jsonData["C_OP_ControlpointLight"]["m_bLightDynamic3"];
C_OP_ControlpointLight.m_bLightDynamic4 = jsonData["C_OP_ControlpointLight"]["m_bLightDynamic4"];
C_OP_ControlpointLight.m_bUseNormal = jsonData["C_OP_ControlpointLight"]["m_bUseNormal"];
C_OP_ControlpointLight.m_bUseHLambert = jsonData["C_OP_ControlpointLight"]["m_bUseHLambert"];
C_OP_ControlpointLight.m_bClampLowerRange = jsonData["C_OP_ControlpointLight"]["m_bClampLowerRange"];
C_OP_ControlpointLight.m_bClampUpperRange = jsonData["C_OP_ControlpointLight"]["m_bClampUpperRange"];

// Atribuições para C_OP_VectorFieldSnapshot
// C_OP_VectorFieldSnapshot Offsets
C_OP_VectorFieldSnapshot.m_nControlPointNumber = jsonData["C_OP_VectorFieldSnapshot"]["m_nControlPointNumber"];
C_OP_VectorFieldSnapshot.m_nAttributeToWrite = jsonData["C_OP_VectorFieldSnapshot"]["m_nAttributeToWrite"];
C_OP_VectorFieldSnapshot.m_nLocalSpaceCP = jsonData["C_OP_VectorFieldSnapshot"]["m_nLocalSpaceCP"];
C_OP_VectorFieldSnapshot.m_flInterpolation = jsonData["C_OP_VectorFieldSnapshot"]["m_flInterpolation"];
C_OP_VectorFieldSnapshot.m_vecScale = jsonData["C_OP_VectorFieldSnapshot"]["m_vecScale"];
C_OP_VectorFieldSnapshot.m_flBoundaryDampening = jsonData["C_OP_VectorFieldSnapshot"]["m_flBoundaryDampening"];
C_OP_VectorFieldSnapshot.m_bSetVelocity = jsonData["C_OP_VectorFieldSnapshot"]["m_bSetVelocity"];
C_OP_VectorFieldSnapshot.m_bLockToSurface = jsonData["C_OP_VectorFieldSnapshot"]["m_bLockToSurface"];
C_OP_VectorFieldSnapshot.m_flGridSpacing = jsonData["C_OP_VectorFieldSnapshot"]["m_flGridSpacing"];

// Atribuições para C_OP_CylindricalDistanceToTransform
// C_OP_CylindricalDistanceToTransform Offsets
C_OP_CylindricalDistanceToTransform.m_nFieldOutput = jsonData["C_OP_CylindricalDistanceToTransform"]["m_nFieldOutput"];
C_OP_CylindricalDistanceToTransform.m_flInputMin = jsonData["C_OP_CylindricalDistanceToTransform"]["m_flInputMin"];
C_OP_CylindricalDistanceToTransform.m_flInputMax = jsonData["C_OP_CylindricalDistanceToTransform"]["m_flInputMax"];
C_OP_CylindricalDistanceToTransform.m_flOutputMin = jsonData["C_OP_CylindricalDistanceToTransform"]["m_flOutputMin"];
C_OP_CylindricalDistanceToTransform.m_flOutputMax = jsonData["C_OP_CylindricalDistanceToTransform"]["m_flOutputMax"];
C_OP_CylindricalDistanceToTransform.m_TransformStart = jsonData["C_OP_CylindricalDistanceToTransform"]["m_TransformStart"];
C_OP_CylindricalDistanceToTransform.m_TransformEnd = jsonData["C_OP_CylindricalDistanceToTransform"]["m_TransformEnd"];
C_OP_CylindricalDistanceToTransform.m_nSetMethod = jsonData["C_OP_CylindricalDistanceToTransform"]["m_nSetMethod"];
C_OP_CylindricalDistanceToTransform.m_bActiveRange = jsonData["C_OP_CylindricalDistanceToTransform"]["m_bActiveRange"];
C_OP_CylindricalDistanceToTransform.m_bAdditive = jsonData["C_OP_CylindricalDistanceToTransform"]["m_bAdditive"];
C_OP_CylindricalDistanceToTransform.m_bCapsule = jsonData["C_OP_CylindricalDistanceToTransform"]["m_bCapsule"];

// Atribuições para C_INIT_PositionPlaceOnGround
// C_INIT_PositionPlaceOnGround Offsets
C_INIT_PositionPlaceOnGround.m_flOffset = jsonData["C_INIT_PositionPlaceOnGround"]["m_flOffset"];
C_INIT_PositionPlaceOnGround.m_flMaxTraceLength = jsonData["C_INIT_PositionPlaceOnGround"]["m_flMaxTraceLength"];
C_INIT_PositionPlaceOnGround.m_CollisionGroupName = jsonData["C_INIT_PositionPlaceOnGround"]["m_CollisionGroupName"];
C_INIT_PositionPlaceOnGround.m_nTraceSet = jsonData["C_INIT_PositionPlaceOnGround"]["m_nTraceSet"];
C_INIT_PositionPlaceOnGround.m_nTraceMissBehavior = jsonData["C_INIT_PositionPlaceOnGround"]["m_nTraceMissBehavior"];
C_INIT_PositionPlaceOnGround.m_bIncludeWater = jsonData["C_INIT_PositionPlaceOnGround"]["m_bIncludeWater"];
C_INIT_PositionPlaceOnGround.m_bSetNormal = jsonData["C_INIT_PositionPlaceOnGround"]["m_bSetNormal"];
C_INIT_PositionPlaceOnGround.m_bSetPXYZOnly = jsonData["C_INIT_PositionPlaceOnGround"]["m_bSetPXYZOnly"];
C_INIT_PositionPlaceOnGround.m_bTraceAlongNormal = jsonData["C_INIT_PositionPlaceOnGround"]["m_bTraceAlongNormal"];
C_INIT_PositionPlaceOnGround.m_bOffsetonColOnly = jsonData["C_INIT_PositionPlaceOnGround"]["m_bOffsetonColOnly"];
C_INIT_PositionPlaceOnGround.m_flOffsetByRadiusFactor = jsonData["C_INIT_PositionPlaceOnGround"]["m_flOffsetByRadiusFactor"];
C_INIT_PositionPlaceOnGround.m_nPreserveOffsetCP = jsonData["C_INIT_PositionPlaceOnGround"]["m_nPreserveOffsetCP"];
C_INIT_PositionPlaceOnGround.m_nIgnoreCP = jsonData["C_INIT_PositionPlaceOnGround"]["m_nIgnoreCP"];

// Atribuições para C_INIT_RandomScalar
// C_INIT_RandomScalar Offsets
C_INIT_RandomScalar.m_flMin = jsonData["C_INIT_RandomScalar"]["m_flMin"];
C_INIT_RandomScalar.m_flMax = jsonData["C_INIT_RandomScalar"]["m_flMax"];
C_INIT_RandomScalar.m_flExponent = jsonData["C_INIT_RandomScalar"]["m_flExponent"];
C_INIT_RandomScalar.m_nFieldOutput = jsonData["C_INIT_RandomScalar"]["m_nFieldOutput"];

// Atribuições para C_OP_RenderPostProcessing
// C_OP_RenderPostProcessing Offsets
C_OP_RenderPostProcessing.m_flPostProcessStrength = jsonData["C_OP_RenderPostProcessing"]["m_flPostProcessStrength"];
C_OP_RenderPostProcessing.m_hPostTexture = jsonData["C_OP_RenderPostProcessing"]["m_hPostTexture"];
C_OP_RenderPostProcessing.m_nPriority = jsonData["C_OP_RenderPostProcessing"]["m_nPriority"];

// Atribuições para C_OP_WorldTraceConstraint
// C_OP_WorldTraceConstraint Offsets
C_OP_WorldTraceConstraint.m_nCP = jsonData["C_OP_WorldTraceConstraint"]["m_nCP"];
C_OP_WorldTraceConstraint.m_vecCpOffset = jsonData["C_OP_WorldTraceConstraint"]["m_vecCpOffset"];
C_OP_WorldTraceConstraint.m_nCollisionMode = jsonData["C_OP_WorldTraceConstraint"]["m_nCollisionMode"];
C_OP_WorldTraceConstraint.m_nCollisionModeMin = jsonData["C_OP_WorldTraceConstraint"]["m_nCollisionModeMin"];
C_OP_WorldTraceConstraint.m_nTraceSet = jsonData["C_OP_WorldTraceConstraint"]["m_nTraceSet"];
C_OP_WorldTraceConstraint.m_CollisionGroupName = jsonData["C_OP_WorldTraceConstraint"]["m_CollisionGroupName"];
C_OP_WorldTraceConstraint.m_bWorldOnly = jsonData["C_OP_WorldTraceConstraint"]["m_bWorldOnly"];
C_OP_WorldTraceConstraint.m_bBrushOnly = jsonData["C_OP_WorldTraceConstraint"]["m_bBrushOnly"];
C_OP_WorldTraceConstraint.m_bIncludeWater = jsonData["C_OP_WorldTraceConstraint"]["m_bIncludeWater"];
C_OP_WorldTraceConstraint.m_nIgnoreCP = jsonData["C_OP_WorldTraceConstraint"]["m_nIgnoreCP"];
C_OP_WorldTraceConstraint.m_flCpMovementTolerance = jsonData["C_OP_WorldTraceConstraint"]["m_flCpMovementTolerance"];
C_OP_WorldTraceConstraint.m_flRetestRate = jsonData["C_OP_WorldTraceConstraint"]["m_flRetestRate"];
C_OP_WorldTraceConstraint.m_flTraceTolerance = jsonData["C_OP_WorldTraceConstraint"]["m_flTraceTolerance"];
C_OP_WorldTraceConstraint.m_flCollisionConfirmationSpeed = jsonData["C_OP_WorldTraceConstraint"]["m_flCollisionConfirmationSpeed"];
C_OP_WorldTraceConstraint.m_nMaxTracesPerFrame = jsonData["C_OP_WorldTraceConstraint"]["m_nMaxTracesPerFrame"];
C_OP_WorldTraceConstraint.m_flRadiusScale = jsonData["C_OP_WorldTraceConstraint"]["m_flRadiusScale"];
C_OP_WorldTraceConstraint.m_flBounceAmount = jsonData["C_OP_WorldTraceConstraint"]["m_flBounceAmount"];
C_OP_WorldTraceConstraint.m_flSlideAmount = jsonData["C_OP_WorldTraceConstraint"]["m_flSlideAmount"];
C_OP_WorldTraceConstraint.m_flRandomDirScale = jsonData["C_OP_WorldTraceConstraint"]["m_flRandomDirScale"];
C_OP_WorldTraceConstraint.m_bDecayBounce = jsonData["C_OP_WorldTraceConstraint"]["m_bDecayBounce"];
C_OP_WorldTraceConstraint.m_bKillonContact = jsonData["C_OP_WorldTraceConstraint"]["m_bKillonContact"];
C_OP_WorldTraceConstraint.m_flMinSpeed = jsonData["C_OP_WorldTraceConstraint"]["m_flMinSpeed"];
C_OP_WorldTraceConstraint.m_bSetNormal = jsonData["C_OP_WorldTraceConstraint"]["m_bSetNormal"];
C_OP_WorldTraceConstraint.m_nStickOnCollisionField = jsonData["C_OP_WorldTraceConstraint"]["m_nStickOnCollisionField"];
C_OP_WorldTraceConstraint.m_flStopSpeed = jsonData["C_OP_WorldTraceConstraint"]["m_flStopSpeed"];
C_OP_WorldTraceConstraint.m_nEntityStickDataField = jsonData["C_OP_WorldTraceConstraint"]["m_nEntityStickDataField"];
C_OP_WorldTraceConstraint.m_nEntityStickNormalField = jsonData["C_OP_WorldTraceConstraint"]["m_nEntityStickNormalField"];

// Atribuições para C_OP_RenderBlobs
// C_OP_RenderBlobs Offsets
C_OP_RenderBlobs.m_cubeWidth = jsonData["C_OP_RenderBlobs"]["m_cubeWidth"];
C_OP_RenderBlobs.m_cutoffRadius = jsonData["C_OP_RenderBlobs"]["m_cutoffRadius"];
C_OP_RenderBlobs.m_renderRadius = jsonData["C_OP_RenderBlobs"]["m_renderRadius"];
C_OP_RenderBlobs.m_nVertexCountKb = jsonData["C_OP_RenderBlobs"]["m_nVertexCountKb"];
C_OP_RenderBlobs.m_nIndexCountKb = jsonData["C_OP_RenderBlobs"]["m_nIndexCountKb"];
C_OP_RenderBlobs.m_nScaleCP = jsonData["C_OP_RenderBlobs"]["m_nScaleCP"];
C_OP_RenderBlobs.m_MaterialVars = jsonData["C_OP_RenderBlobs"]["m_MaterialVars"];
C_OP_RenderBlobs.m_hMaterial = jsonData["C_OP_RenderBlobs"]["m_hMaterial"];

// Atribuições para C_OP_OscillateScalar
// C_OP_OscillateScalar Offsets
C_OP_OscillateScalar.m_RateMin = jsonData["C_OP_OscillateScalar"]["m_RateMin"];
C_OP_OscillateScalar.m_RateMax = jsonData["C_OP_OscillateScalar"]["m_RateMax"];
C_OP_OscillateScalar.m_FrequencyMin = jsonData["C_OP_OscillateScalar"]["m_FrequencyMin"];
C_OP_OscillateScalar.m_FrequencyMax = jsonData["C_OP_OscillateScalar"]["m_FrequencyMax"];
C_OP_OscillateScalar.m_nField = jsonData["C_OP_OscillateScalar"]["m_nField"];
C_OP_OscillateScalar.m_bProportional = jsonData["C_OP_OscillateScalar"]["m_bProportional"];
C_OP_OscillateScalar.m_bProportionalOp = jsonData["C_OP_OscillateScalar"]["m_bProportionalOp"];
C_OP_OscillateScalar.m_flStartTime_min = jsonData["C_OP_OscillateScalar"]["m_flStartTime_min"];
C_OP_OscillateScalar.m_flStartTime_max = jsonData["C_OP_OscillateScalar"]["m_flStartTime_max"];
C_OP_OscillateScalar.m_flEndTime_min = jsonData["C_OP_OscillateScalar"]["m_flEndTime_min"];
C_OP_OscillateScalar.m_flEndTime_max = jsonData["C_OP_OscillateScalar"]["m_flEndTime_max"];
C_OP_OscillateScalar.m_flOscMult = jsonData["C_OP_OscillateScalar"]["m_flOscMult"];
C_OP_OscillateScalar.m_flOscAdd = jsonData["C_OP_OscillateScalar"]["m_flOscAdd"];

// Atribuições para C_OP_FadeOut
// C_OP_FadeOut Offsets
C_OP_FadeOut.m_flFadeOutTimeMin = jsonData["C_OP_FadeOut"]["m_flFadeOutTimeMin"];
C_OP_FadeOut.m_flFadeOutTimeMax = jsonData["C_OP_FadeOut"]["m_flFadeOutTimeMax"];
C_OP_FadeOut.m_flFadeOutTimeExp = jsonData["C_OP_FadeOut"]["m_flFadeOutTimeExp"];
C_OP_FadeOut.m_flFadeBias = jsonData["C_OP_FadeOut"]["m_flFadeBias"];
C_OP_FadeOut.m_bProportional = jsonData["C_OP_FadeOut"]["m_bProportional"];
C_OP_FadeOut.m_bEaseInAndOut = jsonData["C_OP_FadeOut"]["m_bEaseInAndOut"];

// Atribuições para C_INIT_RandomSequence
// C_INIT_RandomSequence Offsets
C_INIT_RandomSequence.m_nSequenceMin = jsonData["C_INIT_RandomSequence"]["m_nSequenceMin"];
C_INIT_RandomSequence.m_nSequenceMax = jsonData["C_INIT_RandomSequence"]["m_nSequenceMax"];
C_INIT_RandomSequence.m_bShuffle = jsonData["C_INIT_RandomSequence"]["m_bShuffle"];
C_INIT_RandomSequence.m_bLinear = jsonData["C_INIT_RandomSequence"]["m_bLinear"];
C_INIT_RandomSequence.m_WeightedList = jsonData["C_INIT_RandomSequence"]["m_WeightedList"];

// Atribuições para C_OP_RampScalarSplineSimple
// C_OP_RampScalarSplineSimple Offsets
C_OP_RampScalarSplineSimple.m_Rate = jsonData["C_OP_RampScalarSplineSimple"]["m_Rate"];
C_OP_RampScalarSplineSimple.m_flStartTime = jsonData["C_OP_RampScalarSplineSimple"]["m_flStartTime"];
C_OP_RampScalarSplineSimple.m_flEndTime = jsonData["C_OP_RampScalarSplineSimple"]["m_flEndTime"];
C_OP_RampScalarSplineSimple.m_nField = jsonData["C_OP_RampScalarSplineSimple"]["m_nField"];
C_OP_RampScalarSplineSimple.m_bEaseOut = jsonData["C_OP_RampScalarSplineSimple"]["m_bEaseOut"];

// Atribuições para C_INIT_DistanceCull
// C_INIT_DistanceCull Offsets
C_INIT_DistanceCull.m_nControlPoint = jsonData["C_INIT_DistanceCull"]["m_nControlPoint"];
C_INIT_DistanceCull.m_flDistance = jsonData["C_INIT_DistanceCull"]["m_flDistance"];
C_INIT_DistanceCull.m_bCullInside = jsonData["C_INIT_DistanceCull"]["m_bCullInside"];

// Atribuições para C_OP_CollideWithParentParticles
// C_OP_CollideWithParentParticles Offsets
C_OP_CollideWithParentParticles.m_flParentRadiusScale = jsonData["C_OP_CollideWithParentParticles"]["m_flParentRadiusScale"];
C_OP_CollideWithParentParticles.m_flRadiusScale = jsonData["C_OP_CollideWithParentParticles"]["m_flRadiusScale"];

// Atribuições para C_INIT_InitFromVectorFieldSnapshot
// C_INIT_InitFromVectorFieldSnapshot Offsets
C_INIT_InitFromVectorFieldSnapshot.m_nControlPointNumber = jsonData["C_INIT_InitFromVectorFieldSnapshot"]["m_nControlPointNumber"];
C_INIT_InitFromVectorFieldSnapshot.m_nLocalSpaceCP = jsonData["C_INIT_InitFromVectorFieldSnapshot"]["m_nLocalSpaceCP"];
C_INIT_InitFromVectorFieldSnapshot.m_nWeightUpdateCP = jsonData["C_INIT_InitFromVectorFieldSnapshot"]["m_nWeightUpdateCP"];
C_INIT_InitFromVectorFieldSnapshot.m_bUseVerticalVelocity = jsonData["C_INIT_InitFromVectorFieldSnapshot"]["m_bUseVerticalVelocity"];
C_INIT_InitFromVectorFieldSnapshot.m_vecScale = jsonData["C_INIT_InitFromVectorFieldSnapshot"]["m_vecScale"];

// Atribuições para C_OP_SetVectorAttributeToVectorExpression
// C_OP_SetVectorAttributeToVectorExpression Offsets
C_OP_SetVectorAttributeToVectorExpression.m_nExpression = jsonData["C_OP_SetVectorAttributeToVectorExpression"]["m_nExpression"];
C_OP_SetVectorAttributeToVectorExpression.m_vInput1 = jsonData["C_OP_SetVectorAttributeToVectorExpression"]["m_vInput1"];
C_OP_SetVectorAttributeToVectorExpression.m_vInput2 = jsonData["C_OP_SetVectorAttributeToVectorExpression"]["m_vInput2"];
C_OP_SetVectorAttributeToVectorExpression.m_nOutputField = jsonData["C_OP_SetVectorAttributeToVectorExpression"]["m_nOutputField"];
C_OP_SetVectorAttributeToVectorExpression.m_nSetMethod = jsonData["C_OP_SetVectorAttributeToVectorExpression"]["m_nSetMethod"];
C_OP_SetVectorAttributeToVectorExpression.m_bNormalizedOutput = jsonData["C_OP_SetVectorAttributeToVectorExpression"]["m_bNormalizedOutput"];

// Atribuições para C_INIT_AddVectorToVector
// C_INIT_AddVectorToVector Offsets
C_INIT_AddVectorToVector.m_vecScale = jsonData["C_INIT_AddVectorToVector"]["m_vecScale"];
C_INIT_AddVectorToVector.m_nFieldOutput = jsonData["C_INIT_AddVectorToVector"]["m_nFieldOutput"];
C_INIT_AddVectorToVector.m_nFieldInput = jsonData["C_INIT_AddVectorToVector"]["m_nFieldInput"];
C_INIT_AddVectorToVector.m_vOffsetMin = jsonData["C_INIT_AddVectorToVector"]["m_vOffsetMin"];
C_INIT_AddVectorToVector.m_vOffsetMax = jsonData["C_INIT_AddVectorToVector"]["m_vOffsetMax"];
C_INIT_AddVectorToVector.m_randomnessParameters = jsonData["C_INIT_AddVectorToVector"]["m_randomnessParameters"];

// Atribuições para C_INIT_RemapInitialVisibilityScalar
// C_INIT_RemapInitialVisibilityScalar Offsets
C_INIT_RemapInitialVisibilityScalar.m_nFieldOutput = jsonData["C_INIT_RemapInitialVisibilityScalar"]["m_nFieldOutput"];
C_INIT_RemapInitialVisibilityScalar.m_flInputMin = jsonData["C_INIT_RemapInitialVisibilityScalar"]["m_flInputMin"];
C_INIT_RemapInitialVisibilityScalar.m_flInputMax = jsonData["C_INIT_RemapInitialVisibilityScalar"]["m_flInputMax"];
C_INIT_RemapInitialVisibilityScalar.m_flOutputMin = jsonData["C_INIT_RemapInitialVisibilityScalar"]["m_flOutputMin"];
C_INIT_RemapInitialVisibilityScalar.m_flOutputMax = jsonData["C_INIT_RemapInitialVisibilityScalar"]["m_flOutputMax"];

// Atribuições para C_OP_RemapTransformOrientationToYaw
// C_OP_RemapTransformOrientationToYaw Offsets
C_OP_RemapTransformOrientationToYaw.m_TransformInput = jsonData["C_OP_RemapTransformOrientationToYaw"]["m_TransformInput"];
C_OP_RemapTransformOrientationToYaw.m_nFieldOutput = jsonData["C_OP_RemapTransformOrientationToYaw"]["m_nFieldOutput"];
C_OP_RemapTransformOrientationToYaw.m_flRotOffset = jsonData["C_OP_RemapTransformOrientationToYaw"]["m_flRotOffset"];
C_OP_RemapTransformOrientationToYaw.m_flSpinStrength = jsonData["C_OP_RemapTransformOrientationToYaw"]["m_flSpinStrength"];

// Atribuições para C_OP_RenderStatusEffect
// C_OP_RenderStatusEffect Offsets
C_OP_RenderStatusEffect.m_pTextureColorWarp = jsonData["C_OP_RenderStatusEffect"]["m_pTextureColorWarp"];
C_OP_RenderStatusEffect.m_pTextureDetail2 = jsonData["C_OP_RenderStatusEffect"]["m_pTextureDetail2"];
C_OP_RenderStatusEffect.m_pTextureDiffuseWarp = jsonData["C_OP_RenderStatusEffect"]["m_pTextureDiffuseWarp"];
C_OP_RenderStatusEffect.m_pTextureFresnelColorWarp = jsonData["C_OP_RenderStatusEffect"]["m_pTextureFresnelColorWarp"];
C_OP_RenderStatusEffect.m_pTextureFresnelWarp = jsonData["C_OP_RenderStatusEffect"]["m_pTextureFresnelWarp"];
C_OP_RenderStatusEffect.m_pTextureSpecularWarp = jsonData["C_OP_RenderStatusEffect"]["m_pTextureSpecularWarp"];
C_OP_RenderStatusEffect.m_pTextureEnvMap = jsonData["C_OP_RenderStatusEffect"]["m_pTextureEnvMap"];

// Atribuições para C_OP_RandomForce
// C_OP_RandomForce Offsets
C_OP_RandomForce.m_MinForce = jsonData["C_OP_RandomForce"]["m_MinForce"];
C_OP_RandomForce.m_MaxForce = jsonData["C_OP_RandomForce"]["m_MaxForce"];

// Atribuições para C_OP_RemapParticleCountOnScalarEndCap
// C_OP_RemapParticleCountOnScalarEndCap Offsets
C_OP_RemapParticleCountOnScalarEndCap.m_nFieldOutput = jsonData["C_OP_RemapParticleCountOnScalarEndCap"]["m_nFieldOutput"];
C_OP_RemapParticleCountOnScalarEndCap.m_nInputMin = jsonData["C_OP_RemapParticleCountOnScalarEndCap"]["m_nInputMin"];
C_OP_RemapParticleCountOnScalarEndCap.m_nInputMax = jsonData["C_OP_RemapParticleCountOnScalarEndCap"]["m_nInputMax"];
C_OP_RemapParticleCountOnScalarEndCap.m_flOutputMin = jsonData["C_OP_RemapParticleCountOnScalarEndCap"]["m_flOutputMin"];
C_OP_RemapParticleCountOnScalarEndCap.m_flOutputMax = jsonData["C_OP_RemapParticleCountOnScalarEndCap"]["m_flOutputMax"];
C_OP_RemapParticleCountOnScalarEndCap.m_bBackwards = jsonData["C_OP_RemapParticleCountOnScalarEndCap"]["m_bBackwards"];
C_OP_RemapParticleCountOnScalarEndCap.m_nSetMethod = jsonData["C_OP_RemapParticleCountOnScalarEndCap"]["m_nSetMethod"];

// Atribuições para ParticlePreviewState_t
// ParticlePreviewState_t Offsets
ParticlePreviewState_t.m_previewModel = jsonData["ParticlePreviewState_t"]["m_previewModel"];
ParticlePreviewState_t.m_nModSpecificData = jsonData["ParticlePreviewState_t"]["m_nModSpecificData"];
ParticlePreviewState_t.m_groundType = jsonData["ParticlePreviewState_t"]["m_groundType"];
ParticlePreviewState_t.m_sequenceName = jsonData["ParticlePreviewState_t"]["m_sequenceName"];
ParticlePreviewState_t.m_nFireParticleOnSequenceFrame = jsonData["ParticlePreviewState_t"]["m_nFireParticleOnSequenceFrame"];
ParticlePreviewState_t.m_hitboxSetName = jsonData["ParticlePreviewState_t"]["m_hitboxSetName"];
ParticlePreviewState_t.m_materialGroupName = jsonData["ParticlePreviewState_t"]["m_materialGroupName"];
ParticlePreviewState_t.m_vecBodyGroups = jsonData["ParticlePreviewState_t"]["m_vecBodyGroups"];
ParticlePreviewState_t.m_flPlaybackSpeed = jsonData["ParticlePreviewState_t"]["m_flPlaybackSpeed"];
ParticlePreviewState_t.m_flParticleSimulationRate = jsonData["ParticlePreviewState_t"]["m_flParticleSimulationRate"];
ParticlePreviewState_t.m_bShouldDrawHitboxes = jsonData["ParticlePreviewState_t"]["m_bShouldDrawHitboxes"];
ParticlePreviewState_t.m_bShouldDrawAttachments = jsonData["ParticlePreviewState_t"]["m_bShouldDrawAttachments"];
ParticlePreviewState_t.m_bShouldDrawAttachmentNames = jsonData["ParticlePreviewState_t"]["m_bShouldDrawAttachmentNames"];
ParticlePreviewState_t.m_bShouldDrawControlPointAxes = jsonData["ParticlePreviewState_t"]["m_bShouldDrawControlPointAxes"];
ParticlePreviewState_t.m_bAnimationNonLooping = jsonData["ParticlePreviewState_t"]["m_bAnimationNonLooping"];
ParticlePreviewState_t.m_vecPreviewGravity = jsonData["ParticlePreviewState_t"]["m_vecPreviewGravity"];

// Atribuições para C_OP_LocalAccelerationForce
// C_OP_LocalAccelerationForce Offsets
C_OP_LocalAccelerationForce.m_nCP = jsonData["C_OP_LocalAccelerationForce"]["m_nCP"];
C_OP_LocalAccelerationForce.m_nScaleCP = jsonData["C_OP_LocalAccelerationForce"]["m_nScaleCP"];
C_OP_LocalAccelerationForce.m_vecAccel = jsonData["C_OP_LocalAccelerationForce"]["m_vecAccel"];

// Atribuições para C_OP_ModelCull
// C_OP_ModelCull Offsets
C_OP_ModelCull.m_nControlPointNumber = jsonData["C_OP_ModelCull"]["m_nControlPointNumber"];
C_OP_ModelCull.m_bBoundBox = jsonData["C_OP_ModelCull"]["m_bBoundBox"];
C_OP_ModelCull.m_bCullOutside = jsonData["C_OP_ModelCull"]["m_bCullOutside"];
C_OP_ModelCull.m_bUseBones = jsonData["C_OP_ModelCull"]["m_bUseBones"];
C_OP_ModelCull.m_HitboxSetName = jsonData["C_OP_ModelCull"]["m_HitboxSetName"];

// Atribuições para C_OP_SetFloat
// C_OP_SetFloat Offsets
C_OP_SetFloat.m_InputValue = jsonData["C_OP_SetFloat"]["m_InputValue"];
C_OP_SetFloat.m_nOutputField = jsonData["C_OP_SetFloat"]["m_nOutputField"];
C_OP_SetFloat.m_nSetMethod = jsonData["C_OP_SetFloat"]["m_nSetMethod"];
C_OP_SetFloat.m_Lerp = jsonData["C_OP_SetFloat"]["m_Lerp"];

// Atribuições para C_INIT_RemapTransformToVector
// C_INIT_RemapTransformToVector Offsets
C_INIT_RemapTransformToVector.m_nFieldOutput = jsonData["C_INIT_RemapTransformToVector"]["m_nFieldOutput"];
C_INIT_RemapTransformToVector.m_vInputMin = jsonData["C_INIT_RemapTransformToVector"]["m_vInputMin"];
C_INIT_RemapTransformToVector.m_vInputMax = jsonData["C_INIT_RemapTransformToVector"]["m_vInputMax"];
C_INIT_RemapTransformToVector.m_vOutputMin = jsonData["C_INIT_RemapTransformToVector"]["m_vOutputMin"];
C_INIT_RemapTransformToVector.m_vOutputMax = jsonData["C_INIT_RemapTransformToVector"]["m_vOutputMax"];
C_INIT_RemapTransformToVector.m_TransformInput = jsonData["C_INIT_RemapTransformToVector"]["m_TransformInput"];
C_INIT_RemapTransformToVector.m_LocalSpaceTransform = jsonData["C_INIT_RemapTransformToVector"]["m_LocalSpaceTransform"];
C_INIT_RemapTransformToVector.m_flStartTime = jsonData["C_INIT_RemapTransformToVector"]["m_flStartTime"];
C_INIT_RemapTransformToVector.m_flEndTime = jsonData["C_INIT_RemapTransformToVector"]["m_flEndTime"];
C_INIT_RemapTransformToVector.m_nSetMethod = jsonData["C_INIT_RemapTransformToVector"]["m_nSetMethod"];
C_INIT_RemapTransformToVector.m_bOffset = jsonData["C_INIT_RemapTransformToVector"]["m_bOffset"];
C_INIT_RemapTransformToVector.m_bAccelerate = jsonData["C_INIT_RemapTransformToVector"]["m_bAccelerate"];
C_INIT_RemapTransformToVector.m_flRemapBias = jsonData["C_INIT_RemapTransformToVector"]["m_flRemapBias"];

// Atribuições para C_OP_SDFLighting
// C_OP_SDFLighting Offsets
C_OP_SDFLighting.m_vLightingDir = jsonData["C_OP_SDFLighting"]["m_vLightingDir"];
C_OP_SDFLighting.m_vTint_0 = jsonData["C_OP_SDFLighting"]["m_vTint_0"];
C_OP_SDFLighting.m_vTint_1 = jsonData["C_OP_SDFLighting"]["m_vTint_1"];

// Atribuições para C_OP_RemapDistanceToLineSegmentToScalar
// C_OP_RemapDistanceToLineSegmentToScalar Offsets
C_OP_RemapDistanceToLineSegmentToScalar.m_nFieldOutput = jsonData["C_OP_RemapDistanceToLineSegmentToScalar"]["m_nFieldOutput"];
C_OP_RemapDistanceToLineSegmentToScalar.m_flMinOutputValue = jsonData["C_OP_RemapDistanceToLineSegmentToScalar"]["m_flMinOutputValue"];
C_OP_RemapDistanceToLineSegmentToScalar.m_flMaxOutputValue = jsonData["C_OP_RemapDistanceToLineSegmentToScalar"]["m_flMaxOutputValue"];

// Atribuições para C_OP_RemapVectortoCP
// C_OP_RemapVectortoCP Offsets
C_OP_RemapVectortoCP.m_nOutControlPointNumber = jsonData["C_OP_RemapVectortoCP"]["m_nOutControlPointNumber"];
C_OP_RemapVectortoCP.m_nFieldInput = jsonData["C_OP_RemapVectortoCP"]["m_nFieldInput"];
C_OP_RemapVectortoCP.m_nParticleNumber = jsonData["C_OP_RemapVectortoCP"]["m_nParticleNumber"];

// Atribuições para C_OP_SetFromCPSnapshot
// C_OP_SetFromCPSnapshot Offsets
C_OP_SetFromCPSnapshot.m_nControlPointNumber = jsonData["C_OP_SetFromCPSnapshot"]["m_nControlPointNumber"];
C_OP_SetFromCPSnapshot.m_nAttributeToRead = jsonData["C_OP_SetFromCPSnapshot"]["m_nAttributeToRead"];
C_OP_SetFromCPSnapshot.m_nAttributeToWrite = jsonData["C_OP_SetFromCPSnapshot"]["m_nAttributeToWrite"];
C_OP_SetFromCPSnapshot.m_nLocalSpaceCP = jsonData["C_OP_SetFromCPSnapshot"]["m_nLocalSpaceCP"];
C_OP_SetFromCPSnapshot.m_bRandom = jsonData["C_OP_SetFromCPSnapshot"]["m_bRandom"];
C_OP_SetFromCPSnapshot.m_bReverse = jsonData["C_OP_SetFromCPSnapshot"]["m_bReverse"];
C_OP_SetFromCPSnapshot.m_nRandomSeed = jsonData["C_OP_SetFromCPSnapshot"]["m_nRandomSeed"];
C_OP_SetFromCPSnapshot.m_nSnapShotStartPoint = jsonData["C_OP_SetFromCPSnapshot"]["m_nSnapShotStartPoint"];
C_OP_SetFromCPSnapshot.m_nSnapShotIncrement = jsonData["C_OP_SetFromCPSnapshot"]["m_nSnapShotIncrement"];
C_OP_SetFromCPSnapshot.m_flInterpolation = jsonData["C_OP_SetFromCPSnapshot"]["m_flInterpolation"];
C_OP_SetFromCPSnapshot.m_bSubSample = jsonData["C_OP_SetFromCPSnapshot"]["m_bSubSample"];
C_OP_SetFromCPSnapshot.m_bPrev = jsonData["C_OP_SetFromCPSnapshot"]["m_bPrev"];

// Atribuições para C_OP_DistanceBetweenCPsToCP
// C_OP_DistanceBetweenCPsToCP Offsets
C_OP_DistanceBetweenCPsToCP.m_nStartCP = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_nStartCP"];
C_OP_DistanceBetweenCPsToCP.m_nEndCP = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_nEndCP"];
C_OP_DistanceBetweenCPsToCP.m_nOutputCP = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_nOutputCP"];
C_OP_DistanceBetweenCPsToCP.m_nOutputCPField = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_nOutputCPField"];
C_OP_DistanceBetweenCPsToCP.m_bSetOnce = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_bSetOnce"];
C_OP_DistanceBetweenCPsToCP.m_flInputMin = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_flInputMin"];
C_OP_DistanceBetweenCPsToCP.m_flInputMax = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_flInputMax"];
C_OP_DistanceBetweenCPsToCP.m_flOutputMin = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_flOutputMin"];
C_OP_DistanceBetweenCPsToCP.m_flOutputMax = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_flOutputMax"];
C_OP_DistanceBetweenCPsToCP.m_flMaxTraceLength = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_flMaxTraceLength"];
C_OP_DistanceBetweenCPsToCP.m_flLOSScale = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_flLOSScale"];
C_OP_DistanceBetweenCPsToCP.m_bLOS = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_bLOS"];
C_OP_DistanceBetweenCPsToCP.m_CollisionGroupName = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_CollisionGroupName"];
C_OP_DistanceBetweenCPsToCP.m_nTraceSet = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_nTraceSet"];
C_OP_DistanceBetweenCPsToCP.m_nSetParent = jsonData["C_OP_DistanceBetweenCPsToCP"]["m_nSetParent"];

// Atribuições para C_OP_SetControlPointToHand
// C_OP_SetControlPointToHand Offsets
C_OP_SetControlPointToHand.m_nCP1 = jsonData["C_OP_SetControlPointToHand"]["m_nCP1"];
C_OP_SetControlPointToHand.m_nHand = jsonData["C_OP_SetControlPointToHand"]["m_nHand"];
C_OP_SetControlPointToHand.m_vecCP1Pos = jsonData["C_OP_SetControlPointToHand"]["m_vecCP1Pos"];
C_OP_SetControlPointToHand.m_bOrientToHand = jsonData["C_OP_SetControlPointToHand"]["m_bOrientToHand"];

// Atribuições para C_OP_ConstrainDistanceToPath
// C_OP_ConstrainDistanceToPath Offsets
C_OP_ConstrainDistanceToPath.m_fMinDistance = jsonData["C_OP_ConstrainDistanceToPath"]["m_fMinDistance"];
C_OP_ConstrainDistanceToPath.m_flMaxDistance0 = jsonData["C_OP_ConstrainDistanceToPath"]["m_flMaxDistance0"];
C_OP_ConstrainDistanceToPath.m_flMaxDistanceMid = jsonData["C_OP_ConstrainDistanceToPath"]["m_flMaxDistanceMid"];
C_OP_ConstrainDistanceToPath.m_flMaxDistance1 = jsonData["C_OP_ConstrainDistanceToPath"]["m_flMaxDistance1"];
C_OP_ConstrainDistanceToPath.m_PathParameters = jsonData["C_OP_ConstrainDistanceToPath"]["m_PathParameters"];
C_OP_ConstrainDistanceToPath.m_flTravelTime = jsonData["C_OP_ConstrainDistanceToPath"]["m_flTravelTime"];
C_OP_ConstrainDistanceToPath.m_nFieldScale = jsonData["C_OP_ConstrainDistanceToPath"]["m_nFieldScale"];
C_OP_ConstrainDistanceToPath.m_nManualTField = jsonData["C_OP_ConstrainDistanceToPath"]["m_nManualTField"];

// Atribuições para C_OP_DistanceCull
// C_OP_DistanceCull Offsets
C_OP_DistanceCull.m_nControlPoint = jsonData["C_OP_DistanceCull"]["m_nControlPoint"];
C_OP_DistanceCull.m_vecPointOffset = jsonData["C_OP_DistanceCull"]["m_vecPointOffset"];
C_OP_DistanceCull.m_flDistance = jsonData["C_OP_DistanceCull"]["m_flDistance"];
C_OP_DistanceCull.m_bCullInside = jsonData["C_OP_DistanceCull"]["m_bCullInside"];

// Atribuições para C_OP_RemapSDFDistanceToScalarAttribute
// C_OP_RemapSDFDistanceToScalarAttribute Offsets
C_OP_RemapSDFDistanceToScalarAttribute.m_nFieldOutput = jsonData["C_OP_RemapSDFDistanceToScalarAttribute"]["m_nFieldOutput"];
C_OP_RemapSDFDistanceToScalarAttribute.m_nVectorFieldInput = jsonData["C_OP_RemapSDFDistanceToScalarAttribute"]["m_nVectorFieldInput"];
C_OP_RemapSDFDistanceToScalarAttribute.m_flMinDistance = jsonData["C_OP_RemapSDFDistanceToScalarAttribute"]["m_flMinDistance"];
C_OP_RemapSDFDistanceToScalarAttribute.m_flMaxDistance = jsonData["C_OP_RemapSDFDistanceToScalarAttribute"]["m_flMaxDistance"];
C_OP_RemapSDFDistanceToScalarAttribute.m_flValueBelowMin = jsonData["C_OP_RemapSDFDistanceToScalarAttribute"]["m_flValueBelowMin"];
C_OP_RemapSDFDistanceToScalarAttribute.m_flValueAtMin = jsonData["C_OP_RemapSDFDistanceToScalarAttribute"]["m_flValueAtMin"];
C_OP_RemapSDFDistanceToScalarAttribute.m_flValueAtMax = jsonData["C_OP_RemapSDFDistanceToScalarAttribute"]["m_flValueAtMax"];
C_OP_RemapSDFDistanceToScalarAttribute.m_flValueAboveMax = jsonData["C_OP_RemapSDFDistanceToScalarAttribute"]["m_flValueAboveMax"];

// Atribuições para C_INIT_CreateAlongPath
// C_INIT_CreateAlongPath Offsets
C_INIT_CreateAlongPath.m_fMaxDistance = jsonData["C_INIT_CreateAlongPath"]["m_fMaxDistance"];
C_INIT_CreateAlongPath.m_PathParams = jsonData["C_INIT_CreateAlongPath"]["m_PathParams"];
C_INIT_CreateAlongPath.m_bUseRandomCPs = jsonData["C_INIT_CreateAlongPath"]["m_bUseRandomCPs"];
C_INIT_CreateAlongPath.m_vEndOffset = jsonData["C_INIT_CreateAlongPath"]["m_vEndOffset"];
C_INIT_CreateAlongPath.m_bSaveOffset = jsonData["C_INIT_CreateAlongPath"]["m_bSaveOffset"];

// Atribuições para C_OP_SetControlPointsToModelParticles
// C_OP_SetControlPointsToModelParticles Offsets
C_OP_SetControlPointsToModelParticles.m_HitboxSetName = jsonData["C_OP_SetControlPointsToModelParticles"]["m_HitboxSetName"];
C_OP_SetControlPointsToModelParticles.m_AttachmentName = jsonData["C_OP_SetControlPointsToModelParticles"]["m_AttachmentName"];
C_OP_SetControlPointsToModelParticles.m_nFirstControlPoint = jsonData["C_OP_SetControlPointsToModelParticles"]["m_nFirstControlPoint"];
C_OP_SetControlPointsToModelParticles.m_nNumControlPoints = jsonData["C_OP_SetControlPointsToModelParticles"]["m_nNumControlPoints"];
C_OP_SetControlPointsToModelParticles.m_nFirstSourcePoint = jsonData["C_OP_SetControlPointsToModelParticles"]["m_nFirstSourcePoint"];
C_OP_SetControlPointsToModelParticles.m_bSkin = jsonData["C_OP_SetControlPointsToModelParticles"]["m_bSkin"];
C_OP_SetControlPointsToModelParticles.m_bAttachment = jsonData["C_OP_SetControlPointsToModelParticles"]["m_bAttachment"];

// Atribuições para C_OP_ColorInterpolateRandom
// C_OP_ColorInterpolateRandom Offsets
C_OP_ColorInterpolateRandom.m_ColorFadeMin = jsonData["C_OP_ColorInterpolateRandom"]["m_ColorFadeMin"];
C_OP_ColorInterpolateRandom.m_ColorFadeMax = jsonData["C_OP_ColorInterpolateRandom"]["m_ColorFadeMax"];
C_OP_ColorInterpolateRandom.m_flFadeStartTime = jsonData["C_OP_ColorInterpolateRandom"]["m_flFadeStartTime"];
C_OP_ColorInterpolateRandom.m_flFadeEndTime = jsonData["C_OP_ColorInterpolateRandom"]["m_flFadeEndTime"];
C_OP_ColorInterpolateRandom.m_nFieldOutput = jsonData["C_OP_ColorInterpolateRandom"]["m_nFieldOutput"];
C_OP_ColorInterpolateRandom.m_bEaseInOut = jsonData["C_OP_ColorInterpolateRandom"]["m_bEaseInOut"];

// Atribuições para C_OP_RenderLights
// C_OP_RenderLights Offsets
C_OP_RenderLights.m_flAnimationRate = jsonData["C_OP_RenderLights"]["m_flAnimationRate"];
C_OP_RenderLights.m_nAnimationType = jsonData["C_OP_RenderLights"]["m_nAnimationType"];
C_OP_RenderLights.m_bAnimateInFPS = jsonData["C_OP_RenderLights"]["m_bAnimateInFPS"];
C_OP_RenderLights.m_flMinSize = jsonData["C_OP_RenderLights"]["m_flMinSize"];
C_OP_RenderLights.m_flMaxSize = jsonData["C_OP_RenderLights"]["m_flMaxSize"];
C_OP_RenderLights.m_flStartFadeSize = jsonData["C_OP_RenderLights"]["m_flStartFadeSize"];
C_OP_RenderLights.m_flEndFadeSize = jsonData["C_OP_RenderLights"]["m_flEndFadeSize"];

// Atribuições para C_OP_DecayClampCount
// C_OP_DecayClampCount Offsets
C_OP_DecayClampCount.m_nCount = jsonData["C_OP_DecayClampCount"]["m_nCount"];

// Atribuições para CRandomNumberGeneratorParameters
// CRandomNumberGeneratorParameters Offsets
CRandomNumberGeneratorParameters.m_bDistributeEvenly = jsonData["CRandomNumberGeneratorParameters"]["m_bDistributeEvenly"];
CRandomNumberGeneratorParameters.m_nSeed = jsonData["CRandomNumberGeneratorParameters"]["m_nSeed"];

// Atribuições para C_INIT_ColorLitPerParticle
// C_INIT_ColorLitPerParticle Offsets
C_INIT_ColorLitPerParticle.m_ColorMin = jsonData["C_INIT_ColorLitPerParticle"]["m_ColorMin"];
C_INIT_ColorLitPerParticle.m_ColorMax = jsonData["C_INIT_ColorLitPerParticle"]["m_ColorMax"];
C_INIT_ColorLitPerParticle.m_TintMin = jsonData["C_INIT_ColorLitPerParticle"]["m_TintMin"];
C_INIT_ColorLitPerParticle.m_TintMax = jsonData["C_INIT_ColorLitPerParticle"]["m_TintMax"];
C_INIT_ColorLitPerParticle.m_flTintPerc = jsonData["C_INIT_ColorLitPerParticle"]["m_flTintPerc"];
C_INIT_ColorLitPerParticle.m_nTintBlendMode = jsonData["C_INIT_ColorLitPerParticle"]["m_nTintBlendMode"];
C_INIT_ColorLitPerParticle.m_flLightAmplification = jsonData["C_INIT_ColorLitPerParticle"]["m_flLightAmplification"];

// Atribuições para C_OP_RenderPoints
// C_OP_RenderPoints Offsets
C_OP_RenderPoints.m_hMaterial = jsonData["C_OP_RenderPoints"]["m_hMaterial"];

// Atribuições para C_INIT_SetAttributeToScalarExpression
// C_INIT_SetAttributeToScalarExpression Offsets
C_INIT_SetAttributeToScalarExpression.m_nExpression = jsonData["C_INIT_SetAttributeToScalarExpression"]["m_nExpression"];
C_INIT_SetAttributeToScalarExpression.m_flInput1 = jsonData["C_INIT_SetAttributeToScalarExpression"]["m_flInput1"];
C_INIT_SetAttributeToScalarExpression.m_flInput2 = jsonData["C_INIT_SetAttributeToScalarExpression"]["m_flInput2"];
C_INIT_SetAttributeToScalarExpression.m_flOutputRemap = jsonData["C_INIT_SetAttributeToScalarExpression"]["m_flOutputRemap"];
C_INIT_SetAttributeToScalarExpression.m_nOutputField = jsonData["C_INIT_SetAttributeToScalarExpression"]["m_nOutputField"];
C_INIT_SetAttributeToScalarExpression.m_nSetMethod = jsonData["C_INIT_SetAttributeToScalarExpression"]["m_nSetMethod"];

// Atribuições para C_INIT_CreateOnGrid
// C_INIT_CreateOnGrid Offsets
C_INIT_CreateOnGrid.m_nXCount = jsonData["C_INIT_CreateOnGrid"]["m_nXCount"];
C_INIT_CreateOnGrid.m_nYCount = jsonData["C_INIT_CreateOnGrid"]["m_nYCount"];
C_INIT_CreateOnGrid.m_nZCount = jsonData["C_INIT_CreateOnGrid"]["m_nZCount"];
C_INIT_CreateOnGrid.m_nXSpacing = jsonData["C_INIT_CreateOnGrid"]["m_nXSpacing"];
C_INIT_CreateOnGrid.m_nYSpacing = jsonData["C_INIT_CreateOnGrid"]["m_nYSpacing"];
C_INIT_CreateOnGrid.m_nZSpacing = jsonData["C_INIT_CreateOnGrid"]["m_nZSpacing"];
C_INIT_CreateOnGrid.m_nControlPointNumber = jsonData["C_INIT_CreateOnGrid"]["m_nControlPointNumber"];
C_INIT_CreateOnGrid.m_bLocalSpace = jsonData["C_INIT_CreateOnGrid"]["m_bLocalSpace"];
C_INIT_CreateOnGrid.m_bCenter = jsonData["C_INIT_CreateOnGrid"]["m_bCenter"];
C_INIT_CreateOnGrid.m_bHollow = jsonData["C_INIT_CreateOnGrid"]["m_bHollow"];

// Atribuições para C_OP_RampCPLinearRandom
// C_OP_RampCPLinearRandom Offsets
C_OP_RampCPLinearRandom.m_nOutControlPointNumber = jsonData["C_OP_RampCPLinearRandom"]["m_nOutControlPointNumber"];
C_OP_RampCPLinearRandom.m_vecRateMin = jsonData["C_OP_RampCPLinearRandom"]["m_vecRateMin"];
C_OP_RampCPLinearRandom.m_vecRateMax = jsonData["C_OP_RampCPLinearRandom"]["m_vecRateMax"];

// Atribuições para C_OP_VelocityMatchingForce
// C_OP_VelocityMatchingForce Offsets
C_OP_VelocityMatchingForce.m_flDirScale = jsonData["C_OP_VelocityMatchingForce"]["m_flDirScale"];
C_OP_VelocityMatchingForce.m_flSpdScale = jsonData["C_OP_VelocityMatchingForce"]["m_flSpdScale"];
C_OP_VelocityMatchingForce.m_flNeighborDistance = jsonData["C_OP_VelocityMatchingForce"]["m_flNeighborDistance"];
C_OP_VelocityMatchingForce.m_flFacingStrength = jsonData["C_OP_VelocityMatchingForce"]["m_flFacingStrength"];
C_OP_VelocityMatchingForce.m_bUseAABB = jsonData["C_OP_VelocityMatchingForce"]["m_bUseAABB"];
C_OP_VelocityMatchingForce.m_nCPBroadcast = jsonData["C_OP_VelocityMatchingForce"]["m_nCPBroadcast"];

// Atribuições para C_INIT_RandomAlphaWindowThreshold
// C_INIT_RandomAlphaWindowThreshold Offsets
C_INIT_RandomAlphaWindowThreshold.m_flMin = jsonData["C_INIT_RandomAlphaWindowThreshold"]["m_flMin"];
C_INIT_RandomAlphaWindowThreshold.m_flMax = jsonData["C_INIT_RandomAlphaWindowThreshold"]["m_flMax"];
C_INIT_RandomAlphaWindowThreshold.m_flExponent = jsonData["C_INIT_RandomAlphaWindowThreshold"]["m_flExponent"];

// Atribuições para C_INIT_CreateOnModelAtHeight
// C_INIT_CreateOnModelAtHeight Offsets
C_INIT_CreateOnModelAtHeight.m_bUseBones = jsonData["C_INIT_CreateOnModelAtHeight"]["m_bUseBones"];
C_INIT_CreateOnModelAtHeight.m_bForceZ = jsonData["C_INIT_CreateOnModelAtHeight"]["m_bForceZ"];
C_INIT_CreateOnModelAtHeight.m_nControlPointNumber = jsonData["C_INIT_CreateOnModelAtHeight"]["m_nControlPointNumber"];
C_INIT_CreateOnModelAtHeight.m_nHeightCP = jsonData["C_INIT_CreateOnModelAtHeight"]["m_nHeightCP"];
C_INIT_CreateOnModelAtHeight.m_bUseWaterHeight = jsonData["C_INIT_CreateOnModelAtHeight"]["m_bUseWaterHeight"];
C_INIT_CreateOnModelAtHeight.m_flDesiredHeight = jsonData["C_INIT_CreateOnModelAtHeight"]["m_flDesiredHeight"];
C_INIT_CreateOnModelAtHeight.m_vecHitBoxScale = jsonData["C_INIT_CreateOnModelAtHeight"]["m_vecHitBoxScale"];
C_INIT_CreateOnModelAtHeight.m_vecDirectionBias = jsonData["C_INIT_CreateOnModelAtHeight"]["m_vecDirectionBias"];
C_INIT_CreateOnModelAtHeight.m_nBiasType = jsonData["C_INIT_CreateOnModelAtHeight"]["m_nBiasType"];
C_INIT_CreateOnModelAtHeight.m_bLocalCoords = jsonData["C_INIT_CreateOnModelAtHeight"]["m_bLocalCoords"];
C_INIT_CreateOnModelAtHeight.m_bPreferMovingBoxes = jsonData["C_INIT_CreateOnModelAtHeight"]["m_bPreferMovingBoxes"];
C_INIT_CreateOnModelAtHeight.m_HitboxSetName = jsonData["C_INIT_CreateOnModelAtHeight"]["m_HitboxSetName"];
C_INIT_CreateOnModelAtHeight.m_flHitboxVelocityScale = jsonData["C_INIT_CreateOnModelAtHeight"]["m_flHitboxVelocityScale"];
C_INIT_CreateOnModelAtHeight.m_flMaxBoneVelocity = jsonData["C_INIT_CreateOnModelAtHeight"]["m_flMaxBoneVelocity"];

// Atribuições para CParticleVariableRef
// CParticleVariableRef Offsets
CParticleVariableRef.m_variableName = jsonData["CParticleVariableRef"]["m_variableName"];
CParticleVariableRef.m_variableType = jsonData["CParticleVariableRef"]["m_variableType"];

// Atribuições para C_OP_RestartAfterDuration
// C_OP_RestartAfterDuration Offsets
C_OP_RestartAfterDuration.m_flDurationMin = jsonData["C_OP_RestartAfterDuration"]["m_flDurationMin"];
C_OP_RestartAfterDuration.m_flDurationMax = jsonData["C_OP_RestartAfterDuration"]["m_flDurationMax"];
C_OP_RestartAfterDuration.m_nCP = jsonData["C_OP_RestartAfterDuration"]["m_nCP"];
C_OP_RestartAfterDuration.m_nCPField = jsonData["C_OP_RestartAfterDuration"]["m_nCPField"];
C_OP_RestartAfterDuration.m_nChildGroupID = jsonData["C_OP_RestartAfterDuration"]["m_nChildGroupID"];
C_OP_RestartAfterDuration.m_bOnlyChildren = jsonData["C_OP_RestartAfterDuration"]["m_bOnlyChildren"];

// Atribuições para C_OP_RemapVisibilityScalar
// C_OP_RemapVisibilityScalar Offsets
C_OP_RemapVisibilityScalar.m_nFieldInput = jsonData["C_OP_RemapVisibilityScalar"]["m_nFieldInput"];
C_OP_RemapVisibilityScalar.m_nFieldOutput = jsonData["C_OP_RemapVisibilityScalar"]["m_nFieldOutput"];
C_OP_RemapVisibilityScalar.m_flInputMin = jsonData["C_OP_RemapVisibilityScalar"]["m_flInputMin"];
C_OP_RemapVisibilityScalar.m_flInputMax = jsonData["C_OP_RemapVisibilityScalar"]["m_flInputMax"];
C_OP_RemapVisibilityScalar.m_flOutputMin = jsonData["C_OP_RemapVisibilityScalar"]["m_flOutputMin"];
C_OP_RemapVisibilityScalar.m_flOutputMax = jsonData["C_OP_RemapVisibilityScalar"]["m_flOutputMax"];
C_OP_RemapVisibilityScalar.m_flRadiusScale = jsonData["C_OP_RemapVisibilityScalar"]["m_flRadiusScale"];

// Atribuições para C_INIT_CreateSequentialPathV2
// C_INIT_CreateSequentialPathV2 Offsets
C_INIT_CreateSequentialPathV2.m_fMaxDistance = jsonData["C_INIT_CreateSequentialPathV2"]["m_fMaxDistance"];
C_INIT_CreateSequentialPathV2.m_flNumToAssign = jsonData["C_INIT_CreateSequentialPathV2"]["m_flNumToAssign"];
C_INIT_CreateSequentialPathV2.m_bLoop = jsonData["C_INIT_CreateSequentialPathV2"]["m_bLoop"];
C_INIT_CreateSequentialPathV2.m_bCPPairs = jsonData["C_INIT_CreateSequentialPathV2"]["m_bCPPairs"];
C_INIT_CreateSequentialPathV2.m_bSaveOffset = jsonData["C_INIT_CreateSequentialPathV2"]["m_bSaveOffset"];
C_INIT_CreateSequentialPathV2.m_PathParams = jsonData["C_INIT_CreateSequentialPathV2"]["m_PathParams"];

// Atribuições para VecInputMaterialVariable_t
// VecInputMaterialVariable_t Offsets
VecInputMaterialVariable_t.m_strVariable = jsonData["VecInputMaterialVariable_t"]["m_strVariable"];
VecInputMaterialVariable_t.m_vecInput = jsonData["VecInputMaterialVariable_t"]["m_vecInput"];

// Atribuições para C_INIT_RemapInitialDirectionToTransformToVector
// C_INIT_RemapInitialDirectionToTransformToVector Offsets
C_INIT_RemapInitialDirectionToTransformToVector.m_TransformInput = jsonData["C_INIT_RemapInitialDirectionToTransformToVector"]["m_TransformInput"];
C_INIT_RemapInitialDirectionToTransformToVector.m_nFieldOutput = jsonData["C_INIT_RemapInitialDirectionToTransformToVector"]["m_nFieldOutput"];
C_INIT_RemapInitialDirectionToTransformToVector.m_flScale = jsonData["C_INIT_RemapInitialDirectionToTransformToVector"]["m_flScale"];
C_INIT_RemapInitialDirectionToTransformToVector.m_flOffsetRot = jsonData["C_INIT_RemapInitialDirectionToTransformToVector"]["m_flOffsetRot"];
C_INIT_RemapInitialDirectionToTransformToVector.m_vecOffsetAxis = jsonData["C_INIT_RemapInitialDirectionToTransformToVector"]["m_vecOffsetAxis"];
C_INIT_RemapInitialDirectionToTransformToVector.m_bNormalize = jsonData["C_INIT_RemapInitialDirectionToTransformToVector"]["m_bNormalize"];

// Atribuições para C_OP_LockToSavedSequentialPathV2
// C_OP_LockToSavedSequentialPathV2 Offsets
C_OP_LockToSavedSequentialPathV2.m_flFadeStart = jsonData["C_OP_LockToSavedSequentialPathV2"]["m_flFadeStart"];
C_OP_LockToSavedSequentialPathV2.m_flFadeEnd = jsonData["C_OP_LockToSavedSequentialPathV2"]["m_flFadeEnd"];
C_OP_LockToSavedSequentialPathV2.m_bCPPairs = jsonData["C_OP_LockToSavedSequentialPathV2"]["m_bCPPairs"];
C_OP_LockToSavedSequentialPathV2.m_PathParams = jsonData["C_OP_LockToSavedSequentialPathV2"]["m_PathParams"];

// Atribuições para C_OP_NormalLock
// C_OP_NormalLock Offsets
C_OP_NormalLock.m_nControlPointNumber = jsonData["C_OP_NormalLock"]["m_nControlPointNumber"];

// Atribuições para C_INIT_RemapTransformOrientationToRotations
// C_INIT_RemapTransformOrientationToRotations Offsets
C_INIT_RemapTransformOrientationToRotations.m_TransformInput = jsonData["C_INIT_RemapTransformOrientationToRotations"]["m_TransformInput"];
C_INIT_RemapTransformOrientationToRotations.m_vecRotation = jsonData["C_INIT_RemapTransformOrientationToRotations"]["m_vecRotation"];
C_INIT_RemapTransformOrientationToRotations.m_bUseQuat = jsonData["C_INIT_RemapTransformOrientationToRotations"]["m_bUseQuat"];
C_INIT_RemapTransformOrientationToRotations.m_bWriteNormal = jsonData["C_INIT_RemapTransformOrientationToRotations"]["m_bWriteNormal"];

// Atribuições para C_OP_Cull
// C_OP_Cull Offsets
C_OP_Cull.m_flCullPerc = jsonData["C_OP_Cull"]["m_flCullPerc"];
C_OP_Cull.m_flCullStart = jsonData["C_OP_Cull"]["m_flCullStart"];
C_OP_Cull.m_flCullEnd = jsonData["C_OP_Cull"]["m_flCullEnd"];
C_OP_Cull.m_flCullExp = jsonData["C_OP_Cull"]["m_flCullExp"];

// Atribuições para C_INIT_RandomYawFlip
// C_INIT_RandomYawFlip Offsets
C_INIT_RandomYawFlip.m_flPercent = jsonData["C_INIT_RandomYawFlip"]["m_flPercent"];

// Atribuições para C_OP_RemapSDFGradientToVectorAttribute
// C_OP_RemapSDFGradientToVectorAttribute Offsets
C_OP_RemapSDFGradientToVectorAttribute.m_nFieldOutput = jsonData["C_OP_RemapSDFGradientToVectorAttribute"]["m_nFieldOutput"];

// Atribuições para SequenceWeightedList_t
// SequenceWeightedList_t Offsets
SequenceWeightedList_t.m_nSequence = jsonData["SequenceWeightedList_t"]["m_nSequence"];
SequenceWeightedList_t.m_flRelativeWeight = jsonData["SequenceWeightedList_t"]["m_flRelativeWeight"];

// Atribuições para C_OP_ReadFromNeighboringParticle
// C_OP_ReadFromNeighboringParticle Offsets
C_OP_ReadFromNeighboringParticle.m_nFieldInput = jsonData["C_OP_ReadFromNeighboringParticle"]["m_nFieldInput"];
C_OP_ReadFromNeighboringParticle.m_nFieldOutput = jsonData["C_OP_ReadFromNeighboringParticle"]["m_nFieldOutput"];
C_OP_ReadFromNeighboringParticle.m_nIncrement = jsonData["C_OP_ReadFromNeighboringParticle"]["m_nIncrement"];
C_OP_ReadFromNeighboringParticle.m_DistanceCheck = jsonData["C_OP_ReadFromNeighboringParticle"]["m_DistanceCheck"];
C_OP_ReadFromNeighboringParticle.m_flInterpolation = jsonData["C_OP_ReadFromNeighboringParticle"]["m_flInterpolation"];

// Atribuições para C_OP_RenderText
// C_OP_RenderText Offsets
C_OP_RenderText.m_OutlineColor = jsonData["C_OP_RenderText"]["m_OutlineColor"];
C_OP_RenderText.m_DefaultText = jsonData["C_OP_RenderText"]["m_DefaultText"];

// Atribuições para C_OP_LerpToInitialPosition
// C_OP_LerpToInitialPosition Offsets
C_OP_LerpToInitialPosition.m_nControlPointNumber = jsonData["C_OP_LerpToInitialPosition"]["m_nControlPointNumber"];
C_OP_LerpToInitialPosition.m_flInterpolation = jsonData["C_OP_LerpToInitialPosition"]["m_flInterpolation"];
C_OP_LerpToInitialPosition.m_nCacheField = jsonData["C_OP_LerpToInitialPosition"]["m_nCacheField"];
C_OP_LerpToInitialPosition.m_flScale = jsonData["C_OP_LerpToInitialPosition"]["m_flScale"];
C_OP_LerpToInitialPosition.m_vecScale = jsonData["C_OP_LerpToInitialPosition"]["m_vecScale"];

// Atribuições para C_OP_LerpEndCapVector
// C_OP_LerpEndCapVector Offsets
C_OP_LerpEndCapVector.m_nFieldOutput = jsonData["C_OP_LerpEndCapVector"]["m_nFieldOutput"];
C_OP_LerpEndCapVector.m_vecOutput = jsonData["C_OP_LerpEndCapVector"]["m_vecOutput"];
C_OP_LerpEndCapVector.m_flLerpTime = jsonData["C_OP_LerpEndCapVector"]["m_flLerpTime"];

// Atribuições para C_OP_VelocityDecay
// C_OP_VelocityDecay Offsets
C_OP_VelocityDecay.m_flMinVelocity = jsonData["C_OP_VelocityDecay"]["m_flMinVelocity"];

// Atribuições para C_OP_SetCPOrientationToPointAtCP
// C_OP_SetCPOrientationToPointAtCP Offsets
C_OP_SetCPOrientationToPointAtCP.m_nInputCP = jsonData["C_OP_SetCPOrientationToPointAtCP"]["m_nInputCP"];
C_OP_SetCPOrientationToPointAtCP.m_nOutputCP = jsonData["C_OP_SetCPOrientationToPointAtCP"]["m_nOutputCP"];
C_OP_SetCPOrientationToPointAtCP.m_flInterpolation = jsonData["C_OP_SetCPOrientationToPointAtCP"]["m_flInterpolation"];
C_OP_SetCPOrientationToPointAtCP.m_b2DOrientation = jsonData["C_OP_SetCPOrientationToPointAtCP"]["m_b2DOrientation"];
C_OP_SetCPOrientationToPointAtCP.m_bAvoidSingularity = jsonData["C_OP_SetCPOrientationToPointAtCP"]["m_bAvoidSingularity"];
C_OP_SetCPOrientationToPointAtCP.m_bPointAway = jsonData["C_OP_SetCPOrientationToPointAtCP"]["m_bPointAway"];

// Atribuições para C_OP_LockToPointList
// C_OP_LockToPointList Offsets
C_OP_LockToPointList.m_nFieldOutput = jsonData["C_OP_LockToPointList"]["m_nFieldOutput"];
C_OP_LockToPointList.m_pointList = jsonData["C_OP_LockToPointList"]["m_pointList"];
C_OP_LockToPointList.m_bPlaceAlongPath = jsonData["C_OP_LockToPointList"]["m_bPlaceAlongPath"];
C_OP_LockToPointList.m_bClosedLoop = jsonData["C_OP_LockToPointList"]["m_bClosedLoop"];
C_OP_LockToPointList.m_nNumPointsAlongPath = jsonData["C_OP_LockToPointList"]["m_nNumPointsAlongPath"];

// Atribuições para C_OP_MovementPlaceOnGround
// C_OP_MovementPlaceOnGround Offsets
C_OP_MovementPlaceOnGround.m_flOffset = jsonData["C_OP_MovementPlaceOnGround"]["m_flOffset"];
C_OP_MovementPlaceOnGround.m_flMaxTraceLength = jsonData["C_OP_MovementPlaceOnGround"]["m_flMaxTraceLength"];
C_OP_MovementPlaceOnGround.m_flTolerance = jsonData["C_OP_MovementPlaceOnGround"]["m_flTolerance"];
C_OP_MovementPlaceOnGround.m_flTraceOffset = jsonData["C_OP_MovementPlaceOnGround"]["m_flTraceOffset"];
C_OP_MovementPlaceOnGround.m_flLerpRate = jsonData["C_OP_MovementPlaceOnGround"]["m_flLerpRate"];
C_OP_MovementPlaceOnGround.m_CollisionGroupName = jsonData["C_OP_MovementPlaceOnGround"]["m_CollisionGroupName"];
C_OP_MovementPlaceOnGround.m_nTraceSet = jsonData["C_OP_MovementPlaceOnGround"]["m_nTraceSet"];
C_OP_MovementPlaceOnGround.m_nRefCP1 = jsonData["C_OP_MovementPlaceOnGround"]["m_nRefCP1"];
C_OP_MovementPlaceOnGround.m_nRefCP2 = jsonData["C_OP_MovementPlaceOnGround"]["m_nRefCP2"];
C_OP_MovementPlaceOnGround.m_nLerpCP = jsonData["C_OP_MovementPlaceOnGround"]["m_nLerpCP"];
C_OP_MovementPlaceOnGround.m_nTraceMissBehavior = jsonData["C_OP_MovementPlaceOnGround"]["m_nTraceMissBehavior"];
C_OP_MovementPlaceOnGround.m_bIncludeShotHull = jsonData["C_OP_MovementPlaceOnGround"]["m_bIncludeShotHull"];
C_OP_MovementPlaceOnGround.m_bIncludeWater = jsonData["C_OP_MovementPlaceOnGround"]["m_bIncludeWater"];
C_OP_MovementPlaceOnGround.m_bSetNormal = jsonData["C_OP_MovementPlaceOnGround"]["m_bSetNormal"];
C_OP_MovementPlaceOnGround.m_bScaleOffset = jsonData["C_OP_MovementPlaceOnGround"]["m_bScaleOffset"];
C_OP_MovementPlaceOnGround.m_nPreserveOffsetCP = jsonData["C_OP_MovementPlaceOnGround"]["m_nPreserveOffsetCP"];
C_OP_MovementPlaceOnGround.m_nIgnoreCP = jsonData["C_OP_MovementPlaceOnGround"]["m_nIgnoreCP"];

// Atribuições para C_OP_SetCPOrientationToDirection
// C_OP_SetCPOrientationToDirection Offsets
C_OP_SetCPOrientationToDirection.m_nInputControlPoint = jsonData["C_OP_SetCPOrientationToDirection"]["m_nInputControlPoint"];
C_OP_SetCPOrientationToDirection.m_nOutputControlPoint = jsonData["C_OP_SetCPOrientationToDirection"]["m_nOutputControlPoint"];

// Atribuições para C_OP_RemapCrossProductOfTwoVectorsToVector
// C_OP_RemapCrossProductOfTwoVectorsToVector Offsets
C_OP_RemapCrossProductOfTwoVectorsToVector.m_InputVec1 = jsonData["C_OP_RemapCrossProductOfTwoVectorsToVector"]["m_InputVec1"];
C_OP_RemapCrossProductOfTwoVectorsToVector.m_InputVec2 = jsonData["C_OP_RemapCrossProductOfTwoVectorsToVector"]["m_InputVec2"];
C_OP_RemapCrossProductOfTwoVectorsToVector.m_nFieldOutput = jsonData["C_OP_RemapCrossProductOfTwoVectorsToVector"]["m_nFieldOutput"];
C_OP_RemapCrossProductOfTwoVectorsToVector.m_bNormalize = jsonData["C_OP_RemapCrossProductOfTwoVectorsToVector"]["m_bNormalize"];

// Atribuições para C_OP_RemapTransformOrientationToRotations
// C_OP_RemapTransformOrientationToRotations Offsets
C_OP_RemapTransformOrientationToRotations.m_TransformInput = jsonData["C_OP_RemapTransformOrientationToRotations"]["m_TransformInput"];
C_OP_RemapTransformOrientationToRotations.m_vecRotation = jsonData["C_OP_RemapTransformOrientationToRotations"]["m_vecRotation"];
C_OP_RemapTransformOrientationToRotations.m_bUseQuat = jsonData["C_OP_RemapTransformOrientationToRotations"]["m_bUseQuat"];
C_OP_RemapTransformOrientationToRotations.m_bWriteNormal = jsonData["C_OP_RemapTransformOrientationToRotations"]["m_bWriteNormal"];

// Atribuições para C_OP_InheritFromParentParticlesV2
// C_OP_InheritFromParentParticlesV2 Offsets
C_OP_InheritFromParentParticlesV2.m_flScale = jsonData["C_OP_InheritFromParentParticlesV2"]["m_flScale"];
C_OP_InheritFromParentParticlesV2.m_nFieldOutput = jsonData["C_OP_InheritFromParentParticlesV2"]["m_nFieldOutput"];
C_OP_InheritFromParentParticlesV2.m_nIncrement = jsonData["C_OP_InheritFromParentParticlesV2"]["m_nIncrement"];
C_OP_InheritFromParentParticlesV2.m_bRandomDistribution = jsonData["C_OP_InheritFromParentParticlesV2"]["m_bRandomDistribution"];
C_OP_InheritFromParentParticlesV2.m_nMissingParentBehavior = jsonData["C_OP_InheritFromParentParticlesV2"]["m_nMissingParentBehavior"];

// Atribuições para C_INIT_RandomSecondSequence
// C_INIT_RandomSecondSequence Offsets
C_INIT_RandomSecondSequence.m_nSequenceMin = jsonData["C_INIT_RandomSecondSequence"]["m_nSequenceMin"];
C_INIT_RandomSecondSequence.m_nSequenceMax = jsonData["C_INIT_RandomSecondSequence"]["m_nSequenceMax"];

// Atribuições para C_OP_SetFloatCollection
// C_OP_SetFloatCollection Offsets
C_OP_SetFloatCollection.m_InputValue = jsonData["C_OP_SetFloatCollection"]["m_InputValue"];
C_OP_SetFloatCollection.m_nOutputField = jsonData["C_OP_SetFloatCollection"]["m_nOutputField"];
C_OP_SetFloatCollection.m_nSetMethod = jsonData["C_OP_SetFloatCollection"]["m_nSetMethod"];
C_OP_SetFloatCollection.m_Lerp = jsonData["C_OP_SetFloatCollection"]["m_Lerp"];

// Atribuições para PointDefinition_t
// PointDefinition_t Offsets
PointDefinition_t.m_nControlPoint = jsonData["PointDefinition_t"]["m_nControlPoint"];
PointDefinition_t.m_bLocalCoords = jsonData["PointDefinition_t"]["m_bLocalCoords"];
PointDefinition_t.m_vOffset = jsonData["PointDefinition_t"]["m_vOffset"];

// Atribuições para C_OP_SetControlPointPositionToRandomActiveCP
// C_OP_SetControlPointPositionToRandomActiveCP Offsets
C_OP_SetControlPointPositionToRandomActiveCP.m_nCP1 = jsonData["C_OP_SetControlPointPositionToRandomActiveCP"]["m_nCP1"];
C_OP_SetControlPointPositionToRandomActiveCP.m_nHeadLocationMin = jsonData["C_OP_SetControlPointPositionToRandomActiveCP"]["m_nHeadLocationMin"];
C_OP_SetControlPointPositionToRandomActiveCP.m_nHeadLocationMax = jsonData["C_OP_SetControlPointPositionToRandomActiveCP"]["m_nHeadLocationMax"];
C_OP_SetControlPointPositionToRandomActiveCP.m_flResetRate = jsonData["C_OP_SetControlPointPositionToRandomActiveCP"]["m_flResetRate"];

// Atribuições para C_OP_Diffusion
// C_OP_Diffusion Offsets
C_OP_Diffusion.m_flRadiusScale = jsonData["C_OP_Diffusion"]["m_flRadiusScale"];
C_OP_Diffusion.m_nFieldOutput = jsonData["C_OP_Diffusion"]["m_nFieldOutput"];
C_OP_Diffusion.m_nVoxelGridResolution = jsonData["C_OP_Diffusion"]["m_nVoxelGridResolution"];

// Atribuições para C_INIT_AgeNoise
// C_INIT_AgeNoise Offsets
C_INIT_AgeNoise.m_bAbsVal = jsonData["C_INIT_AgeNoise"]["m_bAbsVal"];
C_INIT_AgeNoise.m_bAbsValInv = jsonData["C_INIT_AgeNoise"]["m_bAbsValInv"];
C_INIT_AgeNoise.m_flOffset = jsonData["C_INIT_AgeNoise"]["m_flOffset"];
C_INIT_AgeNoise.m_flAgeMin = jsonData["C_INIT_AgeNoise"]["m_flAgeMin"];
C_INIT_AgeNoise.m_flAgeMax = jsonData["C_INIT_AgeNoise"]["m_flAgeMax"];
C_INIT_AgeNoise.m_flNoiseScale = jsonData["C_INIT_AgeNoise"]["m_flNoiseScale"];
C_INIT_AgeNoise.m_flNoiseScaleLoc = jsonData["C_INIT_AgeNoise"]["m_flNoiseScaleLoc"];
C_INIT_AgeNoise.m_vecOffsetLoc = jsonData["C_INIT_AgeNoise"]["m_vecOffsetLoc"];

// Atribuições para C_OP_RemapVectorComponentToScalar
// C_OP_RemapVectorComponentToScalar Offsets
C_OP_RemapVectorComponentToScalar.m_nFieldInput = jsonData["C_OP_RemapVectorComponentToScalar"]["m_nFieldInput"];
C_OP_RemapVectorComponentToScalar.m_nFieldOutput = jsonData["C_OP_RemapVectorComponentToScalar"]["m_nFieldOutput"];
C_OP_RemapVectorComponentToScalar.m_nComponent = jsonData["C_OP_RemapVectorComponentToScalar"]["m_nComponent"];

// Atribuições para CGeneralRandomRotation
// CGeneralRandomRotation Offsets
CGeneralRandomRotation.m_nFieldOutput = jsonData["CGeneralRandomRotation"]["m_nFieldOutput"];
CGeneralRandomRotation.m_flDegrees = jsonData["CGeneralRandomRotation"]["m_flDegrees"];
CGeneralRandomRotation.m_flDegreesMin = jsonData["CGeneralRandomRotation"]["m_flDegreesMin"];
CGeneralRandomRotation.m_flDegreesMax = jsonData["CGeneralRandomRotation"]["m_flDegreesMax"];
CGeneralRandomRotation.m_flRotationRandExponent = jsonData["CGeneralRandomRotation"]["m_flRotationRandExponent"];
CGeneralRandomRotation.m_bRandomlyFlipDirection = jsonData["CGeneralRandomRotation"]["m_bRandomlyFlipDirection"];

// Atribuições para C_OP_DistanceBetweenVecs
// C_OP_DistanceBetweenVecs Offsets
C_OP_DistanceBetweenVecs.m_nFieldOutput = jsonData["C_OP_DistanceBetweenVecs"]["m_nFieldOutput"];
C_OP_DistanceBetweenVecs.m_vecPoint1 = jsonData["C_OP_DistanceBetweenVecs"]["m_vecPoint1"];
C_OP_DistanceBetweenVecs.m_vecPoint2 = jsonData["C_OP_DistanceBetweenVecs"]["m_vecPoint2"];
C_OP_DistanceBetweenVecs.m_flInputMin = jsonData["C_OP_DistanceBetweenVecs"]["m_flInputMin"];
C_OP_DistanceBetweenVecs.m_flInputMax = jsonData["C_OP_DistanceBetweenVecs"]["m_flInputMax"];
C_OP_DistanceBetweenVecs.m_flOutputMin = jsonData["C_OP_DistanceBetweenVecs"]["m_flOutputMin"];
C_OP_DistanceBetweenVecs.m_flOutputMax = jsonData["C_OP_DistanceBetweenVecs"]["m_flOutputMax"];
C_OP_DistanceBetweenVecs.m_nSetMethod = jsonData["C_OP_DistanceBetweenVecs"]["m_nSetMethod"];
C_OP_DistanceBetweenVecs.m_bDeltaTime = jsonData["C_OP_DistanceBetweenVecs"]["m_bDeltaTime"];

// Atribuições para C_OP_DampenToCP
// C_OP_DampenToCP Offsets
C_OP_DampenToCP.m_nControlPointNumber = jsonData["C_OP_DampenToCP"]["m_nControlPointNumber"];
C_OP_DampenToCP.m_flRange = jsonData["C_OP_DampenToCP"]["m_flRange"];
C_OP_DampenToCP.m_flScale = jsonData["C_OP_DampenToCP"]["m_flScale"];

// Atribuições para C_OP_CalculateVectorAttribute
// C_OP_CalculateVectorAttribute Offsets
C_OP_CalculateVectorAttribute.m_vStartValue = jsonData["C_OP_CalculateVectorAttribute"]["m_vStartValue"];
C_OP_CalculateVectorAttribute.m_nFieldInput1 = jsonData["C_OP_CalculateVectorAttribute"]["m_nFieldInput1"];
C_OP_CalculateVectorAttribute.m_flInputScale1 = jsonData["C_OP_CalculateVectorAttribute"]["m_flInputScale1"];
C_OP_CalculateVectorAttribute.m_nFieldInput2 = jsonData["C_OP_CalculateVectorAttribute"]["m_nFieldInput2"];
C_OP_CalculateVectorAttribute.m_flInputScale2 = jsonData["C_OP_CalculateVectorAttribute"]["m_flInputScale2"];
C_OP_CalculateVectorAttribute.m_nControlPointInput1 = jsonData["C_OP_CalculateVectorAttribute"]["m_nControlPointInput1"];
C_OP_CalculateVectorAttribute.m_flControlPointScale1 = jsonData["C_OP_CalculateVectorAttribute"]["m_flControlPointScale1"];
C_OP_CalculateVectorAttribute.m_nControlPointInput2 = jsonData["C_OP_CalculateVectorAttribute"]["m_nControlPointInput2"];
C_OP_CalculateVectorAttribute.m_flControlPointScale2 = jsonData["C_OP_CalculateVectorAttribute"]["m_flControlPointScale2"];
C_OP_CalculateVectorAttribute.m_nFieldOutput = jsonData["C_OP_CalculateVectorAttribute"]["m_nFieldOutput"];
C_OP_CalculateVectorAttribute.m_vFinalOutputScale = jsonData["C_OP_CalculateVectorAttribute"]["m_vFinalOutputScale"];

// Atribuições para CParticleTransformInput
// CParticleTransformInput Offsets
CParticleTransformInput.m_nType = jsonData["CParticleTransformInput"]["m_nType"];
CParticleTransformInput.m_NamedValue = jsonData["CParticleTransformInput"]["m_NamedValue"];
CParticleTransformInput.m_bFollowNamedValue = jsonData["CParticleTransformInput"]["m_bFollowNamedValue"];
CParticleTransformInput.m_bSupportsDisabled = jsonData["CParticleTransformInput"]["m_bSupportsDisabled"];
CParticleTransformInput.m_bUseOrientation = jsonData["CParticleTransformInput"]["m_bUseOrientation"];
CParticleTransformInput.m_nControlPoint = jsonData["CParticleTransformInput"]["m_nControlPoint"];
CParticleTransformInput.m_nControlPointRangeMax = jsonData["CParticleTransformInput"]["m_nControlPointRangeMax"];
CParticleTransformInput.m_flEndCPGrowthTime = jsonData["CParticleTransformInput"]["m_flEndCPGrowthTime"];

// Atribuições para C_OP_LockToBone
// C_OP_LockToBone Offsets
C_OP_LockToBone.m_modelInput = jsonData["C_OP_LockToBone"]["m_modelInput"];
C_OP_LockToBone.m_transformInput = jsonData["C_OP_LockToBone"]["m_transformInput"];
C_OP_LockToBone.m_flLifeTimeFadeStart = jsonData["C_OP_LockToBone"]["m_flLifeTimeFadeStart"];
C_OP_LockToBone.m_flLifeTimeFadeEnd = jsonData["C_OP_LockToBone"]["m_flLifeTimeFadeEnd"];
C_OP_LockToBone.m_flJumpThreshold = jsonData["C_OP_LockToBone"]["m_flJumpThreshold"];
C_OP_LockToBone.m_flPrevPosScale = jsonData["C_OP_LockToBone"]["m_flPrevPosScale"];
C_OP_LockToBone.m_HitboxSetName = jsonData["C_OP_LockToBone"]["m_HitboxSetName"];
C_OP_LockToBone.m_bRigid = jsonData["C_OP_LockToBone"]["m_bRigid"];
C_OP_LockToBone.m_bUseBones = jsonData["C_OP_LockToBone"]["m_bUseBones"];
C_OP_LockToBone.m_nFieldOutput = jsonData["C_OP_LockToBone"]["m_nFieldOutput"];
C_OP_LockToBone.m_nFieldOutputPrev = jsonData["C_OP_LockToBone"]["m_nFieldOutputPrev"];
C_OP_LockToBone.m_nRotationSetType = jsonData["C_OP_LockToBone"]["m_nRotationSetType"];
C_OP_LockToBone.m_bRigidRotationLock = jsonData["C_OP_LockToBone"]["m_bRigidRotationLock"];
C_OP_LockToBone.m_vecRotation = jsonData["C_OP_LockToBone"]["m_vecRotation"];
C_OP_LockToBone.m_flRotLerp = jsonData["C_OP_LockToBone"]["m_flRotLerp"];

// Atribuições para C_OP_MovementMaintainOffset
// C_OP_MovementMaintainOffset Offsets
C_OP_MovementMaintainOffset.m_vecOffset = jsonData["C_OP_MovementMaintainOffset"]["m_vecOffset"];
C_OP_MovementMaintainOffset.m_nCP = jsonData["C_OP_MovementMaintainOffset"]["m_nCP"];
C_OP_MovementMaintainOffset.m_bRadiusScale = jsonData["C_OP_MovementMaintainOffset"]["m_bRadiusScale"];

// Atribuições para C_OP_SetVec
// C_OP_SetVec Offsets
C_OP_SetVec.m_InputValue = jsonData["C_OP_SetVec"]["m_InputValue"];
C_OP_SetVec.m_nOutputField = jsonData["C_OP_SetVec"]["m_nOutputField"];
C_OP_SetVec.m_nSetMethod = jsonData["C_OP_SetVec"]["m_nSetMethod"];
C_OP_SetVec.m_Lerp = jsonData["C_OP_SetVec"]["m_Lerp"];
C_OP_SetVec.m_bNormalizedOutput = jsonData["C_OP_SetVec"]["m_bNormalizedOutput"];

// Atribuições para C_INIT_CreateFromParentParticles
// C_INIT_CreateFromParentParticles Offsets
C_INIT_CreateFromParentParticles.m_flVelocityScale = jsonData["C_INIT_CreateFromParentParticles"]["m_flVelocityScale"];
C_INIT_CreateFromParentParticles.m_flIncrement = jsonData["C_INIT_CreateFromParentParticles"]["m_flIncrement"];
C_INIT_CreateFromParentParticles.m_bRandomDistribution = jsonData["C_INIT_CreateFromParentParticles"]["m_bRandomDistribution"];
C_INIT_CreateFromParentParticles.m_nRandomSeed = jsonData["C_INIT_CreateFromParentParticles"]["m_nRandomSeed"];
C_INIT_CreateFromParentParticles.m_bSubFrame = jsonData["C_INIT_CreateFromParentParticles"]["m_bSubFrame"];

// Atribuições para PARTICLE_EHANDLE__
// PARTICLE_EHANDLE__ Offsets
PARTICLE_EHANDLE__.unused = jsonData["PARTICLE_EHANDLE__"]["unused"];

// Atribuições para C_OP_RenderOmni2Light
// C_OP_RenderOmni2Light Offsets
C_OP_RenderOmni2Light.m_nLightType = jsonData["C_OP_RenderOmni2Light"]["m_nLightType"];
C_OP_RenderOmni2Light.m_vColorBlend = jsonData["C_OP_RenderOmni2Light"]["m_vColorBlend"];
C_OP_RenderOmni2Light.m_nColorBlendType = jsonData["C_OP_RenderOmni2Light"]["m_nColorBlendType"];
C_OP_RenderOmni2Light.m_nBrightnessUnit = jsonData["C_OP_RenderOmni2Light"]["m_nBrightnessUnit"];
C_OP_RenderOmni2Light.m_flBrightnessLumens = jsonData["C_OP_RenderOmni2Light"]["m_flBrightnessLumens"];
C_OP_RenderOmni2Light.m_flBrightnessCandelas = jsonData["C_OP_RenderOmni2Light"]["m_flBrightnessCandelas"];
C_OP_RenderOmni2Light.m_bCastShadows = jsonData["C_OP_RenderOmni2Light"]["m_bCastShadows"];
C_OP_RenderOmni2Light.m_bFog = jsonData["C_OP_RenderOmni2Light"]["m_bFog"];
C_OP_RenderOmni2Light.m_flFogScale = jsonData["C_OP_RenderOmni2Light"]["m_flFogScale"];
C_OP_RenderOmni2Light.m_flLuminaireRadius = jsonData["C_OP_RenderOmni2Light"]["m_flLuminaireRadius"];
C_OP_RenderOmni2Light.m_flSkirt = jsonData["C_OP_RenderOmni2Light"]["m_flSkirt"];
C_OP_RenderOmni2Light.m_flRange = jsonData["C_OP_RenderOmni2Light"]["m_flRange"];
C_OP_RenderOmni2Light.m_flInnerConeAngle = jsonData["C_OP_RenderOmni2Light"]["m_flInnerConeAngle"];
C_OP_RenderOmni2Light.m_flOuterConeAngle = jsonData["C_OP_RenderOmni2Light"]["m_flOuterConeAngle"];
C_OP_RenderOmni2Light.m_hLightCookie = jsonData["C_OP_RenderOmni2Light"]["m_hLightCookie"];
C_OP_RenderOmni2Light.m_bSphericalCookie = jsonData["C_OP_RenderOmni2Light"]["m_bSphericalCookie"];

// Atribuições para C_OP_ConnectParentParticleToNearest
// C_OP_ConnectParentParticleToNearest Offsets
C_OP_ConnectParentParticleToNearest.m_nFirstControlPoint = jsonData["C_OP_ConnectParentParticleToNearest"]["m_nFirstControlPoint"];
C_OP_ConnectParentParticleToNearest.m_nSecondControlPoint = jsonData["C_OP_ConnectParentParticleToNearest"]["m_nSecondControlPoint"];
C_OP_ConnectParentParticleToNearest.m_bUseRadius = jsonData["C_OP_ConnectParentParticleToNearest"]["m_bUseRadius"];
C_OP_ConnectParentParticleToNearest.m_flRadiusScale = jsonData["C_OP_ConnectParentParticleToNearest"]["m_flRadiusScale"];
C_OP_ConnectParentParticleToNearest.m_flParentRadiusScale = jsonData["C_OP_ConnectParentParticleToNearest"]["m_flParentRadiusScale"];

// Atribuições para C_INIT_InitSkinnedPositionFromCPSnapshot
// C_INIT_InitSkinnedPositionFromCPSnapshot Offsets
C_INIT_InitSkinnedPositionFromCPSnapshot.m_nSnapshotControlPointNumber = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_nSnapshotControlPointNumber"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_nControlPointNumber = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_nControlPointNumber"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_bRandom = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_bRandom"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_nRandomSeed = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_nRandomSeed"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_bRigid = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_bRigid"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_bSetNormal = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_bSetNormal"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_bIgnoreDt = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_bIgnoreDt"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_flMinNormalVelocity = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_flMinNormalVelocity"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_flMaxNormalVelocity = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_flMaxNormalVelocity"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_nIndexType = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_nIndexType"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_flReadIndex = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_flReadIndex"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_flIncrement = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_flIncrement"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_nFullLoopIncrement = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_nFullLoopIncrement"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_nSnapShotStartPoint = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_nSnapShotStartPoint"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_flBoneVelocity = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_flBoneVelocity"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_flBoneVelocityMax = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_flBoneVelocityMax"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_bCopyColor = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_bCopyColor"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_bCopyAlpha = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_bCopyAlpha"];
C_INIT_InitSkinnedPositionFromCPSnapshot.m_bSetRadius = jsonData["C_INIT_InitSkinnedPositionFromCPSnapshot"]["m_bSetRadius"];

// Atribuições para C_OP_LagCompensation
// C_OP_LagCompensation Offsets
C_OP_LagCompensation.m_nDesiredVelocityCP = jsonData["C_OP_LagCompensation"]["m_nDesiredVelocityCP"];
C_OP_LagCompensation.m_nLatencyCP = jsonData["C_OP_LagCompensation"]["m_nLatencyCP"];
C_OP_LagCompensation.m_nLatencyCPField = jsonData["C_OP_LagCompensation"]["m_nLatencyCPField"];
C_OP_LagCompensation.m_nDesiredVelocityCPField = jsonData["C_OP_LagCompensation"]["m_nDesiredVelocityCPField"];

// Atribuições para C_OP_CollideWithSelf
// C_OP_CollideWithSelf Offsets
C_OP_CollideWithSelf.m_flRadiusScale = jsonData["C_OP_CollideWithSelf"]["m_flRadiusScale"];
C_OP_CollideWithSelf.m_flMinimumSpeed = jsonData["C_OP_CollideWithSelf"]["m_flMinimumSpeed"];

// Atribuições para C_OP_Noise
// C_OP_Noise Offsets
C_OP_Noise.m_nFieldOutput = jsonData["C_OP_Noise"]["m_nFieldOutput"];
C_OP_Noise.m_flOutputMin = jsonData["C_OP_Noise"]["m_flOutputMin"];
C_OP_Noise.m_flOutputMax = jsonData["C_OP_Noise"]["m_flOutputMax"];
C_OP_Noise.m_fl4NoiseScale = jsonData["C_OP_Noise"]["m_fl4NoiseScale"];
C_OP_Noise.m_bAdditive = jsonData["C_OP_Noise"]["m_bAdditive"];
C_OP_Noise.m_flNoiseAnimationTimeScale = jsonData["C_OP_Noise"]["m_flNoiseAnimationTimeScale"];

// Atribuições para C_OP_FadeAndKillForTracers
// C_OP_FadeAndKillForTracers Offsets
C_OP_FadeAndKillForTracers.m_flStartFadeInTime = jsonData["C_OP_FadeAndKillForTracers"]["m_flStartFadeInTime"];
C_OP_FadeAndKillForTracers.m_flEndFadeInTime = jsonData["C_OP_FadeAndKillForTracers"]["m_flEndFadeInTime"];
C_OP_FadeAndKillForTracers.m_flStartFadeOutTime = jsonData["C_OP_FadeAndKillForTracers"]["m_flStartFadeOutTime"];
C_OP_FadeAndKillForTracers.m_flEndFadeOutTime = jsonData["C_OP_FadeAndKillForTracers"]["m_flEndFadeOutTime"];
C_OP_FadeAndKillForTracers.m_flStartAlpha = jsonData["C_OP_FadeAndKillForTracers"]["m_flStartAlpha"];
C_OP_FadeAndKillForTracers.m_flEndAlpha = jsonData["C_OP_FadeAndKillForTracers"]["m_flEndAlpha"];

// Atribuições para C_OP_ColorAdjustHSL
// C_OP_ColorAdjustHSL Offsets
C_OP_ColorAdjustHSL.m_flHueAdjust = jsonData["C_OP_ColorAdjustHSL"]["m_flHueAdjust"];
C_OP_ColorAdjustHSL.m_flSaturationAdjust = jsonData["C_OP_ColorAdjustHSL"]["m_flSaturationAdjust"];
C_OP_ColorAdjustHSL.m_flLightnessAdjust = jsonData["C_OP_ColorAdjustHSL"]["m_flLightnessAdjust"];

// Atribuições para CParticleMassCalculationParameters
// CParticleMassCalculationParameters Offsets
CParticleMassCalculationParameters.m_nMassMode = jsonData["CParticleMassCalculationParameters"]["m_nMassMode"];
CParticleMassCalculationParameters.m_flRadius = jsonData["CParticleMassCalculationParameters"]["m_flRadius"];
CParticleMassCalculationParameters.m_flNominalRadius = jsonData["CParticleMassCalculationParameters"]["m_flNominalRadius"];
CParticleMassCalculationParameters.m_flScale = jsonData["CParticleMassCalculationParameters"]["m_flScale"];

// Atribuições para C_OP_SequenceFromModel
// C_OP_SequenceFromModel Offsets
C_OP_SequenceFromModel.m_nControlPointNumber = jsonData["C_OP_SequenceFromModel"]["m_nControlPointNumber"];
C_OP_SequenceFromModel.m_nFieldOutput = jsonData["C_OP_SequenceFromModel"]["m_nFieldOutput"];
C_OP_SequenceFromModel.m_nFieldOutputAnim = jsonData["C_OP_SequenceFromModel"]["m_nFieldOutputAnim"];
C_OP_SequenceFromModel.m_flInputMin = jsonData["C_OP_SequenceFromModel"]["m_flInputMin"];
C_OP_SequenceFromModel.m_flInputMax = jsonData["C_OP_SequenceFromModel"]["m_flInputMax"];
C_OP_SequenceFromModel.m_flOutputMin = jsonData["C_OP_SequenceFromModel"]["m_flOutputMin"];
C_OP_SequenceFromModel.m_flOutputMax = jsonData["C_OP_SequenceFromModel"]["m_flOutputMax"];
C_OP_SequenceFromModel.m_nSetMethod = jsonData["C_OP_SequenceFromModel"]["m_nSetMethod"];

// Atribuições para C_OP_AlphaDecay
// C_OP_AlphaDecay Offsets
C_OP_AlphaDecay.m_flMinAlpha = jsonData["C_OP_AlphaDecay"]["m_flMinAlpha"];

// Atribuições para C_OP_RemapDensityGradientToVectorAttribute
// C_OP_RemapDensityGradientToVectorAttribute Offsets
C_OP_RemapDensityGradientToVectorAttribute.m_flRadiusScale = jsonData["C_OP_RemapDensityGradientToVectorAttribute"]["m_flRadiusScale"];
C_OP_RemapDensityGradientToVectorAttribute.m_nFieldOutput = jsonData["C_OP_RemapDensityGradientToVectorAttribute"]["m_nFieldOutput"];

// Atribuições para C_INIT_InitVec
// C_INIT_InitVec Offsets
C_INIT_InitVec.m_InputValue = jsonData["C_INIT_InitVec"]["m_InputValue"];
C_INIT_InitVec.m_nOutputField = jsonData["C_INIT_InitVec"]["m_nOutputField"];
C_INIT_InitVec.m_nSetMethod = jsonData["C_INIT_InitVec"]["m_nSetMethod"];
C_INIT_InitVec.m_bNormalizedOutput = jsonData["C_INIT_InitVec"]["m_bNormalizedOutput"];
C_INIT_InitVec.m_bWritePreviousPosition = jsonData["C_INIT_InitVec"]["m_bWritePreviousPosition"];

// Atribuições para C_INIT_SetHitboxToModel
// C_INIT_SetHitboxToModel Offsets
C_INIT_SetHitboxToModel.m_nControlPointNumber = jsonData["C_INIT_SetHitboxToModel"]["m_nControlPointNumber"];
C_INIT_SetHitboxToModel.m_nForceInModel = jsonData["C_INIT_SetHitboxToModel"]["m_nForceInModel"];
C_INIT_SetHitboxToModel.m_bEvenDistribution = jsonData["C_INIT_SetHitboxToModel"]["m_bEvenDistribution"];
C_INIT_SetHitboxToModel.m_nDesiredHitbox = jsonData["C_INIT_SetHitboxToModel"]["m_nDesiredHitbox"];
C_INIT_SetHitboxToModel.m_vecHitBoxScale = jsonData["C_INIT_SetHitboxToModel"]["m_vecHitBoxScale"];
C_INIT_SetHitboxToModel.m_vecDirectionBias = jsonData["C_INIT_SetHitboxToModel"]["m_vecDirectionBias"];
C_INIT_SetHitboxToModel.m_bMaintainHitbox = jsonData["C_INIT_SetHitboxToModel"]["m_bMaintainHitbox"];
C_INIT_SetHitboxToModel.m_bUseBones = jsonData["C_INIT_SetHitboxToModel"]["m_bUseBones"];
C_INIT_SetHitboxToModel.m_HitboxSetName = jsonData["C_INIT_SetHitboxToModel"]["m_HitboxSetName"];
C_INIT_SetHitboxToModel.m_flShellSize = jsonData["C_INIT_SetHitboxToModel"]["m_flShellSize"];

// Atribuições para C_OP_MovementMoveAlongSkinnedCPSnapshot
// C_OP_MovementMoveAlongSkinnedCPSnapshot Offsets
C_OP_MovementMoveAlongSkinnedCPSnapshot.m_nControlPointNumber = jsonData["C_OP_MovementMoveAlongSkinnedCPSnapshot"]["m_nControlPointNumber"];
C_OP_MovementMoveAlongSkinnedCPSnapshot.m_nSnapshotControlPointNumber = jsonData["C_OP_MovementMoveAlongSkinnedCPSnapshot"]["m_nSnapshotControlPointNumber"];
C_OP_MovementMoveAlongSkinnedCPSnapshot.m_bSetNormal = jsonData["C_OP_MovementMoveAlongSkinnedCPSnapshot"]["m_bSetNormal"];
C_OP_MovementMoveAlongSkinnedCPSnapshot.m_bSetRadius = jsonData["C_OP_MovementMoveAlongSkinnedCPSnapshot"]["m_bSetRadius"];
C_OP_MovementMoveAlongSkinnedCPSnapshot.m_flInterpolation = jsonData["C_OP_MovementMoveAlongSkinnedCPSnapshot"]["m_flInterpolation"];
C_OP_MovementMoveAlongSkinnedCPSnapshot.m_flTValue = jsonData["C_OP_MovementMoveAlongSkinnedCPSnapshot"]["m_flTValue"];

// Atribuições para C_OP_LerpScalar
// C_OP_LerpScalar Offsets
C_OP_LerpScalar.m_nFieldOutput = jsonData["C_OP_LerpScalar"]["m_nFieldOutput"];
C_OP_LerpScalar.m_flOutput = jsonData["C_OP_LerpScalar"]["m_flOutput"];
C_OP_LerpScalar.m_flStartTime = jsonData["C_OP_LerpScalar"]["m_flStartTime"];
C_OP_LerpScalar.m_flEndTime = jsonData["C_OP_LerpScalar"]["m_flEndTime"];

// Atribuições para C_INIT_InitialRepulsionVelocity
// C_INIT_InitialRepulsionVelocity Offsets
C_INIT_InitialRepulsionVelocity.m_CollisionGroupName = jsonData["C_INIT_InitialRepulsionVelocity"]["m_CollisionGroupName"];
C_INIT_InitialRepulsionVelocity.m_nTraceSet = jsonData["C_INIT_InitialRepulsionVelocity"]["m_nTraceSet"];
C_INIT_InitialRepulsionVelocity.m_vecOutputMin = jsonData["C_INIT_InitialRepulsionVelocity"]["m_vecOutputMin"];
C_INIT_InitialRepulsionVelocity.m_vecOutputMax = jsonData["C_INIT_InitialRepulsionVelocity"]["m_vecOutputMax"];
C_INIT_InitialRepulsionVelocity.m_nControlPointNumber = jsonData["C_INIT_InitialRepulsionVelocity"]["m_nControlPointNumber"];
C_INIT_InitialRepulsionVelocity.m_bPerParticle = jsonData["C_INIT_InitialRepulsionVelocity"]["m_bPerParticle"];
C_INIT_InitialRepulsionVelocity.m_bTranslate = jsonData["C_INIT_InitialRepulsionVelocity"]["m_bTranslate"];
C_INIT_InitialRepulsionVelocity.m_bProportional = jsonData["C_INIT_InitialRepulsionVelocity"]["m_bProportional"];
C_INIT_InitialRepulsionVelocity.m_flTraceLength = jsonData["C_INIT_InitialRepulsionVelocity"]["m_flTraceLength"];
C_INIT_InitialRepulsionVelocity.m_bPerParticleTR = jsonData["C_INIT_InitialRepulsionVelocity"]["m_bPerParticleTR"];
C_INIT_InitialRepulsionVelocity.m_bInherit = jsonData["C_INIT_InitialRepulsionVelocity"]["m_bInherit"];
C_INIT_InitialRepulsionVelocity.m_nChildCP = jsonData["C_INIT_InitialRepulsionVelocity"]["m_nChildCP"];
C_INIT_InitialRepulsionVelocity.m_nChildGroupID = jsonData["C_INIT_InitialRepulsionVelocity"]["m_nChildGroupID"];

// Atribuições para C_OP_ClampScalar
// C_OP_ClampScalar Offsets
C_OP_ClampScalar.m_nFieldOutput = jsonData["C_OP_ClampScalar"]["m_nFieldOutput"];
C_OP_ClampScalar.m_flOutputMin = jsonData["C_OP_ClampScalar"]["m_flOutputMin"];
C_OP_ClampScalar.m_flOutputMax = jsonData["C_OP_ClampScalar"]["m_flOutputMax"];

// Atribuições para C_OP_SetControlPointToHMD
// C_OP_SetControlPointToHMD Offsets
C_OP_SetControlPointToHMD.m_nCP1 = jsonData["C_OP_SetControlPointToHMD"]["m_nCP1"];
C_OP_SetControlPointToHMD.m_vecCP1Pos = jsonData["C_OP_SetControlPointToHMD"]["m_vecCP1Pos"];
C_OP_SetControlPointToHMD.m_bOrientToHMD = jsonData["C_OP_SetControlPointToHMD"]["m_bOrientToHMD"];

// Atribuições para C_OP_DifferencePreviousParticle
// C_OP_DifferencePreviousParticle Offsets
C_OP_DifferencePreviousParticle.m_nFieldInput = jsonData["C_OP_DifferencePreviousParticle"]["m_nFieldInput"];
C_OP_DifferencePreviousParticle.m_nFieldOutput = jsonData["C_OP_DifferencePreviousParticle"]["m_nFieldOutput"];
C_OP_DifferencePreviousParticle.m_flInputMin = jsonData["C_OP_DifferencePreviousParticle"]["m_flInputMin"];
C_OP_DifferencePreviousParticle.m_flInputMax = jsonData["C_OP_DifferencePreviousParticle"]["m_flInputMax"];
C_OP_DifferencePreviousParticle.m_flOutputMin = jsonData["C_OP_DifferencePreviousParticle"]["m_flOutputMin"];
C_OP_DifferencePreviousParticle.m_flOutputMax = jsonData["C_OP_DifferencePreviousParticle"]["m_flOutputMax"];
C_OP_DifferencePreviousParticle.m_nSetMethod = jsonData["C_OP_DifferencePreviousParticle"]["m_nSetMethod"];
C_OP_DifferencePreviousParticle.m_bActiveRange = jsonData["C_OP_DifferencePreviousParticle"]["m_bActiveRange"];
C_OP_DifferencePreviousParticle.m_bSetPreviousParticle = jsonData["C_OP_DifferencePreviousParticle"]["m_bSetPreviousParticle"];

// Atribuições para C_OP_SetControlPointFieldFromVectorExpression
// C_OP_SetControlPointFieldFromVectorExpression Offsets
C_OP_SetControlPointFieldFromVectorExpression.m_nExpression = jsonData["C_OP_SetControlPointFieldFromVectorExpression"]["m_nExpression"];
C_OP_SetControlPointFieldFromVectorExpression.m_vecInput1 = jsonData["C_OP_SetControlPointFieldFromVectorExpression"]["m_vecInput1"];
C_OP_SetControlPointFieldFromVectorExpression.m_vecInput2 = jsonData["C_OP_SetControlPointFieldFromVectorExpression"]["m_vecInput2"];
C_OP_SetControlPointFieldFromVectorExpression.m_flOutputRemap = jsonData["C_OP_SetControlPointFieldFromVectorExpression"]["m_flOutputRemap"];
C_OP_SetControlPointFieldFromVectorExpression.m_nOutputCP = jsonData["C_OP_SetControlPointFieldFromVectorExpression"]["m_nOutputCP"];
C_OP_SetControlPointFieldFromVectorExpression.m_nOutVectorField = jsonData["C_OP_SetControlPointFieldFromVectorExpression"]["m_nOutVectorField"];

// Atribuições para C_OP_PercentageBetweenTransforms
// C_OP_PercentageBetweenTransforms Offsets
C_OP_PercentageBetweenTransforms.m_nFieldOutput = jsonData["C_OP_PercentageBetweenTransforms"]["m_nFieldOutput"];
C_OP_PercentageBetweenTransforms.m_flInputMin = jsonData["C_OP_PercentageBetweenTransforms"]["m_flInputMin"];
C_OP_PercentageBetweenTransforms.m_flInputMax = jsonData["C_OP_PercentageBetweenTransforms"]["m_flInputMax"];
C_OP_PercentageBetweenTransforms.m_flOutputMin = jsonData["C_OP_PercentageBetweenTransforms"]["m_flOutputMin"];
C_OP_PercentageBetweenTransforms.m_flOutputMax = jsonData["C_OP_PercentageBetweenTransforms"]["m_flOutputMax"];
C_OP_PercentageBetweenTransforms.m_TransformStart = jsonData["C_OP_PercentageBetweenTransforms"]["m_TransformStart"];
C_OP_PercentageBetweenTransforms.m_TransformEnd = jsonData["C_OP_PercentageBetweenTransforms"]["m_TransformEnd"];
C_OP_PercentageBetweenTransforms.m_nSetMethod = jsonData["C_OP_PercentageBetweenTransforms"]["m_nSetMethod"];
C_OP_PercentageBetweenTransforms.m_bActiveRange = jsonData["C_OP_PercentageBetweenTransforms"]["m_bActiveRange"];
C_OP_PercentageBetweenTransforms.m_bRadialCheck = jsonData["C_OP_PercentageBetweenTransforms"]["m_bRadialCheck"];

// Atribuições para C_INIT_PlaneCull
// C_INIT_PlaneCull Offsets
C_INIT_PlaneCull.m_nControlPoint = jsonData["C_INIT_PlaneCull"]["m_nControlPoint"];
C_INIT_PlaneCull.m_flDistance = jsonData["C_INIT_PlaneCull"]["m_flDistance"];
C_INIT_PlaneCull.m_bCullInside = jsonData["C_INIT_PlaneCull"]["m_bCullInside"];

// Atribuições para C_INIT_InitFromCPSnapshot
// C_INIT_InitFromCPSnapshot Offsets
C_INIT_InitFromCPSnapshot.m_nControlPointNumber = jsonData["C_INIT_InitFromCPSnapshot"]["m_nControlPointNumber"];
C_INIT_InitFromCPSnapshot.m_nAttributeToRead = jsonData["C_INIT_InitFromCPSnapshot"]["m_nAttributeToRead"];
C_INIT_InitFromCPSnapshot.m_nAttributeToWrite = jsonData["C_INIT_InitFromCPSnapshot"]["m_nAttributeToWrite"];
C_INIT_InitFromCPSnapshot.m_nLocalSpaceCP = jsonData["C_INIT_InitFromCPSnapshot"]["m_nLocalSpaceCP"];
C_INIT_InitFromCPSnapshot.m_bRandom = jsonData["C_INIT_InitFromCPSnapshot"]["m_bRandom"];
C_INIT_InitFromCPSnapshot.m_bReverse = jsonData["C_INIT_InitFromCPSnapshot"]["m_bReverse"];
C_INIT_InitFromCPSnapshot.m_nSnapShotIncrement = jsonData["C_INIT_InitFromCPSnapshot"]["m_nSnapShotIncrement"];
C_INIT_InitFromCPSnapshot.m_nManualSnapshotIndex = jsonData["C_INIT_InitFromCPSnapshot"]["m_nManualSnapshotIndex"];
C_INIT_InitFromCPSnapshot.m_nRandomSeed = jsonData["C_INIT_InitFromCPSnapshot"]["m_nRandomSeed"];
C_INIT_InitFromCPSnapshot.m_bLocalSpaceAngles = jsonData["C_INIT_InitFromCPSnapshot"]["m_bLocalSpaceAngles"];

// Atribuições para C_OP_RenderCables
// C_OP_RenderCables Offsets
C_OP_RenderCables.m_flRadiusScale = jsonData["C_OP_RenderCables"]["m_flRadiusScale"];
C_OP_RenderCables.m_flAlphaScale = jsonData["C_OP_RenderCables"]["m_flAlphaScale"];
C_OP_RenderCables.m_vecColorScale = jsonData["C_OP_RenderCables"]["m_vecColorScale"];
C_OP_RenderCables.m_nColorBlendType = jsonData["C_OP_RenderCables"]["m_nColorBlendType"];
C_OP_RenderCables.m_hMaterial = jsonData["C_OP_RenderCables"]["m_hMaterial"];
C_OP_RenderCables.m_nTextureRepetitionMode = jsonData["C_OP_RenderCables"]["m_nTextureRepetitionMode"];
C_OP_RenderCables.m_flTextureRepeatsPerSegment = jsonData["C_OP_RenderCables"]["m_flTextureRepeatsPerSegment"];
C_OP_RenderCables.m_flTextureRepeatsCircumference = jsonData["C_OP_RenderCables"]["m_flTextureRepeatsCircumference"];
C_OP_RenderCables.m_flColorMapOffsetV = jsonData["C_OP_RenderCables"]["m_flColorMapOffsetV"];
C_OP_RenderCables.m_flColorMapOffsetU = jsonData["C_OP_RenderCables"]["m_flColorMapOffsetU"];
C_OP_RenderCables.m_flNormalMapOffsetV = jsonData["C_OP_RenderCables"]["m_flNormalMapOffsetV"];
C_OP_RenderCables.m_flNormalMapOffsetU = jsonData["C_OP_RenderCables"]["m_flNormalMapOffsetU"];
C_OP_RenderCables.m_bDrawCableCaps = jsonData["C_OP_RenderCables"]["m_bDrawCableCaps"];
C_OP_RenderCables.m_flCapRoundness = jsonData["C_OP_RenderCables"]["m_flCapRoundness"];
C_OP_RenderCables.m_flCapOffsetAmount = jsonData["C_OP_RenderCables"]["m_flCapOffsetAmount"];
C_OP_RenderCables.m_flTessScale = jsonData["C_OP_RenderCables"]["m_flTessScale"];
C_OP_RenderCables.m_nMinTesselation = jsonData["C_OP_RenderCables"]["m_nMinTesselation"];
C_OP_RenderCables.m_nMaxTesselation = jsonData["C_OP_RenderCables"]["m_nMaxTesselation"];
C_OP_RenderCables.m_nRoundness = jsonData["C_OP_RenderCables"]["m_nRoundness"];
C_OP_RenderCables.m_LightingTransform = jsonData["C_OP_RenderCables"]["m_LightingTransform"];
C_OP_RenderCables.m_MaterialFloatVars = jsonData["C_OP_RenderCables"]["m_MaterialFloatVars"];
C_OP_RenderCables.m_MaterialVecVars = jsonData["C_OP_RenderCables"]["m_MaterialVecVars"];

// Atribuições para C_INIT_InheritVelocity
// C_INIT_InheritVelocity Offsets
C_INIT_InheritVelocity.m_nControlPointNumber = jsonData["C_INIT_InheritVelocity"]["m_nControlPointNumber"];
C_INIT_InheritVelocity.m_flVelocityScale = jsonData["C_INIT_InheritVelocity"]["m_flVelocityScale"];

// Atribuições para C_OP_SetControlPointToWaterSurface
// C_OP_SetControlPointToWaterSurface Offsets
C_OP_SetControlPointToWaterSurface.m_nSourceCP = jsonData["C_OP_SetControlPointToWaterSurface"]["m_nSourceCP"];
C_OP_SetControlPointToWaterSurface.m_nDestCP = jsonData["C_OP_SetControlPointToWaterSurface"]["m_nDestCP"];
C_OP_SetControlPointToWaterSurface.m_nFlowCP = jsonData["C_OP_SetControlPointToWaterSurface"]["m_nFlowCP"];
C_OP_SetControlPointToWaterSurface.m_nActiveCP = jsonData["C_OP_SetControlPointToWaterSurface"]["m_nActiveCP"];
C_OP_SetControlPointToWaterSurface.m_nActiveCPField = jsonData["C_OP_SetControlPointToWaterSurface"]["m_nActiveCPField"];
C_OP_SetControlPointToWaterSurface.m_flRetestRate = jsonData["C_OP_SetControlPointToWaterSurface"]["m_flRetestRate"];
C_OP_SetControlPointToWaterSurface.m_bAdaptiveThreshold = jsonData["C_OP_SetControlPointToWaterSurface"]["m_bAdaptiveThreshold"];

// Atribuições para C_INIT_PositionOffset
// C_INIT_PositionOffset Offsets
C_INIT_PositionOffset.m_OffsetMin = jsonData["C_INIT_PositionOffset"]["m_OffsetMin"];
C_INIT_PositionOffset.m_OffsetMax = jsonData["C_INIT_PositionOffset"]["m_OffsetMax"];
C_INIT_PositionOffset.m_TransformInput = jsonData["C_INIT_PositionOffset"]["m_TransformInput"];
C_INIT_PositionOffset.m_bLocalCoords = jsonData["C_INIT_PositionOffset"]["m_bLocalCoords"];
C_INIT_PositionOffset.m_bProportional = jsonData["C_INIT_PositionOffset"]["m_bProportional"];
C_INIT_PositionOffset.m_randomnessParameters = jsonData["C_INIT_PositionOffset"]["m_randomnessParameters"];

// Atribuições para C_INIT_NormalAlignToCP
// C_INIT_NormalAlignToCP Offsets
C_INIT_NormalAlignToCP.m_transformInput = jsonData["C_INIT_NormalAlignToCP"]["m_transformInput"];
C_INIT_NormalAlignToCP.m_nControlPointAxis = jsonData["C_INIT_NormalAlignToCP"]["m_nControlPointAxis"];

// Atribuições para C_OP_ShapeMatchingConstraint
// C_OP_ShapeMatchingConstraint Offsets
C_OP_ShapeMatchingConstraint.m_flShapeRestorationTime = jsonData["C_OP_ShapeMatchingConstraint"]["m_flShapeRestorationTime"];

// Atribuições para C_OP_SetChildControlPoints
// C_OP_SetChildControlPoints Offsets
C_OP_SetChildControlPoints.m_nChildGroupID = jsonData["C_OP_SetChildControlPoints"]["m_nChildGroupID"];
C_OP_SetChildControlPoints.m_nFirstControlPoint = jsonData["C_OP_SetChildControlPoints"]["m_nFirstControlPoint"];
C_OP_SetChildControlPoints.m_nNumControlPoints = jsonData["C_OP_SetChildControlPoints"]["m_nNumControlPoints"];
C_OP_SetChildControlPoints.m_nFirstSourcePoint = jsonData["C_OP_SetChildControlPoints"]["m_nFirstSourcePoint"];
C_OP_SetChildControlPoints.m_bReverse = jsonData["C_OP_SetChildControlPoints"]["m_bReverse"];
C_OP_SetChildControlPoints.m_bSetOrientation = jsonData["C_OP_SetChildControlPoints"]["m_bSetOrientation"];

// Atribuições para C_OP_ChladniWave
// C_OP_ChladniWave Offsets
C_OP_ChladniWave.m_nFieldOutput = jsonData["C_OP_ChladniWave"]["m_nFieldOutput"];
C_OP_ChladniWave.m_flInputMin = jsonData["C_OP_ChladniWave"]["m_flInputMin"];
C_OP_ChladniWave.m_flInputMax = jsonData["C_OP_ChladniWave"]["m_flInputMax"];
C_OP_ChladniWave.m_flOutputMin = jsonData["C_OP_ChladniWave"]["m_flOutputMin"];
C_OP_ChladniWave.m_flOutputMax = jsonData["C_OP_ChladniWave"]["m_flOutputMax"];
C_OP_ChladniWave.m_vecWaveLength = jsonData["C_OP_ChladniWave"]["m_vecWaveLength"];
C_OP_ChladniWave.m_vecHarmonics = jsonData["C_OP_ChladniWave"]["m_vecHarmonics"];
C_OP_ChladniWave.m_nSetMethod = jsonData["C_OP_ChladniWave"]["m_nSetMethod"];
C_OP_ChladniWave.m_nLocalSpaceControlPoint = jsonData["C_OP_ChladniWave"]["m_nLocalSpaceControlPoint"];
C_OP_ChladniWave.m_b3D = jsonData["C_OP_ChladniWave"]["m_b3D"];

// Atribuições para C_OP_RemapDirectionToCPToVector
// C_OP_RemapDirectionToCPToVector Offsets
C_OP_RemapDirectionToCPToVector.m_nCP = jsonData["C_OP_RemapDirectionToCPToVector"]["m_nCP"];
C_OP_RemapDirectionToCPToVector.m_nFieldOutput = jsonData["C_OP_RemapDirectionToCPToVector"]["m_nFieldOutput"];
C_OP_RemapDirectionToCPToVector.m_flScale = jsonData["C_OP_RemapDirectionToCPToVector"]["m_flScale"];
C_OP_RemapDirectionToCPToVector.m_flOffsetRot = jsonData["C_OP_RemapDirectionToCPToVector"]["m_flOffsetRot"];
C_OP_RemapDirectionToCPToVector.m_vecOffsetAxis = jsonData["C_OP_RemapDirectionToCPToVector"]["m_vecOffsetAxis"];
C_OP_RemapDirectionToCPToVector.m_bNormalize = jsonData["C_OP_RemapDirectionToCPToVector"]["m_bNormalize"];
C_OP_RemapDirectionToCPToVector.m_nFieldStrength = jsonData["C_OP_RemapDirectionToCPToVector"]["m_nFieldStrength"];

// Atribuições para C_OP_DriveCPFromGlobalSoundFloat
// C_OP_DriveCPFromGlobalSoundFloat Offsets
C_OP_DriveCPFromGlobalSoundFloat.m_nOutputControlPoint = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_nOutputControlPoint"];
C_OP_DriveCPFromGlobalSoundFloat.m_nOutputField = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_nOutputField"];
C_OP_DriveCPFromGlobalSoundFloat.m_flInputMin = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_flInputMin"];
C_OP_DriveCPFromGlobalSoundFloat.m_flInputMax = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_flInputMax"];
C_OP_DriveCPFromGlobalSoundFloat.m_flOutputMin = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_flOutputMin"];
C_OP_DriveCPFromGlobalSoundFloat.m_flOutputMax = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_flOutputMax"];
C_OP_DriveCPFromGlobalSoundFloat.m_StackName = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_StackName"];
C_OP_DriveCPFromGlobalSoundFloat.m_OperatorName = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_OperatorName"];
C_OP_DriveCPFromGlobalSoundFloat.m_FieldName = jsonData["C_OP_DriveCPFromGlobalSoundFloat"]["m_FieldName"];

// Atribuições para C_OP_RtEnvCull
// C_OP_RtEnvCull Offsets
C_OP_RtEnvCull.m_vecTestDir = jsonData["C_OP_RtEnvCull"]["m_vecTestDir"];
C_OP_RtEnvCull.m_vecTestNormal = jsonData["C_OP_RtEnvCull"]["m_vecTestNormal"];
C_OP_RtEnvCull.m_bCullOnMiss = jsonData["C_OP_RtEnvCull"]["m_bCullOnMiss"];
C_OP_RtEnvCull.m_bStickInsteadOfCull = jsonData["C_OP_RtEnvCull"]["m_bStickInsteadOfCull"];
C_OP_RtEnvCull.m_RtEnvName = jsonData["C_OP_RtEnvCull"]["m_RtEnvName"];
C_OP_RtEnvCull.m_nRTEnvCP = jsonData["C_OP_RtEnvCull"]["m_nRTEnvCP"];
C_OP_RtEnvCull.m_nComponent = jsonData["C_OP_RtEnvCull"]["m_nComponent"];

// Atribuições para C_OP_PinParticleToCP
// C_OP_PinParticleToCP Offsets
C_OP_PinParticleToCP.m_nControlPointNumber = jsonData["C_OP_PinParticleToCP"]["m_nControlPointNumber"];
C_OP_PinParticleToCP.m_vecOffset = jsonData["C_OP_PinParticleToCP"]["m_vecOffset"];
C_OP_PinParticleToCP.m_bOffsetLocal = jsonData["C_OP_PinParticleToCP"]["m_bOffsetLocal"];
C_OP_PinParticleToCP.m_nParticleSelection = jsonData["C_OP_PinParticleToCP"]["m_nParticleSelection"];
C_OP_PinParticleToCP.m_nParticleNumber = jsonData["C_OP_PinParticleToCP"]["m_nParticleNumber"];
C_OP_PinParticleToCP.m_nPinBreakType = jsonData["C_OP_PinParticleToCP"]["m_nPinBreakType"];
C_OP_PinParticleToCP.m_flBreakDistance = jsonData["C_OP_PinParticleToCP"]["m_flBreakDistance"];
C_OP_PinParticleToCP.m_flBreakSpeed = jsonData["C_OP_PinParticleToCP"]["m_flBreakSpeed"];
C_OP_PinParticleToCP.m_flAge = jsonData["C_OP_PinParticleToCP"]["m_flAge"];
C_OP_PinParticleToCP.m_nBreakControlPointNumber = jsonData["C_OP_PinParticleToCP"]["m_nBreakControlPointNumber"];
C_OP_PinParticleToCP.m_nBreakControlPointNumber2 = jsonData["C_OP_PinParticleToCP"]["m_nBreakControlPointNumber2"];
C_OP_PinParticleToCP.m_flBreakValue = jsonData["C_OP_PinParticleToCP"]["m_flBreakValue"];
C_OP_PinParticleToCP.m_flInterpolation = jsonData["C_OP_PinParticleToCP"]["m_flInterpolation"];

// Atribuições para C_OP_RemapCPtoVector
// C_OP_RemapCPtoVector Offsets
C_OP_RemapCPtoVector.m_nCPInput = jsonData["C_OP_RemapCPtoVector"]["m_nCPInput"];
C_OP_RemapCPtoVector.m_nFieldOutput = jsonData["C_OP_RemapCPtoVector"]["m_nFieldOutput"];
C_OP_RemapCPtoVector.m_nLocalSpaceCP = jsonData["C_OP_RemapCPtoVector"]["m_nLocalSpaceCP"];
C_OP_RemapCPtoVector.m_vInputMin = jsonData["C_OP_RemapCPtoVector"]["m_vInputMin"];
C_OP_RemapCPtoVector.m_vInputMax = jsonData["C_OP_RemapCPtoVector"]["m_vInputMax"];
C_OP_RemapCPtoVector.m_vOutputMin = jsonData["C_OP_RemapCPtoVector"]["m_vOutputMin"];
C_OP_RemapCPtoVector.m_vOutputMax = jsonData["C_OP_RemapCPtoVector"]["m_vOutputMax"];
C_OP_RemapCPtoVector.m_flStartTime = jsonData["C_OP_RemapCPtoVector"]["m_flStartTime"];
C_OP_RemapCPtoVector.m_flEndTime = jsonData["C_OP_RemapCPtoVector"]["m_flEndTime"];
C_OP_RemapCPtoVector.m_flInterpRate = jsonData["C_OP_RemapCPtoVector"]["m_flInterpRate"];
C_OP_RemapCPtoVector.m_nSetMethod = jsonData["C_OP_RemapCPtoVector"]["m_nSetMethod"];
C_OP_RemapCPtoVector.m_bOffset = jsonData["C_OP_RemapCPtoVector"]["m_bOffset"];
C_OP_RemapCPtoVector.m_bAccelerate = jsonData["C_OP_RemapCPtoVector"]["m_bAccelerate"];

// Atribuições para C_INIT_CreateParticleImpulse
// C_INIT_CreateParticleImpulse Offsets
C_INIT_CreateParticleImpulse.m_InputRadius = jsonData["C_INIT_CreateParticleImpulse"]["m_InputRadius"];
C_INIT_CreateParticleImpulse.m_InputMagnitude = jsonData["C_INIT_CreateParticleImpulse"]["m_InputMagnitude"];
C_INIT_CreateParticleImpulse.m_nFalloffFunction = jsonData["C_INIT_CreateParticleImpulse"]["m_nFalloffFunction"];
C_INIT_CreateParticleImpulse.m_InputFalloffExp = jsonData["C_INIT_CreateParticleImpulse"]["m_InputFalloffExp"];
C_INIT_CreateParticleImpulse.m_nImpulseType = jsonData["C_INIT_CreateParticleImpulse"]["m_nImpulseType"];

// Atribuições para C_OP_DensityForce
// C_OP_DensityForce Offsets
C_OP_DensityForce.m_flRadiusScale = jsonData["C_OP_DensityForce"]["m_flRadiusScale"];
C_OP_DensityForce.m_flForceScale = jsonData["C_OP_DensityForce"]["m_flForceScale"];
C_OP_DensityForce.m_flTargetDensity = jsonData["C_OP_DensityForce"]["m_flTargetDensity"];

// Atribuições para C_INIT_CreateInEpitrochoid
// C_INIT_CreateInEpitrochoid Offsets
C_INIT_CreateInEpitrochoid.m_nComponent1 = jsonData["C_INIT_CreateInEpitrochoid"]["m_nComponent1"];
C_INIT_CreateInEpitrochoid.m_nComponent2 = jsonData["C_INIT_CreateInEpitrochoid"]["m_nComponent2"];
C_INIT_CreateInEpitrochoid.m_TransformInput = jsonData["C_INIT_CreateInEpitrochoid"]["m_TransformInput"];
C_INIT_CreateInEpitrochoid.m_flParticleDensity = jsonData["C_INIT_CreateInEpitrochoid"]["m_flParticleDensity"];
C_INIT_CreateInEpitrochoid.m_flOffset = jsonData["C_INIT_CreateInEpitrochoid"]["m_flOffset"];
C_INIT_CreateInEpitrochoid.m_flRadius1 = jsonData["C_INIT_CreateInEpitrochoid"]["m_flRadius1"];
C_INIT_CreateInEpitrochoid.m_flRadius2 = jsonData["C_INIT_CreateInEpitrochoid"]["m_flRadius2"];
C_INIT_CreateInEpitrochoid.m_bUseCount = jsonData["C_INIT_CreateInEpitrochoid"]["m_bUseCount"];
C_INIT_CreateInEpitrochoid.m_bUseLocalCoords = jsonData["C_INIT_CreateInEpitrochoid"]["m_bUseLocalCoords"];
C_INIT_CreateInEpitrochoid.m_bOffsetExistingPos = jsonData["C_INIT_CreateInEpitrochoid"]["m_bOffsetExistingPos"];

// Atribuições para C_OP_ConstrainDistanceToUserSpecifiedPath
// C_OP_ConstrainDistanceToUserSpecifiedPath Offsets
C_OP_ConstrainDistanceToUserSpecifiedPath.m_fMinDistance = jsonData["C_OP_ConstrainDistanceToUserSpecifiedPath"]["m_fMinDistance"];
C_OP_ConstrainDistanceToUserSpecifiedPath.m_flMaxDistance = jsonData["C_OP_ConstrainDistanceToUserSpecifiedPath"]["m_flMaxDistance"];
C_OP_ConstrainDistanceToUserSpecifiedPath.m_flTimeScale = jsonData["C_OP_ConstrainDistanceToUserSpecifiedPath"]["m_flTimeScale"];
C_OP_ConstrainDistanceToUserSpecifiedPath.m_bLoopedPath = jsonData["C_OP_ConstrainDistanceToUserSpecifiedPath"]["m_bLoopedPath"];
C_OP_ConstrainDistanceToUserSpecifiedPath.m_pointList = jsonData["C_OP_ConstrainDistanceToUserSpecifiedPath"]["m_pointList"];

// Atribuições para C_OP_SetControlPointPositions
// C_OP_SetControlPointPositions Offsets
C_OP_SetControlPointPositions.m_bUseWorldLocation = jsonData["C_OP_SetControlPointPositions"]["m_bUseWorldLocation"];
C_OP_SetControlPointPositions.m_bOrient = jsonData["C_OP_SetControlPointPositions"]["m_bOrient"];
C_OP_SetControlPointPositions.m_bSetOnce = jsonData["C_OP_SetControlPointPositions"]["m_bSetOnce"];
C_OP_SetControlPointPositions.m_nCP1 = jsonData["C_OP_SetControlPointPositions"]["m_nCP1"];
C_OP_SetControlPointPositions.m_nCP2 = jsonData["C_OP_SetControlPointPositions"]["m_nCP2"];
C_OP_SetControlPointPositions.m_nCP3 = jsonData["C_OP_SetControlPointPositions"]["m_nCP3"];
C_OP_SetControlPointPositions.m_nCP4 = jsonData["C_OP_SetControlPointPositions"]["m_nCP4"];
C_OP_SetControlPointPositions.m_vecCP1Pos = jsonData["C_OP_SetControlPointPositions"]["m_vecCP1Pos"];
C_OP_SetControlPointPositions.m_vecCP2Pos = jsonData["C_OP_SetControlPointPositions"]["m_vecCP2Pos"];
C_OP_SetControlPointPositions.m_vecCP3Pos = jsonData["C_OP_SetControlPointPositions"]["m_vecCP3Pos"];
C_OP_SetControlPointPositions.m_vecCP4Pos = jsonData["C_OP_SetControlPointPositions"]["m_vecCP4Pos"];
C_OP_SetControlPointPositions.m_nHeadLocation = jsonData["C_OP_SetControlPointPositions"]["m_nHeadLocation"];

// Atribuições para C_OP_SetFloatAttributeToVectorExpression
// C_OP_SetFloatAttributeToVectorExpression Offsets
C_OP_SetFloatAttributeToVectorExpression.m_nExpression = jsonData["C_OP_SetFloatAttributeToVectorExpression"]["m_nExpression"];
C_OP_SetFloatAttributeToVectorExpression.m_vInput1 = jsonData["C_OP_SetFloatAttributeToVectorExpression"]["m_vInput1"];
C_OP_SetFloatAttributeToVectorExpression.m_vInput2 = jsonData["C_OP_SetFloatAttributeToVectorExpression"]["m_vInput2"];
C_OP_SetFloatAttributeToVectorExpression.m_flOutputRemap = jsonData["C_OP_SetFloatAttributeToVectorExpression"]["m_flOutputRemap"];
C_OP_SetFloatAttributeToVectorExpression.m_nOutputField = jsonData["C_OP_SetFloatAttributeToVectorExpression"]["m_nOutputField"];
C_OP_SetFloatAttributeToVectorExpression.m_nSetMethod = jsonData["C_OP_SetFloatAttributeToVectorExpression"]["m_nSetMethod"];

// Atribuições para C_OP_MovementRotateParticleAroundAxis
// C_OP_MovementRotateParticleAroundAxis Offsets
C_OP_MovementRotateParticleAroundAxis.m_vecRotAxis = jsonData["C_OP_MovementRotateParticleAroundAxis"]["m_vecRotAxis"];
C_OP_MovementRotateParticleAroundAxis.m_flRotRate = jsonData["C_OP_MovementRotateParticleAroundAxis"]["m_flRotRate"];
C_OP_MovementRotateParticleAroundAxis.m_TransformInput = jsonData["C_OP_MovementRotateParticleAroundAxis"]["m_TransformInput"];
C_OP_MovementRotateParticleAroundAxis.m_bLocalSpace = jsonData["C_OP_MovementRotateParticleAroundAxis"]["m_bLocalSpace"];

// Atribuições para C_OP_IntraParticleForce
// C_OP_IntraParticleForce Offsets
C_OP_IntraParticleForce.m_flAttractionMinDistance = jsonData["C_OP_IntraParticleForce"]["m_flAttractionMinDistance"];
C_OP_IntraParticleForce.m_flAttractionMaxDistance = jsonData["C_OP_IntraParticleForce"]["m_flAttractionMaxDistance"];
C_OP_IntraParticleForce.m_flAttractionMaxStrength = jsonData["C_OP_IntraParticleForce"]["m_flAttractionMaxStrength"];
C_OP_IntraParticleForce.m_flRepulsionMinDistance = jsonData["C_OP_IntraParticleForce"]["m_flRepulsionMinDistance"];
C_OP_IntraParticleForce.m_flRepulsionMaxDistance = jsonData["C_OP_IntraParticleForce"]["m_flRepulsionMaxDistance"];
C_OP_IntraParticleForce.m_flRepulsionMaxStrength = jsonData["C_OP_IntraParticleForce"]["m_flRepulsionMaxStrength"];
C_OP_IntraParticleForce.m_bUseAABB = jsonData["C_OP_IntraParticleForce"]["m_bUseAABB"];
C_OP_IntraParticleForce.m_bThreadIt = jsonData["C_OP_IntraParticleForce"]["m_bThreadIt"];

// Atribuições para C_INIT_InitFloat
// C_INIT_InitFloat Offsets
C_INIT_InitFloat.m_InputValue = jsonData["C_INIT_InitFloat"]["m_InputValue"];
C_INIT_InitFloat.m_nOutputField = jsonData["C_INIT_InitFloat"]["m_nOutputField"];
C_INIT_InitFloat.m_nSetMethod = jsonData["C_INIT_InitFloat"]["m_nSetMethod"];
C_INIT_InitFloat.m_InputStrength = jsonData["C_INIT_InitFloat"]["m_InputStrength"];

// Atribuições para C_INIT_CreateOnModel
// C_INIT_CreateOnModel Offsets
C_INIT_CreateOnModel.m_modelInput = jsonData["C_INIT_CreateOnModel"]["m_modelInput"];
C_INIT_CreateOnModel.m_transformInput = jsonData["C_INIT_CreateOnModel"]["m_transformInput"];
C_INIT_CreateOnModel.m_nForceInModel = jsonData["C_INIT_CreateOnModel"]["m_nForceInModel"];
C_INIT_CreateOnModel.m_bScaleToVolume = jsonData["C_INIT_CreateOnModel"]["m_bScaleToVolume"];
C_INIT_CreateOnModel.m_bEvenDistribution = jsonData["C_INIT_CreateOnModel"]["m_bEvenDistribution"];
C_INIT_CreateOnModel.m_nDesiredHitbox = jsonData["C_INIT_CreateOnModel"]["m_nDesiredHitbox"];
C_INIT_CreateOnModel.m_nHitboxValueFromControlPointIndex = jsonData["C_INIT_CreateOnModel"]["m_nHitboxValueFromControlPointIndex"];
C_INIT_CreateOnModel.m_vecHitBoxScale = jsonData["C_INIT_CreateOnModel"]["m_vecHitBoxScale"];
C_INIT_CreateOnModel.m_flBoneVelocity = jsonData["C_INIT_CreateOnModel"]["m_flBoneVelocity"];
C_INIT_CreateOnModel.m_flMaxBoneVelocity = jsonData["C_INIT_CreateOnModel"]["m_flMaxBoneVelocity"];
C_INIT_CreateOnModel.m_vecDirectionBias = jsonData["C_INIT_CreateOnModel"]["m_vecDirectionBias"];
C_INIT_CreateOnModel.m_HitboxSetName = jsonData["C_INIT_CreateOnModel"]["m_HitboxSetName"];
C_INIT_CreateOnModel.m_bLocalCoords = jsonData["C_INIT_CreateOnModel"]["m_bLocalCoords"];
C_INIT_CreateOnModel.m_bUseBones = jsonData["C_INIT_CreateOnModel"]["m_bUseBones"];
C_INIT_CreateOnModel.m_bUseMesh = jsonData["C_INIT_CreateOnModel"]["m_bUseMesh"];
C_INIT_CreateOnModel.m_flShellSize = jsonData["C_INIT_CreateOnModel"]["m_flShellSize"];

// Atribuições para C_OP_InheritFromPeerSystem
// C_OP_InheritFromPeerSystem Offsets
C_OP_InheritFromPeerSystem.m_nFieldOutput = jsonData["C_OP_InheritFromPeerSystem"]["m_nFieldOutput"];
C_OP_InheritFromPeerSystem.m_nFieldInput = jsonData["C_OP_InheritFromPeerSystem"]["m_nFieldInput"];
C_OP_InheritFromPeerSystem.m_nIncrement = jsonData["C_OP_InheritFromPeerSystem"]["m_nIncrement"];
C_OP_InheritFromPeerSystem.m_nGroupID = jsonData["C_OP_InheritFromPeerSystem"]["m_nGroupID"];

// Atribuições para C_OP_PerParticleForce
// C_OP_PerParticleForce Offsets
C_OP_PerParticleForce.m_flForceScale = jsonData["C_OP_PerParticleForce"]["m_flForceScale"];
C_OP_PerParticleForce.m_vForce = jsonData["C_OP_PerParticleForce"]["m_vForce"];
C_OP_PerParticleForce.m_nCP = jsonData["C_OP_PerParticleForce"]["m_nCP"];

// Atribuições para C_OP_RenderProjected
// C_OP_RenderProjected Offsets
C_OP_RenderProjected.m_bProjectCharacter = jsonData["C_OP_RenderProjected"]["m_bProjectCharacter"];
C_OP_RenderProjected.m_bProjectWorld = jsonData["C_OP_RenderProjected"]["m_bProjectWorld"];
C_OP_RenderProjected.m_bProjectWater = jsonData["C_OP_RenderProjected"]["m_bProjectWater"];
C_OP_RenderProjected.m_bFlipHorizontal = jsonData["C_OP_RenderProjected"]["m_bFlipHorizontal"];
C_OP_RenderProjected.m_bEnableProjectedDepthControls = jsonData["C_OP_RenderProjected"]["m_bEnableProjectedDepthControls"];
C_OP_RenderProjected.m_flMinProjectionDepth = jsonData["C_OP_RenderProjected"]["m_flMinProjectionDepth"];
C_OP_RenderProjected.m_flMaxProjectionDepth = jsonData["C_OP_RenderProjected"]["m_flMaxProjectionDepth"];
C_OP_RenderProjected.m_vecProjectedMaterials = jsonData["C_OP_RenderProjected"]["m_vecProjectedMaterials"];
C_OP_RenderProjected.m_flMaterialSelection = jsonData["C_OP_RenderProjected"]["m_flMaterialSelection"];
C_OP_RenderProjected.m_flAnimationTimeScale = jsonData["C_OP_RenderProjected"]["m_flAnimationTimeScale"];
C_OP_RenderProjected.m_bOrientToNormal = jsonData["C_OP_RenderProjected"]["m_bOrientToNormal"];
C_OP_RenderProjected.m_MaterialVars = jsonData["C_OP_RenderProjected"]["m_MaterialVars"];
C_OP_RenderProjected.m_flRadiusScale = jsonData["C_OP_RenderProjected"]["m_flRadiusScale"];
C_OP_RenderProjected.m_flAlphaScale = jsonData["C_OP_RenderProjected"]["m_flAlphaScale"];
C_OP_RenderProjected.m_flRollScale = jsonData["C_OP_RenderProjected"]["m_flRollScale"];
C_OP_RenderProjected.m_nAlpha2Field = jsonData["C_OP_RenderProjected"]["m_nAlpha2Field"];
C_OP_RenderProjected.m_vecColorScale = jsonData["C_OP_RenderProjected"]["m_vecColorScale"];
C_OP_RenderProjected.m_nColorBlendType = jsonData["C_OP_RenderProjected"]["m_nColorBlendType"];

// Atribuições para C_OP_MaxVelocity
// C_OP_MaxVelocity Offsets
C_OP_MaxVelocity.m_flMaxVelocity = jsonData["C_OP_MaxVelocity"]["m_flMaxVelocity"];
C_OP_MaxVelocity.m_flMinVelocity = jsonData["C_OP_MaxVelocity"]["m_flMinVelocity"];
C_OP_MaxVelocity.m_nOverrideCP = jsonData["C_OP_MaxVelocity"]["m_nOverrideCP"];
C_OP_MaxVelocity.m_nOverrideCPField = jsonData["C_OP_MaxVelocity"]["m_nOverrideCPField"];

// Atribuições para C_INIT_VelocityFromNormal
// C_INIT_VelocityFromNormal Offsets
C_INIT_VelocityFromNormal.m_fSpeedMin = jsonData["C_INIT_VelocityFromNormal"]["m_fSpeedMin"];
C_INIT_VelocityFromNormal.m_fSpeedMax = jsonData["C_INIT_VelocityFromNormal"]["m_fSpeedMax"];
C_INIT_VelocityFromNormal.m_bIgnoreDt = jsonData["C_INIT_VelocityFromNormal"]["m_bIgnoreDt"];

// Atribuições para C_OP_MaintainEmitter
// C_OP_MaintainEmitter Offsets
C_OP_MaintainEmitter.m_nParticlesToMaintain = jsonData["C_OP_MaintainEmitter"]["m_nParticlesToMaintain"];
C_OP_MaintainEmitter.m_flStartTime = jsonData["C_OP_MaintainEmitter"]["m_flStartTime"];
C_OP_MaintainEmitter.m_flEmissionDuration = jsonData["C_OP_MaintainEmitter"]["m_flEmissionDuration"];
C_OP_MaintainEmitter.m_flEmissionRate = jsonData["C_OP_MaintainEmitter"]["m_flEmissionRate"];
C_OP_MaintainEmitter.m_nSnapshotControlPoint = jsonData["C_OP_MaintainEmitter"]["m_nSnapshotControlPoint"];
C_OP_MaintainEmitter.m_bEmitInstantaneously = jsonData["C_OP_MaintainEmitter"]["m_bEmitInstantaneously"];
C_OP_MaintainEmitter.m_bFinalEmitOnStop = jsonData["C_OP_MaintainEmitter"]["m_bFinalEmitOnStop"];
C_OP_MaintainEmitter.m_flScale = jsonData["C_OP_MaintainEmitter"]["m_flScale"];

// Atribuições para C_INIT_PositionOffsetToCP
// C_INIT_PositionOffsetToCP Offsets
C_INIT_PositionOffsetToCP.m_nControlPointNumberStart = jsonData["C_INIT_PositionOffsetToCP"]["m_nControlPointNumberStart"];
C_INIT_PositionOffsetToCP.m_nControlPointNumberEnd = jsonData["C_INIT_PositionOffsetToCP"]["m_nControlPointNumberEnd"];
C_INIT_PositionOffsetToCP.m_bLocalCoords = jsonData["C_INIT_PositionOffsetToCP"]["m_bLocalCoords"];

// Atribuições para C_INIT_RemapInitialTransformDirectionToRotation
// C_INIT_RemapInitialTransformDirectionToRotation Offsets
C_INIT_RemapInitialTransformDirectionToRotation.m_TransformInput = jsonData["C_INIT_RemapInitialTransformDirectionToRotation"]["m_TransformInput"];
C_INIT_RemapInitialTransformDirectionToRotation.m_nFieldOutput = jsonData["C_INIT_RemapInitialTransformDirectionToRotation"]["m_nFieldOutput"];
C_INIT_RemapInitialTransformDirectionToRotation.m_flOffsetRot = jsonData["C_INIT_RemapInitialTransformDirectionToRotation"]["m_flOffsetRot"];
C_INIT_RemapInitialTransformDirectionToRotation.m_nComponent = jsonData["C_INIT_RemapInitialTransformDirectionToRotation"]["m_nComponent"];

// Atribuições para C_OP_FadeAndKill
// C_OP_FadeAndKill Offsets
C_OP_FadeAndKill.m_flStartFadeInTime = jsonData["C_OP_FadeAndKill"]["m_flStartFadeInTime"];
C_OP_FadeAndKill.m_flEndFadeInTime = jsonData["C_OP_FadeAndKill"]["m_flEndFadeInTime"];
C_OP_FadeAndKill.m_flStartFadeOutTime = jsonData["C_OP_FadeAndKill"]["m_flStartFadeOutTime"];
C_OP_FadeAndKill.m_flEndFadeOutTime = jsonData["C_OP_FadeAndKill"]["m_flEndFadeOutTime"];
C_OP_FadeAndKill.m_flStartAlpha = jsonData["C_OP_FadeAndKill"]["m_flStartAlpha"];
C_OP_FadeAndKill.m_flEndAlpha = jsonData["C_OP_FadeAndKill"]["m_flEndAlpha"];
C_OP_FadeAndKill.m_bForcePreserveParticleOrder = jsonData["C_OP_FadeAndKill"]["m_bForcePreserveParticleOrder"];

// Atribuições para PARTICLE_WORLD_HANDLE__
// PARTICLE_WORLD_HANDLE__ Offsets
PARTICLE_WORLD_HANDLE__.unused = jsonData["PARTICLE_WORLD_HANDLE__"]["unused"];

// Atribuições para C_OP_ColorInterpolate
// C_OP_ColorInterpolate Offsets
C_OP_ColorInterpolate.m_ColorFade = jsonData["C_OP_ColorInterpolate"]["m_ColorFade"];
C_OP_ColorInterpolate.m_flFadeStartTime = jsonData["C_OP_ColorInterpolate"]["m_flFadeStartTime"];
C_OP_ColorInterpolate.m_flFadeEndTime = jsonData["C_OP_ColorInterpolate"]["m_flFadeEndTime"];
C_OP_ColorInterpolate.m_nFieldOutput = jsonData["C_OP_ColorInterpolate"]["m_nFieldOutput"];
C_OP_ColorInterpolate.m_bEaseInOut = jsonData["C_OP_ColorInterpolate"]["m_bEaseInOut"];

// Atribuições para C_OP_RampScalarSpline
// C_OP_RampScalarSpline Offsets
C_OP_RampScalarSpline.m_RateMin = jsonData["C_OP_RampScalarSpline"]["m_RateMin"];
C_OP_RampScalarSpline.m_RateMax = jsonData["C_OP_RampScalarSpline"]["m_RateMax"];
C_OP_RampScalarSpline.m_flStartTime_min = jsonData["C_OP_RampScalarSpline"]["m_flStartTime_min"];
C_OP_RampScalarSpline.m_flStartTime_max = jsonData["C_OP_RampScalarSpline"]["m_flStartTime_max"];
C_OP_RampScalarSpline.m_flEndTime_min = jsonData["C_OP_RampScalarSpline"]["m_flEndTime_min"];
C_OP_RampScalarSpline.m_flEndTime_max = jsonData["C_OP_RampScalarSpline"]["m_flEndTime_max"];
C_OP_RampScalarSpline.m_flBias = jsonData["C_OP_RampScalarSpline"]["m_flBias"];
C_OP_RampScalarSpline.m_nField = jsonData["C_OP_RampScalarSpline"]["m_nField"];
C_OP_RampScalarSpline.m_bProportionalOp = jsonData["C_OP_RampScalarSpline"]["m_bProportionalOp"];
C_OP_RampScalarSpline.m_bEaseOut = jsonData["C_OP_RampScalarSpline"]["m_bEaseOut"];

// Atribuições para C_OP_SetControlPointFromObjectScale
// C_OP_SetControlPointFromObjectScale Offsets
C_OP_SetControlPointFromObjectScale.m_nCPInput = jsonData["C_OP_SetControlPointFromObjectScale"]["m_nCPInput"];
C_OP_SetControlPointFromObjectScale.m_nCPOutput = jsonData["C_OP_SetControlPointFromObjectScale"]["m_nCPOutput"];

// Atribuições para C_OP_MaintainSequentialPath
// C_OP_MaintainSequentialPath Offsets
C_OP_MaintainSequentialPath.m_fMaxDistance = jsonData["C_OP_MaintainSequentialPath"]["m_fMaxDistance"];
C_OP_MaintainSequentialPath.m_flNumToAssign = jsonData["C_OP_MaintainSequentialPath"]["m_flNumToAssign"];
C_OP_MaintainSequentialPath.m_flCohesionStrength = jsonData["C_OP_MaintainSequentialPath"]["m_flCohesionStrength"];
C_OP_MaintainSequentialPath.m_flTolerance = jsonData["C_OP_MaintainSequentialPath"]["m_flTolerance"];
C_OP_MaintainSequentialPath.m_bLoop = jsonData["C_OP_MaintainSequentialPath"]["m_bLoop"];
C_OP_MaintainSequentialPath.m_bUseParticleCount = jsonData["C_OP_MaintainSequentialPath"]["m_bUseParticleCount"];
C_OP_MaintainSequentialPath.m_PathParams = jsonData["C_OP_MaintainSequentialPath"]["m_PathParams"];

// Atribuições para C_OP_StopAfterCPDuration
// C_OP_StopAfterCPDuration Offsets
C_OP_StopAfterCPDuration.m_flDuration = jsonData["C_OP_StopAfterCPDuration"]["m_flDuration"];
C_OP_StopAfterCPDuration.m_bDestroyImmediately = jsonData["C_OP_StopAfterCPDuration"]["m_bDestroyImmediately"];
C_OP_StopAfterCPDuration.m_bPlayEndCap = jsonData["C_OP_StopAfterCPDuration"]["m_bPlayEndCap"];

// Atribuições para CGeneralSpin
// CGeneralSpin Offsets
CGeneralSpin.m_nSpinRateDegrees = jsonData["CGeneralSpin"]["m_nSpinRateDegrees"];
CGeneralSpin.m_nSpinRateMinDegrees = jsonData["CGeneralSpin"]["m_nSpinRateMinDegrees"];
CGeneralSpin.m_fSpinRateStopTime = jsonData["CGeneralSpin"]["m_fSpinRateStopTime"];

// Atribuições para C_OP_LockToSavedSequentialPath
// C_OP_LockToSavedSequentialPath Offsets
C_OP_LockToSavedSequentialPath.m_flFadeStart = jsonData["C_OP_LockToSavedSequentialPath"]["m_flFadeStart"];
C_OP_LockToSavedSequentialPath.m_flFadeEnd = jsonData["C_OP_LockToSavedSequentialPath"]["m_flFadeEnd"];
C_OP_LockToSavedSequentialPath.m_bCPPairs = jsonData["C_OP_LockToSavedSequentialPath"]["m_bCPPairs"];
C_OP_LockToSavedSequentialPath.m_PathParams = jsonData["C_OP_LockToSavedSequentialPath"]["m_PathParams"];

// Atribuições para C_INIT_RemapNamedModelElementToScalar
// C_INIT_RemapNamedModelElementToScalar Offsets
C_INIT_RemapNamedModelElementToScalar.m_hModel = jsonData["C_INIT_RemapNamedModelElementToScalar"]["m_hModel"];
C_INIT_RemapNamedModelElementToScalar.m_names = jsonData["C_INIT_RemapNamedModelElementToScalar"]["m_names"];
C_INIT_RemapNamedModelElementToScalar.m_values = jsonData["C_INIT_RemapNamedModelElementToScalar"]["m_values"];
C_INIT_RemapNamedModelElementToScalar.m_nFieldInput = jsonData["C_INIT_RemapNamedModelElementToScalar"]["m_nFieldInput"];
C_INIT_RemapNamedModelElementToScalar.m_nFieldOutput = jsonData["C_INIT_RemapNamedModelElementToScalar"]["m_nFieldOutput"];
C_INIT_RemapNamedModelElementToScalar.m_nSetMethod = jsonData["C_INIT_RemapNamedModelElementToScalar"]["m_nSetMethod"];
C_INIT_RemapNamedModelElementToScalar.m_bModelFromRenderer = jsonData["C_INIT_RemapNamedModelElementToScalar"]["m_bModelFromRenderer"];

// Atribuições para C_OP_ClampVector
// C_OP_ClampVector Offsets
C_OP_ClampVector.m_nFieldOutput = jsonData["C_OP_ClampVector"]["m_nFieldOutput"];
C_OP_ClampVector.m_vecOutputMin = jsonData["C_OP_ClampVector"]["m_vecOutputMin"];
C_OP_ClampVector.m_vecOutputMax = jsonData["C_OP_ClampVector"]["m_vecOutputMax"];

// Atribuições para C_OP_RenderStatusEffectCitadel
// C_OP_RenderStatusEffectCitadel Offsets
C_OP_RenderStatusEffectCitadel.m_pTextureColorWarp = jsonData["C_OP_RenderStatusEffectCitadel"]["m_pTextureColorWarp"];
C_OP_RenderStatusEffectCitadel.m_pTextureNormal = jsonData["C_OP_RenderStatusEffectCitadel"]["m_pTextureNormal"];
C_OP_RenderStatusEffectCitadel.m_pTextureMetalness = jsonData["C_OP_RenderStatusEffectCitadel"]["m_pTextureMetalness"];
C_OP_RenderStatusEffectCitadel.m_pTextureRoughness = jsonData["C_OP_RenderStatusEffectCitadel"]["m_pTextureRoughness"];
C_OP_RenderStatusEffectCitadel.m_pTextureSelfIllum = jsonData["C_OP_RenderStatusEffectCitadel"]["m_pTextureSelfIllum"];
C_OP_RenderStatusEffectCitadel.m_pTextureDetail = jsonData["C_OP_RenderStatusEffectCitadel"]["m_pTextureDetail"];

// Atribuições para C_INIT_RemapCPtoScalar
// C_INIT_RemapCPtoScalar Offsets
C_INIT_RemapCPtoScalar.m_nCPInput = jsonData["C_INIT_RemapCPtoScalar"]["m_nCPInput"];
C_INIT_RemapCPtoScalar.m_nFieldOutput = jsonData["C_INIT_RemapCPtoScalar"]["m_nFieldOutput"];
C_INIT_RemapCPtoScalar.m_nField = jsonData["C_INIT_RemapCPtoScalar"]["m_nField"];
C_INIT_RemapCPtoScalar.m_flInputMin = jsonData["C_INIT_RemapCPtoScalar"]["m_flInputMin"];
C_INIT_RemapCPtoScalar.m_flInputMax = jsonData["C_INIT_RemapCPtoScalar"]["m_flInputMax"];
C_INIT_RemapCPtoScalar.m_flOutputMin = jsonData["C_INIT_RemapCPtoScalar"]["m_flOutputMin"];
C_INIT_RemapCPtoScalar.m_flOutputMax = jsonData["C_INIT_RemapCPtoScalar"]["m_flOutputMax"];
C_INIT_RemapCPtoScalar.m_flStartTime = jsonData["C_INIT_RemapCPtoScalar"]["m_flStartTime"];
C_INIT_RemapCPtoScalar.m_flEndTime = jsonData["C_INIT_RemapCPtoScalar"]["m_flEndTime"];
C_INIT_RemapCPtoScalar.m_nSetMethod = jsonData["C_INIT_RemapCPtoScalar"]["m_nSetMethod"];
C_INIT_RemapCPtoScalar.m_flRemapBias = jsonData["C_INIT_RemapCPtoScalar"]["m_flRemapBias"];

// Atribuições para C_OP_WindForce
// C_OP_WindForce Offsets
C_OP_WindForce.m_vForce = jsonData["C_OP_WindForce"]["m_vForce"];

// Atribuições para C_OP_SetVariable
// C_OP_SetVariable Offsets
C_OP_SetVariable.m_variableReference = jsonData["C_OP_SetVariable"]["m_variableReference"];
C_OP_SetVariable.m_transformInput = jsonData["C_OP_SetVariable"]["m_transformInput"];
C_OP_SetVariable.m_positionOffset = jsonData["C_OP_SetVariable"]["m_positionOffset"];
C_OP_SetVariable.m_rotationOffset = jsonData["C_OP_SetVariable"]["m_rotationOffset"];
C_OP_SetVariable.m_vecInput = jsonData["C_OP_SetVariable"]["m_vecInput"];
C_OP_SetVariable.m_floatInput = jsonData["C_OP_SetVariable"]["m_floatInput"];

// Atribuições para C_OP_RenderStandardLight
// C_OP_RenderStandardLight Offsets
C_OP_RenderStandardLight.m_nLightType = jsonData["C_OP_RenderStandardLight"]["m_nLightType"];
C_OP_RenderStandardLight.m_vecColorScale = jsonData["C_OP_RenderStandardLight"]["m_vecColorScale"];
C_OP_RenderStandardLight.m_nColorBlendType = jsonData["C_OP_RenderStandardLight"]["m_nColorBlendType"];
C_OP_RenderStandardLight.m_flIntensity = jsonData["C_OP_RenderStandardLight"]["m_flIntensity"];
C_OP_RenderStandardLight.m_bCastShadows = jsonData["C_OP_RenderStandardLight"]["m_bCastShadows"];
C_OP_RenderStandardLight.m_flTheta = jsonData["C_OP_RenderStandardLight"]["m_flTheta"];
C_OP_RenderStandardLight.m_flPhi = jsonData["C_OP_RenderStandardLight"]["m_flPhi"];
C_OP_RenderStandardLight.m_flRadiusMultiplier = jsonData["C_OP_RenderStandardLight"]["m_flRadiusMultiplier"];
C_OP_RenderStandardLight.m_nAttenuationStyle = jsonData["C_OP_RenderStandardLight"]["m_nAttenuationStyle"];
C_OP_RenderStandardLight.m_flFalloffLinearity = jsonData["C_OP_RenderStandardLight"]["m_flFalloffLinearity"];
C_OP_RenderStandardLight.m_flFiftyPercentFalloff = jsonData["C_OP_RenderStandardLight"]["m_flFiftyPercentFalloff"];
C_OP_RenderStandardLight.m_flZeroPercentFalloff = jsonData["C_OP_RenderStandardLight"]["m_flZeroPercentFalloff"];
C_OP_RenderStandardLight.m_bRenderDiffuse = jsonData["C_OP_RenderStandardLight"]["m_bRenderDiffuse"];
C_OP_RenderStandardLight.m_bRenderSpecular = jsonData["C_OP_RenderStandardLight"]["m_bRenderSpecular"];
C_OP_RenderStandardLight.m_lightCookie = jsonData["C_OP_RenderStandardLight"]["m_lightCookie"];
C_OP_RenderStandardLight.m_nPriority = jsonData["C_OP_RenderStandardLight"]["m_nPriority"];
C_OP_RenderStandardLight.m_nFogLightingMode = jsonData["C_OP_RenderStandardLight"]["m_nFogLightingMode"];
C_OP_RenderStandardLight.m_flFogContribution = jsonData["C_OP_RenderStandardLight"]["m_flFogContribution"];
C_OP_RenderStandardLight.m_nCapsuleLightBehavior = jsonData["C_OP_RenderStandardLight"]["m_nCapsuleLightBehavior"];
C_OP_RenderStandardLight.m_flCapsuleLength = jsonData["C_OP_RenderStandardLight"]["m_flCapsuleLength"];
C_OP_RenderStandardLight.m_bReverseOrder = jsonData["C_OP_RenderStandardLight"]["m_bReverseOrder"];
C_OP_RenderStandardLight.m_bClosedLoop = jsonData["C_OP_RenderStandardLight"]["m_bClosedLoop"];
C_OP_RenderStandardLight.m_nPrevPntSource = jsonData["C_OP_RenderStandardLight"]["m_nPrevPntSource"];
C_OP_RenderStandardLight.m_flMaxLength = jsonData["C_OP_RenderStandardLight"]["m_flMaxLength"];
C_OP_RenderStandardLight.m_flMinLength = jsonData["C_OP_RenderStandardLight"]["m_flMinLength"];
C_OP_RenderStandardLight.m_bIgnoreDT = jsonData["C_OP_RenderStandardLight"]["m_bIgnoreDT"];
C_OP_RenderStandardLight.m_flConstrainRadiusToLengthRatio = jsonData["C_OP_RenderStandardLight"]["m_flConstrainRadiusToLengthRatio"];
C_OP_RenderStandardLight.m_flLengthScale = jsonData["C_OP_RenderStandardLight"]["m_flLengthScale"];
C_OP_RenderStandardLight.m_flLengthFadeInTime = jsonData["C_OP_RenderStandardLight"]["m_flLengthFadeInTime"];

// Atribuições para C_OP_DistanceToTransform
// C_OP_DistanceToTransform Offsets
C_OP_DistanceToTransform.m_nFieldOutput = jsonData["C_OP_DistanceToTransform"]["m_nFieldOutput"];
C_OP_DistanceToTransform.m_flInputMin = jsonData["C_OP_DistanceToTransform"]["m_flInputMin"];
C_OP_DistanceToTransform.m_flInputMax = jsonData["C_OP_DistanceToTransform"]["m_flInputMax"];
C_OP_DistanceToTransform.m_flOutputMin = jsonData["C_OP_DistanceToTransform"]["m_flOutputMin"];
C_OP_DistanceToTransform.m_flOutputMax = jsonData["C_OP_DistanceToTransform"]["m_flOutputMax"];
C_OP_DistanceToTransform.m_TransformStart = jsonData["C_OP_DistanceToTransform"]["m_TransformStart"];
C_OP_DistanceToTransform.m_bLOS = jsonData["C_OP_DistanceToTransform"]["m_bLOS"];
C_OP_DistanceToTransform.m_CollisionGroupName = jsonData["C_OP_DistanceToTransform"]["m_CollisionGroupName"];
C_OP_DistanceToTransform.m_nTraceSet = jsonData["C_OP_DistanceToTransform"]["m_nTraceSet"];
C_OP_DistanceToTransform.m_flMaxTraceLength = jsonData["C_OP_DistanceToTransform"]["m_flMaxTraceLength"];
C_OP_DistanceToTransform.m_flLOSScale = jsonData["C_OP_DistanceToTransform"]["m_flLOSScale"];
C_OP_DistanceToTransform.m_nSetMethod = jsonData["C_OP_DistanceToTransform"]["m_nSetMethod"];
C_OP_DistanceToTransform.m_bActiveRange = jsonData["C_OP_DistanceToTransform"]["m_bActiveRange"];
C_OP_DistanceToTransform.m_bAdditive = jsonData["C_OP_DistanceToTransform"]["m_bAdditive"];
C_OP_DistanceToTransform.m_vecComponentScale = jsonData["C_OP_DistanceToTransform"]["m_vecComponentScale"];

// Atribuições para C_OP_RemapControlPointOrientationToRotation
// C_OP_RemapControlPointOrientationToRotation Offsets
C_OP_RemapControlPointOrientationToRotation.m_nCP = jsonData["C_OP_RemapControlPointOrientationToRotation"]["m_nCP"];
C_OP_RemapControlPointOrientationToRotation.m_nFieldOutput = jsonData["C_OP_RemapControlPointOrientationToRotation"]["m_nFieldOutput"];
C_OP_RemapControlPointOrientationToRotation.m_flOffsetRot = jsonData["C_OP_RemapControlPointOrientationToRotation"]["m_flOffsetRot"];
C_OP_RemapControlPointOrientationToRotation.m_nComponent = jsonData["C_OP_RemapControlPointOrientationToRotation"]["m_nComponent"];

// Atribuições para C_OP_SetControlPointToCenter
// C_OP_SetControlPointToCenter Offsets
C_OP_SetControlPointToCenter.m_nCP1 = jsonData["C_OP_SetControlPointToCenter"]["m_nCP1"];
C_OP_SetControlPointToCenter.m_vecCP1Pos = jsonData["C_OP_SetControlPointToCenter"]["m_vecCP1Pos"];
C_OP_SetControlPointToCenter.m_bUseAvgParticlePos = jsonData["C_OP_SetControlPointToCenter"]["m_bUseAvgParticlePos"];
C_OP_SetControlPointToCenter.m_nSetParent = jsonData["C_OP_SetControlPointToCenter"]["m_nSetParent"];

// Atribuições para C_OP_RemapAverageScalarValuetoCP
// C_OP_RemapAverageScalarValuetoCP Offsets
C_OP_RemapAverageScalarValuetoCP.m_nOutControlPointNumber = jsonData["C_OP_RemapAverageScalarValuetoCP"]["m_nOutControlPointNumber"];
C_OP_RemapAverageScalarValuetoCP.m_nOutVectorField = jsonData["C_OP_RemapAverageScalarValuetoCP"]["m_nOutVectorField"];
C_OP_RemapAverageScalarValuetoCP.m_nField = jsonData["C_OP_RemapAverageScalarValuetoCP"]["m_nField"];
C_OP_RemapAverageScalarValuetoCP.m_flInputMin = jsonData["C_OP_RemapAverageScalarValuetoCP"]["m_flInputMin"];
C_OP_RemapAverageScalarValuetoCP.m_flInputMax = jsonData["C_OP_RemapAverageScalarValuetoCP"]["m_flInputMax"];
C_OP_RemapAverageScalarValuetoCP.m_flOutputMin = jsonData["C_OP_RemapAverageScalarValuetoCP"]["m_flOutputMin"];
C_OP_RemapAverageScalarValuetoCP.m_flOutputMax = jsonData["C_OP_RemapAverageScalarValuetoCP"]["m_flOutputMax"];

// Atribuições para C_OP_RemapDotProductToScalar
// C_OP_RemapDotProductToScalar Offsets
C_OP_RemapDotProductToScalar.m_nInputCP1 = jsonData["C_OP_RemapDotProductToScalar"]["m_nInputCP1"];
C_OP_RemapDotProductToScalar.m_nInputCP2 = jsonData["C_OP_RemapDotProductToScalar"]["m_nInputCP2"];
C_OP_RemapDotProductToScalar.m_nFieldOutput = jsonData["C_OP_RemapDotProductToScalar"]["m_nFieldOutput"];
C_OP_RemapDotProductToScalar.m_flInputMin = jsonData["C_OP_RemapDotProductToScalar"]["m_flInputMin"];
C_OP_RemapDotProductToScalar.m_flInputMax = jsonData["C_OP_RemapDotProductToScalar"]["m_flInputMax"];
C_OP_RemapDotProductToScalar.m_flOutputMin = jsonData["C_OP_RemapDotProductToScalar"]["m_flOutputMin"];
C_OP_RemapDotProductToScalar.m_flOutputMax = jsonData["C_OP_RemapDotProductToScalar"]["m_flOutputMax"];
C_OP_RemapDotProductToScalar.m_bUseParticleVelocity = jsonData["C_OP_RemapDotProductToScalar"]["m_bUseParticleVelocity"];
C_OP_RemapDotProductToScalar.m_nSetMethod = jsonData["C_OP_RemapDotProductToScalar"]["m_nSetMethod"];
C_OP_RemapDotProductToScalar.m_bActiveRange = jsonData["C_OP_RemapDotProductToScalar"]["m_bActiveRange"];
C_OP_RemapDotProductToScalar.m_bUseParticleNormal = jsonData["C_OP_RemapDotProductToScalar"]["m_bUseParticleNormal"];

// Atribuições para C_OP_RemapCPtoCP
// C_OP_RemapCPtoCP Offsets
C_OP_RemapCPtoCP.m_nInputControlPoint = jsonData["C_OP_RemapCPtoCP"]["m_nInputControlPoint"];
C_OP_RemapCPtoCP.m_nOutputControlPoint = jsonData["C_OP_RemapCPtoCP"]["m_nOutputControlPoint"];
C_OP_RemapCPtoCP.m_nInputField = jsonData["C_OP_RemapCPtoCP"]["m_nInputField"];
C_OP_RemapCPtoCP.m_nOutputField = jsonData["C_OP_RemapCPtoCP"]["m_nOutputField"];
C_OP_RemapCPtoCP.m_flInputMin = jsonData["C_OP_RemapCPtoCP"]["m_flInputMin"];
C_OP_RemapCPtoCP.m_flInputMax = jsonData["C_OP_RemapCPtoCP"]["m_flInputMax"];
C_OP_RemapCPtoCP.m_flOutputMin = jsonData["C_OP_RemapCPtoCP"]["m_flOutputMin"];
C_OP_RemapCPtoCP.m_flOutputMax = jsonData["C_OP_RemapCPtoCP"]["m_flOutputMax"];
C_OP_RemapCPtoCP.m_bDerivative = jsonData["C_OP_RemapCPtoCP"]["m_bDerivative"];
C_OP_RemapCPtoCP.m_flInterpRate = jsonData["C_OP_RemapCPtoCP"]["m_flInterpRate"];

// Atribuições para C_OP_SetControlPointRotation
// C_OP_SetControlPointRotation Offsets
C_OP_SetControlPointRotation.m_vecRotAxis = jsonData["C_OP_SetControlPointRotation"]["m_vecRotAxis"];
C_OP_SetControlPointRotation.m_flRotRate = jsonData["C_OP_SetControlPointRotation"]["m_flRotRate"];
C_OP_SetControlPointRotation.m_nCP = jsonData["C_OP_SetControlPointRotation"]["m_nCP"];
C_OP_SetControlPointRotation.m_nLocalCP = jsonData["C_OP_SetControlPointRotation"]["m_nLocalCP"];

// Atribuições para C_OP_CurlNoiseForce
// C_OP_CurlNoiseForce Offsets
C_OP_CurlNoiseForce.m_nNoiseType = jsonData["C_OP_CurlNoiseForce"]["m_nNoiseType"];
C_OP_CurlNoiseForce.m_vecNoiseFreq = jsonData["C_OP_CurlNoiseForce"]["m_vecNoiseFreq"];
C_OP_CurlNoiseForce.m_vecNoiseScale = jsonData["C_OP_CurlNoiseForce"]["m_vecNoiseScale"];
C_OP_CurlNoiseForce.m_vecOffset = jsonData["C_OP_CurlNoiseForce"]["m_vecOffset"];
C_OP_CurlNoiseForce.m_vecOffsetRate = jsonData["C_OP_CurlNoiseForce"]["m_vecOffsetRate"];
C_OP_CurlNoiseForce.m_flWorleySeed = jsonData["C_OP_CurlNoiseForce"]["m_flWorleySeed"];
C_OP_CurlNoiseForce.m_flWorleyJitter = jsonData["C_OP_CurlNoiseForce"]["m_flWorleyJitter"];

// Atribuições para C_INIT_Orient2DRelToCP
// C_INIT_Orient2DRelToCP Offsets
C_INIT_Orient2DRelToCP.m_nCP = jsonData["C_INIT_Orient2DRelToCP"]["m_nCP"];
C_INIT_Orient2DRelToCP.m_nFieldOutput = jsonData["C_INIT_Orient2DRelToCP"]["m_nFieldOutput"];
C_INIT_Orient2DRelToCP.m_flRotOffset = jsonData["C_INIT_Orient2DRelToCP"]["m_flRotOffset"];

// Atribuições para C_OP_SetSimulationRate
// C_OP_SetSimulationRate Offsets
C_OP_SetSimulationRate.m_flSimulationScale = jsonData["C_OP_SetSimulationRate"]["m_flSimulationScale"];

// Atribuições para C_OP_FadeIn
// C_OP_FadeIn Offsets
C_OP_FadeIn.m_flFadeInTimeMin = jsonData["C_OP_FadeIn"]["m_flFadeInTimeMin"];
C_OP_FadeIn.m_flFadeInTimeMax = jsonData["C_OP_FadeIn"]["m_flFadeInTimeMax"];
C_OP_FadeIn.m_flFadeInTimeExp = jsonData["C_OP_FadeIn"]["m_flFadeInTimeExp"];
C_OP_FadeIn.m_bProportional = jsonData["C_OP_FadeIn"]["m_bProportional"];

// Atribuições para C_OP_RenderScreenShake
// C_OP_RenderScreenShake Offsets
C_OP_RenderScreenShake.m_flDurationScale = jsonData["C_OP_RenderScreenShake"]["m_flDurationScale"];
C_OP_RenderScreenShake.m_flRadiusScale = jsonData["C_OP_RenderScreenShake"]["m_flRadiusScale"];
C_OP_RenderScreenShake.m_flFrequencyScale = jsonData["C_OP_RenderScreenShake"]["m_flFrequencyScale"];
C_OP_RenderScreenShake.m_flAmplitudeScale = jsonData["C_OP_RenderScreenShake"]["m_flAmplitudeScale"];
C_OP_RenderScreenShake.m_nRadiusField = jsonData["C_OP_RenderScreenShake"]["m_nRadiusField"];
C_OP_RenderScreenShake.m_nDurationField = jsonData["C_OP_RenderScreenShake"]["m_nDurationField"];
C_OP_RenderScreenShake.m_nFrequencyField = jsonData["C_OP_RenderScreenShake"]["m_nFrequencyField"];
C_OP_RenderScreenShake.m_nAmplitudeField = jsonData["C_OP_RenderScreenShake"]["m_nAmplitudeField"];
C_OP_RenderScreenShake.m_nFilterCP = jsonData["C_OP_RenderScreenShake"]["m_nFilterCP"];

// Atribuições para C_OP_RemapBoundingVolumetoCP
// C_OP_RemapBoundingVolumetoCP Offsets
C_OP_RemapBoundingVolumetoCP.m_nOutControlPointNumber = jsonData["C_OP_RemapBoundingVolumetoCP"]["m_nOutControlPointNumber"];
C_OP_RemapBoundingVolumetoCP.m_flInputMin = jsonData["C_OP_RemapBoundingVolumetoCP"]["m_flInputMin"];
C_OP_RemapBoundingVolumetoCP.m_flInputMax = jsonData["C_OP_RemapBoundingVolumetoCP"]["m_flInputMax"];
C_OP_RemapBoundingVolumetoCP.m_flOutputMin = jsonData["C_OP_RemapBoundingVolumetoCP"]["m_flOutputMin"];
C_OP_RemapBoundingVolumetoCP.m_flOutputMax = jsonData["C_OP_RemapBoundingVolumetoCP"]["m_flOutputMax"];

// Atribuições para C_OP_HSVShiftToCP
// C_OP_HSVShiftToCP Offsets
C_OP_HSVShiftToCP.m_nColorCP = jsonData["C_OP_HSVShiftToCP"]["m_nColorCP"];
C_OP_HSVShiftToCP.m_nColorGemEnableCP = jsonData["C_OP_HSVShiftToCP"]["m_nColorGemEnableCP"];
C_OP_HSVShiftToCP.m_nOutputCP = jsonData["C_OP_HSVShiftToCP"]["m_nOutputCP"];
C_OP_HSVShiftToCP.m_DefaultHSVColor = jsonData["C_OP_HSVShiftToCP"]["m_DefaultHSVColor"];

// Atribuições para C_INIT_GlobalScale
// C_INIT_GlobalScale Offsets
C_INIT_GlobalScale.m_flScale = jsonData["C_INIT_GlobalScale"]["m_flScale"];
C_INIT_GlobalScale.m_nScaleControlPointNumber = jsonData["C_INIT_GlobalScale"]["m_nScaleControlPointNumber"];
C_INIT_GlobalScale.m_nControlPointNumber = jsonData["C_INIT_GlobalScale"]["m_nControlPointNumber"];
C_INIT_GlobalScale.m_bScaleRadius = jsonData["C_INIT_GlobalScale"]["m_bScaleRadius"];
C_INIT_GlobalScale.m_bScalePosition = jsonData["C_INIT_GlobalScale"]["m_bScalePosition"];
C_INIT_GlobalScale.m_bScaleVelocity = jsonData["C_INIT_GlobalScale"]["m_bScaleVelocity"];

// Atribuições para C_INIT_RadiusFromCPObject
// C_INIT_RadiusFromCPObject Offsets
C_INIT_RadiusFromCPObject.m_nControlPoint = jsonData["C_INIT_RadiusFromCPObject"]["m_nControlPoint"];

// Atribuições para C_INIT_InitialVelocityFromHitbox
// C_INIT_InitialVelocityFromHitbox Offsets
C_INIT_InitialVelocityFromHitbox.m_flVelocityMin = jsonData["C_INIT_InitialVelocityFromHitbox"]["m_flVelocityMin"];
C_INIT_InitialVelocityFromHitbox.m_flVelocityMax = jsonData["C_INIT_InitialVelocityFromHitbox"]["m_flVelocityMax"];
C_INIT_InitialVelocityFromHitbox.m_nControlPointNumber = jsonData["C_INIT_InitialVelocityFromHitbox"]["m_nControlPointNumber"];
C_INIT_InitialVelocityFromHitbox.m_HitboxSetName = jsonData["C_INIT_InitialVelocityFromHitbox"]["m_HitboxSetName"];
C_INIT_InitialVelocityFromHitbox.m_bUseBones = jsonData["C_INIT_InitialVelocityFromHitbox"]["m_bUseBones"];

// Atribuições para C_OP_LerpVector
// C_OP_LerpVector Offsets
C_OP_LerpVector.m_nFieldOutput = jsonData["C_OP_LerpVector"]["m_nFieldOutput"];
C_OP_LerpVector.m_vecOutput = jsonData["C_OP_LerpVector"]["m_vecOutput"];
C_OP_LerpVector.m_flStartTime = jsonData["C_OP_LerpVector"]["m_flStartTime"];
C_OP_LerpVector.m_flEndTime = jsonData["C_OP_LerpVector"]["m_flEndTime"];
C_OP_LerpVector.m_nSetMethod = jsonData["C_OP_LerpVector"]["m_nSetMethod"];

// Atribuições para C_OP_SetControlPointFieldToWater
// C_OP_SetControlPointFieldToWater Offsets
C_OP_SetControlPointFieldToWater.m_nSourceCP = jsonData["C_OP_SetControlPointFieldToWater"]["m_nSourceCP"];
C_OP_SetControlPointFieldToWater.m_nDestCP = jsonData["C_OP_SetControlPointFieldToWater"]["m_nDestCP"];
C_OP_SetControlPointFieldToWater.m_nCPField = jsonData["C_OP_SetControlPointFieldToWater"]["m_nCPField"];

// Atribuições para TextureGroup_t
// TextureGroup_t Offsets
TextureGroup_t.m_bEnabled = jsonData["TextureGroup_t"]["m_bEnabled"];
TextureGroup_t.m_bReplaceTextureWithGradient = jsonData["TextureGroup_t"]["m_bReplaceTextureWithGradient"];
TextureGroup_t.m_hTexture = jsonData["TextureGroup_t"]["m_hTexture"];
TextureGroup_t.m_Gradient = jsonData["TextureGroup_t"]["m_Gradient"];
TextureGroup_t.m_nTextureType = jsonData["TextureGroup_t"]["m_nTextureType"];
TextureGroup_t.m_nTextureChannels = jsonData["TextureGroup_t"]["m_nTextureChannels"];
TextureGroup_t.m_nTextureBlendMode = jsonData["TextureGroup_t"]["m_nTextureBlendMode"];
TextureGroup_t.m_flTextureBlend = jsonData["TextureGroup_t"]["m_flTextureBlend"];
TextureGroup_t.m_TextureControls = jsonData["TextureGroup_t"]["m_TextureControls"];

// Atribuições para C_OP_TimeVaryingForce
// C_OP_TimeVaryingForce Offsets
C_OP_TimeVaryingForce.m_flStartLerpTime = jsonData["C_OP_TimeVaryingForce"]["m_flStartLerpTime"];
C_OP_TimeVaryingForce.m_StartingForce = jsonData["C_OP_TimeVaryingForce"]["m_StartingForce"];
C_OP_TimeVaryingForce.m_flEndLerpTime = jsonData["C_OP_TimeVaryingForce"]["m_flEndLerpTime"];
C_OP_TimeVaryingForce.m_EndingForce = jsonData["C_OP_TimeVaryingForce"]["m_EndingForce"];

// Atribuições para C_OP_SetCPOrientationToGroundNormal
// C_OP_SetCPOrientationToGroundNormal Offsets
C_OP_SetCPOrientationToGroundNormal.m_flInterpRate = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_flInterpRate"];
C_OP_SetCPOrientationToGroundNormal.m_flMaxTraceLength = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_flMaxTraceLength"];
C_OP_SetCPOrientationToGroundNormal.m_flTolerance = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_flTolerance"];
C_OP_SetCPOrientationToGroundNormal.m_flTraceOffset = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_flTraceOffset"];
C_OP_SetCPOrientationToGroundNormal.m_CollisionGroupName = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_CollisionGroupName"];
C_OP_SetCPOrientationToGroundNormal.m_nTraceSet = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_nTraceSet"];
C_OP_SetCPOrientationToGroundNormal.m_nInputCP = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_nInputCP"];
C_OP_SetCPOrientationToGroundNormal.m_nOutputCP = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_nOutputCP"];
C_OP_SetCPOrientationToGroundNormal.m_bIncludeWater = jsonData["C_OP_SetCPOrientationToGroundNormal"]["m_bIncludeWater"];

// Atribuições para C_OP_SnapshotSkinToBones
// C_OP_SnapshotSkinToBones Offsets
C_OP_SnapshotSkinToBones.m_bTransformNormals = jsonData["C_OP_SnapshotSkinToBones"]["m_bTransformNormals"];
C_OP_SnapshotSkinToBones.m_bTransformRadii = jsonData["C_OP_SnapshotSkinToBones"]["m_bTransformRadii"];
C_OP_SnapshotSkinToBones.m_nControlPointNumber = jsonData["C_OP_SnapshotSkinToBones"]["m_nControlPointNumber"];
C_OP_SnapshotSkinToBones.m_flLifeTimeFadeStart = jsonData["C_OP_SnapshotSkinToBones"]["m_flLifeTimeFadeStart"];
C_OP_SnapshotSkinToBones.m_flLifeTimeFadeEnd = jsonData["C_OP_SnapshotSkinToBones"]["m_flLifeTimeFadeEnd"];
C_OP_SnapshotSkinToBones.m_flJumpThreshold = jsonData["C_OP_SnapshotSkinToBones"]["m_flJumpThreshold"];
C_OP_SnapshotSkinToBones.m_flPrevPosScale = jsonData["C_OP_SnapshotSkinToBones"]["m_flPrevPosScale"];

// Atribuições para C_INIT_CreateWithinSphereTransform
// C_INIT_CreateWithinSphereTransform Offsets
C_INIT_CreateWithinSphereTransform.m_fRadiusMin = jsonData["C_INIT_CreateWithinSphereTransform"]["m_fRadiusMin"];
C_INIT_CreateWithinSphereTransform.m_fRadiusMax = jsonData["C_INIT_CreateWithinSphereTransform"]["m_fRadiusMax"];
C_INIT_CreateWithinSphereTransform.m_vecDistanceBias = jsonData["C_INIT_CreateWithinSphereTransform"]["m_vecDistanceBias"];
C_INIT_CreateWithinSphereTransform.m_vecDistanceBiasAbs = jsonData["C_INIT_CreateWithinSphereTransform"]["m_vecDistanceBiasAbs"];
C_INIT_CreateWithinSphereTransform.m_TransformInput = jsonData["C_INIT_CreateWithinSphereTransform"]["m_TransformInput"];
C_INIT_CreateWithinSphereTransform.m_fSpeedMin = jsonData["C_INIT_CreateWithinSphereTransform"]["m_fSpeedMin"];
C_INIT_CreateWithinSphereTransform.m_fSpeedMax = jsonData["C_INIT_CreateWithinSphereTransform"]["m_fSpeedMax"];
C_INIT_CreateWithinSphereTransform.m_fSpeedRandExp = jsonData["C_INIT_CreateWithinSphereTransform"]["m_fSpeedRandExp"];
C_INIT_CreateWithinSphereTransform.m_bLocalCoords = jsonData["C_INIT_CreateWithinSphereTransform"]["m_bLocalCoords"];
C_INIT_CreateWithinSphereTransform.m_flEndCPGrowthTime = jsonData["C_INIT_CreateWithinSphereTransform"]["m_flEndCPGrowthTime"];
C_INIT_CreateWithinSphereTransform.m_LocalCoordinateSystemSpeedMin = jsonData["C_INIT_CreateWithinSphereTransform"]["m_LocalCoordinateSystemSpeedMin"];
C_INIT_CreateWithinSphereTransform.m_LocalCoordinateSystemSpeedMax = jsonData["C_INIT_CreateWithinSphereTransform"]["m_LocalCoordinateSystemSpeedMax"];
C_INIT_CreateWithinSphereTransform.m_nFieldOutput = jsonData["C_INIT_CreateWithinSphereTransform"]["m_nFieldOutput"];
C_INIT_CreateWithinSphereTransform.m_nFieldVelocity = jsonData["C_INIT_CreateWithinSphereTransform"]["m_nFieldVelocity"];

// Atribuições para C_OP_RadiusDecay
// C_OP_RadiusDecay Offsets
C_OP_RadiusDecay.m_flMinRadius = jsonData["C_OP_RadiusDecay"]["m_flMinRadius"];

// Atribuições para C_INIT_RemapScalarToVector
// C_INIT_RemapScalarToVector Offsets
C_INIT_RemapScalarToVector.m_nFieldInput = jsonData["C_INIT_RemapScalarToVector"]["m_nFieldInput"];
C_INIT_RemapScalarToVector.m_nFieldOutput = jsonData["C_INIT_RemapScalarToVector"]["m_nFieldOutput"];
C_INIT_RemapScalarToVector.m_flInputMin = jsonData["C_INIT_RemapScalarToVector"]["m_flInputMin"];
C_INIT_RemapScalarToVector.m_flInputMax = jsonData["C_INIT_RemapScalarToVector"]["m_flInputMax"];
C_INIT_RemapScalarToVector.m_vecOutputMin = jsonData["C_INIT_RemapScalarToVector"]["m_vecOutputMin"];
C_INIT_RemapScalarToVector.m_vecOutputMax = jsonData["C_INIT_RemapScalarToVector"]["m_vecOutputMax"];
C_INIT_RemapScalarToVector.m_flStartTime = jsonData["C_INIT_RemapScalarToVector"]["m_flStartTime"];
C_INIT_RemapScalarToVector.m_flEndTime = jsonData["C_INIT_RemapScalarToVector"]["m_flEndTime"];
C_INIT_RemapScalarToVector.m_nSetMethod = jsonData["C_INIT_RemapScalarToVector"]["m_nSetMethod"];
C_INIT_RemapScalarToVector.m_nControlPointNumber = jsonData["C_INIT_RemapScalarToVector"]["m_nControlPointNumber"];
C_INIT_RemapScalarToVector.m_bLocalCoords = jsonData["C_INIT_RemapScalarToVector"]["m_bLocalCoords"];
C_INIT_RemapScalarToVector.m_flRemapBias = jsonData["C_INIT_RemapScalarToVector"]["m_flRemapBias"];

// Atribuições para C_INIT_InitialSequenceFromModel
// C_INIT_InitialSequenceFromModel Offsets
C_INIT_InitialSequenceFromModel.m_nControlPointNumber = jsonData["C_INIT_InitialSequenceFromModel"]["m_nControlPointNumber"];
C_INIT_InitialSequenceFromModel.m_nFieldOutput = jsonData["C_INIT_InitialSequenceFromModel"]["m_nFieldOutput"];
C_INIT_InitialSequenceFromModel.m_nFieldOutputAnim = jsonData["C_INIT_InitialSequenceFromModel"]["m_nFieldOutputAnim"];
C_INIT_InitialSequenceFromModel.m_flInputMin = jsonData["C_INIT_InitialSequenceFromModel"]["m_flInputMin"];
C_INIT_InitialSequenceFromModel.m_flInputMax = jsonData["C_INIT_InitialSequenceFromModel"]["m_flInputMax"];
C_INIT_InitialSequenceFromModel.m_flOutputMin = jsonData["C_INIT_InitialSequenceFromModel"]["m_flOutputMin"];
C_INIT_InitialSequenceFromModel.m_flOutputMax = jsonData["C_INIT_InitialSequenceFromModel"]["m_flOutputMax"];
C_INIT_InitialSequenceFromModel.m_nSetMethod = jsonData["C_INIT_InitialSequenceFromModel"]["m_nSetMethod"];

// Atribuições para C_OP_NoiseEmitter
// C_OP_NoiseEmitter Offsets
C_OP_NoiseEmitter.m_flEmissionDuration = jsonData["C_OP_NoiseEmitter"]["m_flEmissionDuration"];
C_OP_NoiseEmitter.m_flStartTime = jsonData["C_OP_NoiseEmitter"]["m_flStartTime"];
C_OP_NoiseEmitter.m_flEmissionScale = jsonData["C_OP_NoiseEmitter"]["m_flEmissionScale"];
C_OP_NoiseEmitter.m_nScaleControlPoint = jsonData["C_OP_NoiseEmitter"]["m_nScaleControlPoint"];
C_OP_NoiseEmitter.m_nScaleControlPointField = jsonData["C_OP_NoiseEmitter"]["m_nScaleControlPointField"];
C_OP_NoiseEmitter.m_nWorldNoisePoint = jsonData["C_OP_NoiseEmitter"]["m_nWorldNoisePoint"];
C_OP_NoiseEmitter.m_bAbsVal = jsonData["C_OP_NoiseEmitter"]["m_bAbsVal"];
C_OP_NoiseEmitter.m_bAbsValInv = jsonData["C_OP_NoiseEmitter"]["m_bAbsValInv"];
C_OP_NoiseEmitter.m_flOffset = jsonData["C_OP_NoiseEmitter"]["m_flOffset"];
C_OP_NoiseEmitter.m_flOutputMin = jsonData["C_OP_NoiseEmitter"]["m_flOutputMin"];
C_OP_NoiseEmitter.m_flOutputMax = jsonData["C_OP_NoiseEmitter"]["m_flOutputMax"];
C_OP_NoiseEmitter.m_flNoiseScale = jsonData["C_OP_NoiseEmitter"]["m_flNoiseScale"];
C_OP_NoiseEmitter.m_flWorldNoiseScale = jsonData["C_OP_NoiseEmitter"]["m_flWorldNoiseScale"];
C_OP_NoiseEmitter.m_vecOffsetLoc = jsonData["C_OP_NoiseEmitter"]["m_vecOffsetLoc"];
C_OP_NoiseEmitter.m_flWorldTimeScale = jsonData["C_OP_NoiseEmitter"]["m_flWorldTimeScale"];

// Atribuições para CParticleFunctionInitializer
// CParticleFunctionInitializer Offsets
CParticleFunctionInitializer.m_nAssociatedEmitterIndex = jsonData["CParticleFunctionInitializer"]["m_nAssociatedEmitterIndex"];

// Atribuições para C_OP_SelectivelyEnableChildren
// C_OP_SelectivelyEnableChildren Offsets
C_OP_SelectivelyEnableChildren.m_nChildGroupID = jsonData["C_OP_SelectivelyEnableChildren"]["m_nChildGroupID"];
C_OP_SelectivelyEnableChildren.m_nFirstChild = jsonData["C_OP_SelectivelyEnableChildren"]["m_nFirstChild"];
C_OP_SelectivelyEnableChildren.m_nNumChildrenToEnable = jsonData["C_OP_SelectivelyEnableChildren"]["m_nNumChildrenToEnable"];
C_OP_SelectivelyEnableChildren.m_bPlayEndcapOnStop = jsonData["C_OP_SelectivelyEnableChildren"]["m_bPlayEndcapOnStop"];
C_OP_SelectivelyEnableChildren.m_bDestroyImmediately = jsonData["C_OP_SelectivelyEnableChildren"]["m_bDestroyImmediately"];

// Atribuições para ModelReference_t
// ModelReference_t Offsets
ModelReference_t.m_model = jsonData["ModelReference_t"]["m_model"];
ModelReference_t.m_flRelativeProbabilityOfSpawn = jsonData["ModelReference_t"]["m_flRelativeProbabilityOfSpawn"];

// Atribuições para C_OP_PlanarConstraint
// C_OP_PlanarConstraint Offsets
C_OP_PlanarConstraint.m_PointOnPlane = jsonData["C_OP_PlanarConstraint"]["m_PointOnPlane"];
C_OP_PlanarConstraint.m_PlaneNormal = jsonData["C_OP_PlanarConstraint"]["m_PlaneNormal"];
C_OP_PlanarConstraint.m_nControlPointNumber = jsonData["C_OP_PlanarConstraint"]["m_nControlPointNumber"];
C_OP_PlanarConstraint.m_bGlobalOrigin = jsonData["C_OP_PlanarConstraint"]["m_bGlobalOrigin"];
C_OP_PlanarConstraint.m_bGlobalNormal = jsonData["C_OP_PlanarConstraint"]["m_bGlobalNormal"];
C_OP_PlanarConstraint.m_flRadiusScale = jsonData["C_OP_PlanarConstraint"]["m_flRadiusScale"];
C_OP_PlanarConstraint.m_flMaximumDistanceToCP = jsonData["C_OP_PlanarConstraint"]["m_flMaximumDistanceToCP"];
C_OP_PlanarConstraint.m_bUseOldCode = jsonData["C_OP_PlanarConstraint"]["m_bUseOldCode"];

// Atribuições para C_INIT_CreateFromCPs
// C_INIT_CreateFromCPs Offsets
C_INIT_CreateFromCPs.m_nIncrement = jsonData["C_INIT_CreateFromCPs"]["m_nIncrement"];
C_INIT_CreateFromCPs.m_nMinCP = jsonData["C_INIT_CreateFromCPs"]["m_nMinCP"];
C_INIT_CreateFromCPs.m_nMaxCP = jsonData["C_INIT_CreateFromCPs"]["m_nMaxCP"];
C_INIT_CreateFromCPs.m_nDynamicCPCount = jsonData["C_INIT_CreateFromCPs"]["m_nDynamicCPCount"];

// Atribuições para C_OP_LockPoints
// C_OP_LockPoints Offsets
C_OP_LockPoints.m_nMinCol = jsonData["C_OP_LockPoints"]["m_nMinCol"];
C_OP_LockPoints.m_nMaxCol = jsonData["C_OP_LockPoints"]["m_nMaxCol"];
C_OP_LockPoints.m_nMinRow = jsonData["C_OP_LockPoints"]["m_nMinRow"];
C_OP_LockPoints.m_nMaxRow = jsonData["C_OP_LockPoints"]["m_nMaxRow"];
C_OP_LockPoints.m_nControlPoint = jsonData["C_OP_LockPoints"]["m_nControlPoint"];
C_OP_LockPoints.m_flBlendValue = jsonData["C_OP_LockPoints"]["m_flBlendValue"];

// Atribuições para C_INIT_CreateSpiralSphere
// C_INIT_CreateSpiralSphere Offsets
C_INIT_CreateSpiralSphere.m_nControlPointNumber = jsonData["C_INIT_CreateSpiralSphere"]["m_nControlPointNumber"];
C_INIT_CreateSpiralSphere.m_nOverrideCP = jsonData["C_INIT_CreateSpiralSphere"]["m_nOverrideCP"];
C_INIT_CreateSpiralSphere.m_nDensity = jsonData["C_INIT_CreateSpiralSphere"]["m_nDensity"];
C_INIT_CreateSpiralSphere.m_flInitialRadius = jsonData["C_INIT_CreateSpiralSphere"]["m_flInitialRadius"];
C_INIT_CreateSpiralSphere.m_flInitialSpeedMin = jsonData["C_INIT_CreateSpiralSphere"]["m_flInitialSpeedMin"];
C_INIT_CreateSpiralSphere.m_flInitialSpeedMax = jsonData["C_INIT_CreateSpiralSphere"]["m_flInitialSpeedMax"];
C_INIT_CreateSpiralSphere.m_bUseParticleCount = jsonData["C_INIT_CreateSpiralSphere"]["m_bUseParticleCount"];

// Atribuições para C_OP_CPVelocityForce
// C_OP_CPVelocityForce Offsets
C_OP_CPVelocityForce.m_nControlPointNumber = jsonData["C_OP_CPVelocityForce"]["m_nControlPointNumber"];
C_OP_CPVelocityForce.m_flScale = jsonData["C_OP_CPVelocityForce"]["m_flScale"];

// Atribuições para C_OP_RemapNamedModelElementEndCap
// C_OP_RemapNamedModelElementEndCap Offsets
C_OP_RemapNamedModelElementEndCap.m_hModel = jsonData["C_OP_RemapNamedModelElementEndCap"]["m_hModel"];
C_OP_RemapNamedModelElementEndCap.m_inNames = jsonData["C_OP_RemapNamedModelElementEndCap"]["m_inNames"];
C_OP_RemapNamedModelElementEndCap.m_outNames = jsonData["C_OP_RemapNamedModelElementEndCap"]["m_outNames"];
C_OP_RemapNamedModelElementEndCap.m_fallbackNames = jsonData["C_OP_RemapNamedModelElementEndCap"]["m_fallbackNames"];
C_OP_RemapNamedModelElementEndCap.m_bModelFromRenderer = jsonData["C_OP_RemapNamedModelElementEndCap"]["m_bModelFromRenderer"];
C_OP_RemapNamedModelElementEndCap.m_nFieldInput = jsonData["C_OP_RemapNamedModelElementEndCap"]["m_nFieldInput"];
C_OP_RemapNamedModelElementEndCap.m_nFieldOutput = jsonData["C_OP_RemapNamedModelElementEndCap"]["m_nFieldOutput"];

// Atribuições para C_INIT_ScaleVelocity
// C_INIT_ScaleVelocity Offsets
C_INIT_ScaleVelocity.m_vecScale = jsonData["C_INIT_ScaleVelocity"]["m_vecScale"];

// Atribuições para C_OP_MoveToHitbox
// C_OP_MoveToHitbox Offsets
C_OP_MoveToHitbox.m_modelInput = jsonData["C_OP_MoveToHitbox"]["m_modelInput"];
C_OP_MoveToHitbox.m_transformInput = jsonData["C_OP_MoveToHitbox"]["m_transformInput"];
C_OP_MoveToHitbox.m_flLifeTimeLerpStart = jsonData["C_OP_MoveToHitbox"]["m_flLifeTimeLerpStart"];
C_OP_MoveToHitbox.m_flLifeTimeLerpEnd = jsonData["C_OP_MoveToHitbox"]["m_flLifeTimeLerpEnd"];
C_OP_MoveToHitbox.m_flPrevPosScale = jsonData["C_OP_MoveToHitbox"]["m_flPrevPosScale"];
C_OP_MoveToHitbox.m_HitboxSetName = jsonData["C_OP_MoveToHitbox"]["m_HitboxSetName"];
C_OP_MoveToHitbox.m_bUseBones = jsonData["C_OP_MoveToHitbox"]["m_bUseBones"];
C_OP_MoveToHitbox.m_nLerpType = jsonData["C_OP_MoveToHitbox"]["m_nLerpType"];
C_OP_MoveToHitbox.m_flInterpolation = jsonData["C_OP_MoveToHitbox"]["m_flInterpolation"];

// Atribuições para CParticleFloatInput
// CParticleFloatInput Offsets
CParticleFloatInput.m_nType = jsonData["CParticleFloatInput"]["m_nType"];
CParticleFloatInput.m_nMapType = jsonData["CParticleFloatInput"]["m_nMapType"];
CParticleFloatInput.m_flLiteralValue = jsonData["CParticleFloatInput"]["m_flLiteralValue"];
CParticleFloatInput.m_NamedValue = jsonData["CParticleFloatInput"]["m_NamedValue"];
CParticleFloatInput.m_nControlPoint = jsonData["CParticleFloatInput"]["m_nControlPoint"];
CParticleFloatInput.m_nScalarAttribute = jsonData["CParticleFloatInput"]["m_nScalarAttribute"];
CParticleFloatInput.m_nVectorAttribute = jsonData["CParticleFloatInput"]["m_nVectorAttribute"];
CParticleFloatInput.m_nVectorComponent = jsonData["CParticleFloatInput"]["m_nVectorComponent"];
CParticleFloatInput.m_flRandomMin = jsonData["CParticleFloatInput"]["m_flRandomMin"];
CParticleFloatInput.m_flRandomMax = jsonData["CParticleFloatInput"]["m_flRandomMax"];
CParticleFloatInput.m_bHasRandomSignFlip = jsonData["CParticleFloatInput"]["m_bHasRandomSignFlip"];
CParticleFloatInput.m_nRandomSeed = jsonData["CParticleFloatInput"]["m_nRandomSeed"];
CParticleFloatInput.m_nRandomMode = jsonData["CParticleFloatInput"]["m_nRandomMode"];
CParticleFloatInput.m_flLOD0 = jsonData["CParticleFloatInput"]["m_flLOD0"];
CParticleFloatInput.m_flLOD1 = jsonData["CParticleFloatInput"]["m_flLOD1"];
CParticleFloatInput.m_flLOD2 = jsonData["CParticleFloatInput"]["m_flLOD2"];
CParticleFloatInput.m_flLOD3 = jsonData["CParticleFloatInput"]["m_flLOD3"];
CParticleFloatInput.m_nNoiseInputVectorAttribute = jsonData["CParticleFloatInput"]["m_nNoiseInputVectorAttribute"];
CParticleFloatInput.m_flNoiseOutputMin = jsonData["CParticleFloatInput"]["m_flNoiseOutputMin"];
CParticleFloatInput.m_flNoiseOutputMax = jsonData["CParticleFloatInput"]["m_flNoiseOutputMax"];
CParticleFloatInput.m_flNoiseScale = jsonData["CParticleFloatInput"]["m_flNoiseScale"];
CParticleFloatInput.m_vecNoiseOffsetRate = jsonData["CParticleFloatInput"]["m_vecNoiseOffsetRate"];
CParticleFloatInput.m_flNoiseOffset = jsonData["CParticleFloatInput"]["m_flNoiseOffset"];
CParticleFloatInput.m_nNoiseOctaves = jsonData["CParticleFloatInput"]["m_nNoiseOctaves"];
CParticleFloatInput.m_nNoiseTurbulence = jsonData["CParticleFloatInput"]["m_nNoiseTurbulence"];
CParticleFloatInput.m_nNoiseType = jsonData["CParticleFloatInput"]["m_nNoiseType"];
CParticleFloatInput.m_nNoiseModifier = jsonData["CParticleFloatInput"]["m_nNoiseModifier"];
CParticleFloatInput.m_flNoiseTurbulenceScale = jsonData["CParticleFloatInput"]["m_flNoiseTurbulenceScale"];
CParticleFloatInput.m_flNoiseTurbulenceMix = jsonData["CParticleFloatInput"]["m_flNoiseTurbulenceMix"];
CParticleFloatInput.m_flNoiseImgPreviewScale = jsonData["CParticleFloatInput"]["m_flNoiseImgPreviewScale"];
CParticleFloatInput.m_bNoiseImgPreviewLive = jsonData["CParticleFloatInput"]["m_bNoiseImgPreviewLive"];
CParticleFloatInput.m_flNoCameraFallback = jsonData["CParticleFloatInput"]["m_flNoCameraFallback"];
CParticleFloatInput.m_bUseBoundsCenter = jsonData["CParticleFloatInput"]["m_bUseBoundsCenter"];
CParticleFloatInput.m_nInputMode = jsonData["CParticleFloatInput"]["m_nInputMode"];
CParticleFloatInput.m_flMultFactor = jsonData["CParticleFloatInput"]["m_flMultFactor"];
CParticleFloatInput.m_flInput0 = jsonData["CParticleFloatInput"]["m_flInput0"];
CParticleFloatInput.m_flInput1 = jsonData["CParticleFloatInput"]["m_flInput1"];
CParticleFloatInput.m_flOutput0 = jsonData["CParticleFloatInput"]["m_flOutput0"];
CParticleFloatInput.m_flOutput1 = jsonData["CParticleFloatInput"]["m_flOutput1"];
CParticleFloatInput.m_flNotchedRangeMin = jsonData["CParticleFloatInput"]["m_flNotchedRangeMin"];
CParticleFloatInput.m_flNotchedRangeMax = jsonData["CParticleFloatInput"]["m_flNotchedRangeMax"];
CParticleFloatInput.m_flNotchedOutputOutside = jsonData["CParticleFloatInput"]["m_flNotchedOutputOutside"];
CParticleFloatInput.m_flNotchedOutputInside = jsonData["CParticleFloatInput"]["m_flNotchedOutputInside"];
CParticleFloatInput.m_nRoundType = jsonData["CParticleFloatInput"]["m_nRoundType"];
CParticleFloatInput.m_nBiasType = jsonData["CParticleFloatInput"]["m_nBiasType"];
CParticleFloatInput.m_flBiasParameter = jsonData["CParticleFloatInput"]["m_flBiasParameter"];
CParticleFloatInput.m_Curve = jsonData["CParticleFloatInput"]["m_Curve"];

// Atribuições para C_INIT_PointList
// C_INIT_PointList Offsets
C_INIT_PointList.m_nFieldOutput = jsonData["C_INIT_PointList"]["m_nFieldOutput"];
C_INIT_PointList.m_pointList = jsonData["C_INIT_PointList"]["m_pointList"];
C_INIT_PointList.m_bPlaceAlongPath = jsonData["C_INIT_PointList"]["m_bPlaceAlongPath"];
C_INIT_PointList.m_bClosedLoop = jsonData["C_INIT_PointList"]["m_bClosedLoop"];
C_INIT_PointList.m_nNumPointsAlongPath = jsonData["C_INIT_PointList"]["m_nNumPointsAlongPath"];

// Atribuições para C_OP_LerpToOtherAttribute
// C_OP_LerpToOtherAttribute Offsets
C_OP_LerpToOtherAttribute.m_flInterpolation = jsonData["C_OP_LerpToOtherAttribute"]["m_flInterpolation"];
C_OP_LerpToOtherAttribute.m_nFieldInputFrom = jsonData["C_OP_LerpToOtherAttribute"]["m_nFieldInputFrom"];
C_OP_LerpToOtherAttribute.m_nFieldInput = jsonData["C_OP_LerpToOtherAttribute"]["m_nFieldInput"];
C_OP_LerpToOtherAttribute.m_nFieldOutput = jsonData["C_OP_LerpToOtherAttribute"]["m_nFieldOutput"];

// Atribuições para C_INIT_RandomColor
// C_INIT_RandomColor Offsets
C_INIT_RandomColor.m_ColorMin = jsonData["C_INIT_RandomColor"]["m_ColorMin"];
C_INIT_RandomColor.m_ColorMax = jsonData["C_INIT_RandomColor"]["m_ColorMax"];
C_INIT_RandomColor.m_TintMin = jsonData["C_INIT_RandomColor"]["m_TintMin"];
C_INIT_RandomColor.m_TintMax = jsonData["C_INIT_RandomColor"]["m_TintMax"];
C_INIT_RandomColor.m_flTintPerc = jsonData["C_INIT_RandomColor"]["m_flTintPerc"];
C_INIT_RandomColor.m_flUpdateThreshold = jsonData["C_INIT_RandomColor"]["m_flUpdateThreshold"];
C_INIT_RandomColor.m_nTintCP = jsonData["C_INIT_RandomColor"]["m_nTintCP"];
C_INIT_RandomColor.m_nFieldOutput = jsonData["C_INIT_RandomColor"]["m_nFieldOutput"];
C_INIT_RandomColor.m_nTintBlendMode = jsonData["C_INIT_RandomColor"]["m_nTintBlendMode"];
C_INIT_RandomColor.m_flLightAmplification = jsonData["C_INIT_RandomColor"]["m_flLightAmplification"];

// Atribuições para C_OP_SetGravityToCP
// C_OP_SetGravityToCP Offsets
C_OP_SetGravityToCP.m_nCPInput = jsonData["C_OP_SetGravityToCP"]["m_nCPInput"];
C_OP_SetGravityToCP.m_nCPOutput = jsonData["C_OP_SetGravityToCP"]["m_nCPOutput"];
C_OP_SetGravityToCP.m_flScale = jsonData["C_OP_SetGravityToCP"]["m_flScale"];
C_OP_SetGravityToCP.m_bSetOrientation = jsonData["C_OP_SetGravityToCP"]["m_bSetOrientation"];
C_OP_SetGravityToCP.m_bSetZDown = jsonData["C_OP_SetGravityToCP"]["m_bSetZDown"];

// Atribuições para C_INIT_RemapParticleCountToScalar
// C_INIT_RemapParticleCountToScalar Offsets
C_INIT_RemapParticleCountToScalar.m_nFieldOutput = jsonData["C_INIT_RemapParticleCountToScalar"]["m_nFieldOutput"];
C_INIT_RemapParticleCountToScalar.m_nInputMin = jsonData["C_INIT_RemapParticleCountToScalar"]["m_nInputMin"];
C_INIT_RemapParticleCountToScalar.m_nInputMax = jsonData["C_INIT_RemapParticleCountToScalar"]["m_nInputMax"];
C_INIT_RemapParticleCountToScalar.m_nScaleControlPoint = jsonData["C_INIT_RemapParticleCountToScalar"]["m_nScaleControlPoint"];
C_INIT_RemapParticleCountToScalar.m_nScaleControlPointField = jsonData["C_INIT_RemapParticleCountToScalar"]["m_nScaleControlPointField"];
C_INIT_RemapParticleCountToScalar.m_flOutputMin = jsonData["C_INIT_RemapParticleCountToScalar"]["m_flOutputMin"];
C_INIT_RemapParticleCountToScalar.m_flOutputMax = jsonData["C_INIT_RemapParticleCountToScalar"]["m_flOutputMax"];
C_INIT_RemapParticleCountToScalar.m_nSetMethod = jsonData["C_INIT_RemapParticleCountToScalar"]["m_nSetMethod"];
C_INIT_RemapParticleCountToScalar.m_bActiveRange = jsonData["C_INIT_RemapParticleCountToScalar"]["m_bActiveRange"];
C_INIT_RemapParticleCountToScalar.m_bInvert = jsonData["C_INIT_RemapParticleCountToScalar"]["m_bInvert"];
C_INIT_RemapParticleCountToScalar.m_bWrap = jsonData["C_INIT_RemapParticleCountToScalar"]["m_bWrap"];
C_INIT_RemapParticleCountToScalar.m_flRemapBias = jsonData["C_INIT_RemapParticleCountToScalar"]["m_flRemapBias"];

// Atribuições para C_INIT_InheritFromParentParticles
// C_INIT_InheritFromParentParticles Offsets
C_INIT_InheritFromParentParticles.m_flScale = jsonData["C_INIT_InheritFromParentParticles"]["m_flScale"];
C_INIT_InheritFromParentParticles.m_nFieldOutput = jsonData["C_INIT_InheritFromParentParticles"]["m_nFieldOutput"];
C_INIT_InheritFromParentParticles.m_nIncrement = jsonData["C_INIT_InheritFromParentParticles"]["m_nIncrement"];
C_INIT_InheritFromParentParticles.m_bRandomDistribution = jsonData["C_INIT_InheritFromParentParticles"]["m_bRandomDistribution"];
C_INIT_InheritFromParentParticles.m_nRandomSeed = jsonData["C_INIT_InheritFromParentParticles"]["m_nRandomSeed"];

// Atribuições para C_OP_RampScalarLinearSimple
// C_OP_RampScalarLinearSimple Offsets
C_OP_RampScalarLinearSimple.m_Rate = jsonData["C_OP_RampScalarLinearSimple"]["m_Rate"];
C_OP_RampScalarLinearSimple.m_flStartTime = jsonData["C_OP_RampScalarLinearSimple"]["m_flStartTime"];
C_OP_RampScalarLinearSimple.m_flEndTime = jsonData["C_OP_RampScalarLinearSimple"]["m_flEndTime"];
C_OP_RampScalarLinearSimple.m_nField = jsonData["C_OP_RampScalarLinearSimple"]["m_nField"];

// Atribuições para C_INIT_ChaoticAttractor
// C_INIT_ChaoticAttractor Offsets
C_INIT_ChaoticAttractor.m_flAParm = jsonData["C_INIT_ChaoticAttractor"]["m_flAParm"];
C_INIT_ChaoticAttractor.m_flBParm = jsonData["C_INIT_ChaoticAttractor"]["m_flBParm"];
C_INIT_ChaoticAttractor.m_flCParm = jsonData["C_INIT_ChaoticAttractor"]["m_flCParm"];
C_INIT_ChaoticAttractor.m_flDParm = jsonData["C_INIT_ChaoticAttractor"]["m_flDParm"];
C_INIT_ChaoticAttractor.m_flScale = jsonData["C_INIT_ChaoticAttractor"]["m_flScale"];
C_INIT_ChaoticAttractor.m_flSpeedMin = jsonData["C_INIT_ChaoticAttractor"]["m_flSpeedMin"];
C_INIT_ChaoticAttractor.m_flSpeedMax = jsonData["C_INIT_ChaoticAttractor"]["m_flSpeedMax"];
C_INIT_ChaoticAttractor.m_nBaseCP = jsonData["C_INIT_ChaoticAttractor"]["m_nBaseCP"];
C_INIT_ChaoticAttractor.m_bUniformSpeed = jsonData["C_INIT_ChaoticAttractor"]["m_bUniformSpeed"];

// Atribuições para C_OP_MovementRigidAttachToCP
// C_OP_MovementRigidAttachToCP Offsets
C_OP_MovementRigidAttachToCP.m_nControlPointNumber = jsonData["C_OP_MovementRigidAttachToCP"]["m_nControlPointNumber"];
C_OP_MovementRigidAttachToCP.m_nScaleControlPoint = jsonData["C_OP_MovementRigidAttachToCP"]["m_nScaleControlPoint"];
C_OP_MovementRigidAttachToCP.m_nScaleCPField = jsonData["C_OP_MovementRigidAttachToCP"]["m_nScaleCPField"];
C_OP_MovementRigidAttachToCP.m_nFieldInput = jsonData["C_OP_MovementRigidAttachToCP"]["m_nFieldInput"];
C_OP_MovementRigidAttachToCP.m_nFieldOutput = jsonData["C_OP_MovementRigidAttachToCP"]["m_nFieldOutput"];
C_OP_MovementRigidAttachToCP.m_bOffsetLocal = jsonData["C_OP_MovementRigidAttachToCP"]["m_bOffsetLocal"];

// Atribuições para C_OP_RenderFlattenGrass
// C_OP_RenderFlattenGrass Offsets
C_OP_RenderFlattenGrass.m_flFlattenStrength = jsonData["C_OP_RenderFlattenGrass"]["m_flFlattenStrength"];
C_OP_RenderFlattenGrass.m_nStrengthFieldOverride = jsonData["C_OP_RenderFlattenGrass"]["m_nStrengthFieldOverride"];
C_OP_RenderFlattenGrass.m_flRadiusScale = jsonData["C_OP_RenderFlattenGrass"]["m_flRadiusScale"];

// Atribuições para C_OP_RenderLightBeam
// C_OP_RenderLightBeam Offsets
C_OP_RenderLightBeam.m_vColorBlend = jsonData["C_OP_RenderLightBeam"]["m_vColorBlend"];
C_OP_RenderLightBeam.m_nColorBlendType = jsonData["C_OP_RenderLightBeam"]["m_nColorBlendType"];
C_OP_RenderLightBeam.m_flBrightnessLumensPerMeter = jsonData["C_OP_RenderLightBeam"]["m_flBrightnessLumensPerMeter"];
C_OP_RenderLightBeam.m_bCastShadows = jsonData["C_OP_RenderLightBeam"]["m_bCastShadows"];
C_OP_RenderLightBeam.m_flSkirt = jsonData["C_OP_RenderLightBeam"]["m_flSkirt"];
C_OP_RenderLightBeam.m_flRange = jsonData["C_OP_RenderLightBeam"]["m_flRange"];
C_OP_RenderLightBeam.m_flThickness = jsonData["C_OP_RenderLightBeam"]["m_flThickness"];

// Atribuições para C_OP_EnableChildrenFromParentParticleCount
// C_OP_EnableChildrenFromParentParticleCount Offsets
C_OP_EnableChildrenFromParentParticleCount.m_nChildGroupID = jsonData["C_OP_EnableChildrenFromParentParticleCount"]["m_nChildGroupID"];
C_OP_EnableChildrenFromParentParticleCount.m_nFirstChild = jsonData["C_OP_EnableChildrenFromParentParticleCount"]["m_nFirstChild"];
C_OP_EnableChildrenFromParentParticleCount.m_nNumChildrenToEnable = jsonData["C_OP_EnableChildrenFromParentParticleCount"]["m_nNumChildrenToEnable"];
C_OP_EnableChildrenFromParentParticleCount.m_bDisableChildren = jsonData["C_OP_EnableChildrenFromParentParticleCount"]["m_bDisableChildren"];
C_OP_EnableChildrenFromParentParticleCount.m_bPlayEndcapOnStop = jsonData["C_OP_EnableChildrenFromParentParticleCount"]["m_bPlayEndcapOnStop"];
C_OP_EnableChildrenFromParentParticleCount.m_bDestroyImmediately = jsonData["C_OP_EnableChildrenFromParentParticleCount"]["m_bDestroyImmediately"];

// Atribuições para C_INIT_DistanceToCPInit
// C_INIT_DistanceToCPInit Offsets
C_INIT_DistanceToCPInit.m_nFieldOutput = jsonData["C_INIT_DistanceToCPInit"]["m_nFieldOutput"];
C_INIT_DistanceToCPInit.m_flInputMin = jsonData["C_INIT_DistanceToCPInit"]["m_flInputMin"];
C_INIT_DistanceToCPInit.m_flInputMax = jsonData["C_INIT_DistanceToCPInit"]["m_flInputMax"];
C_INIT_DistanceToCPInit.m_flOutputMin = jsonData["C_INIT_DistanceToCPInit"]["m_flOutputMin"];
C_INIT_DistanceToCPInit.m_flOutputMax = jsonData["C_INIT_DistanceToCPInit"]["m_flOutputMax"];
C_INIT_DistanceToCPInit.m_nStartCP = jsonData["C_INIT_DistanceToCPInit"]["m_nStartCP"];
C_INIT_DistanceToCPInit.m_bLOS = jsonData["C_INIT_DistanceToCPInit"]["m_bLOS"];
C_INIT_DistanceToCPInit.m_CollisionGroupName = jsonData["C_INIT_DistanceToCPInit"]["m_CollisionGroupName"];
C_INIT_DistanceToCPInit.m_nTraceSet = jsonData["C_INIT_DistanceToCPInit"]["m_nTraceSet"];
C_INIT_DistanceToCPInit.m_flMaxTraceLength = jsonData["C_INIT_DistanceToCPInit"]["m_flMaxTraceLength"];
C_INIT_DistanceToCPInit.m_flLOSScale = jsonData["C_INIT_DistanceToCPInit"]["m_flLOSScale"];
C_INIT_DistanceToCPInit.m_nSetMethod = jsonData["C_INIT_DistanceToCPInit"]["m_nSetMethod"];
C_INIT_DistanceToCPInit.m_bActiveRange = jsonData["C_INIT_DistanceToCPInit"]["m_bActiveRange"];
C_INIT_DistanceToCPInit.m_vecDistanceScale = jsonData["C_INIT_DistanceToCPInit"]["m_vecDistanceScale"];
C_INIT_DistanceToCPInit.m_flRemapBias = jsonData["C_INIT_DistanceToCPInit"]["m_flRemapBias"];

// Atribuições para CReplicationParameters
// CReplicationParameters Offsets
CReplicationParameters.m_nReplicationMode = jsonData["CReplicationParameters"]["m_nReplicationMode"];
CReplicationParameters.m_bScaleChildParticleRadii = jsonData["CReplicationParameters"]["m_bScaleChildParticleRadii"];
CReplicationParameters.m_flMinRandomRadiusScale = jsonData["CReplicationParameters"]["m_flMinRandomRadiusScale"];
CReplicationParameters.m_flMaxRandomRadiusScale = jsonData["CReplicationParameters"]["m_flMaxRandomRadiusScale"];
CReplicationParameters.m_vMinRandomDisplacement = jsonData["CReplicationParameters"]["m_vMinRandomDisplacement"];
CReplicationParameters.m_vMaxRandomDisplacement = jsonData["CReplicationParameters"]["m_vMaxRandomDisplacement"];
CReplicationParameters.m_flModellingScale = jsonData["CReplicationParameters"]["m_flModellingScale"];

// Atribuições para C_OP_ForceBasedOnDistanceToPlane
// C_OP_ForceBasedOnDistanceToPlane Offsets
C_OP_ForceBasedOnDistanceToPlane.m_flMinDist = jsonData["C_OP_ForceBasedOnDistanceToPlane"]["m_flMinDist"];
C_OP_ForceBasedOnDistanceToPlane.m_vecForceAtMinDist = jsonData["C_OP_ForceBasedOnDistanceToPlane"]["m_vecForceAtMinDist"];
C_OP_ForceBasedOnDistanceToPlane.m_flMaxDist = jsonData["C_OP_ForceBasedOnDistanceToPlane"]["m_flMaxDist"];
C_OP_ForceBasedOnDistanceToPlane.m_vecForceAtMaxDist = jsonData["C_OP_ForceBasedOnDistanceToPlane"]["m_vecForceAtMaxDist"];
C_OP_ForceBasedOnDistanceToPlane.m_vecPlaneNormal = jsonData["C_OP_ForceBasedOnDistanceToPlane"]["m_vecPlaneNormal"];
C_OP_ForceBasedOnDistanceToPlane.m_nControlPointNumber = jsonData["C_OP_ForceBasedOnDistanceToPlane"]["m_nControlPointNumber"];
C_OP_ForceBasedOnDistanceToPlane.m_flExponent = jsonData["C_OP_ForceBasedOnDistanceToPlane"]["m_flExponent"];

// Atribuições para C_OP_RemapDensityToVector
// C_OP_RemapDensityToVector Offsets
C_OP_RemapDensityToVector.m_flRadiusScale = jsonData["C_OP_RemapDensityToVector"]["m_flRadiusScale"];
C_OP_RemapDensityToVector.m_nFieldOutput = jsonData["C_OP_RemapDensityToVector"]["m_nFieldOutput"];
C_OP_RemapDensityToVector.m_flDensityMin = jsonData["C_OP_RemapDensityToVector"]["m_flDensityMin"];
C_OP_RemapDensityToVector.m_flDensityMax = jsonData["C_OP_RemapDensityToVector"]["m_flDensityMax"];
C_OP_RemapDensityToVector.m_vecOutputMin = jsonData["C_OP_RemapDensityToVector"]["m_vecOutputMin"];
C_OP_RemapDensityToVector.m_vecOutputMax = jsonData["C_OP_RemapDensityToVector"]["m_vecOutputMax"];
C_OP_RemapDensityToVector.m_bUseParentDensity = jsonData["C_OP_RemapDensityToVector"]["m_bUseParentDensity"];
C_OP_RemapDensityToVector.m_nVoxelGridResolution = jsonData["C_OP_RemapDensityToVector"]["m_nVoxelGridResolution"];

// Atribuições para ParticleControlPointConfiguration_t
// ParticleControlPointConfiguration_t Offsets
ParticleControlPointConfiguration_t.m_name = jsonData["ParticleControlPointConfiguration_t"]["m_name"];
ParticleControlPointConfiguration_t.m_drivers = jsonData["ParticleControlPointConfiguration_t"]["m_drivers"];
ParticleControlPointConfiguration_t.m_previewState = jsonData["ParticleControlPointConfiguration_t"]["m_previewState"];

// Atribuições para C_INIT_SetRigidAttachment
// C_INIT_SetRigidAttachment Offsets
C_INIT_SetRigidAttachment.m_nControlPointNumber = jsonData["C_INIT_SetRigidAttachment"]["m_nControlPointNumber"];
C_INIT_SetRigidAttachment.m_nFieldInput = jsonData["C_INIT_SetRigidAttachment"]["m_nFieldInput"];
C_INIT_SetRigidAttachment.m_nFieldOutput = jsonData["C_INIT_SetRigidAttachment"]["m_nFieldOutput"];
C_INIT_SetRigidAttachment.m_bLocalSpace = jsonData["C_INIT_SetRigidAttachment"]["m_bLocalSpace"];

// Atribuições para MaterialVariable_t
// MaterialVariable_t Offsets
MaterialVariable_t.m_strVariable = jsonData["MaterialVariable_t"]["m_strVariable"];
MaterialVariable_t.m_nVariableField = jsonData["MaterialVariable_t"]["m_nVariableField"];
MaterialVariable_t.m_flScale = jsonData["MaterialVariable_t"]["m_flScale"];

// Atribuições para C_OP_RemapSpeed
// C_OP_RemapSpeed Offsets
C_OP_RemapSpeed.m_nFieldOutput = jsonData["C_OP_RemapSpeed"]["m_nFieldOutput"];
C_OP_RemapSpeed.m_flInputMin = jsonData["C_OP_RemapSpeed"]["m_flInputMin"];
C_OP_RemapSpeed.m_flInputMax = jsonData["C_OP_RemapSpeed"]["m_flInputMax"];
C_OP_RemapSpeed.m_flOutputMin = jsonData["C_OP_RemapSpeed"]["m_flOutputMin"];
C_OP_RemapSpeed.m_flOutputMax = jsonData["C_OP_RemapSpeed"]["m_flOutputMax"];
C_OP_RemapSpeed.m_nSetMethod = jsonData["C_OP_RemapSpeed"]["m_nSetMethod"];
C_OP_RemapSpeed.m_bIgnoreDelta = jsonData["C_OP_RemapSpeed"]["m_bIgnoreDelta"];

// Atribuições para C_OP_RenderModels
// C_OP_RenderModels Offsets
C_OP_RenderModels.m_bOnlyRenderInEffectsBloomPass = jsonData["C_OP_RenderModels"]["m_bOnlyRenderInEffectsBloomPass"];
C_OP_RenderModels.m_bOnlyRenderInEffectsWaterPass = jsonData["C_OP_RenderModels"]["m_bOnlyRenderInEffectsWaterPass"];
C_OP_RenderModels.m_bUseMixedResolutionRendering = jsonData["C_OP_RenderModels"]["m_bUseMixedResolutionRendering"];
C_OP_RenderModels.m_bOnlyRenderInEffecsGameOverlay = jsonData["C_OP_RenderModels"]["m_bOnlyRenderInEffecsGameOverlay"];
C_OP_RenderModels.m_ModelList = jsonData["C_OP_RenderModels"]["m_ModelList"];
C_OP_RenderModels.m_nBodyGroupField = jsonData["C_OP_RenderModels"]["m_nBodyGroupField"];
C_OP_RenderModels.m_nSubModelField = jsonData["C_OP_RenderModels"]["m_nSubModelField"];
C_OP_RenderModels.m_bIgnoreNormal = jsonData["C_OP_RenderModels"]["m_bIgnoreNormal"];
C_OP_RenderModels.m_bOrientZ = jsonData["C_OP_RenderModels"]["m_bOrientZ"];
C_OP_RenderModels.m_bCenterOffset = jsonData["C_OP_RenderModels"]["m_bCenterOffset"];
C_OP_RenderModels.m_vecLocalOffset = jsonData["C_OP_RenderModels"]["m_vecLocalOffset"];
C_OP_RenderModels.m_vecLocalRotation = jsonData["C_OP_RenderModels"]["m_vecLocalRotation"];
C_OP_RenderModels.m_bIgnoreRadius = jsonData["C_OP_RenderModels"]["m_bIgnoreRadius"];
C_OP_RenderModels.m_nModelScaleCP = jsonData["C_OP_RenderModels"]["m_nModelScaleCP"];
C_OP_RenderModels.m_vecComponentScale = jsonData["C_OP_RenderModels"]["m_vecComponentScale"];
C_OP_RenderModels.m_bLocalScale = jsonData["C_OP_RenderModels"]["m_bLocalScale"];
C_OP_RenderModels.m_nSizeCullBloat = jsonData["C_OP_RenderModels"]["m_nSizeCullBloat"];
C_OP_RenderModels.m_bAnimated = jsonData["C_OP_RenderModels"]["m_bAnimated"];
C_OP_RenderModels.m_flAnimationRate = jsonData["C_OP_RenderModels"]["m_flAnimationRate"];
C_OP_RenderModels.m_bScaleAnimationRate = jsonData["C_OP_RenderModels"]["m_bScaleAnimationRate"];
C_OP_RenderModels.m_bForceLoopingAnimation = jsonData["C_OP_RenderModels"]["m_bForceLoopingAnimation"];
C_OP_RenderModels.m_bResetAnimOnStop = jsonData["C_OP_RenderModels"]["m_bResetAnimOnStop"];
C_OP_RenderModels.m_bManualAnimFrame = jsonData["C_OP_RenderModels"]["m_bManualAnimFrame"];
C_OP_RenderModels.m_nAnimationScaleField = jsonData["C_OP_RenderModels"]["m_nAnimationScaleField"];
C_OP_RenderModels.m_nAnimationField = jsonData["C_OP_RenderModels"]["m_nAnimationField"];
C_OP_RenderModels.m_nManualFrameField = jsonData["C_OP_RenderModels"]["m_nManualFrameField"];
C_OP_RenderModels.m_ActivityName = jsonData["C_OP_RenderModels"]["m_ActivityName"];
C_OP_RenderModels.m_SequenceName = jsonData["C_OP_RenderModels"]["m_SequenceName"];
C_OP_RenderModels.m_bEnableClothSimulation = jsonData["C_OP_RenderModels"]["m_bEnableClothSimulation"];
C_OP_RenderModels.m_ClothEffectName = jsonData["C_OP_RenderModels"]["m_ClothEffectName"];
C_OP_RenderModels.m_hOverrideMaterial = jsonData["C_OP_RenderModels"]["m_hOverrideMaterial"];
C_OP_RenderModels.m_bOverrideTranslucentMaterials = jsonData["C_OP_RenderModels"]["m_bOverrideTranslucentMaterials"];
C_OP_RenderModels.m_nSkin = jsonData["C_OP_RenderModels"]["m_nSkin"];
C_OP_RenderModels.m_MaterialVars = jsonData["C_OP_RenderModels"]["m_MaterialVars"];
C_OP_RenderModels.m_flManualModelSelection = jsonData["C_OP_RenderModels"]["m_flManualModelSelection"];
C_OP_RenderModels.m_modelInput = jsonData["C_OP_RenderModels"]["m_modelInput"];
C_OP_RenderModels.m_nLOD = jsonData["C_OP_RenderModels"]["m_nLOD"];
C_OP_RenderModels.m_EconSlotName = jsonData["C_OP_RenderModels"]["m_EconSlotName"];
C_OP_RenderModels.m_bOriginalModel = jsonData["C_OP_RenderModels"]["m_bOriginalModel"];
C_OP_RenderModels.m_bSuppressTint = jsonData["C_OP_RenderModels"]["m_bSuppressTint"];
C_OP_RenderModels.m_nSubModelFieldType = jsonData["C_OP_RenderModels"]["m_nSubModelFieldType"];
C_OP_RenderModels.m_bDisableShadows = jsonData["C_OP_RenderModels"]["m_bDisableShadows"];
C_OP_RenderModels.m_bDisableDepthPrepass = jsonData["C_OP_RenderModels"]["m_bDisableDepthPrepass"];
C_OP_RenderModels.m_bAcceptsDecals = jsonData["C_OP_RenderModels"]["m_bAcceptsDecals"];
C_OP_RenderModels.m_bForceDrawInterlevedWithSiblings = jsonData["C_OP_RenderModels"]["m_bForceDrawInterlevedWithSiblings"];
C_OP_RenderModels.m_bDoNotDrawInParticlePass = jsonData["C_OP_RenderModels"]["m_bDoNotDrawInParticlePass"];
C_OP_RenderModels.m_bAllowApproximateTransforms = jsonData["C_OP_RenderModels"]["m_bAllowApproximateTransforms"];
C_OP_RenderModels.m_szRenderAttribute = jsonData["C_OP_RenderModels"]["m_szRenderAttribute"];
C_OP_RenderModels.m_flRadiusScale = jsonData["C_OP_RenderModels"]["m_flRadiusScale"];
C_OP_RenderModels.m_flAlphaScale = jsonData["C_OP_RenderModels"]["m_flAlphaScale"];
C_OP_RenderModels.m_flRollScale = jsonData["C_OP_RenderModels"]["m_flRollScale"];
C_OP_RenderModels.m_nAlpha2Field = jsonData["C_OP_RenderModels"]["m_nAlpha2Field"];
C_OP_RenderModels.m_vecColorScale = jsonData["C_OP_RenderModels"]["m_vecColorScale"];
C_OP_RenderModels.m_nColorBlendType = jsonData["C_OP_RenderModels"]["m_nColorBlendType"];

// Atribuições para C_OP_RenderClientPhysicsImpulse
// C_OP_RenderClientPhysicsImpulse Offsets
C_OP_RenderClientPhysicsImpulse.m_flRadius = jsonData["C_OP_RenderClientPhysicsImpulse"]["m_flRadius"];
C_OP_RenderClientPhysicsImpulse.m_flMagnitude = jsonData["C_OP_RenderClientPhysicsImpulse"]["m_flMagnitude"];
C_OP_RenderClientPhysicsImpulse.m_nSimIdFilter = jsonData["C_OP_RenderClientPhysicsImpulse"]["m_nSimIdFilter"];

// Atribuições para CParticleFunctionEmitter
// CParticleFunctionEmitter Offsets
CParticleFunctionEmitter.m_nEmitterIndex = jsonData["CParticleFunctionEmitter"]["m_nEmitterIndex"];

// Atribuições para C_OP_SetControlPointOrientationToCPVelocity
// C_OP_SetControlPointOrientationToCPVelocity Offsets
C_OP_SetControlPointOrientationToCPVelocity.m_nCPInput = jsonData["C_OP_SetControlPointOrientationToCPVelocity"]["m_nCPInput"];
C_OP_SetControlPointOrientationToCPVelocity.m_nCPOutput = jsonData["C_OP_SetControlPointOrientationToCPVelocity"]["m_nCPOutput"];

// Atribuições para C_OP_RopeSpringConstraint
// C_OP_RopeSpringConstraint Offsets
C_OP_RopeSpringConstraint.m_flRestLength = jsonData["C_OP_RopeSpringConstraint"]["m_flRestLength"];
C_OP_RopeSpringConstraint.m_flMinDistance = jsonData["C_OP_RopeSpringConstraint"]["m_flMinDistance"];
C_OP_RopeSpringConstraint.m_flMaxDistance = jsonData["C_OP_RopeSpringConstraint"]["m_flMaxDistance"];
C_OP_RopeSpringConstraint.m_flAdjustmentScale = jsonData["C_OP_RopeSpringConstraint"]["m_flAdjustmentScale"];
C_OP_RopeSpringConstraint.m_flInitialRestingLength = jsonData["C_OP_RopeSpringConstraint"]["m_flInitialRestingLength"];

// Atribuições para C_INIT_PositionWarpScalar
// C_INIT_PositionWarpScalar Offsets
C_INIT_PositionWarpScalar.m_vecWarpMin = jsonData["C_INIT_PositionWarpScalar"]["m_vecWarpMin"];
C_INIT_PositionWarpScalar.m_vecWarpMax = jsonData["C_INIT_PositionWarpScalar"]["m_vecWarpMax"];
C_INIT_PositionWarpScalar.m_InputValue = jsonData["C_INIT_PositionWarpScalar"]["m_InputValue"];
C_INIT_PositionWarpScalar.m_flPrevPosScale = jsonData["C_INIT_PositionWarpScalar"]["m_flPrevPosScale"];
C_INIT_PositionWarpScalar.m_nScaleControlPointNumber = jsonData["C_INIT_PositionWarpScalar"]["m_nScaleControlPointNumber"];
C_INIT_PositionWarpScalar.m_nControlPointNumber = jsonData["C_INIT_PositionWarpScalar"]["m_nControlPointNumber"];

// Atribuições para C_OP_ForceControlPointStub
// C_OP_ForceControlPointStub Offsets
C_OP_ForceControlPointStub.m_ControlPoint = jsonData["C_OP_ForceControlPointStub"]["m_ControlPoint"];

// Atribuições para C_OP_VectorNoise
// C_OP_VectorNoise Offsets
C_OP_VectorNoise.m_nFieldOutput = jsonData["C_OP_VectorNoise"]["m_nFieldOutput"];
C_OP_VectorNoise.m_vecOutputMin = jsonData["C_OP_VectorNoise"]["m_vecOutputMin"];
C_OP_VectorNoise.m_vecOutputMax = jsonData["C_OP_VectorNoise"]["m_vecOutputMax"];
C_OP_VectorNoise.m_fl4NoiseScale = jsonData["C_OP_VectorNoise"]["m_fl4NoiseScale"];
C_OP_VectorNoise.m_bAdditive = jsonData["C_OP_VectorNoise"]["m_bAdditive"];
C_OP_VectorNoise.m_bOffset = jsonData["C_OP_VectorNoise"]["m_bOffset"];
C_OP_VectorNoise.m_flNoiseAnimationTimeScale = jsonData["C_OP_VectorNoise"]["m_flNoiseAnimationTimeScale"];

// Atribuições para C_OP_RemapParticleCountToScalar
// C_OP_RemapParticleCountToScalar Offsets
C_OP_RemapParticleCountToScalar.m_nFieldOutput = jsonData["C_OP_RemapParticleCountToScalar"]["m_nFieldOutput"];
C_OP_RemapParticleCountToScalar.m_nInputMin = jsonData["C_OP_RemapParticleCountToScalar"]["m_nInputMin"];
C_OP_RemapParticleCountToScalar.m_nInputMax = jsonData["C_OP_RemapParticleCountToScalar"]["m_nInputMax"];
C_OP_RemapParticleCountToScalar.m_flOutputMin = jsonData["C_OP_RemapParticleCountToScalar"]["m_flOutputMin"];
C_OP_RemapParticleCountToScalar.m_flOutputMax = jsonData["C_OP_RemapParticleCountToScalar"]["m_flOutputMax"];
C_OP_RemapParticleCountToScalar.m_bActiveRange = jsonData["C_OP_RemapParticleCountToScalar"]["m_bActiveRange"];
C_OP_RemapParticleCountToScalar.m_nSetMethod = jsonData["C_OP_RemapParticleCountToScalar"]["m_nSetMethod"];

// Atribuições para C_INIT_QuantizeFloat
// C_INIT_QuantizeFloat Offsets
C_INIT_QuantizeFloat.m_InputValue = jsonData["C_INIT_QuantizeFloat"]["m_InputValue"];
C_INIT_QuantizeFloat.m_nOutputField = jsonData["C_INIT_QuantizeFloat"]["m_nOutputField"];

// Atribuições para C_OP_RemapModelVolumetoCP
// C_OP_RemapModelVolumetoCP Offsets
C_OP_RemapModelVolumetoCP.m_nBBoxType = jsonData["C_OP_RemapModelVolumetoCP"]["m_nBBoxType"];
C_OP_RemapModelVolumetoCP.m_nInControlPointNumber = jsonData["C_OP_RemapModelVolumetoCP"]["m_nInControlPointNumber"];
C_OP_RemapModelVolumetoCP.m_nOutControlPointNumber = jsonData["C_OP_RemapModelVolumetoCP"]["m_nOutControlPointNumber"];
C_OP_RemapModelVolumetoCP.m_nOutControlPointMaxNumber = jsonData["C_OP_RemapModelVolumetoCP"]["m_nOutControlPointMaxNumber"];
C_OP_RemapModelVolumetoCP.m_nField = jsonData["C_OP_RemapModelVolumetoCP"]["m_nField"];
C_OP_RemapModelVolumetoCP.m_flInputMin = jsonData["C_OP_RemapModelVolumetoCP"]["m_flInputMin"];
C_OP_RemapModelVolumetoCP.m_flInputMax = jsonData["C_OP_RemapModelVolumetoCP"]["m_flInputMax"];
C_OP_RemapModelVolumetoCP.m_flOutputMin = jsonData["C_OP_RemapModelVolumetoCP"]["m_flOutputMin"];
C_OP_RemapModelVolumetoCP.m_flOutputMax = jsonData["C_OP_RemapModelVolumetoCP"]["m_flOutputMax"];
C_OP_RemapModelVolumetoCP.m_bBBoxOnly = jsonData["C_OP_RemapModelVolumetoCP"]["m_bBBoxOnly"];
C_OP_RemapModelVolumetoCP.m_bCubeRoot = jsonData["C_OP_RemapModelVolumetoCP"]["m_bCubeRoot"];

// Atribuições para C_OP_SetToCP
// C_OP_SetToCP Offsets
C_OP_SetToCP.m_nControlPointNumber = jsonData["C_OP_SetToCP"]["m_nControlPointNumber"];
C_OP_SetToCP.m_vecOffset = jsonData["C_OP_SetToCP"]["m_vecOffset"];
C_OP_SetToCP.m_bOffsetLocal = jsonData["C_OP_SetToCP"]["m_bOffsetLocal"];

// Atribuições para ParticleControlPointDriver_t
// ParticleControlPointDriver_t Offsets
ParticleControlPointDriver_t.m_iControlPoint = jsonData["ParticleControlPointDriver_t"]["m_iControlPoint"];
ParticleControlPointDriver_t.m_iAttachType = jsonData["ParticleControlPointDriver_t"]["m_iAttachType"];
ParticleControlPointDriver_t.m_attachmentName = jsonData["ParticleControlPointDriver_t"]["m_attachmentName"];
ParticleControlPointDriver_t.m_vecOffset = jsonData["ParticleControlPointDriver_t"]["m_vecOffset"];
ParticleControlPointDriver_t.m_angOffset = jsonData["ParticleControlPointDriver_t"]["m_angOffset"];
ParticleControlPointDriver_t.m_entityName = jsonData["ParticleControlPointDriver_t"]["m_entityName"];

// Atribuições para C_OP_ParentVortices
// C_OP_ParentVortices Offsets
C_OP_ParentVortices.m_flForceScale = jsonData["C_OP_ParentVortices"]["m_flForceScale"];
C_OP_ParentVortices.m_vecTwistAxis = jsonData["C_OP_ParentVortices"]["m_vecTwistAxis"];
C_OP_ParentVortices.m_bFlipBasedOnYaw = jsonData["C_OP_ParentVortices"]["m_bFlipBasedOnYaw"];

// Atribuições para C_OP_SetControlPointToCPVelocity
// C_OP_SetControlPointToCPVelocity Offsets
C_OP_SetControlPointToCPVelocity.m_nCPInput = jsonData["C_OP_SetControlPointToCPVelocity"]["m_nCPInput"];
C_OP_SetControlPointToCPVelocity.m_nCPOutputVel = jsonData["C_OP_SetControlPointToCPVelocity"]["m_nCPOutputVel"];
C_OP_SetControlPointToCPVelocity.m_bNormalize = jsonData["C_OP_SetControlPointToCPVelocity"]["m_bNormalize"];
C_OP_SetControlPointToCPVelocity.m_nCPOutputMag = jsonData["C_OP_SetControlPointToCPVelocity"]["m_nCPOutputMag"];
C_OP_SetControlPointToCPVelocity.m_nCPField = jsonData["C_OP_SetControlPointToCPVelocity"]["m_nCPField"];
C_OP_SetControlPointToCPVelocity.m_vecComparisonVelocity = jsonData["C_OP_SetControlPointToCPVelocity"]["m_vecComparisonVelocity"];

// Atribuições para C_OP_ClientPhysics
// C_OP_ClientPhysics Offsets
C_OP_ClientPhysics.m_strPhysicsType = jsonData["C_OP_ClientPhysics"]["m_strPhysicsType"];
C_OP_ClientPhysics.m_bStartAsleep = jsonData["C_OP_ClientPhysics"]["m_bStartAsleep"];
C_OP_ClientPhysics.m_flPlayerWakeRadius = jsonData["C_OP_ClientPhysics"]["m_flPlayerWakeRadius"];
C_OP_ClientPhysics.m_flVehicleWakeRadius = jsonData["C_OP_ClientPhysics"]["m_flVehicleWakeRadius"];
C_OP_ClientPhysics.m_bUseHighQualitySimulation = jsonData["C_OP_ClientPhysics"]["m_bUseHighQualitySimulation"];
C_OP_ClientPhysics.m_nMaxParticleCount = jsonData["C_OP_ClientPhysics"]["m_nMaxParticleCount"];
C_OP_ClientPhysics.m_bRespectExclusionVolumes = jsonData["C_OP_ClientPhysics"]["m_bRespectExclusionVolumes"];
C_OP_ClientPhysics.m_bKillParticles = jsonData["C_OP_ClientPhysics"]["m_bKillParticles"];
C_OP_ClientPhysics.m_bDeleteSim = jsonData["C_OP_ClientPhysics"]["m_bDeleteSim"];
C_OP_ClientPhysics.m_nControlPoint = jsonData["C_OP_ClientPhysics"]["m_nControlPoint"];
C_OP_ClientPhysics.m_nColorBlendType = jsonData["C_OP_ClientPhysics"]["m_nColorBlendType"];

// Atribuições para PointDefinitionWithTimeValues_t
// PointDefinitionWithTimeValues_t Offsets
PointDefinitionWithTimeValues_t.m_flTimeDuration = jsonData["PointDefinitionWithTimeValues_t"]["m_flTimeDuration"];

// Atribuições para RenderProjectedMaterial_t
// RenderProjectedMaterial_t Offsets
RenderProjectedMaterial_t.m_hMaterial = jsonData["RenderProjectedMaterial_t"]["m_hMaterial"];

// Atribuições para C_OP_ExternalWindForce
// C_OP_ExternalWindForce Offsets
C_OP_ExternalWindForce.m_vecSamplePosition = jsonData["C_OP_ExternalWindForce"]["m_vecSamplePosition"];
C_OP_ExternalWindForce.m_vecScale = jsonData["C_OP_ExternalWindForce"]["m_vecScale"];
C_OP_ExternalWindForce.m_bSampleWind = jsonData["C_OP_ExternalWindForce"]["m_bSampleWind"];
C_OP_ExternalWindForce.m_bSampleWater = jsonData["C_OP_ExternalWindForce"]["m_bSampleWater"];
C_OP_ExternalWindForce.m_bDampenNearWaterPlane = jsonData["C_OP_ExternalWindForce"]["m_bDampenNearWaterPlane"];
C_OP_ExternalWindForce.m_bSampleGravity = jsonData["C_OP_ExternalWindForce"]["m_bSampleGravity"];
C_OP_ExternalWindForce.m_vecGravityForce = jsonData["C_OP_ExternalWindForce"]["m_vecGravityForce"];
C_OP_ExternalWindForce.m_bUseBasicMovementGravity = jsonData["C_OP_ExternalWindForce"]["m_bUseBasicMovementGravity"];
C_OP_ExternalWindForce.m_flLocalGravityScale = jsonData["C_OP_ExternalWindForce"]["m_flLocalGravityScale"];
C_OP_ExternalWindForce.m_flLocalBuoyancyScale = jsonData["C_OP_ExternalWindForce"]["m_flLocalBuoyancyScale"];
C_OP_ExternalWindForce.m_vecBuoyancyForce = jsonData["C_OP_ExternalWindForce"]["m_vecBuoyancyForce"];

// Atribuições para C_INIT_ModelCull
// C_INIT_ModelCull Offsets
C_INIT_ModelCull.m_nControlPointNumber = jsonData["C_INIT_ModelCull"]["m_nControlPointNumber"];
C_INIT_ModelCull.m_bBoundBox = jsonData["C_INIT_ModelCull"]["m_bBoundBox"];
C_INIT_ModelCull.m_bCullOutside = jsonData["C_INIT_ModelCull"]["m_bCullOutside"];
C_INIT_ModelCull.m_bUseBones = jsonData["C_INIT_ModelCull"]["m_bUseBones"];
C_INIT_ModelCull.m_HitboxSetName = jsonData["C_INIT_ModelCull"]["m_HitboxSetName"];

// Atribuições para C_OP_RenderSprites
// C_OP_RenderSprites Offsets
C_OP_RenderSprites.m_nSequenceOverride = jsonData["C_OP_RenderSprites"]["m_nSequenceOverride"];
C_OP_RenderSprites.m_nOrientationType = jsonData["C_OP_RenderSprites"]["m_nOrientationType"];
C_OP_RenderSprites.m_nOrientationControlPoint = jsonData["C_OP_RenderSprites"]["m_nOrientationControlPoint"];
C_OP_RenderSprites.m_bUseYawWithNormalAligned = jsonData["C_OP_RenderSprites"]["m_bUseYawWithNormalAligned"];
C_OP_RenderSprites.m_flMinSize = jsonData["C_OP_RenderSprites"]["m_flMinSize"];
C_OP_RenderSprites.m_flMaxSize = jsonData["C_OP_RenderSprites"]["m_flMaxSize"];
C_OP_RenderSprites.m_flAlphaAdjustWithSizeAdjust = jsonData["C_OP_RenderSprites"]["m_flAlphaAdjustWithSizeAdjust"];
C_OP_RenderSprites.m_flStartFadeSize = jsonData["C_OP_RenderSprites"]["m_flStartFadeSize"];
C_OP_RenderSprites.m_flEndFadeSize = jsonData["C_OP_RenderSprites"]["m_flEndFadeSize"];
C_OP_RenderSprites.m_flStartFadeDot = jsonData["C_OP_RenderSprites"]["m_flStartFadeDot"];
C_OP_RenderSprites.m_flEndFadeDot = jsonData["C_OP_RenderSprites"]["m_flEndFadeDot"];
C_OP_RenderSprites.m_bDistanceAlpha = jsonData["C_OP_RenderSprites"]["m_bDistanceAlpha"];
C_OP_RenderSprites.m_bSoftEdges = jsonData["C_OP_RenderSprites"]["m_bSoftEdges"];
C_OP_RenderSprites.m_flEdgeSoftnessStart = jsonData["C_OP_RenderSprites"]["m_flEdgeSoftnessStart"];
C_OP_RenderSprites.m_flEdgeSoftnessEnd = jsonData["C_OP_RenderSprites"]["m_flEdgeSoftnessEnd"];
C_OP_RenderSprites.m_bOutline = jsonData["C_OP_RenderSprites"]["m_bOutline"];
C_OP_RenderSprites.m_OutlineColor = jsonData["C_OP_RenderSprites"]["m_OutlineColor"];
C_OP_RenderSprites.m_nOutlineAlpha = jsonData["C_OP_RenderSprites"]["m_nOutlineAlpha"];
C_OP_RenderSprites.m_flOutlineStart0 = jsonData["C_OP_RenderSprites"]["m_flOutlineStart0"];
C_OP_RenderSprites.m_flOutlineStart1 = jsonData["C_OP_RenderSprites"]["m_flOutlineStart1"];
C_OP_RenderSprites.m_flOutlineEnd0 = jsonData["C_OP_RenderSprites"]["m_flOutlineEnd0"];
C_OP_RenderSprites.m_flOutlineEnd1 = jsonData["C_OP_RenderSprites"]["m_flOutlineEnd1"];
C_OP_RenderSprites.m_nLightingMode = jsonData["C_OP_RenderSprites"]["m_nLightingMode"];
C_OP_RenderSprites.m_flLightingTessellation = jsonData["C_OP_RenderSprites"]["m_flLightingTessellation"];
C_OP_RenderSprites.m_flLightingDirectionality = jsonData["C_OP_RenderSprites"]["m_flLightingDirectionality"];
C_OP_RenderSprites.m_bParticleShadows = jsonData["C_OP_RenderSprites"]["m_bParticleShadows"];
C_OP_RenderSprites.m_flShadowDensity = jsonData["C_OP_RenderSprites"]["m_flShadowDensity"];
C_OP_RenderSprites.m_replicationParameters = jsonData["C_OP_RenderSprites"]["m_replicationParameters"];

// Atribuições para C_OP_PercentageBetweenTransformLerpCPs
// C_OP_PercentageBetweenTransformLerpCPs Offsets
C_OP_PercentageBetweenTransformLerpCPs.m_nFieldOutput = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_nFieldOutput"];
C_OP_PercentageBetweenTransformLerpCPs.m_flInputMin = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_flInputMin"];
C_OP_PercentageBetweenTransformLerpCPs.m_flInputMax = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_flInputMax"];
C_OP_PercentageBetweenTransformLerpCPs.m_TransformStart = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_TransformStart"];
C_OP_PercentageBetweenTransformLerpCPs.m_TransformEnd = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_TransformEnd"];
C_OP_PercentageBetweenTransformLerpCPs.m_nOutputStartCP = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_nOutputStartCP"];
C_OP_PercentageBetweenTransformLerpCPs.m_nOutputStartField = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_nOutputStartField"];
C_OP_PercentageBetweenTransformLerpCPs.m_nOutputEndCP = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_nOutputEndCP"];
C_OP_PercentageBetweenTransformLerpCPs.m_nOutputEndField = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_nOutputEndField"];
C_OP_PercentageBetweenTransformLerpCPs.m_nSetMethod = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_nSetMethod"];
C_OP_PercentageBetweenTransformLerpCPs.m_bActiveRange = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_bActiveRange"];
C_OP_PercentageBetweenTransformLerpCPs.m_bRadialCheck = jsonData["C_OP_PercentageBetweenTransformLerpCPs"]["m_bRadialCheck"];

// Atribuições para C_OP_SetPerChildControlPoint
// C_OP_SetPerChildControlPoint Offsets
C_OP_SetPerChildControlPoint.m_nChildGroupID = jsonData["C_OP_SetPerChildControlPoint"]["m_nChildGroupID"];
C_OP_SetPerChildControlPoint.m_nFirstControlPoint = jsonData["C_OP_SetPerChildControlPoint"]["m_nFirstControlPoint"];
C_OP_SetPerChildControlPoint.m_nNumControlPoints = jsonData["C_OP_SetPerChildControlPoint"]["m_nNumControlPoints"];
C_OP_SetPerChildControlPoint.m_nParticleIncrement = jsonData["C_OP_SetPerChildControlPoint"]["m_nParticleIncrement"];
C_OP_SetPerChildControlPoint.m_nFirstSourcePoint = jsonData["C_OP_SetPerChildControlPoint"]["m_nFirstSourcePoint"];
C_OP_SetPerChildControlPoint.m_bSetOrientation = jsonData["C_OP_SetPerChildControlPoint"]["m_bSetOrientation"];
C_OP_SetPerChildControlPoint.m_nOrientationField = jsonData["C_OP_SetPerChildControlPoint"]["m_nOrientationField"];
C_OP_SetPerChildControlPoint.m_bNumBasedOnParticleCount = jsonData["C_OP_SetPerChildControlPoint"]["m_bNumBasedOnParticleCount"];

// Atribuições para C_OP_RenderTreeShake
// C_OP_RenderTreeShake Offsets
C_OP_RenderTreeShake.m_flPeakStrength = jsonData["C_OP_RenderTreeShake"]["m_flPeakStrength"];
C_OP_RenderTreeShake.m_nPeakStrengthFieldOverride = jsonData["C_OP_RenderTreeShake"]["m_nPeakStrengthFieldOverride"];
C_OP_RenderTreeShake.m_flRadius = jsonData["C_OP_RenderTreeShake"]["m_flRadius"];
C_OP_RenderTreeShake.m_nRadiusFieldOverride = jsonData["C_OP_RenderTreeShake"]["m_nRadiusFieldOverride"];
C_OP_RenderTreeShake.m_flShakeDuration = jsonData["C_OP_RenderTreeShake"]["m_flShakeDuration"];
C_OP_RenderTreeShake.m_flTransitionTime = jsonData["C_OP_RenderTreeShake"]["m_flTransitionTime"];
C_OP_RenderTreeShake.m_flTwistAmount = jsonData["C_OP_RenderTreeShake"]["m_flTwistAmount"];
C_OP_RenderTreeShake.m_flRadialAmount = jsonData["C_OP_RenderTreeShake"]["m_flRadialAmount"];
C_OP_RenderTreeShake.m_flControlPointOrientationAmount = jsonData["C_OP_RenderTreeShake"]["m_flControlPointOrientationAmount"];
C_OP_RenderTreeShake.m_nControlPointForLinearDirection = jsonData["C_OP_RenderTreeShake"]["m_nControlPointForLinearDirection"];

// Atribuições para C_OP_SetAttributeToScalarExpression
// C_OP_SetAttributeToScalarExpression Offsets
C_OP_SetAttributeToScalarExpression.m_nExpression = jsonData["C_OP_SetAttributeToScalarExpression"]["m_nExpression"];
C_OP_SetAttributeToScalarExpression.m_flInput1 = jsonData["C_OP_SetAttributeToScalarExpression"]["m_flInput1"];
C_OP_SetAttributeToScalarExpression.m_flInput2 = jsonData["C_OP_SetAttributeToScalarExpression"]["m_flInput2"];
C_OP_SetAttributeToScalarExpression.m_flOutputRemap = jsonData["C_OP_SetAttributeToScalarExpression"]["m_flOutputRemap"];
C_OP_SetAttributeToScalarExpression.m_nOutputField = jsonData["C_OP_SetAttributeToScalarExpression"]["m_nOutputField"];
C_OP_SetAttributeToScalarExpression.m_nSetMethod = jsonData["C_OP_SetAttributeToScalarExpression"]["m_nSetMethod"];

// Atribuições para C_OP_CycleScalar
// C_OP_CycleScalar Offsets
C_OP_CycleScalar.m_nDestField = jsonData["C_OP_CycleScalar"]["m_nDestField"];
C_OP_CycleScalar.m_flStartValue = jsonData["C_OP_CycleScalar"]["m_flStartValue"];
C_OP_CycleScalar.m_flEndValue = jsonData["C_OP_CycleScalar"]["m_flEndValue"];
C_OP_CycleScalar.m_flCycleTime = jsonData["C_OP_CycleScalar"]["m_flCycleTime"];
C_OP_CycleScalar.m_bDoNotRepeatCycle = jsonData["C_OP_CycleScalar"]["m_bDoNotRepeatCycle"];
C_OP_CycleScalar.m_bSynchronizeParticles = jsonData["C_OP_CycleScalar"]["m_bSynchronizeParticles"];
C_OP_CycleScalar.m_nCPScale = jsonData["C_OP_CycleScalar"]["m_nCPScale"];
C_OP_CycleScalar.m_nCPFieldMin = jsonData["C_OP_CycleScalar"]["m_nCPFieldMin"];
C_OP_CycleScalar.m_nCPFieldMax = jsonData["C_OP_CycleScalar"]["m_nCPFieldMax"];
C_OP_CycleScalar.m_nSetMethod = jsonData["C_OP_CycleScalar"]["m_nSetMethod"];

// Atribuições para C_OP_RenderMaterialProxy
// C_OP_RenderMaterialProxy Offsets
C_OP_RenderMaterialProxy.m_nMaterialControlPoint = jsonData["C_OP_RenderMaterialProxy"]["m_nMaterialControlPoint"];
C_OP_RenderMaterialProxy.m_nProxyType = jsonData["C_OP_RenderMaterialProxy"]["m_nProxyType"];
C_OP_RenderMaterialProxy.m_MaterialVars = jsonData["C_OP_RenderMaterialProxy"]["m_MaterialVars"];
C_OP_RenderMaterialProxy.m_hOverrideMaterial = jsonData["C_OP_RenderMaterialProxy"]["m_hOverrideMaterial"];
C_OP_RenderMaterialProxy.m_flMaterialOverrideEnabled = jsonData["C_OP_RenderMaterialProxy"]["m_flMaterialOverrideEnabled"];
C_OP_RenderMaterialProxy.m_vecColorScale = jsonData["C_OP_RenderMaterialProxy"]["m_vecColorScale"];
C_OP_RenderMaterialProxy.m_flAlpha = jsonData["C_OP_RenderMaterialProxy"]["m_flAlpha"];
C_OP_RenderMaterialProxy.m_nColorBlendType = jsonData["C_OP_RenderMaterialProxy"]["m_nColorBlendType"];

// Atribuições para FloatInputMaterialVariable_t
// FloatInputMaterialVariable_t Offsets
FloatInputMaterialVariable_t.m_strVariable = jsonData["FloatInputMaterialVariable_t"]["m_strVariable"];
FloatInputMaterialVariable_t.m_flInput = jsonData["FloatInputMaterialVariable_t"]["m_flInput"];

// Atribuições para C_OP_RampScalarLinear
// C_OP_RampScalarLinear Offsets
C_OP_RampScalarLinear.m_RateMin = jsonData["C_OP_RampScalarLinear"]["m_RateMin"];
C_OP_RampScalarLinear.m_RateMax = jsonData["C_OP_RampScalarLinear"]["m_RateMax"];
C_OP_RampScalarLinear.m_flStartTime_min = jsonData["C_OP_RampScalarLinear"]["m_flStartTime_min"];
C_OP_RampScalarLinear.m_flStartTime_max = jsonData["C_OP_RampScalarLinear"]["m_flStartTime_max"];
C_OP_RampScalarLinear.m_flEndTime_min = jsonData["C_OP_RampScalarLinear"]["m_flEndTime_min"];
C_OP_RampScalarLinear.m_flEndTime_max = jsonData["C_OP_RampScalarLinear"]["m_flEndTime_max"];
C_OP_RampScalarLinear.m_nField = jsonData["C_OP_RampScalarLinear"]["m_nField"];
C_OP_RampScalarLinear.m_bProportionalOp = jsonData["C_OP_RampScalarLinear"]["m_bProportionalOp"];

// Atribuições para C_OP_RotateVector
// C_OP_RotateVector Offsets
C_OP_RotateVector.m_nFieldOutput = jsonData["C_OP_RotateVector"]["m_nFieldOutput"];
C_OP_RotateVector.m_vecRotAxisMin = jsonData["C_OP_RotateVector"]["m_vecRotAxisMin"];
C_OP_RotateVector.m_vecRotAxisMax = jsonData["C_OP_RotateVector"]["m_vecRotAxisMax"];
C_OP_RotateVector.m_flRotRateMin = jsonData["C_OP_RotateVector"]["m_flRotRateMin"];
C_OP_RotateVector.m_flRotRateMax = jsonData["C_OP_RotateVector"]["m_flRotRateMax"];
C_OP_RotateVector.m_bNormalize = jsonData["C_OP_RotateVector"]["m_bNormalize"];
C_OP_RotateVector.m_flScale = jsonData["C_OP_RotateVector"]["m_flScale"];

// Atribuições para C_INIT_InitVecCollection
// C_INIT_InitVecCollection Offsets
C_INIT_InitVecCollection.m_InputValue = jsonData["C_INIT_InitVecCollection"]["m_InputValue"];
C_INIT_InitVecCollection.m_nOutputField = jsonData["C_INIT_InitVecCollection"]["m_nOutputField"];

// Atribuições para C_INIT_SequenceFromCP
// C_INIT_SequenceFromCP Offsets
C_INIT_SequenceFromCP.m_bKillUnused = jsonData["C_INIT_SequenceFromCP"]["m_bKillUnused"];
C_INIT_SequenceFromCP.m_bRadiusScale = jsonData["C_INIT_SequenceFromCP"]["m_bRadiusScale"];
C_INIT_SequenceFromCP.m_nCP = jsonData["C_INIT_SequenceFromCP"]["m_nCP"];
C_INIT_SequenceFromCP.m_vecOffset = jsonData["C_INIT_SequenceFromCP"]["m_vecOffset"];

// Atribuições para C_OP_CPOffsetToPercentageBetweenCPs
// C_OP_CPOffsetToPercentageBetweenCPs Offsets
C_OP_CPOffsetToPercentageBetweenCPs.m_flInputMin = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_flInputMin"];
C_OP_CPOffsetToPercentageBetweenCPs.m_flInputMax = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_flInputMax"];
C_OP_CPOffsetToPercentageBetweenCPs.m_flInputBias = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_flInputBias"];
C_OP_CPOffsetToPercentageBetweenCPs.m_nStartCP = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_nStartCP"];
C_OP_CPOffsetToPercentageBetweenCPs.m_nEndCP = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_nEndCP"];
C_OP_CPOffsetToPercentageBetweenCPs.m_nOffsetCP = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_nOffsetCP"];
C_OP_CPOffsetToPercentageBetweenCPs.m_nOuputCP = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_nOuputCP"];
C_OP_CPOffsetToPercentageBetweenCPs.m_nInputCP = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_nInputCP"];
C_OP_CPOffsetToPercentageBetweenCPs.m_bRadialCheck = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_bRadialCheck"];
C_OP_CPOffsetToPercentageBetweenCPs.m_bScaleOffset = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_bScaleOffset"];
C_OP_CPOffsetToPercentageBetweenCPs.m_vecOffset = jsonData["C_OP_CPOffsetToPercentageBetweenCPs"]["m_vecOffset"];

// Atribuições para C_OP_LerpEndCapScalar
// C_OP_LerpEndCapScalar Offsets
C_OP_LerpEndCapScalar.m_nFieldOutput = jsonData["C_OP_LerpEndCapScalar"]["m_nFieldOutput"];
C_OP_LerpEndCapScalar.m_flOutput = jsonData["C_OP_LerpEndCapScalar"]["m_flOutput"];
C_OP_LerpEndCapScalar.m_flLerpTime = jsonData["C_OP_LerpEndCapScalar"]["m_flLerpTime"];

// Atribuições para CPulseCell_Step_PublicOutput
// CPulseCell_Step_PublicOutput Offsets
CPulseCell_Step_PublicOutput.m_OutputIndex = jsonData["CPulseCell_Step_PublicOutput"]["m_OutputIndex"];

// Atribuições para CPulseCell_Test_MultiOutflow_WithParams
// CPulseCell_Test_MultiOutflow_WithParams Offsets
CPulseCell_Test_MultiOutflow_WithParams.m_Out1 = jsonData["CPulseCell_Test_MultiOutflow_WithParams"]["m_Out1"];
CPulseCell_Test_MultiOutflow_WithParams.m_Out2 = jsonData["CPulseCell_Test_MultiOutflow_WithParams"]["m_Out2"];

// Atribuições para PulseRuntimeVarIndex_t
// PulseRuntimeVarIndex_t Offsets
PulseRuntimeVarIndex_t.m_Value = jsonData["PulseRuntimeVarIndex_t"]["m_Value"];

// Atribuições para PulseRuntimeEntrypointIndex_t
// PulseRuntimeEntrypointIndex_t Offsets
PulseRuntimeEntrypointIndex_t.m_Value = jsonData["PulseRuntimeEntrypointIndex_t"]["m_Value"];

// Atribuições para PulseRuntimeDomainValueIndex_t
// PulseRuntimeDomainValueIndex_t Offsets
PulseRuntimeDomainValueIndex_t.m_Value = jsonData["PulseRuntimeDomainValueIndex_t"]["m_Value"];

// Atribuições para CPulse_Chunk
// CPulse_Chunk Offsets
CPulse_Chunk.m_Instructions = jsonData["CPulse_Chunk"]["m_Instructions"];
CPulse_Chunk.m_Registers = jsonData["CPulse_Chunk"]["m_Registers"];
CPulse_Chunk.m_InstructionEditorIDs = jsonData["CPulse_Chunk"]["m_InstructionEditorIDs"];

// Atribuições para PulseRuntimeInvokeIndex_t
// PulseRuntimeInvokeIndex_t Offsets
PulseRuntimeInvokeIndex_t.m_Value = jsonData["PulseRuntimeInvokeIndex_t"]["m_Value"];

// Atribuições para CPulseCell_Outflow_CycleOrdered__InstanceState_t
// CPulseCell_Outflow_CycleOrdered__InstanceState_t Offsets
CPulseCell_Outflow_CycleOrdered__InstanceState_t.m_nNextIndex = jsonData["CPulseCell_Outflow_CycleOrdered__InstanceState_t"]["m_nNextIndex"];

// Atribuições para CPulseCell_WaitForCursorsWithTagBase
// CPulseCell_WaitForCursorsWithTagBase Offsets
CPulseCell_WaitForCursorsWithTagBase.m_nCursorsAllowedToWait = jsonData["CPulseCell_WaitForCursorsWithTagBase"]["m_nCursorsAllowedToWait"];
CPulseCell_WaitForCursorsWithTagBase.m_WaitComplete = jsonData["CPulseCell_WaitForCursorsWithTagBase"]["m_WaitComplete"];

// Atribuições para PulseRuntimeRegisterIndex_t
// PulseRuntimeRegisterIndex_t Offsets
PulseRuntimeRegisterIndex_t.m_Value = jsonData["PulseRuntimeRegisterIndex_t"]["m_Value"];

// Atribuições para CPulseCell_Timeline__TimelineEvent_t
// CPulseCell_Timeline__TimelineEvent_t Offsets
CPulseCell_Timeline__TimelineEvent_t.m_flTimeFromPrevious = jsonData["CPulseCell_Timeline__TimelineEvent_t"]["m_flTimeFromPrevious"];
CPulseCell_Timeline__TimelineEvent_t.m_bPauseForPreviousEvents = jsonData["CPulseCell_Timeline__TimelineEvent_t"]["m_bPauseForPreviousEvents"];
CPulseCell_Timeline__TimelineEvent_t.m_bCallModeSync = jsonData["CPulseCell_Timeline__TimelineEvent_t"]["m_bCallModeSync"];
CPulseCell_Timeline__TimelineEvent_t.m_EventOutflow = jsonData["CPulseCell_Timeline__TimelineEvent_t"]["m_EventOutflow"];

// Atribuições para CPulse_OutflowConnection
// CPulse_OutflowConnection Offsets
CPulse_OutflowConnection.m_SourceOutflowName = jsonData["CPulse_OutflowConnection"]["m_SourceOutflowName"];
CPulse_OutflowConnection.m_nDestChunk = jsonData["CPulse_OutflowConnection"]["m_nDestChunk"];
CPulse_OutflowConnection.m_nInstruction = jsonData["CPulse_OutflowConnection"]["m_nInstruction"];
CPulse_OutflowConnection.m_OutflowRegisterMap = jsonData["CPulse_OutflowConnection"]["m_OutflowRegisterMap"];

// Atribuições para PulseCursorID_t
// PulseCursorID_t Offsets
PulseCursorID_t.m_Value = jsonData["PulseCursorID_t"]["m_Value"];

// Atribuições para CPulseCell_Base
// CPulseCell_Base Offsets
CPulseCell_Base.m_nEditorNodeID = jsonData["CPulseCell_Base"]["m_nEditorNodeID"];

// Atribuições para CPulseCell_Test_MultiOutflow_WithParams_Yielding__CursorState_t
// CPulseCell_Test_MultiOutflow_WithParams_Yielding__CursorState_t Offsets
CPulseCell_Test_MultiOutflow_WithParams_Yielding__CursorState_t.nTestStep = jsonData["CPulseCell_Test_MultiOutflow_WithParams_Yielding__CursorState_t"]["nTestStep"];

// Atribuições para PulseGraphExecutionHistoryCursorDesc_t
// PulseGraphExecutionHistoryCursorDesc_t Offsets
PulseGraphExecutionHistoryCursorDesc_t.vecAncestorCursorIDs = jsonData["PulseGraphExecutionHistoryCursorDesc_t"]["vecAncestorCursorIDs"];
PulseGraphExecutionHistoryCursorDesc_t.nSpawnNodeID = jsonData["PulseGraphExecutionHistoryCursorDesc_t"]["nSpawnNodeID"];
PulseGraphExecutionHistoryCursorDesc_t.nRetiredAtNodeID = jsonData["PulseGraphExecutionHistoryCursorDesc_t"]["nRetiredAtNodeID"];
PulseGraphExecutionHistoryCursorDesc_t.flLastReferenced = jsonData["PulseGraphExecutionHistoryCursorDesc_t"]["flLastReferenced"];
PulseGraphExecutionHistoryCursorDesc_t.nLastValidEntryIdx = jsonData["PulseGraphExecutionHistoryCursorDesc_t"]["nLastValidEntryIdx"];

// Atribuições para CPulseCell_Inflow_Yield
// CPulseCell_Inflow_Yield Offsets
CPulseCell_Inflow_Yield.m_UnyieldResume = jsonData["CPulseCell_Inflow_Yield"]["m_UnyieldResume"];

// Atribuições para CPulseCell_Inflow_GraphHook
// CPulseCell_Inflow_GraphHook Offsets
CPulseCell_Inflow_GraphHook.m_HookName = jsonData["CPulseCell_Inflow_GraphHook"]["m_HookName"];

// Atribuições para CPulseCell_Inflow_Wait
// CPulseCell_Inflow_Wait Offsets
CPulseCell_Inflow_Wait.m_WakeResume = jsonData["CPulseCell_Inflow_Wait"]["m_WakeResume"];

// Atribuições para CTestDomainDerived_Cursor
// CTestDomainDerived_Cursor Offsets
CTestDomainDerived_Cursor.m_nCursorValueA = jsonData["CTestDomainDerived_Cursor"]["m_nCursorValueA"];
CTestDomainDerived_Cursor.m_nCursorValueB = jsonData["CTestDomainDerived_Cursor"]["m_nCursorValueB"];

// Atribuições para PulseRegisterMap_t
// PulseRegisterMap_t Offsets
PulseRegisterMap_t.m_Inparams = jsonData["PulseRegisterMap_t"]["m_Inparams"];
PulseRegisterMap_t.m_Outparams = jsonData["PulseRegisterMap_t"]["m_Outparams"];

// Atribuições para CPulseCell_CursorQueue
// CPulseCell_CursorQueue Offsets
CPulseCell_CursorQueue.m_nCursorsAllowedToRunParallel = jsonData["CPulseCell_CursorQueue"]["m_nCursorsAllowedToRunParallel"];

// Atribuições para PulseNodeDynamicOutflows_t
// PulseNodeDynamicOutflows_t Offsets
PulseNodeDynamicOutflows_t.m_Outflows = jsonData["PulseNodeDynamicOutflows_t"]["m_Outflows"];

// Atribuições para CPulseCell_Unknown
// CPulseCell_Unknown Offsets
CPulseCell_Unknown.m_UnknownKeys = jsonData["CPulseCell_Unknown"]["m_UnknownKeys"];

// Atribuições para CPulseCell_Outflow_StringSwitch
// CPulseCell_Outflow_StringSwitch Offsets
CPulseCell_Outflow_StringSwitch.m_DefaultCaseOutflow = jsonData["CPulseCell_Outflow_StringSwitch"]["m_DefaultCaseOutflow"];
CPulseCell_Outflow_StringSwitch.m_CaseOutflows = jsonData["CPulseCell_Outflow_StringSwitch"]["m_CaseOutflows"];

// Atribuições para CPulseCell_FireCursors
// CPulseCell_FireCursors Offsets
CPulseCell_FireCursors.m_Outflows = jsonData["CPulseCell_FireCursors"]["m_Outflows"];
CPulseCell_FireCursors.m_bWaitForChildOutflows = jsonData["CPulseCell_FireCursors"]["m_bWaitForChildOutflows"];
CPulseCell_FireCursors.m_OnFinished = jsonData["CPulseCell_FireCursors"]["m_OnFinished"];
CPulseCell_FireCursors.m_OnCanceled = jsonData["CPulseCell_FireCursors"]["m_OnCanceled"];

// Atribuições para CPulseCell_Outflow_CycleShuffled__InstanceState_t
// CPulseCell_Outflow_CycleShuffled__InstanceState_t Offsets
CPulseCell_Outflow_CycleShuffled__InstanceState_t.m_Shuffle = jsonData["CPulseCell_Outflow_CycleShuffled__InstanceState_t"]["m_Shuffle"];
CPulseCell_Outflow_CycleShuffled__InstanceState_t.m_nNextShuffle = jsonData["CPulseCell_Outflow_CycleShuffled__InstanceState_t"]["m_nNextShuffle"];

// Atribuições para CPulseCell_Outflow_CycleRandom
// CPulseCell_Outflow_CycleRandom Offsets
CPulseCell_Outflow_CycleRandom.m_Outputs = jsonData["CPulseCell_Outflow_CycleRandom"]["m_Outputs"];

// Atribuições para CPulseCell_Inflow_EventHandler
// CPulseCell_Inflow_EventHandler Offsets
CPulseCell_Inflow_EventHandler.m_EventName = jsonData["CPulseCell_Inflow_EventHandler"]["m_EventName"];

// Atribuições para CPulseCell_BaseLerp__CursorState_t
// CPulseCell_BaseLerp__CursorState_t Offsets
CPulseCell_BaseLerp__CursorState_t.m_StartTime = jsonData["CPulseCell_BaseLerp__CursorState_t"]["m_StartTime"];
CPulseCell_BaseLerp__CursorState_t.m_EndTime = jsonData["CPulseCell_BaseLerp__CursorState_t"]["m_EndTime"];

// Atribuições para CPulse_PublicOutput
// CPulse_PublicOutput Offsets
CPulse_PublicOutput.m_Name = jsonData["CPulse_PublicOutput"]["m_Name"];
CPulse_PublicOutput.m_Description = jsonData["CPulse_PublicOutput"]["m_Description"];
CPulse_PublicOutput.m_ParamType = jsonData["CPulse_PublicOutput"]["m_ParamType"];

// Atribuições para CPulseCell_Timeline
// CPulseCell_Timeline Offsets
CPulseCell_Timeline.m_TimelineEvents = jsonData["CPulseCell_Timeline"]["m_TimelineEvents"];
CPulseCell_Timeline.m_bWaitForChildOutflows = jsonData["CPulseCell_Timeline"]["m_bWaitForChildOutflows"];
CPulseCell_Timeline.m_OnFinished = jsonData["CPulseCell_Timeline"]["m_OnFinished"];
CPulseCell_Timeline.m_OnCanceled = jsonData["CPulseCell_Timeline"]["m_OnCanceled"];

// Atribuições para CPulse_OutputConnection
// CPulse_OutputConnection Offsets
CPulse_OutputConnection.m_SourceOutput = jsonData["CPulse_OutputConnection"]["m_SourceOutput"];
CPulse_OutputConnection.m_TargetEntity = jsonData["CPulse_OutputConnection"]["m_TargetEntity"];
CPulse_OutputConnection.m_TargetInput = jsonData["CPulse_OutputConnection"]["m_TargetInput"];
CPulse_OutputConnection.m_Param = jsonData["CPulse_OutputConnection"]["m_Param"];

// Atribuições para CPulseCell_LimitCount
// CPulseCell_LimitCount Offsets
CPulseCell_LimitCount.m_nLimitCount = jsonData["CPulseCell_LimitCount"]["m_nLimitCount"];

// Atribuições para PulseGraphExecutionHistoryNodeDesc_t
// PulseGraphExecutionHistoryNodeDesc_t Offsets
PulseGraphExecutionHistoryNodeDesc_t.strCellDesc = jsonData["PulseGraphExecutionHistoryNodeDesc_t"]["strCellDesc"];
PulseGraphExecutionHistoryNodeDesc_t.strBindingName = jsonData["PulseGraphExecutionHistoryNodeDesc_t"]["strBindingName"];

// Atribuições para CPulseCell_Step_CallExternalMethod
// CPulseCell_Step_CallExternalMethod Offsets
CPulseCell_Step_CallExternalMethod.m_MethodName = jsonData["CPulseCell_Step_CallExternalMethod"]["m_MethodName"];
CPulseCell_Step_CallExternalMethod.m_GameBlackboard = jsonData["CPulseCell_Step_CallExternalMethod"]["m_GameBlackboard"];
CPulseCell_Step_CallExternalMethod.m_ExpectedArgs = jsonData["CPulseCell_Step_CallExternalMethod"]["m_ExpectedArgs"];
CPulseCell_Step_CallExternalMethod.m_nAsyncCallMode = jsonData["CPulseCell_Step_CallExternalMethod"]["m_nAsyncCallMode"];
CPulseCell_Step_CallExternalMethod.m_OnFinished = jsonData["CPulseCell_Step_CallExternalMethod"]["m_OnFinished"];

// Atribuições para PulseGraphExecutionHistoryEntry_t
// PulseGraphExecutionHistoryEntry_t Offsets
PulseGraphExecutionHistoryEntry_t.nCursorID = jsonData["PulseGraphExecutionHistoryEntry_t"]["nCursorID"];
PulseGraphExecutionHistoryEntry_t.nEditorID = jsonData["PulseGraphExecutionHistoryEntry_t"]["nEditorID"];
PulseGraphExecutionHistoryEntry_t.flExecTime = jsonData["PulseGraphExecutionHistoryEntry_t"]["flExecTime"];
PulseGraphExecutionHistoryEntry_t.unFlags = jsonData["PulseGraphExecutionHistoryEntry_t"]["unFlags"];
PulseGraphExecutionHistoryEntry_t.tagName = jsonData["PulseGraphExecutionHistoryEntry_t"]["tagName"];

// Atribuições para PulseCursorYieldToken_t
// PulseCursorYieldToken_t Offsets
PulseCursorYieldToken_t.m_Value = jsonData["PulseCursorYieldToken_t"]["m_Value"];

// Atribuições para CPulseGraphExecutionHistory
// CPulseGraphExecutionHistory Offsets
CPulseGraphExecutionHistory.m_nInstanceID = jsonData["CPulseGraphExecutionHistory"]["m_nInstanceID"];
CPulseGraphExecutionHistory.m_strFileName = jsonData["CPulseGraphExecutionHistory"]["m_strFileName"];
CPulseGraphExecutionHistory.m_vecHistory = jsonData["CPulseGraphExecutionHistory"]["m_vecHistory"];
CPulseGraphExecutionHistory.m_mapCellDesc = jsonData["CPulseGraphExecutionHistory"]["m_mapCellDesc"];
CPulseGraphExecutionHistory.m_mapCursorDesc = jsonData["CPulseGraphExecutionHistory"]["m_mapCursorDesc"];

// Atribuições para CPulseCell_TestWaitWithCursorState
// CPulseCell_TestWaitWithCursorState Offsets
CPulseCell_TestWaitWithCursorState.m_WakeResume = jsonData["CPulseCell_TestWaitWithCursorState"]["m_WakeResume"];
CPulseCell_TestWaitWithCursorState.m_WakeCancel = jsonData["CPulseCell_TestWaitWithCursorState"]["m_WakeCancel"];
CPulseCell_TestWaitWithCursorState.m_WakeFail = jsonData["CPulseCell_TestWaitWithCursorState"]["m_WakeFail"];

// Atribuições para CPulseCell_Inflow_ObservableVariableListener
// CPulseCell_Inflow_ObservableVariableListener Offsets
CPulseCell_Inflow_ObservableVariableListener.m_BlackboardReference = jsonData["CPulseCell_Inflow_ObservableVariableListener"]["m_BlackboardReference"];
CPulseCell_Inflow_ObservableVariableListener.m_bSelfReference = jsonData["CPulseCell_Inflow_ObservableVariableListener"]["m_bSelfReference"];

// Atribuições para PGDInstruction_t
// PGDInstruction_t Offsets
PGDInstruction_t.m_nCode = jsonData["PGDInstruction_t"]["m_nCode"];
PGDInstruction_t.m_nVar = jsonData["PGDInstruction_t"]["m_nVar"];
PGDInstruction_t.m_nReg0 = jsonData["PGDInstruction_t"]["m_nReg0"];
PGDInstruction_t.m_nReg1 = jsonData["PGDInstruction_t"]["m_nReg1"];
PGDInstruction_t.m_nReg2 = jsonData["PGDInstruction_t"]["m_nReg2"];
PGDInstruction_t.m_nInvokeBindingIndex = jsonData["PGDInstruction_t"]["m_nInvokeBindingIndex"];
PGDInstruction_t.m_nChunk = jsonData["PGDInstruction_t"]["m_nChunk"];
PGDInstruction_t.m_nDestInstruction = jsonData["PGDInstruction_t"]["m_nDestInstruction"];
PGDInstruction_t.m_nCallInfoIndex = jsonData["PGDInstruction_t"]["m_nCallInfoIndex"];
PGDInstruction_t.m_nConstIdx = jsonData["PGDInstruction_t"]["m_nConstIdx"];
PGDInstruction_t.m_nDomainValueIdx = jsonData["PGDInstruction_t"]["m_nDomainValueIdx"];
PGDInstruction_t.m_nBlackboardReferenceIdx = jsonData["PGDInstruction_t"]["m_nBlackboardReferenceIdx"];

// Atribuições para CPulse_InvokeBinding
// CPulse_InvokeBinding Offsets
CPulse_InvokeBinding.m_RegisterMap = jsonData["CPulse_InvokeBinding"]["m_RegisterMap"];
CPulse_InvokeBinding.m_FuncName = jsonData["CPulse_InvokeBinding"]["m_FuncName"];
CPulse_InvokeBinding.m_nCellIndex = jsonData["CPulse_InvokeBinding"]["m_nCellIndex"];
CPulse_InvokeBinding.m_nSrcChunk = jsonData["CPulse_InvokeBinding"]["m_nSrcChunk"];
CPulse_InvokeBinding.m_nSrcInstruction = jsonData["CPulse_InvokeBinding"]["m_nSrcInstruction"];

// Atribuições para CPulse_Variable
// CPulse_Variable Offsets
CPulse_Variable.m_Name = jsonData["CPulse_Variable"]["m_Name"];
CPulse_Variable.m_Description = jsonData["CPulse_Variable"]["m_Description"];
CPulse_Variable.m_Type = jsonData["CPulse_Variable"]["m_Type"];
CPulse_Variable.m_DefaultValue = jsonData["CPulse_Variable"]["m_DefaultValue"];
CPulse_Variable.m_bIsPublic = jsonData["CPulse_Variable"]["m_bIsPublic"];
CPulse_Variable.m_bIsObservable = jsonData["CPulse_Variable"]["m_bIsObservable"];
CPulse_Variable.m_nEditorNodeID = jsonData["CPulse_Variable"]["m_nEditorNodeID"];

// Atribuições para CPulseCell_Inflow_Method
// CPulseCell_Inflow_Method Offsets
CPulseCell_Inflow_Method.m_MethodName = jsonData["CPulseCell_Inflow_Method"]["m_MethodName"];
CPulseCell_Inflow_Method.m_Description = jsonData["CPulseCell_Inflow_Method"]["m_Description"];
CPulseCell_Inflow_Method.m_bIsPublic = jsonData["CPulseCell_Inflow_Method"]["m_bIsPublic"];
CPulseCell_Inflow_Method.m_ReturnType = jsonData["CPulseCell_Inflow_Method"]["m_ReturnType"];
CPulseCell_Inflow_Method.m_Args = jsonData["CPulseCell_Inflow_Method"]["m_Args"];

// Atribuições para CPulseGraphInstance_TestDomain
// CPulseGraphInstance_TestDomain Offsets
CPulseGraphInstance_TestDomain.m_bIsRunningUnitTests = jsonData["CPulseGraphInstance_TestDomain"]["m_bIsRunningUnitTests"];
CPulseGraphInstance_TestDomain.m_bExplicitTimeStepping = jsonData["CPulseGraphInstance_TestDomain"]["m_bExplicitTimeStepping"];
CPulseGraphInstance_TestDomain.m_bExpectingToDestroyWithYieldedCursors = jsonData["CPulseGraphInstance_TestDomain"]["m_bExpectingToDestroyWithYieldedCursors"];
CPulseGraphInstance_TestDomain.m_nNextValidateIndex = jsonData["CPulseGraphInstance_TestDomain"]["m_nNextValidateIndex"];
CPulseGraphInstance_TestDomain.m_Tracepoints = jsonData["CPulseGraphInstance_TestDomain"]["m_Tracepoints"];
CPulseGraphInstance_TestDomain.m_bTestYesOrNoPath = jsonData["CPulseGraphInstance_TestDomain"]["m_bTestYesOrNoPath"];

// Atribuições para PulseNodeDynamicOutflows_t__DynamicOutflow_t
// PulseNodeDynamicOutflows_t__DynamicOutflow_t Offsets
PulseNodeDynamicOutflows_t__DynamicOutflow_t.m_OutflowID = jsonData["PulseNodeDynamicOutflows_t__DynamicOutflow_t"]["m_OutflowID"];
PulseNodeDynamicOutflows_t__DynamicOutflow_t.m_Connection = jsonData["PulseNodeDynamicOutflows_t__DynamicOutflow_t"]["m_Connection"];

// Atribuições para CPulseCell_Outflow_CycleShuffled
// CPulseCell_Outflow_CycleShuffled Offsets
CPulseCell_Outflow_CycleShuffled.m_Outputs = jsonData["CPulseCell_Outflow_CycleShuffled"]["m_Outputs"];

// Atribuições para PulseRuntimeOutputIndex_t
// PulseRuntimeOutputIndex_t Offsets
PulseRuntimeOutputIndex_t.m_Value = jsonData["PulseRuntimeOutputIndex_t"]["m_Value"];

// Atribuições para CPulseCell_WaitForCursorsWithTagBase__CursorState_t
// CPulseCell_WaitForCursorsWithTagBase__CursorState_t Offsets
CPulseCell_WaitForCursorsWithTagBase__CursorState_t.m_TagName = jsonData["CPulseCell_WaitForCursorsWithTagBase__CursorState_t"]["m_TagName"];

// Atribuições para CPulseCell_TestWaitWithCursorState__CursorState_t
// CPulseCell_TestWaitWithCursorState__CursorState_t Offsets
CPulseCell_TestWaitWithCursorState__CursorState_t.flWaitValue = jsonData["CPulseCell_TestWaitWithCursorState__CursorState_t"]["flWaitValue"];
CPulseCell_TestWaitWithCursorState__CursorState_t.bFailOnCancel = jsonData["CPulseCell_TestWaitWithCursorState__CursorState_t"]["bFailOnCancel"];

// Atribuições para CPulse_DomainValue
// CPulse_DomainValue Offsets
CPulse_DomainValue.m_nType = jsonData["CPulse_DomainValue"]["m_nType"];
CPulse_DomainValue.m_Value = jsonData["CPulse_DomainValue"]["m_Value"];
CPulse_DomainValue.m_ExpectedRuntimeType = jsonData["CPulse_DomainValue"]["m_ExpectedRuntimeType"];

// Atribuições para CPulseCell_Step_TestDomainEntFire
// CPulseCell_Step_TestDomainEntFire Offsets
CPulseCell_Step_TestDomainEntFire.m_Input = jsonData["CPulseCell_Step_TestDomainEntFire"]["m_Input"];

// Atribuições para PulseRuntimeBlackboardReferenceIndex_t
// PulseRuntimeBlackboardReferenceIndex_t Offsets
PulseRuntimeBlackboardReferenceIndex_t.m_Value = jsonData["PulseRuntimeBlackboardReferenceIndex_t"]["m_Value"];

// Atribuições para CPulseCell_Test_MultiOutflow_WithParams_Yielding
// CPulseCell_Test_MultiOutflow_WithParams_Yielding Offsets
CPulseCell_Test_MultiOutflow_WithParams_Yielding.m_Out1 = jsonData["CPulseCell_Test_MultiOutflow_WithParams_Yielding"]["m_Out1"];
CPulseCell_Test_MultiOutflow_WithParams_Yielding.m_AsyncChild1 = jsonData["CPulseCell_Test_MultiOutflow_WithParams_Yielding"]["m_AsyncChild1"];
CPulseCell_Test_MultiOutflow_WithParams_Yielding.m_AsyncChild2 = jsonData["CPulseCell_Test_MultiOutflow_WithParams_Yielding"]["m_AsyncChild2"];
CPulseCell_Test_MultiOutflow_WithParams_Yielding.m_YieldResume1 = jsonData["CPulseCell_Test_MultiOutflow_WithParams_Yielding"]["m_YieldResume1"];
CPulseCell_Test_MultiOutflow_WithParams_Yielding.m_YieldResume2 = jsonData["CPulseCell_Test_MultiOutflow_WithParams_Yielding"]["m_YieldResume2"];

// Atribuições para CPulseGraphInstance_TestDomain_Derived
// CPulseGraphInstance_TestDomain_Derived Offsets
CPulseGraphInstance_TestDomain_Derived.m_nInstanceValueX = jsonData["CPulseGraphInstance_TestDomain_Derived"]["m_nInstanceValueX"];

// Atribuições para CPulseCell_Inflow_EntOutputHandler
// CPulseCell_Inflow_EntOutputHandler Offsets
CPulseCell_Inflow_EntOutputHandler.m_SourceEntity = jsonData["CPulseCell_Inflow_EntOutputHandler"]["m_SourceEntity"];
CPulseCell_Inflow_EntOutputHandler.m_SourceOutput = jsonData["CPulseCell_Inflow_EntOutputHandler"]["m_SourceOutput"];
CPulseCell_Inflow_EntOutputHandler.m_TargetInput = jsonData["CPulseCell_Inflow_EntOutputHandler"]["m_TargetInput"];
CPulseCell_Inflow_EntOutputHandler.m_ExpectedParamType = jsonData["CPulseCell_Inflow_EntOutputHandler"]["m_ExpectedParamType"];

// Atribuições para PulseRuntimeConstantIndex_t
// PulseRuntimeConstantIndex_t Offsets
PulseRuntimeConstantIndex_t.m_Value = jsonData["PulseRuntimeConstantIndex_t"]["m_Value"];

// Atribuições para PulseDocNodeID_t
// PulseDocNodeID_t Offsets
PulseDocNodeID_t.m_Value = jsonData["PulseDocNodeID_t"]["m_Value"];

// Atribuições para CPulse_BlackboardReference
// CPulse_BlackboardReference Offsets
CPulse_BlackboardReference.m_hBlackboardResource = jsonData["CPulse_BlackboardReference"]["m_hBlackboardResource"];
CPulse_BlackboardReference.m_BlackboardResource = jsonData["CPulse_BlackboardReference"]["m_BlackboardResource"];
CPulse_BlackboardReference.m_nNodeID = jsonData["CPulse_BlackboardReference"]["m_nNodeID"];
CPulse_BlackboardReference.m_NodeName = jsonData["CPulse_BlackboardReference"]["m_NodeName"];

// Atribuições para CPulseCell_LimitCount__InstanceState_t
// CPulseCell_LimitCount__InstanceState_t Offsets
CPulseCell_LimitCount__InstanceState_t.m_nCurrentCount = jsonData["CPulseCell_LimitCount__InstanceState_t"]["m_nCurrentCount"];

// Atribuições para CPulse_CallInfo
// CPulse_CallInfo Offsets
CPulse_CallInfo.m_PortName = jsonData["CPulse_CallInfo"]["m_PortName"];
CPulse_CallInfo.m_nEditorNodeID = jsonData["CPulse_CallInfo"]["m_nEditorNodeID"];
CPulse_CallInfo.m_RegisterMap = jsonData["CPulse_CallInfo"]["m_RegisterMap"];
CPulse_CallInfo.m_CallMethodID = jsonData["CPulse_CallInfo"]["m_CallMethodID"];
CPulse_CallInfo.m_nSrcChunk = jsonData["CPulse_CallInfo"]["m_nSrcChunk"];
CPulse_CallInfo.m_nSrcInstruction = jsonData["CPulse_CallInfo"]["m_nSrcInstruction"];

// Atribuições para CPulse_RegisterInfo
// CPulse_RegisterInfo Offsets
CPulse_RegisterInfo.m_nReg = jsonData["CPulse_RegisterInfo"]["m_nReg"];
CPulse_RegisterInfo.m_Type = jsonData["CPulse_RegisterInfo"]["m_Type"];
CPulse_RegisterInfo.m_OriginName = jsonData["CPulse_RegisterInfo"]["m_OriginName"];
CPulse_RegisterInfo.m_nWrittenByInstruction = jsonData["CPulse_RegisterInfo"]["m_nWrittenByInstruction"];
CPulse_RegisterInfo.m_nLastReadByInstruction = jsonData["CPulse_RegisterInfo"]["m_nLastReadByInstruction"];

// Atribuições para PulseRuntimeCellIndex_t
// PulseRuntimeCellIndex_t Offsets
PulseRuntimeCellIndex_t.m_Value = jsonData["PulseRuntimeCellIndex_t"]["m_Value"];

// Atribuições para PulseGraphInstanceID_t
// PulseGraphInstanceID_t Offsets
PulseGraphInstanceID_t.m_Value = jsonData["PulseGraphInstanceID_t"]["m_Value"];

// Atribuições para CPulseCell_Outflow_IntSwitch
// CPulseCell_Outflow_IntSwitch Offsets
CPulseCell_Outflow_IntSwitch.m_DefaultCaseOutflow = jsonData["CPulseCell_Outflow_IntSwitch"]["m_DefaultCaseOutflow"];
CPulseCell_Outflow_IntSwitch.m_CaseOutflows = jsonData["CPulseCell_Outflow_IntSwitch"]["m_CaseOutflows"];

// Atribuições para CPulseGraphDef
// CPulseGraphDef Offsets
CPulseGraphDef.m_DomainIdentifier = jsonData["CPulseGraphDef"]["m_DomainIdentifier"];
CPulseGraphDef.m_ParentMapName = jsonData["CPulseGraphDef"]["m_ParentMapName"];
CPulseGraphDef.m_ParentXmlName = jsonData["CPulseGraphDef"]["m_ParentXmlName"];
CPulseGraphDef.m_vecGameBlackboards = jsonData["CPulseGraphDef"]["m_vecGameBlackboards"];
CPulseGraphDef.m_Chunks = jsonData["CPulseGraphDef"]["m_Chunks"];
CPulseGraphDef.m_Cells = jsonData["CPulseGraphDef"]["m_Cells"];
CPulseGraphDef.m_Vars = jsonData["CPulseGraphDef"]["m_Vars"];
CPulseGraphDef.m_PublicOutputs = jsonData["CPulseGraphDef"]["m_PublicOutputs"];
CPulseGraphDef.m_InvokeBindings = jsonData["CPulseGraphDef"]["m_InvokeBindings"];
CPulseGraphDef.m_CallInfos = jsonData["CPulseGraphDef"]["m_CallInfos"];
CPulseGraphDef.m_Constants = jsonData["CPulseGraphDef"]["m_Constants"];
CPulseGraphDef.m_DomainValues = jsonData["CPulseGraphDef"]["m_DomainValues"];
CPulseGraphDef.m_BlackboardReferences = jsonData["CPulseGraphDef"]["m_BlackboardReferences"];
CPulseGraphDef.m_OutputConnections = jsonData["CPulseGraphDef"]["m_OutputConnections"];

// Atribuições para CPulse_Constant
// CPulse_Constant Offsets
CPulse_Constant.m_Type = jsonData["CPulse_Constant"]["m_Type"];
CPulse_Constant.m_Value = jsonData["CPulse_Constant"]["m_Value"];

// Atribuições para CPulseCell_WaitForCursorsWithTag
// CPulseCell_WaitForCursorsWithTag Offsets
CPulseCell_WaitForCursorsWithTag.m_bTagSelfWhenComplete = jsonData["CPulseCell_WaitForCursorsWithTag"]["m_bTagSelfWhenComplete"];
CPulseCell_WaitForCursorsWithTag.m_nDesiredKillPriority = jsonData["CPulseCell_WaitForCursorsWithTag"]["m_nDesiredKillPriority"];

// Atribuições para CPulseCell_Inflow_BaseEntrypoint
// CPulseCell_Inflow_BaseEntrypoint Offsets
CPulseCell_Inflow_BaseEntrypoint.m_EntryChunk = jsonData["CPulseCell_Inflow_BaseEntrypoint"]["m_EntryChunk"];
CPulseCell_Inflow_BaseEntrypoint.m_RegisterMap = jsonData["CPulseCell_Inflow_BaseEntrypoint"]["m_RegisterMap"];

// Atribuições para PulseRuntimeCallInfoIndex_t
// PulseRuntimeCallInfoIndex_t Offsets
PulseRuntimeCallInfoIndex_t.m_Value = jsonData["PulseRuntimeCallInfoIndex_t"]["m_Value"];

// Atribuições para CPulseCell_BaseLerp
// CPulseCell_BaseLerp Offsets
CPulseCell_BaseLerp.m_WakeResume = jsonData["CPulseCell_BaseLerp"]["m_WakeResume"];

// Atribuições para CPulseCell_Outflow_TestExplicitYesNo
// CPulseCell_Outflow_TestExplicitYesNo Offsets
CPulseCell_Outflow_TestExplicitYesNo.m_Yes = jsonData["CPulseCell_Outflow_TestExplicitYesNo"]["m_Yes"];
CPulseCell_Outflow_TestExplicitYesNo.m_No = jsonData["CPulseCell_Outflow_TestExplicitYesNo"]["m_No"];

// Atribuições para CPulseCell_Outflow_TestRandomYesNo
// CPulseCell_Outflow_TestRandomYesNo Offsets
CPulseCell_Outflow_TestRandomYesNo.m_Yes = jsonData["CPulseCell_Outflow_TestRandomYesNo"]["m_Yes"];
CPulseCell_Outflow_TestRandomYesNo.m_No = jsonData["CPulseCell_Outflow_TestRandomYesNo"]["m_No"];

// Atribuições para PulseRuntimeChunkIndex_t
// PulseRuntimeChunkIndex_t Offsets
PulseRuntimeChunkIndex_t.m_Value = jsonData["PulseRuntimeChunkIndex_t"]["m_Value"];

// Atribuições para CPulseCell_Outflow_CycleOrdered
// CPulseCell_Outflow_CycleOrdered Offsets
CPulseCell_Outflow_CycleOrdered.m_Outputs = jsonData["CPulseCell_Outflow_CycleOrdered"]["m_Outputs"];

// Atribuições para CPulseRuntimeMethodArg
// CPulseRuntimeMethodArg Offsets
CPulseRuntimeMethodArg.m_Name = jsonData["CPulseRuntimeMethodArg"]["m_Name"];
CPulseRuntimeMethodArg.m_Description = jsonData["CPulseRuntimeMethodArg"]["m_Description"];
CPulseRuntimeMethodArg.m_Type = jsonData["CPulseRuntimeMethodArg"]["m_Type"];

// Atribuições para PulseRuntimeStateOffset_t
// PulseRuntimeStateOffset_t Offsets
PulseRuntimeStateOffset_t.m_Value = jsonData["PulseRuntimeStateOffset_t"]["m_Value"];

// Atribuições para CPulseTurtleGraphicsCursor
// CPulseTurtleGraphicsCursor Offsets
CPulseTurtleGraphicsCursor.m_Color = jsonData["CPulseTurtleGraphicsCursor"]["m_Color"];
CPulseTurtleGraphicsCursor.m_vPos = jsonData["CPulseTurtleGraphicsCursor"]["m_vPos"];
CPulseTurtleGraphicsCursor.m_flHeadingDeg = jsonData["CPulseTurtleGraphicsCursor"]["m_flHeadingDeg"];
CPulseTurtleGraphicsCursor.m_bPenUp = jsonData["CPulseTurtleGraphicsCursor"]["m_bPenUp"];

// Atribuições para VsInputSignatureElement_t
// VsInputSignatureElement_t Offsets
VsInputSignatureElement_t.m_pName = jsonData["VsInputSignatureElement_t"]["m_pName"];
VsInputSignatureElement_t.m_pSemantic = jsonData["VsInputSignatureElement_t"]["m_pSemantic"];
VsInputSignatureElement_t.m_pD3DSemanticName = jsonData["VsInputSignatureElement_t"]["m_pD3DSemanticName"];
VsInputSignatureElement_t.m_nD3DSemanticIndex = jsonData["VsInputSignatureElement_t"]["m_nD3DSemanticIndex"];

// Atribuições para VsInputSignature_t
// VsInputSignature_t Offsets
VsInputSignature_t.m_elems = jsonData["VsInputSignature_t"]["m_elems"];

// Atribuições para RenderInputLayoutField_t
// RenderInputLayoutField_t Offsets
RenderInputLayoutField_t.m_pSemanticName = jsonData["RenderInputLayoutField_t"]["m_pSemanticName"];
RenderInputLayoutField_t.m_nSemanticIndex = jsonData["RenderInputLayoutField_t"]["m_nSemanticIndex"];
RenderInputLayoutField_t.m_Format = jsonData["RenderInputLayoutField_t"]["m_Format"];
RenderInputLayoutField_t.m_nOffset = jsonData["RenderInputLayoutField_t"]["m_nOffset"];
RenderInputLayoutField_t.m_nSlot = jsonData["RenderInputLayoutField_t"]["m_nSlot"];
RenderInputLayoutField_t.m_nSlotType = jsonData["RenderInputLayoutField_t"]["m_nSlotType"];
RenderInputLayoutField_t.m_nInstanceStepRate = jsonData["RenderInputLayoutField_t"]["m_nInstanceStepRate"];

// Atribuições para PackedAABB_t
// PackedAABB_t Offsets
PackedAABB_t.m_nPackedMin = jsonData["PackedAABB_t"]["m_nPackedMin"];
PackedAABB_t.m_nPackedMax = jsonData["PackedAABB_t"]["m_nPackedMax"];

// Atribuições para ConstantInfo_t
// ConstantInfo_t Offsets
ConstantInfo_t.m_name = jsonData["ConstantInfo_t"]["m_name"];
ConstantInfo_t.m_nameToken = jsonData["ConstantInfo_t"]["m_nameToken"];
ConstantInfo_t.m_flValue = jsonData["ConstantInfo_t"]["m_flValue"];

// Atribuições para FuseFunctionIndex_t
// FuseFunctionIndex_t Offsets
FuseFunctionIndex_t.m_Value = jsonData["FuseFunctionIndex_t"]["m_Value"];

// Atribuições para CFuseSymbolTable
// CFuseSymbolTable Offsets
CFuseSymbolTable.m_constants = jsonData["CFuseSymbolTable"]["m_constants"];
CFuseSymbolTable.m_variables = jsonData["CFuseSymbolTable"]["m_variables"];
CFuseSymbolTable.m_functions = jsonData["CFuseSymbolTable"]["m_functions"];
CFuseSymbolTable.m_constantMap = jsonData["CFuseSymbolTable"]["m_constantMap"];
CFuseSymbolTable.m_variableMap = jsonData["CFuseSymbolTable"]["m_variableMap"];
CFuseSymbolTable.m_functionMap = jsonData["CFuseSymbolTable"]["m_functionMap"];

// Atribuições para TestResource_t
// TestResource_t Offsets
TestResource_t.m_name = jsonData["TestResource_t"]["m_name"];

// Atribuições para AABB_t
// AABB_t Offsets
AABB_t.m_vMinBounds = jsonData["AABB_t"]["m_vMinBounds"];
AABB_t.m_vMaxBounds = jsonData["AABB_t"]["m_vMaxBounds"];

// Atribuições para VariableInfo_t
// VariableInfo_t Offsets
VariableInfo_t.m_name = jsonData["VariableInfo_t"]["m_name"];
VariableInfo_t.m_nameToken = jsonData["VariableInfo_t"]["m_nameToken"];
VariableInfo_t.m_nIndex = jsonData["VariableInfo_t"]["m_nIndex"];
VariableInfo_t.m_nNumComponents = jsonData["VariableInfo_t"]["m_nNumComponents"];
VariableInfo_t.m_eVarType = jsonData["VariableInfo_t"]["m_eVarType"];
VariableInfo_t.m_eAccess = jsonData["VariableInfo_t"]["m_eAccess"];

// Atribuições para FourQuaternions
// FourQuaternions Offsets
FourQuaternions.x = jsonData["FourQuaternions"]["x"];
FourQuaternions.y = jsonData["FourQuaternions"]["y"];
FourQuaternions.z = jsonData["FourQuaternions"]["z"];
FourQuaternions.w = jsonData["FourQuaternions"]["w"];

// Atribuições para CFuseProgram
// CFuseProgram Offsets
CFuseProgram.m_programBuffer = jsonData["CFuseProgram"]["m_programBuffer"];
CFuseProgram.m_variablesRead = jsonData["CFuseProgram"]["m_variablesRead"];
CFuseProgram.m_variablesWritten = jsonData["CFuseProgram"]["m_variablesWritten"];
CFuseProgram.m_nMaxTempVarsUsed = jsonData["CFuseProgram"]["m_nMaxTempVarsUsed"];

// Atribuições para FunctionInfo_t
// FunctionInfo_t Offsets
FunctionInfo_t.m_name = jsonData["FunctionInfo_t"]["m_name"];
FunctionInfo_t.m_nameToken = jsonData["FunctionInfo_t"]["m_nameToken"];
FunctionInfo_t.m_nParamCount = jsonData["FunctionInfo_t"]["m_nParamCount"];
FunctionInfo_t.m_nIndex = jsonData["FunctionInfo_t"]["m_nIndex"];
FunctionInfo_t.m_bIsPure = jsonData["FunctionInfo_t"]["m_bIsPure"];

// Atribuições para FuseVariableIndex_t
// FuseVariableIndex_t Offsets
FuseVariableIndex_t.m_Value = jsonData["FuseVariableIndex_t"]["m_Value"];

// Atribuições para ManifestTestResource_t
// ManifestTestResource_t Offsets
ManifestTestResource_t.m_name = jsonData["ManifestTestResource_t"]["m_name"];
ManifestTestResource_t.m_child = jsonData["ManifestTestResource_t"]["m_child"];

// Atribuições para CSSDSMsg_ViewTarget
// CSSDSMsg_ViewTarget Offsets
CSSDSMsg_ViewTarget.m_Name = jsonData["CSSDSMsg_ViewTarget"]["m_Name"];
CSSDSMsg_ViewTarget.m_TextureId = jsonData["CSSDSMsg_ViewTarget"]["m_TextureId"];
CSSDSMsg_ViewTarget.m_nWidth = jsonData["CSSDSMsg_ViewTarget"]["m_nWidth"];
CSSDSMsg_ViewTarget.m_nHeight = jsonData["CSSDSMsg_ViewTarget"]["m_nHeight"];
CSSDSMsg_ViewTarget.m_nRequestedWidth = jsonData["CSSDSMsg_ViewTarget"]["m_nRequestedWidth"];
CSSDSMsg_ViewTarget.m_nRequestedHeight = jsonData["CSSDSMsg_ViewTarget"]["m_nRequestedHeight"];
CSSDSMsg_ViewTarget.m_nNumMipLevels = jsonData["CSSDSMsg_ViewTarget"]["m_nNumMipLevels"];
CSSDSMsg_ViewTarget.m_nDepth = jsonData["CSSDSMsg_ViewTarget"]["m_nDepth"];
CSSDSMsg_ViewTarget.m_nMultisampleNumSamples = jsonData["CSSDSMsg_ViewTarget"]["m_nMultisampleNumSamples"];
CSSDSMsg_ViewTarget.m_nFormat = jsonData["CSSDSMsg_ViewTarget"]["m_nFormat"];

// Atribuições para SceneViewId_t
// SceneViewId_t Offsets
SceneViewId_t.m_nViewId = jsonData["SceneViewId_t"]["m_nViewId"];
SceneViewId_t.m_nFrameCount = jsonData["SceneViewId_t"]["m_nFrameCount"];

// Atribuições para CSSDSEndFrameViewInfo
// CSSDSEndFrameViewInfo Offsets
CSSDSEndFrameViewInfo.m_nViewId = jsonData["CSSDSEndFrameViewInfo"]["m_nViewId"];
CSSDSEndFrameViewInfo.m_ViewName = jsonData["CSSDSEndFrameViewInfo"]["m_ViewName"];

// Atribuições para CSSDSMsg_LayerBase
// CSSDSMsg_LayerBase Offsets
CSSDSMsg_LayerBase.m_viewId = jsonData["CSSDSMsg_LayerBase"]["m_viewId"];
CSSDSMsg_LayerBase.m_ViewName = jsonData["CSSDSMsg_LayerBase"]["m_ViewName"];
CSSDSMsg_LayerBase.m_nLayerIndex = jsonData["CSSDSMsg_LayerBase"]["m_nLayerIndex"];
CSSDSMsg_LayerBase.m_nLayerId = jsonData["CSSDSMsg_LayerBase"]["m_nLayerId"];
CSSDSMsg_LayerBase.m_LayerName = jsonData["CSSDSMsg_LayerBase"]["m_LayerName"];
CSSDSMsg_LayerBase.m_displayText = jsonData["CSSDSMsg_LayerBase"]["m_displayText"];

// Atribuições para CSSDSMsg_ViewTargetList
// CSSDSMsg_ViewTargetList Offsets
CSSDSMsg_ViewTargetList.m_viewId = jsonData["CSSDSMsg_ViewTargetList"]["m_viewId"];
CSSDSMsg_ViewTargetList.m_ViewName = jsonData["CSSDSMsg_ViewTargetList"]["m_ViewName"];
CSSDSMsg_ViewTargetList.m_Targets = jsonData["CSSDSMsg_ViewTargetList"]["m_Targets"];

// Atribuições para CSSDSMsg_ViewRender
// CSSDSMsg_ViewRender Offsets
CSSDSMsg_ViewRender.m_viewId = jsonData["CSSDSMsg_ViewRender"]["m_viewId"];
CSSDSMsg_ViewRender.m_ViewName = jsonData["CSSDSMsg_ViewRender"]["m_ViewName"];

// Atribuições para CSSDSMsg_EndFrame
// CSSDSMsg_EndFrame Offsets
CSSDSMsg_EndFrame.m_Views = jsonData["CSSDSMsg_EndFrame"]["m_Views"];

// Atribuições para CSchemaSystemInternalRegistration
// CSchemaSystemInternalRegistration Offsets
CSchemaSystemInternalRegistration.m_Vector2D = jsonData["CSchemaSystemInternalRegistration"]["m_Vector2D"];
CSchemaSystemInternalRegistration.m_Vector = jsonData["CSchemaSystemInternalRegistration"]["m_Vector"];
CSchemaSystemInternalRegistration.m_VectorAligned = jsonData["CSchemaSystemInternalRegistration"]["m_VectorAligned"];
CSchemaSystemInternalRegistration.m_Quaternion = jsonData["CSchemaSystemInternalRegistration"]["m_Quaternion"];
CSchemaSystemInternalRegistration.m_QAngle = jsonData["CSchemaSystemInternalRegistration"]["m_QAngle"];
CSchemaSystemInternalRegistration.m_RotationVector = jsonData["CSchemaSystemInternalRegistration"]["m_RotationVector"];
CSchemaSystemInternalRegistration.m_RadianEuler = jsonData["CSchemaSystemInternalRegistration"]["m_RadianEuler"];
CSchemaSystemInternalRegistration.m_DegreeEuler = jsonData["CSchemaSystemInternalRegistration"]["m_DegreeEuler"];
CSchemaSystemInternalRegistration.m_QuaternionStorage = jsonData["CSchemaSystemInternalRegistration"]["m_QuaternionStorage"];
CSchemaSystemInternalRegistration.m_matrix3x4_t = jsonData["CSchemaSystemInternalRegistration"]["m_matrix3x4_t"];
CSchemaSystemInternalRegistration.m_matrix3x4a_t = jsonData["CSchemaSystemInternalRegistration"]["m_matrix3x4a_t"];
CSchemaSystemInternalRegistration.m_Color = jsonData["CSchemaSystemInternalRegistration"]["m_Color"];
CSchemaSystemInternalRegistration.m_Vector4D = jsonData["CSchemaSystemInternalRegistration"]["m_Vector4D"];
CSchemaSystemInternalRegistration.m_CTransform = jsonData["CSchemaSystemInternalRegistration"]["m_CTransform"];
CSchemaSystemInternalRegistration.m_pKeyValues = jsonData["CSchemaSystemInternalRegistration"]["m_pKeyValues"];
CSchemaSystemInternalRegistration.m_CUtlBinaryBlock = jsonData["CSchemaSystemInternalRegistration"]["m_CUtlBinaryBlock"];
CSchemaSystemInternalRegistration.m_CUtlString = jsonData["CSchemaSystemInternalRegistration"]["m_CUtlString"];
CSchemaSystemInternalRegistration.m_CUtlSymbol = jsonData["CSchemaSystemInternalRegistration"]["m_CUtlSymbol"];
CSchemaSystemInternalRegistration.m_stringToken = jsonData["CSchemaSystemInternalRegistration"]["m_stringToken"];
CSchemaSystemInternalRegistration.m_stringTokenWithStorage = jsonData["CSchemaSystemInternalRegistration"]["m_stringTokenWithStorage"];
CSchemaSystemInternalRegistration.m_ResourceTypes = jsonData["CSchemaSystemInternalRegistration"]["m_ResourceTypes"];
CSchemaSystemInternalRegistration.m_KV3 = jsonData["CSchemaSystemInternalRegistration"]["m_KV3"];

// Atribuições para CExampleSchemaVData_PolymorphicDerivedA
// CExampleSchemaVData_PolymorphicDerivedA Offsets
CExampleSchemaVData_PolymorphicDerivedA.m_nDerivedA = jsonData["CExampleSchemaVData_PolymorphicDerivedA"]["m_nDerivedA"];

// Atribuições para CExampleSchemaVData_PolymorphicBase
// CExampleSchemaVData_PolymorphicBase Offsets
CExampleSchemaVData_PolymorphicBase.m_nBase = jsonData["CExampleSchemaVData_PolymorphicBase"]["m_nBase"];

// Atribuições para CExampleSchemaVData_PolymorphicDerivedB
// CExampleSchemaVData_PolymorphicDerivedB Offsets
CExampleSchemaVData_PolymorphicDerivedB.m_nDerivedB = jsonData["CExampleSchemaVData_PolymorphicDerivedB"]["m_nDerivedB"];

// Atribuições para ResourceId_t
// ResourceId_t Offsets
ResourceId_t.m_Value = jsonData["ResourceId_t"]["m_Value"];

// Atribuições para CExampleSchemaVData_Monomorphic
// CExampleSchemaVData_Monomorphic Offsets
CExampleSchemaVData_Monomorphic.m_nExample1 = jsonData["CExampleSchemaVData_Monomorphic"]["m_nExample1"];
CExampleSchemaVData_Monomorphic.m_nExample2 = jsonData["CExampleSchemaVData_Monomorphic"]["m_nExample2"];

// Atribuições para CHostageExpresserShim
// CHostageExpresserShim Offsets
CHostageExpresserShim.m_pExpresser = jsonData["CHostageExpresserShim"]["m_pExpresser"];

// Atribuições para CTriggerSoundscape
// CTriggerSoundscape Offsets
CTriggerSoundscape.m_hSoundscape = jsonData["CTriggerSoundscape"]["m_hSoundscape"];
CTriggerSoundscape.m_SoundscapeName = jsonData["CTriggerSoundscape"]["m_SoundscapeName"];
CTriggerSoundscape.m_spectators = jsonData["CTriggerSoundscape"]["m_spectators"];

// Atribuições para CDynamicProp
// CDynamicProp Offsets
CDynamicProp.m_bCreateNavObstacle = jsonData["CDynamicProp"]["m_bCreateNavObstacle"];
CDynamicProp.m_bNavObstacleUpdatesOverridden = jsonData["CDynamicProp"]["m_bNavObstacleUpdatesOverridden"];
CDynamicProp.m_bUseHitboxesForRenderBox = jsonData["CDynamicProp"]["m_bUseHitboxesForRenderBox"];
CDynamicProp.m_bUseAnimGraph = jsonData["CDynamicProp"]["m_bUseAnimGraph"];
CDynamicProp.m_pOutputAnimBegun = jsonData["CDynamicProp"]["m_pOutputAnimBegun"];
CDynamicProp.m_pOutputAnimOver = jsonData["CDynamicProp"]["m_pOutputAnimOver"];
CDynamicProp.m_pOutputAnimLoopCycleOver = jsonData["CDynamicProp"]["m_pOutputAnimLoopCycleOver"];
CDynamicProp.m_OnAnimReachedStart = jsonData["CDynamicProp"]["m_OnAnimReachedStart"];
CDynamicProp.m_OnAnimReachedEnd = jsonData["CDynamicProp"]["m_OnAnimReachedEnd"];
CDynamicProp.m_iszIdleAnim = jsonData["CDynamicProp"]["m_iszIdleAnim"];
CDynamicProp.m_nIdleAnimLoopMode = jsonData["CDynamicProp"]["m_nIdleAnimLoopMode"];
CDynamicProp.m_bRandomizeCycle = jsonData["CDynamicProp"]["m_bRandomizeCycle"];
CDynamicProp.m_bStartDisabled = jsonData["CDynamicProp"]["m_bStartDisabled"];
CDynamicProp.m_bFiredStartEndOutput = jsonData["CDynamicProp"]["m_bFiredStartEndOutput"];
CDynamicProp.m_bForceNpcExclude = jsonData["CDynamicProp"]["m_bForceNpcExclude"];
CDynamicProp.m_bCreateNonSolid = jsonData["CDynamicProp"]["m_bCreateNonSolid"];
CDynamicProp.m_bIsOverrideProp = jsonData["CDynamicProp"]["m_bIsOverrideProp"];
CDynamicProp.m_iInitialGlowState = jsonData["CDynamicProp"]["m_iInitialGlowState"];
CDynamicProp.m_nGlowRange = jsonData["CDynamicProp"]["m_nGlowRange"];
CDynamicProp.m_nGlowRangeMin = jsonData["CDynamicProp"]["m_nGlowRangeMin"];
CDynamicProp.m_glowColor = jsonData["CDynamicProp"]["m_glowColor"];
CDynamicProp.m_nGlowTeam = jsonData["CDynamicProp"]["m_nGlowTeam"];

// Atribuições para CFists
// CFists Offsets
CFists.m_bPlayingUninterruptableAct = jsonData["CFists"]["m_bPlayingUninterruptableAct"];
CFists.m_nUninterruptableActivity = jsonData["CFists"]["m_nUninterruptableActivity"];
CFists.m_bRestorePrevWep = jsonData["CFists"]["m_bRestorePrevWep"];
CFists.m_hWeaponBeforePrevious = jsonData["CFists"]["m_hWeaponBeforePrevious"];
CFists.m_hWeaponPrevious = jsonData["CFists"]["m_hWeaponPrevious"];
CFists.m_bDelayedHardPunchIncoming = jsonData["CFists"]["m_bDelayedHardPunchIncoming"];
CFists.m_bDestroyAfterTaunt = jsonData["CFists"]["m_bDestroyAfterTaunt"];

// Atribuições para CTriggerRemove
// CTriggerRemove Offsets
CTriggerRemove.m_OnRemove = jsonData["CTriggerRemove"]["m_OnRemove"];

// Atribuições para CFilterName
// CFilterName Offsets
CFilterName.m_iFilterName = jsonData["CFilterName"]["m_iFilterName"];

// Atribuições para CProjectedDecal
// CProjectedDecal Offsets
CProjectedDecal.m_nTexture = jsonData["CProjectedDecal"]["m_nTexture"];
CProjectedDecal.m_flDistance = jsonData["CProjectedDecal"]["m_flDistance"];

// Atribuições para CTriggerMultiple
// CTriggerMultiple Offsets
CTriggerMultiple.m_OnTrigger = jsonData["CTriggerMultiple"]["m_OnTrigger"];

// Atribuições para CTriggerPush
// CTriggerPush Offsets
CTriggerPush.m_angPushEntitySpace = jsonData["CTriggerPush"]["m_angPushEntitySpace"];
CTriggerPush.m_vecPushDirEntitySpace = jsonData["CTriggerPush"]["m_vecPushDirEntitySpace"];
CTriggerPush.m_bTriggerOnStartTouch = jsonData["CTriggerPush"]["m_bTriggerOnStartTouch"];
CTriggerPush.m_bUsePathSimple = jsonData["CTriggerPush"]["m_bUsePathSimple"];
CTriggerPush.m_iszPathSimpleName = jsonData["CTriggerPush"]["m_iszPathSimpleName"];
CTriggerPush.m_PathSimple = jsonData["CTriggerPush"]["m_PathSimple"];
CTriggerPush.m_splinePushType = jsonData["CTriggerPush"]["m_splinePushType"];

// Atribuições para FilterHealth
// FilterHealth Offsets
FilterHealth.m_bAdrenalineActive = jsonData["FilterHealth"]["m_bAdrenalineActive"];
FilterHealth.m_iHealthMin = jsonData["FilterHealth"]["m_iHealthMin"];
FilterHealth.m_iHealthMax = jsonData["FilterHealth"]["m_iHealthMax"];

// Atribuições para CTriggerProximity
// CTriggerProximity Offsets
CTriggerProximity.m_hMeasureTarget = jsonData["CTriggerProximity"]["m_hMeasureTarget"];
CTriggerProximity.m_iszMeasureTarget = jsonData["CTriggerProximity"]["m_iszMeasureTarget"];
CTriggerProximity.m_fRadius = jsonData["CTriggerProximity"]["m_fRadius"];
CTriggerProximity.m_nTouchers = jsonData["CTriggerProximity"]["m_nTouchers"];
CTriggerProximity.m_NearestEntityDistance = jsonData["CTriggerProximity"]["m_NearestEntityDistance"];

// Atribuições para CFuncElectrifiedVolume
// CFuncElectrifiedVolume Offsets
CFuncElectrifiedVolume.m_EffectName = jsonData["CFuncElectrifiedVolume"]["m_EffectName"];
CFuncElectrifiedVolume.m_EffectInterpenetrateName = jsonData["CFuncElectrifiedVolume"]["m_EffectInterpenetrateName"];
CFuncElectrifiedVolume.m_EffectZapName = jsonData["CFuncElectrifiedVolume"]["m_EffectZapName"];
CFuncElectrifiedVolume.m_iszEffectSource = jsonData["CFuncElectrifiedVolume"]["m_iszEffectSource"];

// Atribuições para CBaseDMStart
// CBaseDMStart Offsets
CBaseDMStart.m_Master = jsonData["CBaseDMStart"]["m_Master"];

// Atribuições para CCSGameRulesProxy
// CCSGameRulesProxy Offsets
CCSGameRulesProxy.m_pGameRules = jsonData["CCSGameRulesProxy"]["m_pGameRules"];

// Atribuições para CTriggerBrush
// CTriggerBrush Offsets
CTriggerBrush.m_OnStartTouch = jsonData["CTriggerBrush"]["m_OnStartTouch"];
CTriggerBrush.m_OnEndTouch = jsonData["CTriggerBrush"]["m_OnEndTouch"];
CTriggerBrush.m_OnUse = jsonData["CTriggerBrush"]["m_OnUse"];
CTriggerBrush.m_iInputFilter = jsonData["CTriggerBrush"]["m_iInputFilter"];
CTriggerBrush.m_iDontMessageParent = jsonData["CTriggerBrush"]["m_iDontMessageParent"];

// Atribuições para CEnvBeam
// CEnvBeam Offsets
CEnvBeam.m_active = jsonData["CEnvBeam"]["m_active"];
CEnvBeam.m_spriteTexture = jsonData["CEnvBeam"]["m_spriteTexture"];
CEnvBeam.m_iszStartEntity = jsonData["CEnvBeam"]["m_iszStartEntity"];
CEnvBeam.m_iszEndEntity = jsonData["CEnvBeam"]["m_iszEndEntity"];
CEnvBeam.m_life = jsonData["CEnvBeam"]["m_life"];
CEnvBeam.m_boltWidth = jsonData["CEnvBeam"]["m_boltWidth"];
CEnvBeam.m_noiseAmplitude = jsonData["CEnvBeam"]["m_noiseAmplitude"];
CEnvBeam.m_speed = jsonData["CEnvBeam"]["m_speed"];
CEnvBeam.m_restrike = jsonData["CEnvBeam"]["m_restrike"];
CEnvBeam.m_iszSpriteName = jsonData["CEnvBeam"]["m_iszSpriteName"];
CEnvBeam.m_frameStart = jsonData["CEnvBeam"]["m_frameStart"];
CEnvBeam.m_vEndPointWorld = jsonData["CEnvBeam"]["m_vEndPointWorld"];
CEnvBeam.m_vEndPointRelative = jsonData["CEnvBeam"]["m_vEndPointRelative"];
CEnvBeam.m_radius = jsonData["CEnvBeam"]["m_radius"];
CEnvBeam.m_TouchType = jsonData["CEnvBeam"]["m_TouchType"];
CEnvBeam.m_iFilterName = jsonData["CEnvBeam"]["m_iFilterName"];
CEnvBeam.m_hFilter = jsonData["CEnvBeam"]["m_hFilter"];
CEnvBeam.m_iszDecal = jsonData["CEnvBeam"]["m_iszDecal"];
CEnvBeam.m_OnTouchedByEntity = jsonData["CEnvBeam"]["m_OnTouchedByEntity"];

// Atribuições para CTonemapTrigger
// CTonemapTrigger Offsets
CTonemapTrigger.m_tonemapControllerName = jsonData["CTonemapTrigger"]["m_tonemapControllerName"];
CTonemapTrigger.m_hTonemapController = jsonData["CTonemapTrigger"]["m_hTonemapController"];

// Atribuições para CFogTrigger
// CFogTrigger Offsets
CFogTrigger.m_fog = jsonData["CFogTrigger"]["m_fog"];

// Atribuições para CLogicCollisionPair
// CLogicCollisionPair Offsets
CLogicCollisionPair.m_nameAttach1 = jsonData["CLogicCollisionPair"]["m_nameAttach1"];
CLogicCollisionPair.m_nameAttach2 = jsonData["CLogicCollisionPair"]["m_nameAttach2"];
CLogicCollisionPair.m_supportMultipleEntitiesWithSameName = jsonData["CLogicCollisionPair"]["m_supportMultipleEntitiesWithSameName"];
CLogicCollisionPair.m_disabled = jsonData["CLogicCollisionPair"]["m_disabled"];
CLogicCollisionPair.m_succeeded = jsonData["CLogicCollisionPair"]["m_succeeded"];

// Atribuições para CPointTeleport
// CPointTeleport Offsets
CPointTeleport.m_vSaveOrigin = jsonData["CPointTeleport"]["m_vSaveOrigin"];
CPointTeleport.m_vSaveAngles = jsonData["CPointTeleport"]["m_vSaveAngles"];
CPointTeleport.m_bTeleportParentedEntities = jsonData["CPointTeleport"]["m_bTeleportParentedEntities"];
CPointTeleport.m_bTeleportUseCurrentAngle = jsonData["CPointTeleport"]["m_bTeleportUseCurrentAngle"];

// Atribuições para CBtNodeConditionInactive
// CBtNodeConditionInactive Offsets
CBtNodeConditionInactive.m_flRoundStartThresholdSeconds = jsonData["CBtNodeConditionInactive"]["m_flRoundStartThresholdSeconds"];
CBtNodeConditionInactive.m_flSensorInactivityThresholdSeconds = jsonData["CBtNodeConditionInactive"]["m_flSensorInactivityThresholdSeconds"];
CBtNodeConditionInactive.m_SensorInactivityTimer = jsonData["CBtNodeConditionInactive"]["m_SensorInactivityTimer"];

// Atribuições para CTriggerBuoyancy
// CTriggerBuoyancy Offsets
CTriggerBuoyancy.m_BuoyancyHelper = jsonData["CTriggerBuoyancy"]["m_BuoyancyHelper"];
CTriggerBuoyancy.m_flFluidDensity = jsonData["CTriggerBuoyancy"]["m_flFluidDensity"];

// Atribuições para CMoverPathNode
// CMoverPathNode Offsets
CMoverPathNode.m_vInTangentLocal = jsonData["CMoverPathNode"]["m_vInTangentLocal"];
CMoverPathNode.m_vOutTangentLocal = jsonData["CMoverPathNode"]["m_vOutTangentLocal"];
CMoverPathNode.m_szParentPathUniqueID = jsonData["CMoverPathNode"]["m_szParentPathUniqueID"];
CMoverPathNode.m_OnPassThrough = jsonData["CMoverPathNode"]["m_OnPassThrough"];
CMoverPathNode.m_OnPassThroughForward = jsonData["CMoverPathNode"]["m_OnPassThroughForward"];
CMoverPathNode.m_OnPassThroughReverse = jsonData["CMoverPathNode"]["m_OnPassThroughReverse"];
CMoverPathNode.m_hMover = jsonData["CMoverPathNode"]["m_hMover"];

// Atribuições para CBtActionAim
// CBtActionAim Offsets
CBtActionAim.m_szSensorInputKey = jsonData["CBtActionAim"]["m_szSensorInputKey"];
CBtActionAim.m_szAimReadyKey = jsonData["CBtActionAim"]["m_szAimReadyKey"];
CBtActionAim.m_flZoomCooldownTimestamp = jsonData["CBtActionAim"]["m_flZoomCooldownTimestamp"];
CBtActionAim.m_bDoneAiming = jsonData["CBtActionAim"]["m_bDoneAiming"];
CBtActionAim.m_flLerpStartTime = jsonData["CBtActionAim"]["m_flLerpStartTime"];
CBtActionAim.m_flNextLookTargetLerpTime = jsonData["CBtActionAim"]["m_flNextLookTargetLerpTime"];
CBtActionAim.m_flPenaltyReductionRatio = jsonData["CBtActionAim"]["m_flPenaltyReductionRatio"];
CBtActionAim.m_NextLookTarget = jsonData["CBtActionAim"]["m_NextLookTarget"];
CBtActionAim.m_AimTimer = jsonData["CBtActionAim"]["m_AimTimer"];
CBtActionAim.m_SniperHoldTimer = jsonData["CBtActionAim"]["m_SniperHoldTimer"];
CBtActionAim.m_FocusIntervalTimer = jsonData["CBtActionAim"]["m_FocusIntervalTimer"];
CBtActionAim.m_bAcquired = jsonData["CBtActionAim"]["m_bAcquired"];

// Atribuições para CFogController
// CFogController Offsets
CFogController.m_fog = jsonData["CFogController"]["m_fog"];
CFogController.m_bUseAngles = jsonData["CFogController"]["m_bUseAngles"];
CFogController.m_iChangedVariables = jsonData["CFogController"]["m_iChangedVariables"];

// Atribuições para CDecoyProjectile
// CDecoyProjectile Offsets
CDecoyProjectile.m_nDecoyShotTick = jsonData["CDecoyProjectile"]["m_nDecoyShotTick"];
CDecoyProjectile.m_shotsRemaining = jsonData["CDecoyProjectile"]["m_shotsRemaining"];
CDecoyProjectile.m_fExpireTime = jsonData["CDecoyProjectile"]["m_fExpireTime"];
CDecoyProjectile.m_decoyWeaponDefIndex = jsonData["CDecoyProjectile"]["m_decoyWeaponDefIndex"];

// Atribuições para CPhysicsEntitySolver
// CPhysicsEntitySolver Offsets
CPhysicsEntitySolver.m_hMovingEntity = jsonData["CPhysicsEntitySolver"]["m_hMovingEntity"];
CPhysicsEntitySolver.m_hPhysicsBlocker = jsonData["CPhysicsEntitySolver"]["m_hPhysicsBlocker"];
CPhysicsEntitySolver.m_separationDuration = jsonData["CPhysicsEntitySolver"]["m_separationDuration"];
CPhysicsEntitySolver.m_cancelTime = jsonData["CPhysicsEntitySolver"]["m_cancelTime"];

// Atribuições para CPlayerPing
// CPlayerPing Offsets
CPlayerPing.m_hPlayer = jsonData["CPlayerPing"]["m_hPlayer"];
CPlayerPing.m_hPingedEntity = jsonData["CPlayerPing"]["m_hPingedEntity"];
CPlayerPing.m_iType = jsonData["CPlayerPing"]["m_iType"];
CPlayerPing.m_bUrgent = jsonData["CPlayerPing"]["m_bUrgent"];
CPlayerPing.m_szPlaceName = jsonData["CPlayerPing"]["m_szPlaceName"];

// Atribuições para CEnvFireSensor
// CEnvFireSensor Offsets
CEnvFireSensor.m_bEnabled = jsonData["CEnvFireSensor"]["m_bEnabled"];
CEnvFireSensor.m_bHeatAtLevel = jsonData["CEnvFireSensor"]["m_bHeatAtLevel"];
CEnvFireSensor.m_radius = jsonData["CEnvFireSensor"]["m_radius"];
CEnvFireSensor.m_targetLevel = jsonData["CEnvFireSensor"]["m_targetLevel"];
CEnvFireSensor.m_targetTime = jsonData["CEnvFireSensor"]["m_targetTime"];
CEnvFireSensor.m_levelTime = jsonData["CEnvFireSensor"]["m_levelTime"];
CEnvFireSensor.m_OnHeatLevelStart = jsonData["CEnvFireSensor"]["m_OnHeatLevelStart"];
CEnvFireSensor.m_OnHeatLevelEnd = jsonData["CEnvFireSensor"]["m_OnHeatLevelEnd"];

// Atribuições para CEnvWindShared__WindAveEvent_t
// CEnvWindShared__WindAveEvent_t Offsets
CEnvWindShared__WindAveEvent_t.m_flStartWindSpeed = jsonData["CEnvWindShared__WindAveEvent_t"]["m_flStartWindSpeed"];
CEnvWindShared__WindAveEvent_t.m_flAveWindSpeed = jsonData["CEnvWindShared__WindAveEvent_t"]["m_flAveWindSpeed"];

// Atribuições para CPointGamestatsCounter
// CPointGamestatsCounter Offsets
CPointGamestatsCounter.m_strStatisticName = jsonData["CPointGamestatsCounter"]["m_strStatisticName"];
CPointGamestatsCounter.m_bDisabled = jsonData["CPointGamestatsCounter"]["m_bDisabled"];

// Atribuições para CEnvShake
// CEnvShake Offsets
CEnvShake.m_limitToEntity = jsonData["CEnvShake"]["m_limitToEntity"];
CEnvShake.m_Amplitude = jsonData["CEnvShake"]["m_Amplitude"];
CEnvShake.m_Frequency = jsonData["CEnvShake"]["m_Frequency"];
CEnvShake.m_Duration = jsonData["CEnvShake"]["m_Duration"];
CEnvShake.m_Radius = jsonData["CEnvShake"]["m_Radius"];
CEnvShake.m_stopTime = jsonData["CEnvShake"]["m_stopTime"];
CEnvShake.m_nextShake = jsonData["CEnvShake"]["m_nextShake"];
CEnvShake.m_currentAmp = jsonData["CEnvShake"]["m_currentAmp"];
CEnvShake.m_maxForce = jsonData["CEnvShake"]["m_maxForce"];
CEnvShake.m_shakeCallback = jsonData["CEnvShake"]["m_shakeCallback"];

// Atribuições para CBaseMoveBehavior
// CBaseMoveBehavior Offsets
CBaseMoveBehavior.m_iPositionInterpolator = jsonData["CBaseMoveBehavior"]["m_iPositionInterpolator"];
CBaseMoveBehavior.m_iRotationInterpolator = jsonData["CBaseMoveBehavior"]["m_iRotationInterpolator"];
CBaseMoveBehavior.m_flAnimStartTime = jsonData["CBaseMoveBehavior"]["m_flAnimStartTime"];
CBaseMoveBehavior.m_flAnimEndTime = jsonData["CBaseMoveBehavior"]["m_flAnimEndTime"];
CBaseMoveBehavior.m_flAverageSpeedAcrossFrame = jsonData["CBaseMoveBehavior"]["m_flAverageSpeedAcrossFrame"];
CBaseMoveBehavior.m_pCurrentKeyFrame = jsonData["CBaseMoveBehavior"]["m_pCurrentKeyFrame"];
CBaseMoveBehavior.m_pTargetKeyFrame = jsonData["CBaseMoveBehavior"]["m_pTargetKeyFrame"];
CBaseMoveBehavior.m_pPreKeyFrame = jsonData["CBaseMoveBehavior"]["m_pPreKeyFrame"];
CBaseMoveBehavior.m_pPostKeyFrame = jsonData["CBaseMoveBehavior"]["m_pPostKeyFrame"];
CBaseMoveBehavior.m_flTimeIntoFrame = jsonData["CBaseMoveBehavior"]["m_flTimeIntoFrame"];
CBaseMoveBehavior.m_iDirection = jsonData["CBaseMoveBehavior"]["m_iDirection"];

// Atribuições para CFuncNavObstruction
// CFuncNavObstruction Offsets
CFuncNavObstruction.m_bDisabled = jsonData["CFuncNavObstruction"]["m_bDisabled"];

// Atribuições para CEnvTilt
// CEnvTilt Offsets
CEnvTilt.m_Duration = jsonData["CEnvTilt"]["m_Duration"];
CEnvTilt.m_Radius = jsonData["CEnvTilt"]["m_Radius"];
CEnvTilt.m_TiltTime = jsonData["CEnvTilt"]["m_TiltTime"];
CEnvTilt.m_stopTime = jsonData["CEnvTilt"]["m_stopTime"];

// Atribuições para CBaseCSGrenade
// CBaseCSGrenade Offsets
CBaseCSGrenade.m_bRedraw = jsonData["CBaseCSGrenade"]["m_bRedraw"];
CBaseCSGrenade.m_bIsHeldByPlayer = jsonData["CBaseCSGrenade"]["m_bIsHeldByPlayer"];
CBaseCSGrenade.m_bPinPulled = jsonData["CBaseCSGrenade"]["m_bPinPulled"];
CBaseCSGrenade.m_bJumpThrow = jsonData["CBaseCSGrenade"]["m_bJumpThrow"];
CBaseCSGrenade.m_bThrowAnimating = jsonData["CBaseCSGrenade"]["m_bThrowAnimating"];
CBaseCSGrenade.m_fThrowTime = jsonData["CBaseCSGrenade"]["m_fThrowTime"];
CBaseCSGrenade.m_flThrowStrength = jsonData["CBaseCSGrenade"]["m_flThrowStrength"];
CBaseCSGrenade.m_flThrowStrengthApproach = jsonData["CBaseCSGrenade"]["m_flThrowStrengthApproach"];
CBaseCSGrenade.m_fDropTime = jsonData["CBaseCSGrenade"]["m_fDropTime"];
CBaseCSGrenade.m_fPinPullTime = jsonData["CBaseCSGrenade"]["m_fPinPullTime"];
CBaseCSGrenade.m_bJustPulledPin = jsonData["CBaseCSGrenade"]["m_bJustPulledPin"];
CBaseCSGrenade.m_nNextHoldTick = jsonData["CBaseCSGrenade"]["m_nNextHoldTick"];
CBaseCSGrenade.m_flNextHoldFrac = jsonData["CBaseCSGrenade"]["m_flNextHoldFrac"];
CBaseCSGrenade.m_hSwitchToWeaponAfterThrow = jsonData["CBaseCSGrenade"]["m_hSwitchToWeaponAfterThrow"];

// Atribuições para CItemGenericTriggerHelper
// CItemGenericTriggerHelper Offsets
CItemGenericTriggerHelper.m_hParentItem = jsonData["CItemGenericTriggerHelper"]["m_hParentItem"];

// Atribuições para CLogicBranchList
// CLogicBranchList Offsets
CLogicBranchList.m_nLogicBranchNames = jsonData["CLogicBranchList"]["m_nLogicBranchNames"];
CLogicBranchList.m_LogicBranchList = jsonData["CLogicBranchList"]["m_LogicBranchList"];
CLogicBranchList.m_eLastState = jsonData["CLogicBranchList"]["m_eLastState"];
CLogicBranchList.m_OnAllTrue = jsonData["CLogicBranchList"]["m_OnAllTrue"];
CLogicBranchList.m_OnAllFalse = jsonData["CLogicBranchList"]["m_OnAllFalse"];
CLogicBranchList.m_OnMixed = jsonData["CLogicBranchList"]["m_OnMixed"];

// Atribuições para fogplayerparams_t
// fogplayerparams_t Offsets
fogplayerparams_t.m_hCtrl = jsonData["fogplayerparams_t"]["m_hCtrl"];
fogplayerparams_t.m_flTransitionTime = jsonData["fogplayerparams_t"]["m_flTransitionTime"];
fogplayerparams_t.m_OldColor = jsonData["fogplayerparams_t"]["m_OldColor"];
fogplayerparams_t.m_flOldStart = jsonData["fogplayerparams_t"]["m_flOldStart"];
fogplayerparams_t.m_flOldEnd = jsonData["fogplayerparams_t"]["m_flOldEnd"];
fogplayerparams_t.m_flOldMaxDensity = jsonData["fogplayerparams_t"]["m_flOldMaxDensity"];
fogplayerparams_t.m_flOldHDRColorScale = jsonData["fogplayerparams_t"]["m_flOldHDRColorScale"];
fogplayerparams_t.m_flOldFarZ = jsonData["fogplayerparams_t"]["m_flOldFarZ"];
fogplayerparams_t.m_NewColor = jsonData["fogplayerparams_t"]["m_NewColor"];
fogplayerparams_t.m_flNewStart = jsonData["fogplayerparams_t"]["m_flNewStart"];
fogplayerparams_t.m_flNewEnd = jsonData["fogplayerparams_t"]["m_flNewEnd"];
fogplayerparams_t.m_flNewMaxDensity = jsonData["fogplayerparams_t"]["m_flNewMaxDensity"];
fogplayerparams_t.m_flNewHDRColorScale = jsonData["fogplayerparams_t"]["m_flNewHDRColorScale"];
fogplayerparams_t.m_flNewFarZ = jsonData["fogplayerparams_t"]["m_flNewFarZ"];

// Atribuições para CRevertSaved
// CRevertSaved Offsets
CRevertSaved.m_loadTime = jsonData["CRevertSaved"]["m_loadTime"];
CRevertSaved.m_Duration = jsonData["CRevertSaved"]["m_Duration"];
CRevertSaved.m_HoldTime = jsonData["CRevertSaved"]["m_HoldTime"];

// Atribuições para CMultiLightProxy
// CMultiLightProxy Offsets
CMultiLightProxy.m_iszLightNameFilter = jsonData["CMultiLightProxy"]["m_iszLightNameFilter"];
CMultiLightProxy.m_iszLightClassFilter = jsonData["CMultiLightProxy"]["m_iszLightClassFilter"];
CMultiLightProxy.m_flLightRadiusFilter = jsonData["CMultiLightProxy"]["m_flLightRadiusFilter"];
CMultiLightProxy.m_flBrightnessDelta = jsonData["CMultiLightProxy"]["m_flBrightnessDelta"];
CMultiLightProxy.m_bPerformScreenFade = jsonData["CMultiLightProxy"]["m_bPerformScreenFade"];
CMultiLightProxy.m_flTargetBrightnessMultiplier = jsonData["CMultiLightProxy"]["m_flTargetBrightnessMultiplier"];
CMultiLightProxy.m_flCurrentBrightnessMultiplier = jsonData["CMultiLightProxy"]["m_flCurrentBrightnessMultiplier"];
CMultiLightProxy.m_vecLights = jsonData["CMultiLightProxy"]["m_vecLights"];

// Atribuições para CLogicCase
// CLogicCase Offsets
CLogicCase.m_nCase = jsonData["CLogicCase"]["m_nCase"];
CLogicCase.m_nShuffleCases = jsonData["CLogicCase"]["m_nShuffleCases"];
CLogicCase.m_nLastShuffleCase = jsonData["CLogicCase"]["m_nLastShuffleCase"];
CLogicCase.m_uchShuffleCaseMap = jsonData["CLogicCase"]["m_uchShuffleCaseMap"];
CLogicCase.m_OnCase = jsonData["CLogicCase"]["m_OnCase"];
CLogicCase.m_OnDefault = jsonData["CLogicCase"]["m_OnDefault"];

// Atribuições para CItemDefuser
// CItemDefuser Offsets
CItemDefuser.m_entitySpottedState = jsonData["CItemDefuser"]["m_entitySpottedState"];
CItemDefuser.m_nSpotRules = jsonData["CItemDefuser"]["m_nSpotRules"];

// Atribuições para CSoundEventEntity
// CSoundEventEntity Offsets
CSoundEventEntity.m_bStartOnSpawn = jsonData["CSoundEventEntity"]["m_bStartOnSpawn"];
CSoundEventEntity.m_bToLocalPlayer = jsonData["CSoundEventEntity"]["m_bToLocalPlayer"];
CSoundEventEntity.m_bStopOnNew = jsonData["CSoundEventEntity"]["m_bStopOnNew"];
CSoundEventEntity.m_bSaveRestore = jsonData["CSoundEventEntity"]["m_bSaveRestore"];
CSoundEventEntity.m_bSavedIsPlaying = jsonData["CSoundEventEntity"]["m_bSavedIsPlaying"];
CSoundEventEntity.m_flSavedElapsedTime = jsonData["CSoundEventEntity"]["m_flSavedElapsedTime"];
CSoundEventEntity.m_iszSourceEntityName = jsonData["CSoundEventEntity"]["m_iszSourceEntityName"];
CSoundEventEntity.m_iszAttachmentName = jsonData["CSoundEventEntity"]["m_iszAttachmentName"];
CSoundEventEntity.m_onGUIDChanged = jsonData["CSoundEventEntity"]["m_onGUIDChanged"];
CSoundEventEntity.m_onSoundFinished = jsonData["CSoundEventEntity"]["m_onSoundFinished"];
CSoundEventEntity.m_flClientCullRadius = jsonData["CSoundEventEntity"]["m_flClientCullRadius"];
CSoundEventEntity.m_iszSoundName = jsonData["CSoundEventEntity"]["m_iszSoundName"];
CSoundEventEntity.m_hSource = jsonData["CSoundEventEntity"]["m_hSource"];
CSoundEventEntity.m_nEntityIndexSelection = jsonData["CSoundEventEntity"]["m_nEntityIndexSelection"];

// Atribuições para CWeaponBaseItem
// CWeaponBaseItem Offsets
CWeaponBaseItem.m_SequenceCompleteTimer = jsonData["CWeaponBaseItem"]["m_SequenceCompleteTimer"];
CWeaponBaseItem.m_bRedraw = jsonData["CWeaponBaseItem"]["m_bRedraw"];

// Atribuições para CEnvVolumetricFogController
// CEnvVolumetricFogController Offsets
CEnvVolumetricFogController.m_flScattering = jsonData["CEnvVolumetricFogController"]["m_flScattering"];
CEnvVolumetricFogController.m_flAnisotropy = jsonData["CEnvVolumetricFogController"]["m_flAnisotropy"];
CEnvVolumetricFogController.m_flFadeSpeed = jsonData["CEnvVolumetricFogController"]["m_flFadeSpeed"];
CEnvVolumetricFogController.m_flDrawDistance = jsonData["CEnvVolumetricFogController"]["m_flDrawDistance"];
CEnvVolumetricFogController.m_flFadeInStart = jsonData["CEnvVolumetricFogController"]["m_flFadeInStart"];
CEnvVolumetricFogController.m_flFadeInEnd = jsonData["CEnvVolumetricFogController"]["m_flFadeInEnd"];
CEnvVolumetricFogController.m_flIndirectStrength = jsonData["CEnvVolumetricFogController"]["m_flIndirectStrength"];
CEnvVolumetricFogController.m_nVolumeDepth = jsonData["CEnvVolumetricFogController"]["m_nVolumeDepth"];
CEnvVolumetricFogController.m_fFirstVolumeSliceThickness = jsonData["CEnvVolumetricFogController"]["m_fFirstVolumeSliceThickness"];
CEnvVolumetricFogController.m_nIndirectTextureDimX = jsonData["CEnvVolumetricFogController"]["m_nIndirectTextureDimX"];
CEnvVolumetricFogController.m_nIndirectTextureDimY = jsonData["CEnvVolumetricFogController"]["m_nIndirectTextureDimY"];
CEnvVolumetricFogController.m_nIndirectTextureDimZ = jsonData["CEnvVolumetricFogController"]["m_nIndirectTextureDimZ"];
CEnvVolumetricFogController.m_vBoxMins = jsonData["CEnvVolumetricFogController"]["m_vBoxMins"];
CEnvVolumetricFogController.m_vBoxMaxs = jsonData["CEnvVolumetricFogController"]["m_vBoxMaxs"];
CEnvVolumetricFogController.m_bActive = jsonData["CEnvVolumetricFogController"]["m_bActive"];
CEnvVolumetricFogController.m_flStartAnisoTime = jsonData["CEnvVolumetricFogController"]["m_flStartAnisoTime"];
CEnvVolumetricFogController.m_flStartScatterTime = jsonData["CEnvVolumetricFogController"]["m_flStartScatterTime"];
CEnvVolumetricFogController.m_flStartDrawDistanceTime = jsonData["CEnvVolumetricFogController"]["m_flStartDrawDistanceTime"];
CEnvVolumetricFogController.m_flStartAnisotropy = jsonData["CEnvVolumetricFogController"]["m_flStartAnisotropy"];
CEnvVolumetricFogController.m_flStartScattering = jsonData["CEnvVolumetricFogController"]["m_flStartScattering"];
CEnvVolumetricFogController.m_flStartDrawDistance = jsonData["CEnvVolumetricFogController"]["m_flStartDrawDistance"];
CEnvVolumetricFogController.m_flDefaultAnisotropy = jsonData["CEnvVolumetricFogController"]["m_flDefaultAnisotropy"];
CEnvVolumetricFogController.m_flDefaultScattering = jsonData["CEnvVolumetricFogController"]["m_flDefaultScattering"];
CEnvVolumetricFogController.m_flDefaultDrawDistance = jsonData["CEnvVolumetricFogController"]["m_flDefaultDrawDistance"];
CEnvVolumetricFogController.m_bStartDisabled = jsonData["CEnvVolumetricFogController"]["m_bStartDisabled"];
CEnvVolumetricFogController.m_bEnableIndirect = jsonData["CEnvVolumetricFogController"]["m_bEnableIndirect"];
CEnvVolumetricFogController.m_bIndirectUseLPVs = jsonData["CEnvVolumetricFogController"]["m_bIndirectUseLPVs"];
CEnvVolumetricFogController.m_bIsMaster = jsonData["CEnvVolumetricFogController"]["m_bIsMaster"];
CEnvVolumetricFogController.m_hFogIndirectTexture = jsonData["CEnvVolumetricFogController"]["m_hFogIndirectTexture"];
CEnvVolumetricFogController.m_nForceRefreshCount = jsonData["CEnvVolumetricFogController"]["m_nForceRefreshCount"];
CEnvVolumetricFogController.m_fNoiseSpeed = jsonData["CEnvVolumetricFogController"]["m_fNoiseSpeed"];
CEnvVolumetricFogController.m_fNoiseStrength = jsonData["CEnvVolumetricFogController"]["m_fNoiseStrength"];
CEnvVolumetricFogController.m_vNoiseScale = jsonData["CEnvVolumetricFogController"]["m_vNoiseScale"];
CEnvVolumetricFogController.m_bFirstTime = jsonData["CEnvVolumetricFogController"]["m_bFirstTime"];

// Atribuições para CPhysicsPropRespawnable
// CPhysicsPropRespawnable Offsets
CPhysicsPropRespawnable.m_vOriginalSpawnOrigin = jsonData["CPhysicsPropRespawnable"]["m_vOriginalSpawnOrigin"];
CPhysicsPropRespawnable.m_vOriginalSpawnAngles = jsonData["CPhysicsPropRespawnable"]["m_vOriginalSpawnAngles"];
CPhysicsPropRespawnable.m_vOriginalMins = jsonData["CPhysicsPropRespawnable"]["m_vOriginalMins"];
CPhysicsPropRespawnable.m_vOriginalMaxs = jsonData["CPhysicsPropRespawnable"]["m_vOriginalMaxs"];
CPhysicsPropRespawnable.m_flRespawnDuration = jsonData["CPhysicsPropRespawnable"]["m_flRespawnDuration"];

// Atribuições para CPhysBallSocket
// CPhysBallSocket Offsets
CPhysBallSocket.m_flJointFriction = jsonData["CPhysBallSocket"]["m_flJointFriction"];
CPhysBallSocket.m_bEnableSwingLimit = jsonData["CPhysBallSocket"]["m_bEnableSwingLimit"];
CPhysBallSocket.m_flSwingLimit = jsonData["CPhysBallSocket"]["m_flSwingLimit"];
CPhysBallSocket.m_bEnableTwistLimit = jsonData["CPhysBallSocket"]["m_bEnableTwistLimit"];
CPhysBallSocket.m_flMinTwistAngle = jsonData["CPhysBallSocket"]["m_flMinTwistAngle"];
CPhysBallSocket.m_flMaxTwistAngle = jsonData["CPhysBallSocket"]["m_flMaxTwistAngle"];

// Atribuições para CInfoPlayerStart
// CInfoPlayerStart Offsets
CInfoPlayerStart.m_bDisabled = jsonData["CInfoPlayerStart"]["m_bDisabled"];
CInfoPlayerStart.m_bIsMaster = jsonData["CInfoPlayerStart"]["m_bIsMaster"];
CInfoPlayerStart.m_pPawnSubclass = jsonData["CInfoPlayerStart"]["m_pPawnSubclass"];

// Atribuições para CSoundOpvarSetOBBWindEntity
// CSoundOpvarSetOBBWindEntity Offsets
CSoundOpvarSetOBBWindEntity.m_vMins = jsonData["CSoundOpvarSetOBBWindEntity"]["m_vMins"];
CSoundOpvarSetOBBWindEntity.m_vMaxs = jsonData["CSoundOpvarSetOBBWindEntity"]["m_vMaxs"];
CSoundOpvarSetOBBWindEntity.m_vDistanceMins = jsonData["CSoundOpvarSetOBBWindEntity"]["m_vDistanceMins"];
CSoundOpvarSetOBBWindEntity.m_vDistanceMaxs = jsonData["CSoundOpvarSetOBBWindEntity"]["m_vDistanceMaxs"];
CSoundOpvarSetOBBWindEntity.m_flWindMin = jsonData["CSoundOpvarSetOBBWindEntity"]["m_flWindMin"];
CSoundOpvarSetOBBWindEntity.m_flWindMax = jsonData["CSoundOpvarSetOBBWindEntity"]["m_flWindMax"];
CSoundOpvarSetOBBWindEntity.m_flWindMapMin = jsonData["CSoundOpvarSetOBBWindEntity"]["m_flWindMapMin"];
CSoundOpvarSetOBBWindEntity.m_flWindMapMax = jsonData["CSoundOpvarSetOBBWindEntity"]["m_flWindMapMax"];

// Atribuições para CRagdollPropAttached
// CRagdollPropAttached Offsets
CRagdollPropAttached.m_boneIndexAttached = jsonData["CRagdollPropAttached"]["m_boneIndexAttached"];
CRagdollPropAttached.m_ragdollAttachedObjectIndex = jsonData["CRagdollPropAttached"]["m_ragdollAttachedObjectIndex"];
CRagdollPropAttached.m_attachmentPointBoneSpace = jsonData["CRagdollPropAttached"]["m_attachmentPointBoneSpace"];
CRagdollPropAttached.m_attachmentPointRagdollSpace = jsonData["CRagdollPropAttached"]["m_attachmentPointRagdollSpace"];
CRagdollPropAttached.m_bShouldDetach = jsonData["CRagdollPropAttached"]["m_bShouldDetach"];
CRagdollPropAttached.m_bShouldDeleteAttachedActivationRecord = jsonData["CRagdollPropAttached"]["m_bShouldDeleteAttachedActivationRecord"];

// Atribuições para CItemDogtags
// CItemDogtags Offsets
CItemDogtags.m_OwningPlayer = jsonData["CItemDogtags"]["m_OwningPlayer"];
CItemDogtags.m_KillingPlayer = jsonData["CItemDogtags"]["m_KillingPlayer"];

// Atribuições para CItemGeneric
// CItemGeneric Offsets
CItemGeneric.m_bHasTriggerRadius = jsonData["CItemGeneric"]["m_bHasTriggerRadius"];
CItemGeneric.m_bHasPickupRadius = jsonData["CItemGeneric"]["m_bHasPickupRadius"];
CItemGeneric.m_flPickupRadiusSqr = jsonData["CItemGeneric"]["m_flPickupRadiusSqr"];
CItemGeneric.m_flTriggerRadiusSqr = jsonData["CItemGeneric"]["m_flTriggerRadiusSqr"];
CItemGeneric.m_flLastPickupCheck = jsonData["CItemGeneric"]["m_flLastPickupCheck"];
CItemGeneric.m_bPlayerCounterListenerAdded = jsonData["CItemGeneric"]["m_bPlayerCounterListenerAdded"];
CItemGeneric.m_bPlayerInTriggerRadius = jsonData["CItemGeneric"]["m_bPlayerInTriggerRadius"];
CItemGeneric.m_hSpawnParticleEffect = jsonData["CItemGeneric"]["m_hSpawnParticleEffect"];
CItemGeneric.m_pAmbientSoundEffect = jsonData["CItemGeneric"]["m_pAmbientSoundEffect"];
CItemGeneric.m_bAutoStartAmbientSound = jsonData["CItemGeneric"]["m_bAutoStartAmbientSound"];
CItemGeneric.m_pSpawnScriptFunction = jsonData["CItemGeneric"]["m_pSpawnScriptFunction"];
CItemGeneric.m_hPickupParticleEffect = jsonData["CItemGeneric"]["m_hPickupParticleEffect"];
CItemGeneric.m_pPickupSoundEffect = jsonData["CItemGeneric"]["m_pPickupSoundEffect"];
CItemGeneric.m_pPickupScriptFunction = jsonData["CItemGeneric"]["m_pPickupScriptFunction"];
CItemGeneric.m_hTimeoutParticleEffect = jsonData["CItemGeneric"]["m_hTimeoutParticleEffect"];
CItemGeneric.m_pTimeoutSoundEffect = jsonData["CItemGeneric"]["m_pTimeoutSoundEffect"];
CItemGeneric.m_pTimeoutScriptFunction = jsonData["CItemGeneric"]["m_pTimeoutScriptFunction"];
CItemGeneric.m_pPickupFilterName = jsonData["CItemGeneric"]["m_pPickupFilterName"];
CItemGeneric.m_hPickupFilter = jsonData["CItemGeneric"]["m_hPickupFilter"];
CItemGeneric.m_OnPickup = jsonData["CItemGeneric"]["m_OnPickup"];
CItemGeneric.m_OnTimeout = jsonData["CItemGeneric"]["m_OnTimeout"];
CItemGeneric.m_OnTriggerStartTouch = jsonData["CItemGeneric"]["m_OnTriggerStartTouch"];
CItemGeneric.m_OnTriggerTouch = jsonData["CItemGeneric"]["m_OnTriggerTouch"];
CItemGeneric.m_OnTriggerEndTouch = jsonData["CItemGeneric"]["m_OnTriggerEndTouch"];
CItemGeneric.m_pAllowPickupScriptFunction = jsonData["CItemGeneric"]["m_pAllowPickupScriptFunction"];
CItemGeneric.m_flPickupRadius = jsonData["CItemGeneric"]["m_flPickupRadius"];
CItemGeneric.m_flTriggerRadius = jsonData["CItemGeneric"]["m_flTriggerRadius"];
CItemGeneric.m_pTriggerSoundEffect = jsonData["CItemGeneric"]["m_pTriggerSoundEffect"];
CItemGeneric.m_bGlowWhenInTrigger = jsonData["CItemGeneric"]["m_bGlowWhenInTrigger"];
CItemGeneric.m_glowColor = jsonData["CItemGeneric"]["m_glowColor"];
CItemGeneric.m_bUseable = jsonData["CItemGeneric"]["m_bUseable"];
CItemGeneric.m_hTriggerHelper = jsonData["CItemGeneric"]["m_hTriggerHelper"];

// Atribuições para CPropDoorRotating
// CPropDoorRotating Offsets
CPropDoorRotating.m_vecAxis = jsonData["CPropDoorRotating"]["m_vecAxis"];
CPropDoorRotating.m_flDistance = jsonData["CPropDoorRotating"]["m_flDistance"];
CPropDoorRotating.m_eSpawnPosition = jsonData["CPropDoorRotating"]["m_eSpawnPosition"];
CPropDoorRotating.m_eOpenDirection = jsonData["CPropDoorRotating"]["m_eOpenDirection"];
CPropDoorRotating.m_eCurrentOpenDirection = jsonData["CPropDoorRotating"]["m_eCurrentOpenDirection"];
CPropDoorRotating.m_flAjarAngle = jsonData["CPropDoorRotating"]["m_flAjarAngle"];
CPropDoorRotating.m_angRotationAjarDeprecated = jsonData["CPropDoorRotating"]["m_angRotationAjarDeprecated"];
CPropDoorRotating.m_angRotationClosed = jsonData["CPropDoorRotating"]["m_angRotationClosed"];
CPropDoorRotating.m_angRotationOpenForward = jsonData["CPropDoorRotating"]["m_angRotationOpenForward"];
CPropDoorRotating.m_angRotationOpenBack = jsonData["CPropDoorRotating"]["m_angRotationOpenBack"];
CPropDoorRotating.m_angGoal = jsonData["CPropDoorRotating"]["m_angGoal"];
CPropDoorRotating.m_vecForwardBoundsMin = jsonData["CPropDoorRotating"]["m_vecForwardBoundsMin"];
CPropDoorRotating.m_vecForwardBoundsMax = jsonData["CPropDoorRotating"]["m_vecForwardBoundsMax"];
CPropDoorRotating.m_vecBackBoundsMin = jsonData["CPropDoorRotating"]["m_vecBackBoundsMin"];
CPropDoorRotating.m_vecBackBoundsMax = jsonData["CPropDoorRotating"]["m_vecBackBoundsMax"];
CPropDoorRotating.m_bAjarDoorShouldntAlwaysOpen = jsonData["CPropDoorRotating"]["m_bAjarDoorShouldntAlwaysOpen"];
CPropDoorRotating.m_hEntityBlocker = jsonData["CPropDoorRotating"]["m_hEntityBlocker"];

// Atribuições para CRopeKeyframe
// CRopeKeyframe Offsets
CRopeKeyframe.m_RopeFlags = jsonData["CRopeKeyframe"]["m_RopeFlags"];
CRopeKeyframe.m_iNextLinkName = jsonData["CRopeKeyframe"]["m_iNextLinkName"];
CRopeKeyframe.m_Slack = jsonData["CRopeKeyframe"]["m_Slack"];
CRopeKeyframe.m_Width = jsonData["CRopeKeyframe"]["m_Width"];
CRopeKeyframe.m_TextureScale = jsonData["CRopeKeyframe"]["m_TextureScale"];
CRopeKeyframe.m_nSegments = jsonData["CRopeKeyframe"]["m_nSegments"];
CRopeKeyframe.m_bConstrainBetweenEndpoints = jsonData["CRopeKeyframe"]["m_bConstrainBetweenEndpoints"];
CRopeKeyframe.m_strRopeMaterialModel = jsonData["CRopeKeyframe"]["m_strRopeMaterialModel"];
CRopeKeyframe.m_iRopeMaterialModelIndex = jsonData["CRopeKeyframe"]["m_iRopeMaterialModelIndex"];
CRopeKeyframe.m_Subdiv = jsonData["CRopeKeyframe"]["m_Subdiv"];
CRopeKeyframe.m_nChangeCount = jsonData["CRopeKeyframe"]["m_nChangeCount"];
CRopeKeyframe.m_RopeLength = jsonData["CRopeKeyframe"]["m_RopeLength"];
CRopeKeyframe.m_fLockedPoints = jsonData["CRopeKeyframe"]["m_fLockedPoints"];
CRopeKeyframe.m_bCreatedFromMapFile = jsonData["CRopeKeyframe"]["m_bCreatedFromMapFile"];
CRopeKeyframe.m_flScrollSpeed = jsonData["CRopeKeyframe"]["m_flScrollSpeed"];
CRopeKeyframe.m_bStartPointValid = jsonData["CRopeKeyframe"]["m_bStartPointValid"];
CRopeKeyframe.m_bEndPointValid = jsonData["CRopeKeyframe"]["m_bEndPointValid"];
CRopeKeyframe.m_hStartPoint = jsonData["CRopeKeyframe"]["m_hStartPoint"];
CRopeKeyframe.m_hEndPoint = jsonData["CRopeKeyframe"]["m_hEndPoint"];
CRopeKeyframe.m_iStartAttachment = jsonData["CRopeKeyframe"]["m_iStartAttachment"];
CRopeKeyframe.m_iEndAttachment = jsonData["CRopeKeyframe"]["m_iEndAttachment"];

// Atribuições para CBarnLight
// CBarnLight Offsets
CBarnLight.m_bEnabled = jsonData["CBarnLight"]["m_bEnabled"];
CBarnLight.m_nColorMode = jsonData["CBarnLight"]["m_nColorMode"];
CBarnLight.m_Color = jsonData["CBarnLight"]["m_Color"];
CBarnLight.m_flColorTemperature = jsonData["CBarnLight"]["m_flColorTemperature"];
CBarnLight.m_flBrightness = jsonData["CBarnLight"]["m_flBrightness"];
CBarnLight.m_flBrightnessScale = jsonData["CBarnLight"]["m_flBrightnessScale"];
CBarnLight.m_nDirectLight = jsonData["CBarnLight"]["m_nDirectLight"];
CBarnLight.m_nBakedShadowIndex = jsonData["CBarnLight"]["m_nBakedShadowIndex"];
CBarnLight.m_nLuminaireShape = jsonData["CBarnLight"]["m_nLuminaireShape"];
CBarnLight.m_flLuminaireSize = jsonData["CBarnLight"]["m_flLuminaireSize"];
CBarnLight.m_flLuminaireAnisotropy = jsonData["CBarnLight"]["m_flLuminaireAnisotropy"];
CBarnLight.m_LightStyleString = jsonData["CBarnLight"]["m_LightStyleString"];
CBarnLight.m_flLightStyleStartTime = jsonData["CBarnLight"]["m_flLightStyleStartTime"];
CBarnLight.m_QueuedLightStyleStrings = jsonData["CBarnLight"]["m_QueuedLightStyleStrings"];
CBarnLight.m_LightStyleEvents = jsonData["CBarnLight"]["m_LightStyleEvents"];
CBarnLight.m_LightStyleTargets = jsonData["CBarnLight"]["m_LightStyleTargets"];
CBarnLight.m_StyleEvent = jsonData["CBarnLight"]["m_StyleEvent"];
CBarnLight.m_hLightCookie = jsonData["CBarnLight"]["m_hLightCookie"];
CBarnLight.m_flShape = jsonData["CBarnLight"]["m_flShape"];
CBarnLight.m_flSoftX = jsonData["CBarnLight"]["m_flSoftX"];
CBarnLight.m_flSoftY = jsonData["CBarnLight"]["m_flSoftY"];
CBarnLight.m_flSkirt = jsonData["CBarnLight"]["m_flSkirt"];
CBarnLight.m_flSkirtNear = jsonData["CBarnLight"]["m_flSkirtNear"];
CBarnLight.m_vSizeParams = jsonData["CBarnLight"]["m_vSizeParams"];
CBarnLight.m_flRange = jsonData["CBarnLight"]["m_flRange"];
CBarnLight.m_vShear = jsonData["CBarnLight"]["m_vShear"];
CBarnLight.m_nBakeSpecularToCubemaps = jsonData["CBarnLight"]["m_nBakeSpecularToCubemaps"];
CBarnLight.m_vBakeSpecularToCubemapsSize = jsonData["CBarnLight"]["m_vBakeSpecularToCubemapsSize"];
CBarnLight.m_nCastShadows = jsonData["CBarnLight"]["m_nCastShadows"];
CBarnLight.m_nShadowMapSize = jsonData["CBarnLight"]["m_nShadowMapSize"];
CBarnLight.m_nShadowPriority = jsonData["CBarnLight"]["m_nShadowPriority"];
CBarnLight.m_bContactShadow = jsonData["CBarnLight"]["m_bContactShadow"];
CBarnLight.m_nBounceLight = jsonData["CBarnLight"]["m_nBounceLight"];
CBarnLight.m_flBounceScale = jsonData["CBarnLight"]["m_flBounceScale"];
CBarnLight.m_flMinRoughness = jsonData["CBarnLight"]["m_flMinRoughness"];
CBarnLight.m_vAlternateColor = jsonData["CBarnLight"]["m_vAlternateColor"];
CBarnLight.m_fAlternateColorBrightness = jsonData["CBarnLight"]["m_fAlternateColorBrightness"];
CBarnLight.m_nFog = jsonData["CBarnLight"]["m_nFog"];
CBarnLight.m_flFogStrength = jsonData["CBarnLight"]["m_flFogStrength"];
CBarnLight.m_nFogShadows = jsonData["CBarnLight"]["m_nFogShadows"];
CBarnLight.m_flFogScale = jsonData["CBarnLight"]["m_flFogScale"];
CBarnLight.m_bFogMixedShadows = jsonData["CBarnLight"]["m_bFogMixedShadows"];
CBarnLight.m_flFadeSizeStart = jsonData["CBarnLight"]["m_flFadeSizeStart"];
CBarnLight.m_flFadeSizeEnd = jsonData["CBarnLight"]["m_flFadeSizeEnd"];
CBarnLight.m_flShadowFadeSizeStart = jsonData["CBarnLight"]["m_flShadowFadeSizeStart"];
CBarnLight.m_flShadowFadeSizeEnd = jsonData["CBarnLight"]["m_flShadowFadeSizeEnd"];
CBarnLight.m_bPrecomputedFieldsValid = jsonData["CBarnLight"]["m_bPrecomputedFieldsValid"];
CBarnLight.m_vPrecomputedBoundsMins = jsonData["CBarnLight"]["m_vPrecomputedBoundsMins"];
CBarnLight.m_vPrecomputedBoundsMaxs = jsonData["CBarnLight"]["m_vPrecomputedBoundsMaxs"];
CBarnLight.m_vPrecomputedOBBOrigin = jsonData["CBarnLight"]["m_vPrecomputedOBBOrigin"];
CBarnLight.m_vPrecomputedOBBAngles = jsonData["CBarnLight"]["m_vPrecomputedOBBAngles"];
CBarnLight.m_vPrecomputedOBBExtent = jsonData["CBarnLight"]["m_vPrecomputedOBBExtent"];
CBarnLight.m_nPrecomputedSubFrusta = jsonData["CBarnLight"]["m_nPrecomputedSubFrusta"];
CBarnLight.m_vPrecomputedOBBOrigin0 = jsonData["CBarnLight"]["m_vPrecomputedOBBOrigin0"];
CBarnLight.m_vPrecomputedOBBAngles0 = jsonData["CBarnLight"]["m_vPrecomputedOBBAngles0"];
CBarnLight.m_vPrecomputedOBBExtent0 = jsonData["CBarnLight"]["m_vPrecomputedOBBExtent0"];
CBarnLight.m_vPrecomputedOBBOrigin1 = jsonData["CBarnLight"]["m_vPrecomputedOBBOrigin1"];
CBarnLight.m_vPrecomputedOBBAngles1 = jsonData["CBarnLight"]["m_vPrecomputedOBBAngles1"];
CBarnLight.m_vPrecomputedOBBExtent1 = jsonData["CBarnLight"]["m_vPrecomputedOBBExtent1"];
CBarnLight.m_vPrecomputedOBBOrigin2 = jsonData["CBarnLight"]["m_vPrecomputedOBBOrigin2"];
CBarnLight.m_vPrecomputedOBBAngles2 = jsonData["CBarnLight"]["m_vPrecomputedOBBAngles2"];
CBarnLight.m_vPrecomputedOBBExtent2 = jsonData["CBarnLight"]["m_vPrecomputedOBBExtent2"];
CBarnLight.m_vPrecomputedOBBOrigin3 = jsonData["CBarnLight"]["m_vPrecomputedOBBOrigin3"];
CBarnLight.m_vPrecomputedOBBAngles3 = jsonData["CBarnLight"]["m_vPrecomputedOBBAngles3"];
CBarnLight.m_vPrecomputedOBBExtent3 = jsonData["CBarnLight"]["m_vPrecomputedOBBExtent3"];
CBarnLight.m_vPrecomputedOBBOrigin4 = jsonData["CBarnLight"]["m_vPrecomputedOBBOrigin4"];
CBarnLight.m_vPrecomputedOBBAngles4 = jsonData["CBarnLight"]["m_vPrecomputedOBBAngles4"];
CBarnLight.m_vPrecomputedOBBExtent4 = jsonData["CBarnLight"]["m_vPrecomputedOBBExtent4"];
CBarnLight.m_vPrecomputedOBBOrigin5 = jsonData["CBarnLight"]["m_vPrecomputedOBBOrigin5"];
CBarnLight.m_vPrecomputedOBBAngles5 = jsonData["CBarnLight"]["m_vPrecomputedOBBAngles5"];
CBarnLight.m_vPrecomputedOBBExtent5 = jsonData["CBarnLight"]["m_vPrecomputedOBBExtent5"];
CBarnLight.m_bPvsModifyEntity = jsonData["CBarnLight"]["m_bPvsModifyEntity"];
CBarnLight.m_VisClusters = jsonData["CBarnLight"]["m_VisClusters"];

// Atribuições para CEnvViewPunch
// CEnvViewPunch Offsets
CEnvViewPunch.m_flRadius = jsonData["CEnvViewPunch"]["m_flRadius"];
CEnvViewPunch.m_angViewPunch = jsonData["CEnvViewPunch"]["m_angViewPunch"];

// Atribuições para CPathCorner
// CPathCorner Offsets
CPathCorner.m_flWait = jsonData["CPathCorner"]["m_flWait"];
CPathCorner.m_flRadius = jsonData["CPathCorner"]["m_flRadius"];
CPathCorner.m_OnPass = jsonData["CPathCorner"]["m_OnPass"];

// Atribuições para CAttributeContainer
// CAttributeContainer Offsets
CAttributeContainer.m_Item = jsonData["CAttributeContainer"]["m_Item"];

// Atribuições para CMultiSource
// CMultiSource Offsets
CMultiSource.m_rgEntities = jsonData["CMultiSource"]["m_rgEntities"];
CMultiSource.m_rgTriggered = jsonData["CMultiSource"]["m_rgTriggered"];
CMultiSource.m_OnTrigger = jsonData["CMultiSource"]["m_OnTrigger"];
CMultiSource.m_iTotal = jsonData["CMultiSource"]["m_iTotal"];
CMultiSource.m_globalstate = jsonData["CMultiSource"]["m_globalstate"];

// Atribuições para CLogicNavigation
// CLogicNavigation Offsets
CLogicNavigation.m_isOn = jsonData["CLogicNavigation"]["m_isOn"];
CLogicNavigation.m_navProperty = jsonData["CLogicNavigation"]["m_navProperty"];

// Atribuições para CEnvEntityMaker
// CEnvEntityMaker Offsets
CEnvEntityMaker.m_vecEntityMins = jsonData["CEnvEntityMaker"]["m_vecEntityMins"];
CEnvEntityMaker.m_vecEntityMaxs = jsonData["CEnvEntityMaker"]["m_vecEntityMaxs"];
CEnvEntityMaker.m_hCurrentInstance = jsonData["CEnvEntityMaker"]["m_hCurrentInstance"];
CEnvEntityMaker.m_hCurrentBlocker = jsonData["CEnvEntityMaker"]["m_hCurrentBlocker"];
CEnvEntityMaker.m_vecBlockerOrigin = jsonData["CEnvEntityMaker"]["m_vecBlockerOrigin"];
CEnvEntityMaker.m_angPostSpawnDirection = jsonData["CEnvEntityMaker"]["m_angPostSpawnDirection"];
CEnvEntityMaker.m_flPostSpawnDirectionVariance = jsonData["CEnvEntityMaker"]["m_flPostSpawnDirectionVariance"];
CEnvEntityMaker.m_flPostSpawnSpeed = jsonData["CEnvEntityMaker"]["m_flPostSpawnSpeed"];
CEnvEntityMaker.m_bPostSpawnUseAngles = jsonData["CEnvEntityMaker"]["m_bPostSpawnUseAngles"];
CEnvEntityMaker.m_iszTemplate = jsonData["CEnvEntityMaker"]["m_iszTemplate"];
CEnvEntityMaker.m_pOutputOnSpawned = jsonData["CEnvEntityMaker"]["m_pOutputOnSpawned"];
CEnvEntityMaker.m_pOutputOnFailedSpawn = jsonData["CEnvEntityMaker"]["m_pOutputOnFailedSpawn"];

// Atribuições para CLogicEventListener
// CLogicEventListener Offsets
CLogicEventListener.m_strEventName = jsonData["CLogicEventListener"]["m_strEventName"];
CLogicEventListener.m_bIsEnabled = jsonData["CLogicEventListener"]["m_bIsEnabled"];
CLogicEventListener.m_nTeam = jsonData["CLogicEventListener"]["m_nTeam"];
CLogicEventListener.m_OnEventFired = jsonData["CLogicEventListener"]["m_OnEventFired"];

// Atribuições para CFilterMultiple
// CFilterMultiple Offsets
CFilterMultiple.m_nFilterType = jsonData["CFilterMultiple"]["m_nFilterType"];
CFilterMultiple.m_iFilterName = jsonData["CFilterMultiple"]["m_iFilterName"];
CFilterMultiple.m_hFilter = jsonData["CFilterMultiple"]["m_hFilter"];
CFilterMultiple.m_nFilterCount = jsonData["CFilterMultiple"]["m_nFilterCount"];

// Atribuições para CPulseGraphInstance_ServerEntity
// CPulseGraphInstance_ServerEntity Offsets
CPulseGraphInstance_ServerEntity.m_pComponent = jsonData["CPulseGraphInstance_ServerEntity"]["m_pComponent"];

// Atribuições para CPhysicsWire
// CPhysicsWire Offsets
CPhysicsWire.m_nDensity = jsonData["CPhysicsWire"]["m_nDensity"];

// Atribuições para CPropDoorRotatingBreakable
// CPropDoorRotatingBreakable Offsets
CPropDoorRotatingBreakable.m_bBreakable = jsonData["CPropDoorRotatingBreakable"]["m_bBreakable"];
CPropDoorRotatingBreakable.m_isAbleToCloseAreaPortals = jsonData["CPropDoorRotatingBreakable"]["m_isAbleToCloseAreaPortals"];
CPropDoorRotatingBreakable.m_currentDamageState = jsonData["CPropDoorRotatingBreakable"]["m_currentDamageState"];
CPropDoorRotatingBreakable.m_damageStates = jsonData["CPropDoorRotatingBreakable"]["m_damageStates"];

// Atribuições para CFireSmoke
// CFireSmoke Offsets
CFireSmoke.m_nFlameModelIndex = jsonData["CFireSmoke"]["m_nFlameModelIndex"];
CFireSmoke.m_nFlameFromAboveModelIndex = jsonData["CFireSmoke"]["m_nFlameFromAboveModelIndex"];

// Atribuições para CLightGlow
// CLightGlow Offsets
CLightGlow.m_nHorizontalSize = jsonData["CLightGlow"]["m_nHorizontalSize"];
CLightGlow.m_nVerticalSize = jsonData["CLightGlow"]["m_nVerticalSize"];
CLightGlow.m_nMinDist = jsonData["CLightGlow"]["m_nMinDist"];
CLightGlow.m_nMaxDist = jsonData["CLightGlow"]["m_nMaxDist"];
CLightGlow.m_nOuterMaxDist = jsonData["CLightGlow"]["m_nOuterMaxDist"];
CLightGlow.m_flGlowProxySize = jsonData["CLightGlow"]["m_flGlowProxySize"];
CLightGlow.m_flHDRColorScale = jsonData["CLightGlow"]["m_flHDRColorScale"];

// Atribuições para CBasePropDoor
// CBasePropDoor Offsets
CBasePropDoor.m_flAutoReturnDelay = jsonData["CBasePropDoor"]["m_flAutoReturnDelay"];
CBasePropDoor.m_hDoorList = jsonData["CBasePropDoor"]["m_hDoorList"];
CBasePropDoor.m_nHardwareType = jsonData["CBasePropDoor"]["m_nHardwareType"];
CBasePropDoor.m_bNeedsHardware = jsonData["CBasePropDoor"]["m_bNeedsHardware"];
CBasePropDoor.m_eDoorState = jsonData["CBasePropDoor"]["m_eDoorState"];
CBasePropDoor.m_bLocked = jsonData["CBasePropDoor"]["m_bLocked"];
CBasePropDoor.m_closedPosition = jsonData["CBasePropDoor"]["m_closedPosition"];
CBasePropDoor.m_closedAngles = jsonData["CBasePropDoor"]["m_closedAngles"];
CBasePropDoor.m_hBlocker = jsonData["CBasePropDoor"]["m_hBlocker"];
CBasePropDoor.m_bFirstBlocked = jsonData["CBasePropDoor"]["m_bFirstBlocked"];
CBasePropDoor.m_ls = jsonData["CBasePropDoor"]["m_ls"];
CBasePropDoor.m_bForceClosed = jsonData["CBasePropDoor"]["m_bForceClosed"];
CBasePropDoor.m_vecLatchWorldPosition = jsonData["CBasePropDoor"]["m_vecLatchWorldPosition"];
CBasePropDoor.m_hActivator = jsonData["CBasePropDoor"]["m_hActivator"];
CBasePropDoor.m_SoundMoving = jsonData["CBasePropDoor"]["m_SoundMoving"];
CBasePropDoor.m_SoundOpen = jsonData["CBasePropDoor"]["m_SoundOpen"];
CBasePropDoor.m_SoundClose = jsonData["CBasePropDoor"]["m_SoundClose"];
CBasePropDoor.m_SoundLock = jsonData["CBasePropDoor"]["m_SoundLock"];
CBasePropDoor.m_SoundUnlock = jsonData["CBasePropDoor"]["m_SoundUnlock"];
CBasePropDoor.m_SoundLatch = jsonData["CBasePropDoor"]["m_SoundLatch"];
CBasePropDoor.m_SoundPound = jsonData["CBasePropDoor"]["m_SoundPound"];
CBasePropDoor.m_SoundJiggle = jsonData["CBasePropDoor"]["m_SoundJiggle"];
CBasePropDoor.m_SoundLockedAnim = jsonData["CBasePropDoor"]["m_SoundLockedAnim"];
CBasePropDoor.m_numCloseAttempts = jsonData["CBasePropDoor"]["m_numCloseAttempts"];
CBasePropDoor.m_nPhysicsMaterial = jsonData["CBasePropDoor"]["m_nPhysicsMaterial"];
CBasePropDoor.m_SlaveName = jsonData["CBasePropDoor"]["m_SlaveName"];
CBasePropDoor.m_hMaster = jsonData["CBasePropDoor"]["m_hMaster"];
CBasePropDoor.m_OnBlockedClosing = jsonData["CBasePropDoor"]["m_OnBlockedClosing"];
CBasePropDoor.m_OnBlockedOpening = jsonData["CBasePropDoor"]["m_OnBlockedOpening"];
CBasePropDoor.m_OnUnblockedClosing = jsonData["CBasePropDoor"]["m_OnUnblockedClosing"];
CBasePropDoor.m_OnUnblockedOpening = jsonData["CBasePropDoor"]["m_OnUnblockedOpening"];
CBasePropDoor.m_OnFullyClosed = jsonData["CBasePropDoor"]["m_OnFullyClosed"];
CBasePropDoor.m_OnFullyOpen = jsonData["CBasePropDoor"]["m_OnFullyOpen"];
CBasePropDoor.m_OnClose = jsonData["CBasePropDoor"]["m_OnClose"];
CBasePropDoor.m_OnOpen = jsonData["CBasePropDoor"]["m_OnOpen"];
CBasePropDoor.m_OnLockedUse = jsonData["CBasePropDoor"]["m_OnLockedUse"];
CBasePropDoor.m_OnAjarOpen = jsonData["CBasePropDoor"]["m_OnAjarOpen"];

// Atribuições para CRagdollManager
// CRagdollManager Offsets
CRagdollManager.m_iCurrentMaxRagdollCount = jsonData["CRagdollManager"]["m_iCurrentMaxRagdollCount"];
CRagdollManager.m_iMaxRagdollCount = jsonData["CRagdollManager"]["m_iMaxRagdollCount"];
CRagdollManager.m_bSaveImportant = jsonData["CRagdollManager"]["m_bSaveImportant"];

// Atribuições para CTriggerFan
// CTriggerFan Offsets
CTriggerFan.m_vFanOrigin = jsonData["CTriggerFan"]["m_vFanOrigin"];
CTriggerFan.m_vFanEnd = jsonData["CTriggerFan"]["m_vFanEnd"];
CTriggerFan.m_vNoise = jsonData["CTriggerFan"]["m_vNoise"];
CTriggerFan.m_flForce = jsonData["CTriggerFan"]["m_flForce"];
CTriggerFan.m_flRopeForceScale = jsonData["CTriggerFan"]["m_flRopeForceScale"];
CTriggerFan.m_flPlayerForce = jsonData["CTriggerFan"]["m_flPlayerForce"];
CTriggerFan.m_flRampTime = jsonData["CTriggerFan"]["m_flRampTime"];
CTriggerFan.m_bFalloff = jsonData["CTriggerFan"]["m_bFalloff"];
CTriggerFan.m_bPushPlayer = jsonData["CTriggerFan"]["m_bPushPlayer"];
CTriggerFan.m_bRampDown = jsonData["CTriggerFan"]["m_bRampDown"];
CTriggerFan.m_bAddNoise = jsonData["CTriggerFan"]["m_bAddNoise"];
CTriggerFan.m_RampTimer = jsonData["CTriggerFan"]["m_RampTimer"];

// Atribuições para CHandleTest
// CHandleTest Offsets
CHandleTest.m_Handle = jsonData["CHandleTest"]["m_Handle"];
CHandleTest.m_bSendHandle = jsonData["CHandleTest"]["m_bSendHandle"];

// Atribuições para CSoundOpvarSetEntity
// CSoundOpvarSetEntity Offsets
CSoundOpvarSetEntity.m_iszStackName = jsonData["CSoundOpvarSetEntity"]["m_iszStackName"];
CSoundOpvarSetEntity.m_iszOperatorName = jsonData["CSoundOpvarSetEntity"]["m_iszOperatorName"];
CSoundOpvarSetEntity.m_iszOpvarName = jsonData["CSoundOpvarSetEntity"]["m_iszOpvarName"];
CSoundOpvarSetEntity.m_nOpvarType = jsonData["CSoundOpvarSetEntity"]["m_nOpvarType"];
CSoundOpvarSetEntity.m_nOpvarIndex = jsonData["CSoundOpvarSetEntity"]["m_nOpvarIndex"];
CSoundOpvarSetEntity.m_flOpvarValue = jsonData["CSoundOpvarSetEntity"]["m_flOpvarValue"];
CSoundOpvarSetEntity.m_OpvarValueString = jsonData["CSoundOpvarSetEntity"]["m_OpvarValueString"];
CSoundOpvarSetEntity.m_bSetOnSpawn = jsonData["CSoundOpvarSetEntity"]["m_bSetOnSpawn"];

// Atribuições para CNavSpaceInfo
// CNavSpaceInfo Offsets
CNavSpaceInfo.m_bCreateFlightSpace = jsonData["CNavSpaceInfo"]["m_bCreateFlightSpace"];

// Atribuições para CLogicAchievement
// CLogicAchievement Offsets
CLogicAchievement.m_bDisabled = jsonData["CLogicAchievement"]["m_bDisabled"];
CLogicAchievement.m_iszAchievementEventID = jsonData["CLogicAchievement"]["m_iszAchievementEventID"];
CLogicAchievement.m_OnFired = jsonData["CLogicAchievement"]["m_OnFired"];

// Atribuições para CBtActionParachutePositioning
// CBtActionParachutePositioning Offsets
CBtActionParachutePositioning.m_ActionTimer = jsonData["CBtActionParachutePositioning"]["m_ActionTimer"];

// Atribuições para CItem
// CItem Offsets
CItem.m_OnPlayerTouch = jsonData["CItem"]["m_OnPlayerTouch"];
CItem.m_OnPlayerPickup = jsonData["CItem"]["m_OnPlayerPickup"];
CItem.m_bActivateWhenAtRest = jsonData["CItem"]["m_bActivateWhenAtRest"];
CItem.m_OnCacheInteraction = jsonData["CItem"]["m_OnCacheInteraction"];
CItem.m_OnGlovePulled = jsonData["CItem"]["m_OnGlovePulled"];
CItem.m_vOriginalSpawnOrigin = jsonData["CItem"]["m_vOriginalSpawnOrigin"];
CItem.m_vOriginalSpawnAngles = jsonData["CItem"]["m_vOriginalSpawnAngles"];
CItem.m_bPhysStartAsleep = jsonData["CItem"]["m_bPhysStartAsleep"];

// Atribuições para CBaseClientUIEntity
// CBaseClientUIEntity Offsets
CBaseClientUIEntity.m_bEnabled = jsonData["CBaseClientUIEntity"]["m_bEnabled"];
CBaseClientUIEntity.m_DialogXMLName = jsonData["CBaseClientUIEntity"]["m_DialogXMLName"];
CBaseClientUIEntity.m_PanelClassName = jsonData["CBaseClientUIEntity"]["m_PanelClassName"];
CBaseClientUIEntity.m_PanelID = jsonData["CBaseClientUIEntity"]["m_PanelID"];
CBaseClientUIEntity.m_CustomOutput0 = jsonData["CBaseClientUIEntity"]["m_CustomOutput0"];
CBaseClientUIEntity.m_CustomOutput1 = jsonData["CBaseClientUIEntity"]["m_CustomOutput1"];
CBaseClientUIEntity.m_CustomOutput2 = jsonData["CBaseClientUIEntity"]["m_CustomOutput2"];
CBaseClientUIEntity.m_CustomOutput3 = jsonData["CBaseClientUIEntity"]["m_CustomOutput3"];
CBaseClientUIEntity.m_CustomOutput4 = jsonData["CBaseClientUIEntity"]["m_CustomOutput4"];
CBaseClientUIEntity.m_CustomOutput5 = jsonData["CBaseClientUIEntity"]["m_CustomOutput5"];
CBaseClientUIEntity.m_CustomOutput6 = jsonData["CBaseClientUIEntity"]["m_CustomOutput6"];
CBaseClientUIEntity.m_CustomOutput7 = jsonData["CBaseClientUIEntity"]["m_CustomOutput7"];
CBaseClientUIEntity.m_CustomOutput8 = jsonData["CBaseClientUIEntity"]["m_CustomOutput8"];
CBaseClientUIEntity.m_CustomOutput9 = jsonData["CBaseClientUIEntity"]["m_CustomOutput9"];

// Atribuições para CEnvDecal
// CEnvDecal Offsets
CEnvDecal.m_hDecalMaterial = jsonData["CEnvDecal"]["m_hDecalMaterial"];
CEnvDecal.m_flWidth = jsonData["CEnvDecal"]["m_flWidth"];
CEnvDecal.m_flHeight = jsonData["CEnvDecal"]["m_flHeight"];
CEnvDecal.m_flDepth = jsonData["CEnvDecal"]["m_flDepth"];
CEnvDecal.m_nRenderOrder = jsonData["CEnvDecal"]["m_nRenderOrder"];
CEnvDecal.m_bProjectOnWorld = jsonData["CEnvDecal"]["m_bProjectOnWorld"];
CEnvDecal.m_bProjectOnCharacters = jsonData["CEnvDecal"]["m_bProjectOnCharacters"];
CEnvDecal.m_bProjectOnWater = jsonData["CEnvDecal"]["m_bProjectOnWater"];
CEnvDecal.m_flDepthSortBias = jsonData["CEnvDecal"]["m_flDepthSortBias"];

// Atribuições para CLogicAuto
// CLogicAuto Offsets
CLogicAuto.m_OnMapSpawn = jsonData["CLogicAuto"]["m_OnMapSpawn"];
CLogicAuto.m_OnDemoMapSpawn = jsonData["CLogicAuto"]["m_OnDemoMapSpawn"];
CLogicAuto.m_OnNewGame = jsonData["CLogicAuto"]["m_OnNewGame"];
CLogicAuto.m_OnLoadGame = jsonData["CLogicAuto"]["m_OnLoadGame"];
CLogicAuto.m_OnMapTransition = jsonData["CLogicAuto"]["m_OnMapTransition"];
CLogicAuto.m_OnBackgroundMap = jsonData["CLogicAuto"]["m_OnBackgroundMap"];
CLogicAuto.m_OnMultiNewMap = jsonData["CLogicAuto"]["m_OnMultiNewMap"];
CLogicAuto.m_OnMultiNewRound = jsonData["CLogicAuto"]["m_OnMultiNewRound"];
CLogicAuto.m_OnVREnabled = jsonData["CLogicAuto"]["m_OnVREnabled"];
CLogicAuto.m_OnVRNotEnabled = jsonData["CLogicAuto"]["m_OnVRNotEnabled"];
CLogicAuto.m_globalstate = jsonData["CLogicAuto"]["m_globalstate"];

// Atribuições para CSoundOpvarSetPointBase
// CSoundOpvarSetPointBase Offsets
CSoundOpvarSetPointBase.m_bDisabled = jsonData["CSoundOpvarSetPointBase"]["m_bDisabled"];
CSoundOpvarSetPointBase.m_hSource = jsonData["CSoundOpvarSetPointBase"]["m_hSource"];
CSoundOpvarSetPointBase.m_iszSourceEntityName = jsonData["CSoundOpvarSetPointBase"]["m_iszSourceEntityName"];
CSoundOpvarSetPointBase.m_vLastPosition = jsonData["CSoundOpvarSetPointBase"]["m_vLastPosition"];
CSoundOpvarSetPointBase.m_iszStackName = jsonData["CSoundOpvarSetPointBase"]["m_iszStackName"];
CSoundOpvarSetPointBase.m_iszOperatorName = jsonData["CSoundOpvarSetPointBase"]["m_iszOperatorName"];
CSoundOpvarSetPointBase.m_iszOpvarName = jsonData["CSoundOpvarSetPointBase"]["m_iszOpvarName"];
CSoundOpvarSetPointBase.m_iOpvarIndex = jsonData["CSoundOpvarSetPointBase"]["m_iOpvarIndex"];
CSoundOpvarSetPointBase.m_bUseAutoCompare = jsonData["CSoundOpvarSetPointBase"]["m_bUseAutoCompare"];

// Atribuições para CFuncTrackChange
// CFuncTrackChange Offsets
CFuncTrackChange.m_trackTop = jsonData["CFuncTrackChange"]["m_trackTop"];
CFuncTrackChange.m_trackBottom = jsonData["CFuncTrackChange"]["m_trackBottom"];
CFuncTrackChange.m_train = jsonData["CFuncTrackChange"]["m_train"];
CFuncTrackChange.m_trackTopName = jsonData["CFuncTrackChange"]["m_trackTopName"];
CFuncTrackChange.m_trackBottomName = jsonData["CFuncTrackChange"]["m_trackBottomName"];
CFuncTrackChange.m_trainName = jsonData["CFuncTrackChange"]["m_trainName"];
CFuncTrackChange.m_code = jsonData["CFuncTrackChange"]["m_code"];
CFuncTrackChange.m_targetState = jsonData["CFuncTrackChange"]["m_targetState"];
CFuncTrackChange.m_use = jsonData["CFuncTrackChange"]["m_use"];

// Atribuições para CGamePlayerZone
// CGamePlayerZone Offsets
CGamePlayerZone.m_OnPlayerInZone = jsonData["CGamePlayerZone"]["m_OnPlayerInZone"];
CGamePlayerZone.m_OnPlayerOutZone = jsonData["CGamePlayerZone"]["m_OnPlayerOutZone"];
CGamePlayerZone.m_PlayersInCount = jsonData["CGamePlayerZone"]["m_PlayersInCount"];
CGamePlayerZone.m_PlayersOutCount = jsonData["CGamePlayerZone"]["m_PlayersOutCount"];

// Atribuições para CRulePointEntity
// CRulePointEntity Offsets
CRulePointEntity.m_Score = jsonData["CRulePointEntity"]["m_Score"];

// Atribuições para CMessageEntity
// CMessageEntity Offsets
CMessageEntity.m_radius = jsonData["CMessageEntity"]["m_radius"];
CMessageEntity.m_messageText = jsonData["CMessageEntity"]["m_messageText"];
CMessageEntity.m_drawText = jsonData["CMessageEntity"]["m_drawText"];
CMessageEntity.m_bDeveloperOnly = jsonData["CMessageEntity"]["m_bDeveloperOnly"];
CMessageEntity.m_bEnabled = jsonData["CMessageEntity"]["m_bEnabled"];

// Atribuições para CBaseViewModel
// CBaseViewModel Offsets
CBaseViewModel.m_vecLastFacing = jsonData["CBaseViewModel"]["m_vecLastFacing"];
CBaseViewModel.m_nViewModelIndex = jsonData["CBaseViewModel"]["m_nViewModelIndex"];
CBaseViewModel.m_nAnimationParity = jsonData["CBaseViewModel"]["m_nAnimationParity"];
CBaseViewModel.m_flAnimationStartTime = jsonData["CBaseViewModel"]["m_flAnimationStartTime"];
CBaseViewModel.m_hWeapon = jsonData["CBaseViewModel"]["m_hWeapon"];
CBaseViewModel.m_sVMName = jsonData["CBaseViewModel"]["m_sVMName"];
CBaseViewModel.m_sAnimationPrefix = jsonData["CBaseViewModel"]["m_sAnimationPrefix"];
CBaseViewModel.m_hOldLayerSequence = jsonData["CBaseViewModel"]["m_hOldLayerSequence"];
CBaseViewModel.m_oldLayer = jsonData["CBaseViewModel"]["m_oldLayer"];
CBaseViewModel.m_oldLayerStartTime = jsonData["CBaseViewModel"]["m_oldLayerStartTime"];
CBaseViewModel.m_hControlPanel = jsonData["CBaseViewModel"]["m_hControlPanel"];

// Atribuições para CBtActionCombatPositioning
// CBtActionCombatPositioning Offsets
CBtActionCombatPositioning.m_szSensorInputKey = jsonData["CBtActionCombatPositioning"]["m_szSensorInputKey"];
CBtActionCombatPositioning.m_szIsAttackingKey = jsonData["CBtActionCombatPositioning"]["m_szIsAttackingKey"];
CBtActionCombatPositioning.m_ActionTimer = jsonData["CBtActionCombatPositioning"]["m_ActionTimer"];
CBtActionCombatPositioning.m_bCrouching = jsonData["CBtActionCombatPositioning"]["m_bCrouching"];

// Atribuições para CBaseFire
// CBaseFire Offsets
CBaseFire.m_flScale = jsonData["CBaseFire"]["m_flScale"];
CBaseFire.m_flStartScale = jsonData["CBaseFire"]["m_flStartScale"];
CBaseFire.m_flScaleTime = jsonData["CBaseFire"]["m_flScaleTime"];
CBaseFire.m_nFlags = jsonData["CBaseFire"]["m_nFlags"];

// Atribuições para CTriggerActiveWeaponDetect
// CTriggerActiveWeaponDetect Offsets
CTriggerActiveWeaponDetect.m_OnTouchedActiveWeapon = jsonData["CTriggerActiveWeaponDetect"]["m_OnTouchedActiveWeapon"];
CTriggerActiveWeaponDetect.m_iszWeaponClassName = jsonData["CTriggerActiveWeaponDetect"]["m_iszWeaponClassName"];

// Atribuições para CEnvMicrophone
// CEnvMicrophone Offsets
CEnvMicrophone.m_bDisabled = jsonData["CEnvMicrophone"]["m_bDisabled"];
CEnvMicrophone.m_hMeasureTarget = jsonData["CEnvMicrophone"]["m_hMeasureTarget"];
CEnvMicrophone.m_nSoundType = jsonData["CEnvMicrophone"]["m_nSoundType"];
CEnvMicrophone.m_nSoundFlags = jsonData["CEnvMicrophone"]["m_nSoundFlags"];
CEnvMicrophone.m_flSensitivity = jsonData["CEnvMicrophone"]["m_flSensitivity"];
CEnvMicrophone.m_flSmoothFactor = jsonData["CEnvMicrophone"]["m_flSmoothFactor"];
CEnvMicrophone.m_flMaxRange = jsonData["CEnvMicrophone"]["m_flMaxRange"];
CEnvMicrophone.m_iszSpeakerName = jsonData["CEnvMicrophone"]["m_iszSpeakerName"];
CEnvMicrophone.m_hSpeaker = jsonData["CEnvMicrophone"]["m_hSpeaker"];
CEnvMicrophone.m_bAvoidFeedback = jsonData["CEnvMicrophone"]["m_bAvoidFeedback"];
CEnvMicrophone.m_iSpeakerDSPPreset = jsonData["CEnvMicrophone"]["m_iSpeakerDSPPreset"];
CEnvMicrophone.m_iszListenFilter = jsonData["CEnvMicrophone"]["m_iszListenFilter"];
CEnvMicrophone.m_hListenFilter = jsonData["CEnvMicrophone"]["m_hListenFilter"];
CEnvMicrophone.m_SoundLevel = jsonData["CEnvMicrophone"]["m_SoundLevel"];
CEnvMicrophone.m_OnRoutedSound = jsonData["CEnvMicrophone"]["m_OnRoutedSound"];
CEnvMicrophone.m_OnHeardSound = jsonData["CEnvMicrophone"]["m_OnHeardSound"];
CEnvMicrophone.m_szLastSound = jsonData["CEnvMicrophone"]["m_szLastSound"];
CEnvMicrophone.m_iLastRoutedFrame = jsonData["CEnvMicrophone"]["m_iLastRoutedFrame"];

// Atribuições para CInfoSpawnGroupLoadUnload
// CInfoSpawnGroupLoadUnload Offsets
CInfoSpawnGroupLoadUnload.m_OnSpawnGroupLoadStarted = jsonData["CInfoSpawnGroupLoadUnload"]["m_OnSpawnGroupLoadStarted"];
CInfoSpawnGroupLoadUnload.m_OnSpawnGroupLoadFinished = jsonData["CInfoSpawnGroupLoadUnload"]["m_OnSpawnGroupLoadFinished"];
CInfoSpawnGroupLoadUnload.m_OnSpawnGroupUnloadStarted = jsonData["CInfoSpawnGroupLoadUnload"]["m_OnSpawnGroupUnloadStarted"];
CInfoSpawnGroupLoadUnload.m_OnSpawnGroupUnloadFinished = jsonData["CInfoSpawnGroupLoadUnload"]["m_OnSpawnGroupUnloadFinished"];
CInfoSpawnGroupLoadUnload.m_iszSpawnGroupName = jsonData["CInfoSpawnGroupLoadUnload"]["m_iszSpawnGroupName"];
CInfoSpawnGroupLoadUnload.m_iszSpawnGroupFilterName = jsonData["CInfoSpawnGroupLoadUnload"]["m_iszSpawnGroupFilterName"];
CInfoSpawnGroupLoadUnload.m_iszLandmarkName = jsonData["CInfoSpawnGroupLoadUnload"]["m_iszLandmarkName"];
CInfoSpawnGroupLoadUnload.m_sFixedSpawnGroupName = jsonData["CInfoSpawnGroupLoadUnload"]["m_sFixedSpawnGroupName"];
CInfoSpawnGroupLoadUnload.m_flTimeoutInterval = jsonData["CInfoSpawnGroupLoadUnload"]["m_flTimeoutInterval"];
CInfoSpawnGroupLoadUnload.m_bStreamingStarted = jsonData["CInfoSpawnGroupLoadUnload"]["m_bStreamingStarted"];
CInfoSpawnGroupLoadUnload.m_bUnloadingStarted = jsonData["CInfoSpawnGroupLoadUnload"]["m_bUnloadingStarted"];

// Atribuições para CKnife
// CKnife Offsets
CKnife.m_bFirstAttack = jsonData["CKnife"]["m_bFirstAttack"];

// Atribuições para CFuncTrackTrain
// CFuncTrackTrain Offsets
CFuncTrackTrain.m_ppath = jsonData["CFuncTrackTrain"]["m_ppath"];
CFuncTrackTrain.m_length = jsonData["CFuncTrackTrain"]["m_length"];
CFuncTrackTrain.m_vPosPrev = jsonData["CFuncTrackTrain"]["m_vPosPrev"];
CFuncTrackTrain.m_angPrev = jsonData["CFuncTrackTrain"]["m_angPrev"];
CFuncTrackTrain.m_controlMins = jsonData["CFuncTrackTrain"]["m_controlMins"];
CFuncTrackTrain.m_controlMaxs = jsonData["CFuncTrackTrain"]["m_controlMaxs"];
CFuncTrackTrain.m_lastBlockPos = jsonData["CFuncTrackTrain"]["m_lastBlockPos"];
CFuncTrackTrain.m_lastBlockTick = jsonData["CFuncTrackTrain"]["m_lastBlockTick"];
CFuncTrackTrain.m_flVolume = jsonData["CFuncTrackTrain"]["m_flVolume"];
CFuncTrackTrain.m_flBank = jsonData["CFuncTrackTrain"]["m_flBank"];
CFuncTrackTrain.m_oldSpeed = jsonData["CFuncTrackTrain"]["m_oldSpeed"];
CFuncTrackTrain.m_flBlockDamage = jsonData["CFuncTrackTrain"]["m_flBlockDamage"];
CFuncTrackTrain.m_height = jsonData["CFuncTrackTrain"]["m_height"];
CFuncTrackTrain.m_maxSpeed = jsonData["CFuncTrackTrain"]["m_maxSpeed"];
CFuncTrackTrain.m_dir = jsonData["CFuncTrackTrain"]["m_dir"];
CFuncTrackTrain.m_iszSoundMove = jsonData["CFuncTrackTrain"]["m_iszSoundMove"];
CFuncTrackTrain.m_iszSoundMovePing = jsonData["CFuncTrackTrain"]["m_iszSoundMovePing"];
CFuncTrackTrain.m_iszSoundStart = jsonData["CFuncTrackTrain"]["m_iszSoundStart"];
CFuncTrackTrain.m_iszSoundStop = jsonData["CFuncTrackTrain"]["m_iszSoundStop"];
CFuncTrackTrain.m_strPathTarget = jsonData["CFuncTrackTrain"]["m_strPathTarget"];
CFuncTrackTrain.m_flMoveSoundMinDuration = jsonData["CFuncTrackTrain"]["m_flMoveSoundMinDuration"];
CFuncTrackTrain.m_flMoveSoundMaxDuration = jsonData["CFuncTrackTrain"]["m_flMoveSoundMaxDuration"];
CFuncTrackTrain.m_flNextMoveSoundTime = jsonData["CFuncTrackTrain"]["m_flNextMoveSoundTime"];
CFuncTrackTrain.m_flMoveSoundMinPitch = jsonData["CFuncTrackTrain"]["m_flMoveSoundMinPitch"];
CFuncTrackTrain.m_flMoveSoundMaxPitch = jsonData["CFuncTrackTrain"]["m_flMoveSoundMaxPitch"];
CFuncTrackTrain.m_eOrientationType = jsonData["CFuncTrackTrain"]["m_eOrientationType"];
CFuncTrackTrain.m_eVelocityType = jsonData["CFuncTrackTrain"]["m_eVelocityType"];
CFuncTrackTrain.m_OnStart = jsonData["CFuncTrackTrain"]["m_OnStart"];
CFuncTrackTrain.m_OnNext = jsonData["CFuncTrackTrain"]["m_OnNext"];
CFuncTrackTrain.m_OnArrivedAtDestinationNode = jsonData["CFuncTrackTrain"]["m_OnArrivedAtDestinationNode"];
CFuncTrackTrain.m_bManualSpeedChanges = jsonData["CFuncTrackTrain"]["m_bManualSpeedChanges"];
CFuncTrackTrain.m_flDesiredSpeed = jsonData["CFuncTrackTrain"]["m_flDesiredSpeed"];
CFuncTrackTrain.m_flSpeedChangeTime = jsonData["CFuncTrackTrain"]["m_flSpeedChangeTime"];
CFuncTrackTrain.m_flAccelSpeed = jsonData["CFuncTrackTrain"]["m_flAccelSpeed"];
CFuncTrackTrain.m_flDecelSpeed = jsonData["CFuncTrackTrain"]["m_flDecelSpeed"];
CFuncTrackTrain.m_bAccelToSpeed = jsonData["CFuncTrackTrain"]["m_bAccelToSpeed"];
CFuncTrackTrain.m_flNextMPSoundTime = jsonData["CFuncTrackTrain"]["m_flNextMPSoundTime"];

// Atribuições para CFogVolume
// CFogVolume Offsets
CFogVolume.m_fogName = jsonData["CFogVolume"]["m_fogName"];
CFogVolume.m_postProcessName = jsonData["CFogVolume"]["m_postProcessName"];
CFogVolume.m_colorCorrectionName = jsonData["CFogVolume"]["m_colorCorrectionName"];
CFogVolume.m_bDisabled = jsonData["CFogVolume"]["m_bDisabled"];
CFogVolume.m_bInFogVolumesList = jsonData["CFogVolume"]["m_bInFogVolumesList"];

// Atribuições para CFire
// CFire Offsets
CFire.m_hEffect = jsonData["CFire"]["m_hEffect"];
CFire.m_hOwner = jsonData["CFire"]["m_hOwner"];
CFire.m_nFireType = jsonData["CFire"]["m_nFireType"];
CFire.m_flFuel = jsonData["CFire"]["m_flFuel"];
CFire.m_flDamageTime = jsonData["CFire"]["m_flDamageTime"];
CFire.m_lastDamage = jsonData["CFire"]["m_lastDamage"];
CFire.m_flFireSize = jsonData["CFire"]["m_flFireSize"];
CFire.m_flLastNavUpdateTime = jsonData["CFire"]["m_flLastNavUpdateTime"];
CFire.m_flHeatLevel = jsonData["CFire"]["m_flHeatLevel"];
CFire.m_flHeatAbsorb = jsonData["CFire"]["m_flHeatAbsorb"];
CFire.m_flDamageScale = jsonData["CFire"]["m_flDamageScale"];
CFire.m_flMaxHeat = jsonData["CFire"]["m_flMaxHeat"];
CFire.m_flLastHeatLevel = jsonData["CFire"]["m_flLastHeatLevel"];
CFire.m_flAttackTime = jsonData["CFire"]["m_flAttackTime"];
CFire.m_bEnabled = jsonData["CFire"]["m_bEnabled"];
CFire.m_bStartDisabled = jsonData["CFire"]["m_bStartDisabled"];
CFire.m_bDidActivate = jsonData["CFire"]["m_bDidActivate"];
CFire.m_OnIgnited = jsonData["CFire"]["m_OnIgnited"];
CFire.m_OnExtinguished = jsonData["CFire"]["m_OnExtinguished"];

// Atribuições para CFuncPlat
// CFuncPlat Offsets
CFuncPlat.m_sNoise = jsonData["CFuncPlat"]["m_sNoise"];

// Atribuições para CGenericConstraint
// CGenericConstraint Offsets
CGenericConstraint.m_nLinearMotionX = jsonData["CGenericConstraint"]["m_nLinearMotionX"];
CGenericConstraint.m_nLinearMotionY = jsonData["CGenericConstraint"]["m_nLinearMotionY"];
CGenericConstraint.m_nLinearMotionZ = jsonData["CGenericConstraint"]["m_nLinearMotionZ"];
CGenericConstraint.m_flLinearFrequencyX = jsonData["CGenericConstraint"]["m_flLinearFrequencyX"];
CGenericConstraint.m_flLinearFrequencyY = jsonData["CGenericConstraint"]["m_flLinearFrequencyY"];
CGenericConstraint.m_flLinearFrequencyZ = jsonData["CGenericConstraint"]["m_flLinearFrequencyZ"];
CGenericConstraint.m_flLinearDampingRatioX = jsonData["CGenericConstraint"]["m_flLinearDampingRatioX"];
CGenericConstraint.m_flLinearDampingRatioY = jsonData["CGenericConstraint"]["m_flLinearDampingRatioY"];
CGenericConstraint.m_flLinearDampingRatioZ = jsonData["CGenericConstraint"]["m_flLinearDampingRatioZ"];
CGenericConstraint.m_flMaxLinearImpulseX = jsonData["CGenericConstraint"]["m_flMaxLinearImpulseX"];
CGenericConstraint.m_flMaxLinearImpulseY = jsonData["CGenericConstraint"]["m_flMaxLinearImpulseY"];
CGenericConstraint.m_flMaxLinearImpulseZ = jsonData["CGenericConstraint"]["m_flMaxLinearImpulseZ"];
CGenericConstraint.m_flBreakAfterTimeX = jsonData["CGenericConstraint"]["m_flBreakAfterTimeX"];
CGenericConstraint.m_flBreakAfterTimeY = jsonData["CGenericConstraint"]["m_flBreakAfterTimeY"];
CGenericConstraint.m_flBreakAfterTimeZ = jsonData["CGenericConstraint"]["m_flBreakAfterTimeZ"];
CGenericConstraint.m_flBreakAfterTimeStartTimeX = jsonData["CGenericConstraint"]["m_flBreakAfterTimeStartTimeX"];
CGenericConstraint.m_flBreakAfterTimeStartTimeY = jsonData["CGenericConstraint"]["m_flBreakAfterTimeStartTimeY"];
CGenericConstraint.m_flBreakAfterTimeStartTimeZ = jsonData["CGenericConstraint"]["m_flBreakAfterTimeStartTimeZ"];
CGenericConstraint.m_flBreakAfterTimeThresholdX = jsonData["CGenericConstraint"]["m_flBreakAfterTimeThresholdX"];
CGenericConstraint.m_flBreakAfterTimeThresholdY = jsonData["CGenericConstraint"]["m_flBreakAfterTimeThresholdY"];
CGenericConstraint.m_flBreakAfterTimeThresholdZ = jsonData["CGenericConstraint"]["m_flBreakAfterTimeThresholdZ"];
CGenericConstraint.m_flNotifyForceX = jsonData["CGenericConstraint"]["m_flNotifyForceX"];
CGenericConstraint.m_flNotifyForceY = jsonData["CGenericConstraint"]["m_flNotifyForceY"];
CGenericConstraint.m_flNotifyForceZ = jsonData["CGenericConstraint"]["m_flNotifyForceZ"];
CGenericConstraint.m_flNotifyForceMinTimeX = jsonData["CGenericConstraint"]["m_flNotifyForceMinTimeX"];
CGenericConstraint.m_flNotifyForceMinTimeY = jsonData["CGenericConstraint"]["m_flNotifyForceMinTimeY"];
CGenericConstraint.m_flNotifyForceMinTimeZ = jsonData["CGenericConstraint"]["m_flNotifyForceMinTimeZ"];
CGenericConstraint.m_flNotifyForceLastTimeX = jsonData["CGenericConstraint"]["m_flNotifyForceLastTimeX"];
CGenericConstraint.m_flNotifyForceLastTimeY = jsonData["CGenericConstraint"]["m_flNotifyForceLastTimeY"];
CGenericConstraint.m_flNotifyForceLastTimeZ = jsonData["CGenericConstraint"]["m_flNotifyForceLastTimeZ"];
CGenericConstraint.m_bAxisNotifiedX = jsonData["CGenericConstraint"]["m_bAxisNotifiedX"];
CGenericConstraint.m_bAxisNotifiedY = jsonData["CGenericConstraint"]["m_bAxisNotifiedY"];
CGenericConstraint.m_bAxisNotifiedZ = jsonData["CGenericConstraint"]["m_bAxisNotifiedZ"];
CGenericConstraint.m_nAngularMotionX = jsonData["CGenericConstraint"]["m_nAngularMotionX"];
CGenericConstraint.m_nAngularMotionY = jsonData["CGenericConstraint"]["m_nAngularMotionY"];
CGenericConstraint.m_nAngularMotionZ = jsonData["CGenericConstraint"]["m_nAngularMotionZ"];
CGenericConstraint.m_flAngularFrequencyX = jsonData["CGenericConstraint"]["m_flAngularFrequencyX"];
CGenericConstraint.m_flAngularFrequencyY = jsonData["CGenericConstraint"]["m_flAngularFrequencyY"];
CGenericConstraint.m_flAngularFrequencyZ = jsonData["CGenericConstraint"]["m_flAngularFrequencyZ"];
CGenericConstraint.m_flAngularDampingRatioX = jsonData["CGenericConstraint"]["m_flAngularDampingRatioX"];
CGenericConstraint.m_flAngularDampingRatioY = jsonData["CGenericConstraint"]["m_flAngularDampingRatioY"];
CGenericConstraint.m_flAngularDampingRatioZ = jsonData["CGenericConstraint"]["m_flAngularDampingRatioZ"];
CGenericConstraint.m_flMaxAngularImpulseX = jsonData["CGenericConstraint"]["m_flMaxAngularImpulseX"];
CGenericConstraint.m_flMaxAngularImpulseY = jsonData["CGenericConstraint"]["m_flMaxAngularImpulseY"];
CGenericConstraint.m_flMaxAngularImpulseZ = jsonData["CGenericConstraint"]["m_flMaxAngularImpulseZ"];
CGenericConstraint.m_NotifyForceReachedX = jsonData["CGenericConstraint"]["m_NotifyForceReachedX"];
CGenericConstraint.m_NotifyForceReachedY = jsonData["CGenericConstraint"]["m_NotifyForceReachedY"];
CGenericConstraint.m_NotifyForceReachedZ = jsonData["CGenericConstraint"]["m_NotifyForceReachedZ"];

// Atribuições para CPhysTorque
// CPhysTorque Offsets
CPhysTorque.m_axis = jsonData["CPhysTorque"]["m_axis"];

// Atribuições para CRagdollProp
// CRagdollProp Offsets
CRagdollProp.m_ragdoll = jsonData["CRagdollProp"]["m_ragdoll"];
CRagdollProp.m_bStartDisabled = jsonData["CRagdollProp"]["m_bStartDisabled"];
CRagdollProp.m_ragPos = jsonData["CRagdollProp"]["m_ragPos"];
CRagdollProp.m_ragAngles = jsonData["CRagdollProp"]["m_ragAngles"];
CRagdollProp.m_hRagdollSource = jsonData["CRagdollProp"]["m_hRagdollSource"];
CRagdollProp.m_lastUpdateTickCount = jsonData["CRagdollProp"]["m_lastUpdateTickCount"];
CRagdollProp.m_allAsleep = jsonData["CRagdollProp"]["m_allAsleep"];
CRagdollProp.m_bFirstCollisionAfterLaunch = jsonData["CRagdollProp"]["m_bFirstCollisionAfterLaunch"];
CRagdollProp.m_hDamageEntity = jsonData["CRagdollProp"]["m_hDamageEntity"];
CRagdollProp.m_hKiller = jsonData["CRagdollProp"]["m_hKiller"];
CRagdollProp.m_hPhysicsAttacker = jsonData["CRagdollProp"]["m_hPhysicsAttacker"];
CRagdollProp.m_flLastPhysicsInfluenceTime = jsonData["CRagdollProp"]["m_flLastPhysicsInfluenceTime"];
CRagdollProp.m_flFadeOutStartTime = jsonData["CRagdollProp"]["m_flFadeOutStartTime"];
CRagdollProp.m_flFadeTime = jsonData["CRagdollProp"]["m_flFadeTime"];
CRagdollProp.m_vecLastOrigin = jsonData["CRagdollProp"]["m_vecLastOrigin"];
CRagdollProp.m_flAwakeTime = jsonData["CRagdollProp"]["m_flAwakeTime"];
CRagdollProp.m_flLastOriginChangeTime = jsonData["CRagdollProp"]["m_flLastOriginChangeTime"];
CRagdollProp.m_strOriginClassName = jsonData["CRagdollProp"]["m_strOriginClassName"];
CRagdollProp.m_strSourceClassName = jsonData["CRagdollProp"]["m_strSourceClassName"];
CRagdollProp.m_bHasBeenPhysgunned = jsonData["CRagdollProp"]["m_bHasBeenPhysgunned"];
CRagdollProp.m_bShouldTeleportPhysics = jsonData["CRagdollProp"]["m_bShouldTeleportPhysics"];
CRagdollProp.m_flBlendWeight = jsonData["CRagdollProp"]["m_flBlendWeight"];
CRagdollProp.m_flDefaultFadeScale = jsonData["CRagdollProp"]["m_flDefaultFadeScale"];
CRagdollProp.m_ragdollMins = jsonData["CRagdollProp"]["m_ragdollMins"];
CRagdollProp.m_ragdollMaxs = jsonData["CRagdollProp"]["m_ragdollMaxs"];
CRagdollProp.m_bShouldDeleteActivationRecord = jsonData["CRagdollProp"]["m_bShouldDeleteActivationRecord"];
CRagdollProp.m_bValidatePoweredRagdollPose = jsonData["CRagdollProp"]["m_bValidatePoweredRagdollPose"];

// Atribuições para CEnvDetailController
// CEnvDetailController Offsets
CEnvDetailController.m_flFadeStartDist = jsonData["CEnvDetailController"]["m_flFadeStartDist"];
CEnvDetailController.m_flFadeEndDist = jsonData["CEnvDetailController"]["m_flFadeEndDist"];

// Atribuições para CTriggerLook
// CTriggerLook Offsets
CTriggerLook.m_hLookTarget = jsonData["CTriggerLook"]["m_hLookTarget"];
CTriggerLook.m_flFieldOfView = jsonData["CTriggerLook"]["m_flFieldOfView"];
CTriggerLook.m_flLookTime = jsonData["CTriggerLook"]["m_flLookTime"];
CTriggerLook.m_flLookTimeTotal = jsonData["CTriggerLook"]["m_flLookTimeTotal"];
CTriggerLook.m_flLookTimeLast = jsonData["CTriggerLook"]["m_flLookTimeLast"];
CTriggerLook.m_flTimeoutDuration = jsonData["CTriggerLook"]["m_flTimeoutDuration"];
CTriggerLook.m_bTimeoutFired = jsonData["CTriggerLook"]["m_bTimeoutFired"];
CTriggerLook.m_bIsLooking = jsonData["CTriggerLook"]["m_bIsLooking"];
CTriggerLook.m_b2DFOV = jsonData["CTriggerLook"]["m_b2DFOV"];
CTriggerLook.m_bUseVelocity = jsonData["CTriggerLook"]["m_bUseVelocity"];
CTriggerLook.m_bTestOcclusion = jsonData["CTriggerLook"]["m_bTestOcclusion"];
CTriggerLook.m_OnTimeout = jsonData["CTriggerLook"]["m_OnTimeout"];
CTriggerLook.m_OnStartLook = jsonData["CTriggerLook"]["m_OnStartLook"];
CTriggerLook.m_OnEndLook = jsonData["CTriggerLook"]["m_OnEndLook"];

// Atribuições para CMathRemap
// CMathRemap Offsets
CMathRemap.m_flInMin = jsonData["CMathRemap"]["m_flInMin"];
CMathRemap.m_flInMax = jsonData["CMathRemap"]["m_flInMax"];
CMathRemap.m_flOut1 = jsonData["CMathRemap"]["m_flOut1"];
CMathRemap.m_flOut2 = jsonData["CMathRemap"]["m_flOut2"];
CMathRemap.m_flOldInValue = jsonData["CMathRemap"]["m_flOldInValue"];
CMathRemap.m_bEnabled = jsonData["CMathRemap"]["m_bEnabled"];
CMathRemap.m_OutValue = jsonData["CMathRemap"]["m_OutValue"];
CMathRemap.m_OnRoseAboveMin = jsonData["CMathRemap"]["m_OnRoseAboveMin"];
CMathRemap.m_OnRoseAboveMax = jsonData["CMathRemap"]["m_OnRoseAboveMax"];
CMathRemap.m_OnFellBelowMin = jsonData["CMathRemap"]["m_OnFellBelowMin"];
CMathRemap.m_OnFellBelowMax = jsonData["CMathRemap"]["m_OnFellBelowMax"];

// Atribuições para CInstructorEventEntity
// CInstructorEventEntity Offsets
CInstructorEventEntity.m_iszName = jsonData["CInstructorEventEntity"]["m_iszName"];
CInstructorEventEntity.m_iszHintTargetEntity = jsonData["CInstructorEventEntity"]["m_iszHintTargetEntity"];
CInstructorEventEntity.m_hTargetPlayer = jsonData["CInstructorEventEntity"]["m_hTargetPlayer"];

// Atribuições para CGradientFog
// CGradientFog Offsets
CGradientFog.m_hGradientFogTexture = jsonData["CGradientFog"]["m_hGradientFogTexture"];
CGradientFog.m_flFogStartDistance = jsonData["CGradientFog"]["m_flFogStartDistance"];
CGradientFog.m_flFogEndDistance = jsonData["CGradientFog"]["m_flFogEndDistance"];
CGradientFog.m_bHeightFogEnabled = jsonData["CGradientFog"]["m_bHeightFogEnabled"];
CGradientFog.m_flFogStartHeight = jsonData["CGradientFog"]["m_flFogStartHeight"];
CGradientFog.m_flFogEndHeight = jsonData["CGradientFog"]["m_flFogEndHeight"];
CGradientFog.m_flFarZ = jsonData["CGradientFog"]["m_flFarZ"];
CGradientFog.m_flFogMaxOpacity = jsonData["CGradientFog"]["m_flFogMaxOpacity"];
CGradientFog.m_flFogFalloffExponent = jsonData["CGradientFog"]["m_flFogFalloffExponent"];
CGradientFog.m_flFogVerticalExponent = jsonData["CGradientFog"]["m_flFogVerticalExponent"];
CGradientFog.m_fogColor = jsonData["CGradientFog"]["m_fogColor"];
CGradientFog.m_flFogStrength = jsonData["CGradientFog"]["m_flFogStrength"];
CGradientFog.m_flFadeTime = jsonData["CGradientFog"]["m_flFadeTime"];
CGradientFog.m_bStartDisabled = jsonData["CGradientFog"]["m_bStartDisabled"];
CGradientFog.m_bIsEnabled = jsonData["CGradientFog"]["m_bIsEnabled"];
CGradientFog.m_bGradientFogNeedsTextures = jsonData["CGradientFog"]["m_bGradientFogNeedsTextures"];

// Atribuições para CFootstepControl
// CFootstepControl Offsets
CFootstepControl.m_source = jsonData["CFootstepControl"]["m_source"];
CFootstepControl.m_destination = jsonData["CFootstepControl"]["m_destination"];

// Atribuições para CTriggerVolume
// CTriggerVolume Offsets
CTriggerVolume.m_iFilterName = jsonData["CTriggerVolume"]["m_iFilterName"];
CTriggerVolume.m_hFilter = jsonData["CTriggerVolume"]["m_hFilter"];

// Atribuições para CFishPool
// CFishPool Offsets
CFishPool.m_fishCount = jsonData["CFishPool"]["m_fishCount"];
CFishPool.m_maxRange = jsonData["CFishPool"]["m_maxRange"];
CFishPool.m_swimDepth = jsonData["CFishPool"]["m_swimDepth"];
CFishPool.m_waterLevel = jsonData["CFishPool"]["m_waterLevel"];
CFishPool.m_isDormant = jsonData["CFishPool"]["m_isDormant"];
CFishPool.m_fishes = jsonData["CFishPool"]["m_fishes"];
CFishPool.m_visTimer = jsonData["CFishPool"]["m_visTimer"];

// Atribuições para CFuncVPhysicsClip
// CFuncVPhysicsClip Offsets
CFuncVPhysicsClip.m_bDisabled = jsonData["CFuncVPhysicsClip"]["m_bDisabled"];

// Atribuições para CCSPlayer_RadioServices
// CCSPlayer_RadioServices Offsets
CCSPlayer_RadioServices.m_flGotHostageTalkTimer = jsonData["CCSPlayer_RadioServices"]["m_flGotHostageTalkTimer"];
CCSPlayer_RadioServices.m_flDefusingTalkTimer = jsonData["CCSPlayer_RadioServices"]["m_flDefusingTalkTimer"];
CCSPlayer_RadioServices.m_flC4PlantTalkTimer = jsonData["CCSPlayer_RadioServices"]["m_flC4PlantTalkTimer"];
CCSPlayer_RadioServices.m_flRadioTokenSlots = jsonData["CCSPlayer_RadioServices"]["m_flRadioTokenSlots"];
CCSPlayer_RadioServices.m_bIgnoreRadio = jsonData["CCSPlayer_RadioServices"]["m_bIgnoreRadio"];

// Atribuições para CInstancedSceneEntity
// CInstancedSceneEntity Offsets
CInstancedSceneEntity.m_hOwner = jsonData["CInstancedSceneEntity"]["m_hOwner"];
CInstancedSceneEntity.m_bHadOwner = jsonData["CInstancedSceneEntity"]["m_bHadOwner"];
CInstancedSceneEntity.m_flPostSpeakDelay = jsonData["CInstancedSceneEntity"]["m_flPostSpeakDelay"];
CInstancedSceneEntity.m_flPreDelay = jsonData["CInstancedSceneEntity"]["m_flPreDelay"];
CInstancedSceneEntity.m_bIsBackground = jsonData["CInstancedSceneEntity"]["m_bIsBackground"];
CInstancedSceneEntity.m_bRemoveOnCompletion = jsonData["CInstancedSceneEntity"]["m_bRemoveOnCompletion"];
CInstancedSceneEntity.m_hTarget = jsonData["CInstancedSceneEntity"]["m_hTarget"];

// Atribuições para CEnvHudHint
// CEnvHudHint Offsets
CEnvHudHint.m_iszMessage = jsonData["CEnvHudHint"]["m_iszMessage"];

// Atribuições para CParticleSystem
// CParticleSystem Offsets
CParticleSystem.m_szSnapshotFileName = jsonData["CParticleSystem"]["m_szSnapshotFileName"];
CParticleSystem.m_bActive = jsonData["CParticleSystem"]["m_bActive"];
CParticleSystem.m_bFrozen = jsonData["CParticleSystem"]["m_bFrozen"];
CParticleSystem.m_flFreezeTransitionDuration = jsonData["CParticleSystem"]["m_flFreezeTransitionDuration"];
CParticleSystem.m_nStopType = jsonData["CParticleSystem"]["m_nStopType"];
CParticleSystem.m_bAnimateDuringGameplayPause = jsonData["CParticleSystem"]["m_bAnimateDuringGameplayPause"];
CParticleSystem.m_iEffectIndex = jsonData["CParticleSystem"]["m_iEffectIndex"];
CParticleSystem.m_flStartTime = jsonData["CParticleSystem"]["m_flStartTime"];
CParticleSystem.m_flPreSimTime = jsonData["CParticleSystem"]["m_flPreSimTime"];
CParticleSystem.m_vServerControlPoints = jsonData["CParticleSystem"]["m_vServerControlPoints"];
CParticleSystem.m_iServerControlPointAssignments = jsonData["CParticleSystem"]["m_iServerControlPointAssignments"];
CParticleSystem.m_hControlPointEnts = jsonData["CParticleSystem"]["m_hControlPointEnts"];
CParticleSystem.m_bNoSave = jsonData["CParticleSystem"]["m_bNoSave"];
CParticleSystem.m_bNoFreeze = jsonData["CParticleSystem"]["m_bNoFreeze"];
CParticleSystem.m_bNoRamp = jsonData["CParticleSystem"]["m_bNoRamp"];
CParticleSystem.m_bStartActive = jsonData["CParticleSystem"]["m_bStartActive"];
CParticleSystem.m_iszEffectName = jsonData["CParticleSystem"]["m_iszEffectName"];
CParticleSystem.m_iszControlPointNames = jsonData["CParticleSystem"]["m_iszControlPointNames"];
CParticleSystem.m_nDataCP = jsonData["CParticleSystem"]["m_nDataCP"];
CParticleSystem.m_vecDataCPValue = jsonData["CParticleSystem"]["m_vecDataCPValue"];
CParticleSystem.m_nTintCP = jsonData["CParticleSystem"]["m_nTintCP"];
CParticleSystem.m_clrTint = jsonData["CParticleSystem"]["m_clrTint"];

// Atribuições para CScriptItem
// CScriptItem Offsets
CScriptItem.m_MoveTypeOverride = jsonData["CScriptItem"]["m_MoveTypeOverride"];

// Atribuições para CAmbientGeneric
// CAmbientGeneric Offsets
CAmbientGeneric.m_radius = jsonData["CAmbientGeneric"]["m_radius"];
CAmbientGeneric.m_flMaxRadius = jsonData["CAmbientGeneric"]["m_flMaxRadius"];
CAmbientGeneric.m_iSoundLevel = jsonData["CAmbientGeneric"]["m_iSoundLevel"];
CAmbientGeneric.m_dpv = jsonData["CAmbientGeneric"]["m_dpv"];
CAmbientGeneric.m_fActive = jsonData["CAmbientGeneric"]["m_fActive"];
CAmbientGeneric.m_fLooping = jsonData["CAmbientGeneric"]["m_fLooping"];
CAmbientGeneric.m_iszSound = jsonData["CAmbientGeneric"]["m_iszSound"];
CAmbientGeneric.m_sSourceEntName = jsonData["CAmbientGeneric"]["m_sSourceEntName"];
CAmbientGeneric.m_hSoundSource = jsonData["CAmbientGeneric"]["m_hSoundSource"];
CAmbientGeneric.m_nSoundSourceEntIndex = jsonData["CAmbientGeneric"]["m_nSoundSourceEntIndex"];

// Atribuições para CDynamicLight
// CDynamicLight Offsets
CDynamicLight.m_ActualFlags = jsonData["CDynamicLight"]["m_ActualFlags"];
CDynamicLight.m_Flags = jsonData["CDynamicLight"]["m_Flags"];
CDynamicLight.m_LightStyle = jsonData["CDynamicLight"]["m_LightStyle"];
CDynamicLight.m_On = jsonData["CDynamicLight"]["m_On"];
CDynamicLight.m_Radius = jsonData["CDynamicLight"]["m_Radius"];
CDynamicLight.m_Exponent = jsonData["CDynamicLight"]["m_Exponent"];
CDynamicLight.m_InnerAngle = jsonData["CDynamicLight"]["m_InnerAngle"];
CDynamicLight.m_OuterAngle = jsonData["CDynamicLight"]["m_OuterAngle"];
CDynamicLight.m_SpotRadius = jsonData["CDynamicLight"]["m_SpotRadius"];

// Atribuições para CPhysicsProp
// CPhysicsProp Offsets
CPhysicsProp.m_MotionEnabled = jsonData["CPhysicsProp"]["m_MotionEnabled"];
CPhysicsProp.m_OnAwakened = jsonData["CPhysicsProp"]["m_OnAwakened"];
CPhysicsProp.m_OnAwake = jsonData["CPhysicsProp"]["m_OnAwake"];
CPhysicsProp.m_OnAsleep = jsonData["CPhysicsProp"]["m_OnAsleep"];
CPhysicsProp.m_OnPlayerUse = jsonData["CPhysicsProp"]["m_OnPlayerUse"];
CPhysicsProp.m_OnOutOfWorld = jsonData["CPhysicsProp"]["m_OnOutOfWorld"];
CPhysicsProp.m_OnPlayerPickup = jsonData["CPhysicsProp"]["m_OnPlayerPickup"];
CPhysicsProp.m_bForceNavIgnore = jsonData["CPhysicsProp"]["m_bForceNavIgnore"];
CPhysicsProp.m_bNoNavmeshBlocker = jsonData["CPhysicsProp"]["m_bNoNavmeshBlocker"];
CPhysicsProp.m_bForceNpcExclude = jsonData["CPhysicsProp"]["m_bForceNpcExclude"];
CPhysicsProp.m_massScale = jsonData["CPhysicsProp"]["m_massScale"];
CPhysicsProp.m_inertiaScale = jsonData["CPhysicsProp"]["m_inertiaScale"];
CPhysicsProp.m_buoyancyScale = jsonData["CPhysicsProp"]["m_buoyancyScale"];
CPhysicsProp.m_damageType = jsonData["CPhysicsProp"]["m_damageType"];
CPhysicsProp.m_damageToEnableMotion = jsonData["CPhysicsProp"]["m_damageToEnableMotion"];
CPhysicsProp.m_flForceToEnableMotion = jsonData["CPhysicsProp"]["m_flForceToEnableMotion"];
CPhysicsProp.m_bThrownByPlayer = jsonData["CPhysicsProp"]["m_bThrownByPlayer"];
CPhysicsProp.m_bDroppedByPlayer = jsonData["CPhysicsProp"]["m_bDroppedByPlayer"];
CPhysicsProp.m_bTouchedByPlayer = jsonData["CPhysicsProp"]["m_bTouchedByPlayer"];
CPhysicsProp.m_bFirstCollisionAfterLaunch = jsonData["CPhysicsProp"]["m_bFirstCollisionAfterLaunch"];
CPhysicsProp.m_iExploitableByPlayer = jsonData["CPhysicsProp"]["m_iExploitableByPlayer"];
CPhysicsProp.m_bHasBeenAwakened = jsonData["CPhysicsProp"]["m_bHasBeenAwakened"];
CPhysicsProp.m_bIsOverrideProp = jsonData["CPhysicsProp"]["m_bIsOverrideProp"];
CPhysicsProp.m_fNextCheckDisableMotionContactsTime = jsonData["CPhysicsProp"]["m_fNextCheckDisableMotionContactsTime"];
CPhysicsProp.m_iInitialGlowState = jsonData["CPhysicsProp"]["m_iInitialGlowState"];
CPhysicsProp.m_nGlowRange = jsonData["CPhysicsProp"]["m_nGlowRange"];
CPhysicsProp.m_nGlowRangeMin = jsonData["CPhysicsProp"]["m_nGlowRangeMin"];
CPhysicsProp.m_glowColor = jsonData["CPhysicsProp"]["m_glowColor"];
CPhysicsProp.m_bShouldAutoConvertBackFromDebris = jsonData["CPhysicsProp"]["m_bShouldAutoConvertBackFromDebris"];
CPhysicsProp.m_bMuteImpactEffects = jsonData["CPhysicsProp"]["m_bMuteImpactEffects"];
CPhysicsProp.m_bAcceptDamageFromHeldObjects = jsonData["CPhysicsProp"]["m_bAcceptDamageFromHeldObjects"];
CPhysicsProp.m_bEnableUseOutput = jsonData["CPhysicsProp"]["m_bEnableUseOutput"];
CPhysicsProp.m_CrateType = jsonData["CPhysicsProp"]["m_CrateType"];
CPhysicsProp.m_strItemClass = jsonData["CPhysicsProp"]["m_strItemClass"];
CPhysicsProp.m_nItemCount = jsonData["CPhysicsProp"]["m_nItemCount"];
CPhysicsProp.m_bRemovableForAmmoBalancing = jsonData["CPhysicsProp"]["m_bRemovableForAmmoBalancing"];
CPhysicsProp.m_bAwake = jsonData["CPhysicsProp"]["m_bAwake"];

// Atribuições para CSensorGrenadeProjectile
// CSensorGrenadeProjectile Offsets
CSensorGrenadeProjectile.m_fExpireTime = jsonData["CSensorGrenadeProjectile"]["m_fExpireTime"];
CSensorGrenadeProjectile.m_fNextDetectPlayerSound = jsonData["CSensorGrenadeProjectile"]["m_fNextDetectPlayerSound"];
CSensorGrenadeProjectile.m_hDisplayGrenade = jsonData["CSensorGrenadeProjectile"]["m_hDisplayGrenade"];

// Atribuições para CTriggerSndSosOpvar
// CTriggerSndSosOpvar Offsets
CTriggerSndSosOpvar.m_hTouchingPlayers = jsonData["CTriggerSndSosOpvar"]["m_hTouchingPlayers"];
CTriggerSndSosOpvar.m_flPosition = jsonData["CTriggerSndSosOpvar"]["m_flPosition"];
CTriggerSndSosOpvar.m_flCenterSize = jsonData["CTriggerSndSosOpvar"]["m_flCenterSize"];
CTriggerSndSosOpvar.m_flMinVal = jsonData["CTriggerSndSosOpvar"]["m_flMinVal"];
CTriggerSndSosOpvar.m_flMaxVal = jsonData["CTriggerSndSosOpvar"]["m_flMaxVal"];
CTriggerSndSosOpvar.m_opvarName = jsonData["CTriggerSndSosOpvar"]["m_opvarName"];
CTriggerSndSosOpvar.m_stackName = jsonData["CTriggerSndSosOpvar"]["m_stackName"];
CTriggerSndSosOpvar.m_operatorName = jsonData["CTriggerSndSosOpvar"]["m_operatorName"];
CTriggerSndSosOpvar.m_bVolIs2D = jsonData["CTriggerSndSosOpvar"]["m_bVolIs2D"];
CTriggerSndSosOpvar.m_opvarNameChar = jsonData["CTriggerSndSosOpvar"]["m_opvarNameChar"];
CTriggerSndSosOpvar.m_stackNameChar = jsonData["CTriggerSndSosOpvar"]["m_stackNameChar"];
CTriggerSndSosOpvar.m_operatorNameChar = jsonData["CTriggerSndSosOpvar"]["m_operatorNameChar"];
CTriggerSndSosOpvar.m_VecNormPos = jsonData["CTriggerSndSosOpvar"]["m_VecNormPos"];
CTriggerSndSosOpvar.m_flNormCenterSize = jsonData["CTriggerSndSosOpvar"]["m_flNormCenterSize"];

// Atribuições para CScriptedSequence
// CScriptedSequence Offsets
CScriptedSequence.m_iszEntry = jsonData["CScriptedSequence"]["m_iszEntry"];
CScriptedSequence.m_iszPreIdle = jsonData["CScriptedSequence"]["m_iszPreIdle"];
CScriptedSequence.m_iszPlay = jsonData["CScriptedSequence"]["m_iszPlay"];
CScriptedSequence.m_iszPostIdle = jsonData["CScriptedSequence"]["m_iszPostIdle"];
CScriptedSequence.m_iszModifierToAddOnPlay = jsonData["CScriptedSequence"]["m_iszModifierToAddOnPlay"];
CScriptedSequence.m_iszNextScript = jsonData["CScriptedSequence"]["m_iszNextScript"];
CScriptedSequence.m_iszEntity = jsonData["CScriptedSequence"]["m_iszEntity"];
CScriptedSequence.m_iszSyncGroup = jsonData["CScriptedSequence"]["m_iszSyncGroup"];
CScriptedSequence.m_nMoveTo = jsonData["CScriptedSequence"]["m_nMoveTo"];
CScriptedSequence.m_nMoveToGait = jsonData["CScriptedSequence"]["m_nMoveToGait"];
CScriptedSequence.m_nHeldWeaponBehavior = jsonData["CScriptedSequence"]["m_nHeldWeaponBehavior"];
CScriptedSequence.m_bIsPlayingPreIdle = jsonData["CScriptedSequence"]["m_bIsPlayingPreIdle"];
CScriptedSequence.m_bIsPlayingEntry = jsonData["CScriptedSequence"]["m_bIsPlayingEntry"];
CScriptedSequence.m_bIsPlayingAction = jsonData["CScriptedSequence"]["m_bIsPlayingAction"];
CScriptedSequence.m_bIsPlayingPostIdle = jsonData["CScriptedSequence"]["m_bIsPlayingPostIdle"];
CScriptedSequence.m_bDontRotateOther = jsonData["CScriptedSequence"]["m_bDontRotateOther"];
CScriptedSequence.m_bIsRepeatable = jsonData["CScriptedSequence"]["m_bIsRepeatable"];
CScriptedSequence.m_bShouldLeaveCorpse = jsonData["CScriptedSequence"]["m_bShouldLeaveCorpse"];
CScriptedSequence.m_bStartOnSpawn = jsonData["CScriptedSequence"]["m_bStartOnSpawn"];
CScriptedSequence.m_bDisallowInterrupts = jsonData["CScriptedSequence"]["m_bDisallowInterrupts"];
CScriptedSequence.m_bCanOverrideNPCState = jsonData["CScriptedSequence"]["m_bCanOverrideNPCState"];
CScriptedSequence.m_bDontTeleportAtEnd = jsonData["CScriptedSequence"]["m_bDontTeleportAtEnd"];
CScriptedSequence.m_bHighPriority = jsonData["CScriptedSequence"]["m_bHighPriority"];
CScriptedSequence.m_bHideDebugComplaints = jsonData["CScriptedSequence"]["m_bHideDebugComplaints"];
CScriptedSequence.m_bContinueOnDeath = jsonData["CScriptedSequence"]["m_bContinueOnDeath"];
CScriptedSequence.m_bLoopPreIdleSequence = jsonData["CScriptedSequence"]["m_bLoopPreIdleSequence"];
CScriptedSequence.m_bLoopActionSequence = jsonData["CScriptedSequence"]["m_bLoopActionSequence"];
CScriptedSequence.m_bLoopPostIdleSequence = jsonData["CScriptedSequence"]["m_bLoopPostIdleSequence"];
CScriptedSequence.m_bSynchPostIdles = jsonData["CScriptedSequence"]["m_bSynchPostIdles"];
CScriptedSequence.m_bIgnoreLookAt = jsonData["CScriptedSequence"]["m_bIgnoreLookAt"];
CScriptedSequence.m_bIgnoreGravity = jsonData["CScriptedSequence"]["m_bIgnoreGravity"];
CScriptedSequence.m_bDisableNPCCollisions = jsonData["CScriptedSequence"]["m_bDisableNPCCollisions"];
CScriptedSequence.m_bKeepAnimgraphLockedPost = jsonData["CScriptedSequence"]["m_bKeepAnimgraphLockedPost"];
CScriptedSequence.m_bDontAddModifiers = jsonData["CScriptedSequence"]["m_bDontAddModifiers"];
CScriptedSequence.m_flRadius = jsonData["CScriptedSequence"]["m_flRadius"];
CScriptedSequence.m_flRepeat = jsonData["CScriptedSequence"]["m_flRepeat"];
CScriptedSequence.m_flPlayAnimFadeInTime = jsonData["CScriptedSequence"]["m_flPlayAnimFadeInTime"];
CScriptedSequence.m_flMoveInterpTime = jsonData["CScriptedSequence"]["m_flMoveInterpTime"];
CScriptedSequence.m_flAngRate = jsonData["CScriptedSequence"]["m_flAngRate"];
CScriptedSequence.m_bWaitUntilMoveCompletesToStartAnimation = jsonData["CScriptedSequence"]["m_bWaitUntilMoveCompletesToStartAnimation"];
CScriptedSequence.m_nNotReadySequenceCount = jsonData["CScriptedSequence"]["m_nNotReadySequenceCount"];
CScriptedSequence.m_startTime = jsonData["CScriptedSequence"]["m_startTime"];
CScriptedSequence.m_bWaitForBeginSequence = jsonData["CScriptedSequence"]["m_bWaitForBeginSequence"];
CScriptedSequence.m_saved_effects = jsonData["CScriptedSequence"]["m_saved_effects"];
CScriptedSequence.m_savedFlags = jsonData["CScriptedSequence"]["m_savedFlags"];
CScriptedSequence.m_savedCollisionGroup = jsonData["CScriptedSequence"]["m_savedCollisionGroup"];
CScriptedSequence.m_bInterruptable = jsonData["CScriptedSequence"]["m_bInterruptable"];
CScriptedSequence.m_sequenceStarted = jsonData["CScriptedSequence"]["m_sequenceStarted"];
CScriptedSequence.m_bPositionRelativeToOtherEntity = jsonData["CScriptedSequence"]["m_bPositionRelativeToOtherEntity"];
CScriptedSequence.m_hTargetEnt = jsonData["CScriptedSequence"]["m_hTargetEnt"];
CScriptedSequence.m_hNextCine = jsonData["CScriptedSequence"]["m_hNextCine"];
CScriptedSequence.m_bThinking = jsonData["CScriptedSequence"]["m_bThinking"];
CScriptedSequence.m_bInitiatedSelfDelete = jsonData["CScriptedSequence"]["m_bInitiatedSelfDelete"];
CScriptedSequence.m_bIsTeleportingDueToMoveTo = jsonData["CScriptedSequence"]["m_bIsTeleportingDueToMoveTo"];
CScriptedSequence.m_bAllowCustomInterruptConditions = jsonData["CScriptedSequence"]["m_bAllowCustomInterruptConditions"];
CScriptedSequence.m_hForcedTarget = jsonData["CScriptedSequence"]["m_hForcedTarget"];
CScriptedSequence.m_bDontCancelOtherSequences = jsonData["CScriptedSequence"]["m_bDontCancelOtherSequences"];
CScriptedSequence.m_bForceSynch = jsonData["CScriptedSequence"]["m_bForceSynch"];
CScriptedSequence.m_bPreventUpdateYawOnFinish = jsonData["CScriptedSequence"]["m_bPreventUpdateYawOnFinish"];
CScriptedSequence.m_bEnsureOnNavmeshOnFinish = jsonData["CScriptedSequence"]["m_bEnsureOnNavmeshOnFinish"];
CScriptedSequence.m_onDeathBehavior = jsonData["CScriptedSequence"]["m_onDeathBehavior"];
CScriptedSequence.m_ConflictResponse = jsonData["CScriptedSequence"]["m_ConflictResponse"];
CScriptedSequence.m_OnBeginSequence = jsonData["CScriptedSequence"]["m_OnBeginSequence"];
CScriptedSequence.m_OnActionStartOrLoop = jsonData["CScriptedSequence"]["m_OnActionStartOrLoop"];
CScriptedSequence.m_OnEndSequence = jsonData["CScriptedSequence"]["m_OnEndSequence"];
CScriptedSequence.m_OnPostIdleEndSequence = jsonData["CScriptedSequence"]["m_OnPostIdleEndSequence"];
CScriptedSequence.m_OnCancelSequence = jsonData["CScriptedSequence"]["m_OnCancelSequence"];
CScriptedSequence.m_OnCancelFailedSequence = jsonData["CScriptedSequence"]["m_OnCancelFailedSequence"];
CScriptedSequence.m_OnScriptEvent = jsonData["CScriptedSequence"]["m_OnScriptEvent"];
CScriptedSequence.m_matOtherToMain = jsonData["CScriptedSequence"]["m_matOtherToMain"];
CScriptedSequence.m_hInteractionMainEntity = jsonData["CScriptedSequence"]["m_hInteractionMainEntity"];
CScriptedSequence.m_iPlayerDeathBehavior = jsonData["CScriptedSequence"]["m_iPlayerDeathBehavior"];

// Atribuições para CEnvProjectedTexture
// CEnvProjectedTexture Offsets
CEnvProjectedTexture.m_hTargetEntity = jsonData["CEnvProjectedTexture"]["m_hTargetEntity"];
CEnvProjectedTexture.m_bState = jsonData["CEnvProjectedTexture"]["m_bState"];
CEnvProjectedTexture.m_bAlwaysUpdate = jsonData["CEnvProjectedTexture"]["m_bAlwaysUpdate"];
CEnvProjectedTexture.m_flLightFOV = jsonData["CEnvProjectedTexture"]["m_flLightFOV"];
CEnvProjectedTexture.m_bEnableShadows = jsonData["CEnvProjectedTexture"]["m_bEnableShadows"];
CEnvProjectedTexture.m_bSimpleProjection = jsonData["CEnvProjectedTexture"]["m_bSimpleProjection"];
CEnvProjectedTexture.m_bLightOnlyTarget = jsonData["CEnvProjectedTexture"]["m_bLightOnlyTarget"];
CEnvProjectedTexture.m_bLightWorld = jsonData["CEnvProjectedTexture"]["m_bLightWorld"];
CEnvProjectedTexture.m_bCameraSpace = jsonData["CEnvProjectedTexture"]["m_bCameraSpace"];
CEnvProjectedTexture.m_flBrightnessScale = jsonData["CEnvProjectedTexture"]["m_flBrightnessScale"];
CEnvProjectedTexture.m_LightColor = jsonData["CEnvProjectedTexture"]["m_LightColor"];
CEnvProjectedTexture.m_flIntensity = jsonData["CEnvProjectedTexture"]["m_flIntensity"];
CEnvProjectedTexture.m_flLinearAttenuation = jsonData["CEnvProjectedTexture"]["m_flLinearAttenuation"];
CEnvProjectedTexture.m_flQuadraticAttenuation = jsonData["CEnvProjectedTexture"]["m_flQuadraticAttenuation"];
CEnvProjectedTexture.m_bVolumetric = jsonData["CEnvProjectedTexture"]["m_bVolumetric"];
CEnvProjectedTexture.m_flNoiseStrength = jsonData["CEnvProjectedTexture"]["m_flNoiseStrength"];
CEnvProjectedTexture.m_flFlashlightTime = jsonData["CEnvProjectedTexture"]["m_flFlashlightTime"];
CEnvProjectedTexture.m_nNumPlanes = jsonData["CEnvProjectedTexture"]["m_nNumPlanes"];
CEnvProjectedTexture.m_flPlaneOffset = jsonData["CEnvProjectedTexture"]["m_flPlaneOffset"];
CEnvProjectedTexture.m_flVolumetricIntensity = jsonData["CEnvProjectedTexture"]["m_flVolumetricIntensity"];
CEnvProjectedTexture.m_flColorTransitionTime = jsonData["CEnvProjectedTexture"]["m_flColorTransitionTime"];
CEnvProjectedTexture.m_flAmbient = jsonData["CEnvProjectedTexture"]["m_flAmbient"];
CEnvProjectedTexture.m_SpotlightTextureName = jsonData["CEnvProjectedTexture"]["m_SpotlightTextureName"];
CEnvProjectedTexture.m_nSpotlightTextureFrame = jsonData["CEnvProjectedTexture"]["m_nSpotlightTextureFrame"];
CEnvProjectedTexture.m_nShadowQuality = jsonData["CEnvProjectedTexture"]["m_nShadowQuality"];
CEnvProjectedTexture.m_flNearZ = jsonData["CEnvProjectedTexture"]["m_flNearZ"];
CEnvProjectedTexture.m_flFarZ = jsonData["CEnvProjectedTexture"]["m_flFarZ"];
CEnvProjectedTexture.m_flProjectionSize = jsonData["CEnvProjectedTexture"]["m_flProjectionSize"];
CEnvProjectedTexture.m_flRotation = jsonData["CEnvProjectedTexture"]["m_flRotation"];
CEnvProjectedTexture.m_bFlipHorizontal = jsonData["CEnvProjectedTexture"]["m_bFlipHorizontal"];

// Atribuições para CSceneListManager
// CSceneListManager Offsets
CSceneListManager.m_hListManagers = jsonData["CSceneListManager"]["m_hListManagers"];
CSceneListManager.m_iszScenes = jsonData["CSceneListManager"]["m_iszScenes"];
CSceneListManager.m_hScenes = jsonData["CSceneListManager"]["m_hScenes"];

// Atribuições para CSplineConstraint
// CSplineConstraint Offsets
CSplineConstraint.m_vAnchorOffsetRestore = jsonData["CSplineConstraint"]["m_vAnchorOffsetRestore"];

// Atribuições para CBasePlatTrain
// CBasePlatTrain Offsets
CBasePlatTrain.m_NoiseMoving = jsonData["CBasePlatTrain"]["m_NoiseMoving"];
CBasePlatTrain.m_NoiseArrived = jsonData["CBasePlatTrain"]["m_NoiseArrived"];
CBasePlatTrain.m_volume = jsonData["CBasePlatTrain"]["m_volume"];
CBasePlatTrain.m_flTWidth = jsonData["CBasePlatTrain"]["m_flTWidth"];
CBasePlatTrain.m_flTLength = jsonData["CBasePlatTrain"]["m_flTLength"];

// Atribuições para CTankTargetChange
// CTankTargetChange Offsets
CTankTargetChange.m_newTarget = jsonData["CTankTargetChange"]["m_newTarget"];
CTankTargetChange.m_newTargetName = jsonData["CTankTargetChange"]["m_newTargetName"];

// Atribuições para CLogicCompare
// CLogicCompare Offsets
CLogicCompare.m_flInValue = jsonData["CLogicCompare"]["m_flInValue"];
CLogicCompare.m_flCompareValue = jsonData["CLogicCompare"]["m_flCompareValue"];
CLogicCompare.m_OnLessThan = jsonData["CLogicCompare"]["m_OnLessThan"];
CLogicCompare.m_OnEqualTo = jsonData["CLogicCompare"]["m_OnEqualTo"];
CLogicCompare.m_OnNotEqualTo = jsonData["CLogicCompare"]["m_OnNotEqualTo"];
CLogicCompare.m_OnGreaterThan = jsonData["CLogicCompare"]["m_OnGreaterThan"];

// Atribuições para CKeepUpright
// CKeepUpright Offsets
CKeepUpright.m_worldGoalAxis = jsonData["CKeepUpright"]["m_worldGoalAxis"];
CKeepUpright.m_localTestAxis = jsonData["CKeepUpright"]["m_localTestAxis"];
CKeepUpright.m_nameAttach = jsonData["CKeepUpright"]["m_nameAttach"];
CKeepUpright.m_attachedObject = jsonData["CKeepUpright"]["m_attachedObject"];
CKeepUpright.m_angularLimit = jsonData["CKeepUpright"]["m_angularLimit"];
CKeepUpright.m_bActive = jsonData["CKeepUpright"]["m_bActive"];
CKeepUpright.m_bDampAllRotation = jsonData["CKeepUpright"]["m_bDampAllRotation"];

// Atribuições para CFuncTimescale
// CFuncTimescale Offsets
CFuncTimescale.m_flDesiredTimescale = jsonData["CFuncTimescale"]["m_flDesiredTimescale"];
CFuncTimescale.m_flAcceleration = jsonData["CFuncTimescale"]["m_flAcceleration"];
CFuncTimescale.m_flMinBlendRate = jsonData["CFuncTimescale"]["m_flMinBlendRate"];
CFuncTimescale.m_flBlendDeltaMultiplier = jsonData["CFuncTimescale"]["m_flBlendDeltaMultiplier"];
CFuncTimescale.m_isStarted = jsonData["CFuncTimescale"]["m_isStarted"];

// Atribuições para CBtActionMoveTo
// CBtActionMoveTo Offsets
CBtActionMoveTo.m_szDestinationInputKey = jsonData["CBtActionMoveTo"]["m_szDestinationInputKey"];
CBtActionMoveTo.m_szHidingSpotInputKey = jsonData["CBtActionMoveTo"]["m_szHidingSpotInputKey"];
CBtActionMoveTo.m_szThreatInputKey = jsonData["CBtActionMoveTo"]["m_szThreatInputKey"];
CBtActionMoveTo.m_vecDestination = jsonData["CBtActionMoveTo"]["m_vecDestination"];
CBtActionMoveTo.m_bAutoLookAdjust = jsonData["CBtActionMoveTo"]["m_bAutoLookAdjust"];
CBtActionMoveTo.m_bComputePath = jsonData["CBtActionMoveTo"]["m_bComputePath"];
CBtActionMoveTo.m_flDamagingAreasPenaltyCost = jsonData["CBtActionMoveTo"]["m_flDamagingAreasPenaltyCost"];
CBtActionMoveTo.m_CheckApproximateCornersTimer = jsonData["CBtActionMoveTo"]["m_CheckApproximateCornersTimer"];
CBtActionMoveTo.m_CheckHighPriorityItem = jsonData["CBtActionMoveTo"]["m_CheckHighPriorityItem"];
CBtActionMoveTo.m_RepathTimer = jsonData["CBtActionMoveTo"]["m_RepathTimer"];
CBtActionMoveTo.m_flArrivalEpsilon = jsonData["CBtActionMoveTo"]["m_flArrivalEpsilon"];
CBtActionMoveTo.m_flAdditionalArrivalEpsilon2D = jsonData["CBtActionMoveTo"]["m_flAdditionalArrivalEpsilon2D"];
CBtActionMoveTo.m_flHidingSpotCheckDistanceThreshold = jsonData["CBtActionMoveTo"]["m_flHidingSpotCheckDistanceThreshold"];
CBtActionMoveTo.m_flNearestAreaDistanceThreshold = jsonData["CBtActionMoveTo"]["m_flNearestAreaDistanceThreshold"];

// Atribuições para CTonemapController2
// CTonemapController2 Offsets
CTonemapController2.m_flAutoExposureMin = jsonData["CTonemapController2"]["m_flAutoExposureMin"];
CTonemapController2.m_flAutoExposureMax = jsonData["CTonemapController2"]["m_flAutoExposureMax"];
CTonemapController2.m_flTonemapPercentTarget = jsonData["CTonemapController2"]["m_flTonemapPercentTarget"];
CTonemapController2.m_flTonemapPercentBrightPixels = jsonData["CTonemapController2"]["m_flTonemapPercentBrightPixels"];
CTonemapController2.m_flTonemapMinAvgLum = jsonData["CTonemapController2"]["m_flTonemapMinAvgLum"];
CTonemapController2.m_flExposureAdaptationSpeedUp = jsonData["CTonemapController2"]["m_flExposureAdaptationSpeedUp"];
CTonemapController2.m_flExposureAdaptationSpeedDown = jsonData["CTonemapController2"]["m_flExposureAdaptationSpeedDown"];
CTonemapController2.m_flTonemapEVSmoothingRange = jsonData["CTonemapController2"]["m_flTonemapEVSmoothingRange"];

// Atribuições para CEnvInstructorVRHint
// CEnvInstructorVRHint Offsets
CEnvInstructorVRHint.m_iszName = jsonData["CEnvInstructorVRHint"]["m_iszName"];
CEnvInstructorVRHint.m_iszHintTargetEntity = jsonData["CEnvInstructorVRHint"]["m_iszHintTargetEntity"];
CEnvInstructorVRHint.m_iTimeout = jsonData["CEnvInstructorVRHint"]["m_iTimeout"];
CEnvInstructorVRHint.m_iszCaption = jsonData["CEnvInstructorVRHint"]["m_iszCaption"];
CEnvInstructorVRHint.m_iszStartSound = jsonData["CEnvInstructorVRHint"]["m_iszStartSound"];
CEnvInstructorVRHint.m_iLayoutFileType = jsonData["CEnvInstructorVRHint"]["m_iLayoutFileType"];
CEnvInstructorVRHint.m_iszCustomLayoutFile = jsonData["CEnvInstructorVRHint"]["m_iszCustomLayoutFile"];
CEnvInstructorVRHint.m_iAttachType = jsonData["CEnvInstructorVRHint"]["m_iAttachType"];
CEnvInstructorVRHint.m_flHeightOffset = jsonData["CEnvInstructorVRHint"]["m_flHeightOffset"];

// Atribuições para CPlatTrigger
// CPlatTrigger Offsets
CPlatTrigger.m_pPlatform = jsonData["CPlatTrigger"]["m_pPlatform"];

// Atribuições para CEnvWindShared
// CEnvWindShared Offsets
CEnvWindShared.m_flStartTime = jsonData["CEnvWindShared"]["m_flStartTime"];
CEnvWindShared.m_iWindSeed = jsonData["CEnvWindShared"]["m_iWindSeed"];
CEnvWindShared.m_iMinWind = jsonData["CEnvWindShared"]["m_iMinWind"];
CEnvWindShared.m_iMaxWind = jsonData["CEnvWindShared"]["m_iMaxWind"];
CEnvWindShared.m_windRadius = jsonData["CEnvWindShared"]["m_windRadius"];
CEnvWindShared.m_iMinGust = jsonData["CEnvWindShared"]["m_iMinGust"];
CEnvWindShared.m_iMaxGust = jsonData["CEnvWindShared"]["m_iMaxGust"];
CEnvWindShared.m_flMinGustDelay = jsonData["CEnvWindShared"]["m_flMinGustDelay"];
CEnvWindShared.m_flMaxGustDelay = jsonData["CEnvWindShared"]["m_flMaxGustDelay"];
CEnvWindShared.m_flGustDuration = jsonData["CEnvWindShared"]["m_flGustDuration"];
CEnvWindShared.m_iGustDirChange = jsonData["CEnvWindShared"]["m_iGustDirChange"];
CEnvWindShared.m_location = jsonData["CEnvWindShared"]["m_location"];
CEnvWindShared.m_iszGustSound = jsonData["CEnvWindShared"]["m_iszGustSound"];
CEnvWindShared.m_iWindDir = jsonData["CEnvWindShared"]["m_iWindDir"];
CEnvWindShared.m_flWindSpeed = jsonData["CEnvWindShared"]["m_flWindSpeed"];
CEnvWindShared.m_currentWindVector = jsonData["CEnvWindShared"]["m_currentWindVector"];
CEnvWindShared.m_CurrentSwayVector = jsonData["CEnvWindShared"]["m_CurrentSwayVector"];
CEnvWindShared.m_PrevSwayVector = jsonData["CEnvWindShared"]["m_PrevSwayVector"];
CEnvWindShared.m_iInitialWindDir = jsonData["CEnvWindShared"]["m_iInitialWindDir"];
CEnvWindShared.m_flInitialWindSpeed = jsonData["CEnvWindShared"]["m_flInitialWindSpeed"];
CEnvWindShared.m_OnGustStart = jsonData["CEnvWindShared"]["m_OnGustStart"];
CEnvWindShared.m_OnGustEnd = jsonData["CEnvWindShared"]["m_OnGustEnd"];
CEnvWindShared.m_flVariationTime = jsonData["CEnvWindShared"]["m_flVariationTime"];
CEnvWindShared.m_flSwayTime = jsonData["CEnvWindShared"]["m_flSwayTime"];
CEnvWindShared.m_flSimTime = jsonData["CEnvWindShared"]["m_flSimTime"];
CEnvWindShared.m_flSwitchTime = jsonData["CEnvWindShared"]["m_flSwitchTime"];
CEnvWindShared.m_flAveWindSpeed = jsonData["CEnvWindShared"]["m_flAveWindSpeed"];
CEnvWindShared.m_bGusting = jsonData["CEnvWindShared"]["m_bGusting"];
CEnvWindShared.m_flWindAngleVariation = jsonData["CEnvWindShared"]["m_flWindAngleVariation"];
CEnvWindShared.m_flWindSpeedVariation = jsonData["CEnvWindShared"]["m_flWindSpeedVariation"];
CEnvWindShared.m_hEntOwner = jsonData["CEnvWindShared"]["m_hEntOwner"];

// Atribuições para CPointHurt
// CPointHurt Offsets
CPointHurt.m_nDamage = jsonData["CPointHurt"]["m_nDamage"];
CPointHurt.m_bitsDamageType = jsonData["CPointHurt"]["m_bitsDamageType"];
CPointHurt.m_flRadius = jsonData["CPointHurt"]["m_flRadius"];
CPointHurt.m_flDelay = jsonData["CPointHurt"]["m_flDelay"];
CPointHurt.m_strTarget = jsonData["CPointHurt"]["m_strTarget"];
CPointHurt.m_pActivator = jsonData["CPointHurt"]["m_pActivator"];

// Atribuições para CPointValueRemapper
// CPointValueRemapper Offsets
CPointValueRemapper.m_bDisabled = jsonData["CPointValueRemapper"]["m_bDisabled"];
CPointValueRemapper.m_bUpdateOnClient = jsonData["CPointValueRemapper"]["m_bUpdateOnClient"];
CPointValueRemapper.m_nInputType = jsonData["CPointValueRemapper"]["m_nInputType"];
CPointValueRemapper.m_iszRemapLineStartName = jsonData["CPointValueRemapper"]["m_iszRemapLineStartName"];
CPointValueRemapper.m_iszRemapLineEndName = jsonData["CPointValueRemapper"]["m_iszRemapLineEndName"];
CPointValueRemapper.m_hRemapLineStart = jsonData["CPointValueRemapper"]["m_hRemapLineStart"];
CPointValueRemapper.m_hRemapLineEnd = jsonData["CPointValueRemapper"]["m_hRemapLineEnd"];
CPointValueRemapper.m_flMaximumChangePerSecond = jsonData["CPointValueRemapper"]["m_flMaximumChangePerSecond"];
CPointValueRemapper.m_flDisengageDistance = jsonData["CPointValueRemapper"]["m_flDisengageDistance"];
CPointValueRemapper.m_flEngageDistance = jsonData["CPointValueRemapper"]["m_flEngageDistance"];
CPointValueRemapper.m_bRequiresUseKey = jsonData["CPointValueRemapper"]["m_bRequiresUseKey"];
CPointValueRemapper.m_nOutputType = jsonData["CPointValueRemapper"]["m_nOutputType"];
CPointValueRemapper.m_iszOutputEntityName = jsonData["CPointValueRemapper"]["m_iszOutputEntityName"];
CPointValueRemapper.m_iszOutputEntity2Name = jsonData["CPointValueRemapper"]["m_iszOutputEntity2Name"];
CPointValueRemapper.m_iszOutputEntity3Name = jsonData["CPointValueRemapper"]["m_iszOutputEntity3Name"];
CPointValueRemapper.m_iszOutputEntity4Name = jsonData["CPointValueRemapper"]["m_iszOutputEntity4Name"];
CPointValueRemapper.m_hOutputEntities = jsonData["CPointValueRemapper"]["m_hOutputEntities"];
CPointValueRemapper.m_nHapticsType = jsonData["CPointValueRemapper"]["m_nHapticsType"];
CPointValueRemapper.m_nMomentumType = jsonData["CPointValueRemapper"]["m_nMomentumType"];
CPointValueRemapper.m_flMomentumModifier = jsonData["CPointValueRemapper"]["m_flMomentumModifier"];
CPointValueRemapper.m_flSnapValue = jsonData["CPointValueRemapper"]["m_flSnapValue"];
CPointValueRemapper.m_flCurrentMomentum = jsonData["CPointValueRemapper"]["m_flCurrentMomentum"];
CPointValueRemapper.m_nRatchetType = jsonData["CPointValueRemapper"]["m_nRatchetType"];
CPointValueRemapper.m_flRatchetOffset = jsonData["CPointValueRemapper"]["m_flRatchetOffset"];
CPointValueRemapper.m_flInputOffset = jsonData["CPointValueRemapper"]["m_flInputOffset"];
CPointValueRemapper.m_bEngaged = jsonData["CPointValueRemapper"]["m_bEngaged"];
CPointValueRemapper.m_bFirstUpdate = jsonData["CPointValueRemapper"]["m_bFirstUpdate"];
CPointValueRemapper.m_flPreviousValue = jsonData["CPointValueRemapper"]["m_flPreviousValue"];
CPointValueRemapper.m_flPreviousUpdateTickTime = jsonData["CPointValueRemapper"]["m_flPreviousUpdateTickTime"];
CPointValueRemapper.m_vecPreviousTestPoint = jsonData["CPointValueRemapper"]["m_vecPreviousTestPoint"];
CPointValueRemapper.m_hUsingPlayer = jsonData["CPointValueRemapper"]["m_hUsingPlayer"];
CPointValueRemapper.m_flCustomOutputValue = jsonData["CPointValueRemapper"]["m_flCustomOutputValue"];
CPointValueRemapper.m_iszSoundEngage = jsonData["CPointValueRemapper"]["m_iszSoundEngage"];
CPointValueRemapper.m_iszSoundDisengage = jsonData["CPointValueRemapper"]["m_iszSoundDisengage"];
CPointValueRemapper.m_iszSoundReachedValueZero = jsonData["CPointValueRemapper"]["m_iszSoundReachedValueZero"];
CPointValueRemapper.m_iszSoundReachedValueOne = jsonData["CPointValueRemapper"]["m_iszSoundReachedValueOne"];
CPointValueRemapper.m_iszSoundMovingLoop = jsonData["CPointValueRemapper"]["m_iszSoundMovingLoop"];
CPointValueRemapper.m_Position = jsonData["CPointValueRemapper"]["m_Position"];
CPointValueRemapper.m_PositionDelta = jsonData["CPointValueRemapper"]["m_PositionDelta"];
CPointValueRemapper.m_OnReachedValueZero = jsonData["CPointValueRemapper"]["m_OnReachedValueZero"];
CPointValueRemapper.m_OnReachedValueOne = jsonData["CPointValueRemapper"]["m_OnReachedValueOne"];
CPointValueRemapper.m_OnReachedValueCustom = jsonData["CPointValueRemapper"]["m_OnReachedValueCustom"];
CPointValueRemapper.m_OnEngage = jsonData["CPointValueRemapper"]["m_OnEngage"];
CPointValueRemapper.m_OnDisengage = jsonData["CPointValueRemapper"]["m_OnDisengage"];

// Atribuições para CLogicNPCCounterAABB
// CLogicNPCCounterAABB Offsets
CLogicNPCCounterAABB.m_vDistanceOuterMins = jsonData["CLogicNPCCounterAABB"]["m_vDistanceOuterMins"];
CLogicNPCCounterAABB.m_vDistanceOuterMaxs = jsonData["CLogicNPCCounterAABB"]["m_vDistanceOuterMaxs"];
CLogicNPCCounterAABB.m_vOuterMins = jsonData["CLogicNPCCounterAABB"]["m_vOuterMins"];
CLogicNPCCounterAABB.m_vOuterMaxs = jsonData["CLogicNPCCounterAABB"]["m_vOuterMaxs"];

// Atribuições para CSoundOpvarSetPointEntity
// CSoundOpvarSetPointEntity Offsets
CSoundOpvarSetPointEntity.m_OnEnter = jsonData["CSoundOpvarSetPointEntity"]["m_OnEnter"];
CSoundOpvarSetPointEntity.m_OnExit = jsonData["CSoundOpvarSetPointEntity"]["m_OnExit"];
CSoundOpvarSetPointEntity.m_bAutoDisable = jsonData["CSoundOpvarSetPointEntity"]["m_bAutoDisable"];
CSoundOpvarSetPointEntity.m_flDistanceMin = jsonData["CSoundOpvarSetPointEntity"]["m_flDistanceMin"];
CSoundOpvarSetPointEntity.m_flDistanceMax = jsonData["CSoundOpvarSetPointEntity"]["m_flDistanceMax"];
CSoundOpvarSetPointEntity.m_flDistanceMapMin = jsonData["CSoundOpvarSetPointEntity"]["m_flDistanceMapMin"];
CSoundOpvarSetPointEntity.m_flDistanceMapMax = jsonData["CSoundOpvarSetPointEntity"]["m_flDistanceMapMax"];
CSoundOpvarSetPointEntity.m_flOcclusionRadius = jsonData["CSoundOpvarSetPointEntity"]["m_flOcclusionRadius"];
CSoundOpvarSetPointEntity.m_flOcclusionMin = jsonData["CSoundOpvarSetPointEntity"]["m_flOcclusionMin"];
CSoundOpvarSetPointEntity.m_flOcclusionMax = jsonData["CSoundOpvarSetPointEntity"]["m_flOcclusionMax"];
CSoundOpvarSetPointEntity.m_flValSetOnDisable = jsonData["CSoundOpvarSetPointEntity"]["m_flValSetOnDisable"];
CSoundOpvarSetPointEntity.m_bSetValueOnDisable = jsonData["CSoundOpvarSetPointEntity"]["m_bSetValueOnDisable"];
CSoundOpvarSetPointEntity.m_bReloading = jsonData["CSoundOpvarSetPointEntity"]["m_bReloading"];
CSoundOpvarSetPointEntity.m_nSimulationMode = jsonData["CSoundOpvarSetPointEntity"]["m_nSimulationMode"];
CSoundOpvarSetPointEntity.m_nVisibilitySamples = jsonData["CSoundOpvarSetPointEntity"]["m_nVisibilitySamples"];
CSoundOpvarSetPointEntity.m_vDynamicProxyPoint = jsonData["CSoundOpvarSetPointEntity"]["m_vDynamicProxyPoint"];
CSoundOpvarSetPointEntity.m_flDynamicMaximumOcclusion = jsonData["CSoundOpvarSetPointEntity"]["m_flDynamicMaximumOcclusion"];
CSoundOpvarSetPointEntity.m_hDynamicEntity = jsonData["CSoundOpvarSetPointEntity"]["m_hDynamicEntity"];
CSoundOpvarSetPointEntity.m_iszDynamicEntityName = jsonData["CSoundOpvarSetPointEntity"]["m_iszDynamicEntityName"];
CSoundOpvarSetPointEntity.m_flPathingDistanceNormFactor = jsonData["CSoundOpvarSetPointEntity"]["m_flPathingDistanceNormFactor"];
CSoundOpvarSetPointEntity.m_vPathingSourcePos = jsonData["CSoundOpvarSetPointEntity"]["m_vPathingSourcePos"];
CSoundOpvarSetPointEntity.m_vPathingListenerPos = jsonData["CSoundOpvarSetPointEntity"]["m_vPathingListenerPos"];
CSoundOpvarSetPointEntity.m_vPathingDirection = jsonData["CSoundOpvarSetPointEntity"]["m_vPathingDirection"];
CSoundOpvarSetPointEntity.m_nPathingSourceIndex = jsonData["CSoundOpvarSetPointEntity"]["m_nPathingSourceIndex"];

// Atribuições para CSkyCamera
// CSkyCamera Offsets
CSkyCamera.m_skyboxData = jsonData["CSkyCamera"]["m_skyboxData"];
CSkyCamera.m_skyboxSlotToken = jsonData["CSkyCamera"]["m_skyboxSlotToken"];
CSkyCamera.m_bUseAngles = jsonData["CSkyCamera"]["m_bUseAngles"];
CSkyCamera.m_pNext = jsonData["CSkyCamera"]["m_pNext"];

// Atribuições para CGameMoney
// CGameMoney Offsets
CGameMoney.m_OnMoneySpent = jsonData["CGameMoney"]["m_OnMoneySpent"];
CGameMoney.m_OnMoneySpentFail = jsonData["CGameMoney"]["m_OnMoneySpentFail"];
CGameMoney.m_nMoney = jsonData["CGameMoney"]["m_nMoney"];
CGameMoney.m_strAwardText = jsonData["CGameMoney"]["m_strAwardText"];

// Atribuições para CLogicPlayerProxy
// CLogicPlayerProxy Offsets
CLogicPlayerProxy.m_hPlayer = jsonData["CLogicPlayerProxy"]["m_hPlayer"];
CLogicPlayerProxy.m_PlayerHasAmmo = jsonData["CLogicPlayerProxy"]["m_PlayerHasAmmo"];
CLogicPlayerProxy.m_PlayerHasNoAmmo = jsonData["CLogicPlayerProxy"]["m_PlayerHasNoAmmo"];
CLogicPlayerProxy.m_PlayerDied = jsonData["CLogicPlayerProxy"]["m_PlayerDied"];
CLogicPlayerProxy.m_RequestedPlayerHealth = jsonData["CLogicPlayerProxy"]["m_RequestedPlayerHealth"];

// Atribuições para CPhysImpact
// CPhysImpact Offsets
CPhysImpact.m_damage = jsonData["CPhysImpact"]["m_damage"];
CPhysImpact.m_distance = jsonData["CPhysImpact"]["m_distance"];
CPhysImpact.m_directionEntityName = jsonData["CPhysImpact"]["m_directionEntityName"];

// Atribuições para CEnvCombinedLightProbeVolume
// CEnvCombinedLightProbeVolume Offsets
CEnvCombinedLightProbeVolume.m_Entity_Color = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_Color"];
CEnvCombinedLightProbeVolume.m_Entity_flBrightness = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_flBrightness"];
CEnvCombinedLightProbeVolume.m_Entity_hCubemapTexture = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_hCubemapTexture"];
CEnvCombinedLightProbeVolume.m_Entity_bCustomCubemapTexture = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_bCustomCubemapTexture"];
CEnvCombinedLightProbeVolume.m_Entity_hLightProbeTexture = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_hLightProbeTexture"];
CEnvCombinedLightProbeVolume.m_Entity_hLightProbeDirectLightIndicesTexture = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_hLightProbeDirectLightIndicesTexture"];
CEnvCombinedLightProbeVolume.m_Entity_hLightProbeDirectLightScalarsTexture = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_hLightProbeDirectLightScalarsTexture"];
CEnvCombinedLightProbeVolume.m_Entity_hLightProbeDirectLightShadowsTexture = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_hLightProbeDirectLightShadowsTexture"];
CEnvCombinedLightProbeVolume.m_Entity_vBoxMins = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_vBoxMins"];
CEnvCombinedLightProbeVolume.m_Entity_vBoxMaxs = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_vBoxMaxs"];
CEnvCombinedLightProbeVolume.m_Entity_bMoveable = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_bMoveable"];
CEnvCombinedLightProbeVolume.m_Entity_nHandshake = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nHandshake"];
CEnvCombinedLightProbeVolume.m_Entity_nEnvCubeMapArrayIndex = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nEnvCubeMapArrayIndex"];
CEnvCombinedLightProbeVolume.m_Entity_nPriority = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nPriority"];
CEnvCombinedLightProbeVolume.m_Entity_bStartDisabled = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_bStartDisabled"];
CEnvCombinedLightProbeVolume.m_Entity_flEdgeFadeDist = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_flEdgeFadeDist"];
CEnvCombinedLightProbeVolume.m_Entity_vEdgeFadeDists = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_vEdgeFadeDists"];
CEnvCombinedLightProbeVolume.m_Entity_nLightProbeSizeX = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nLightProbeSizeX"];
CEnvCombinedLightProbeVolume.m_Entity_nLightProbeSizeY = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nLightProbeSizeY"];
CEnvCombinedLightProbeVolume.m_Entity_nLightProbeSizeZ = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nLightProbeSizeZ"];
CEnvCombinedLightProbeVolume.m_Entity_nLightProbeAtlasX = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nLightProbeAtlasX"];
CEnvCombinedLightProbeVolume.m_Entity_nLightProbeAtlasY = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nLightProbeAtlasY"];
CEnvCombinedLightProbeVolume.m_Entity_nLightProbeAtlasZ = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_nLightProbeAtlasZ"];
CEnvCombinedLightProbeVolume.m_Entity_bEnabled = jsonData["CEnvCombinedLightProbeVolume"]["m_Entity_bEnabled"];

// Atribuições para CEnvParticleGlow
// CEnvParticleGlow Offsets
CEnvParticleGlow.m_flAlphaScale = jsonData["CEnvParticleGlow"]["m_flAlphaScale"];
CEnvParticleGlow.m_flRadiusScale = jsonData["CEnvParticleGlow"]["m_flRadiusScale"];
CEnvParticleGlow.m_flSelfIllumScale = jsonData["CEnvParticleGlow"]["m_flSelfIllumScale"];
CEnvParticleGlow.m_ColorTint = jsonData["CEnvParticleGlow"]["m_ColorTint"];
CEnvParticleGlow.m_hTextureOverride = jsonData["CEnvParticleGlow"]["m_hTextureOverride"];

// Atribuições para CSoundAreaEntitySphere
// CSoundAreaEntitySphere Offsets
CSoundAreaEntitySphere.m_flRadius = jsonData["CSoundAreaEntitySphere"]["m_flRadius"];

// Atribuições para CFuncMonitor
// CFuncMonitor Offsets
CFuncMonitor.m_targetCamera = jsonData["CFuncMonitor"]["m_targetCamera"];
CFuncMonitor.m_nResolutionEnum = jsonData["CFuncMonitor"]["m_nResolutionEnum"];
CFuncMonitor.m_bRenderShadows = jsonData["CFuncMonitor"]["m_bRenderShadows"];
CFuncMonitor.m_bUseUniqueColorTarget = jsonData["CFuncMonitor"]["m_bUseUniqueColorTarget"];
CFuncMonitor.m_brushModelName = jsonData["CFuncMonitor"]["m_brushModelName"];
CFuncMonitor.m_hTargetCamera = jsonData["CFuncMonitor"]["m_hTargetCamera"];
CFuncMonitor.m_bEnabled = jsonData["CFuncMonitor"]["m_bEnabled"];
CFuncMonitor.m_bDraw3DSkybox = jsonData["CFuncMonitor"]["m_bDraw3DSkybox"];
CFuncMonitor.m_bStartEnabled = jsonData["CFuncMonitor"]["m_bStartEnabled"];

// Atribuições para CPointAngularVelocitySensor
// CPointAngularVelocitySensor Offsets
CPointAngularVelocitySensor.m_hTargetEntity = jsonData["CPointAngularVelocitySensor"]["m_hTargetEntity"];
CPointAngularVelocitySensor.m_flThreshold = jsonData["CPointAngularVelocitySensor"]["m_flThreshold"];
CPointAngularVelocitySensor.m_nLastCompareResult = jsonData["CPointAngularVelocitySensor"]["m_nLastCompareResult"];
CPointAngularVelocitySensor.m_nLastFireResult = jsonData["CPointAngularVelocitySensor"]["m_nLastFireResult"];
CPointAngularVelocitySensor.m_flFireTime = jsonData["CPointAngularVelocitySensor"]["m_flFireTime"];
CPointAngularVelocitySensor.m_flFireInterval = jsonData["CPointAngularVelocitySensor"]["m_flFireInterval"];
CPointAngularVelocitySensor.m_flLastAngVelocity = jsonData["CPointAngularVelocitySensor"]["m_flLastAngVelocity"];
CPointAngularVelocitySensor.m_lastOrientation = jsonData["CPointAngularVelocitySensor"]["m_lastOrientation"];
CPointAngularVelocitySensor.m_vecAxis = jsonData["CPointAngularVelocitySensor"]["m_vecAxis"];
CPointAngularVelocitySensor.m_bUseHelper = jsonData["CPointAngularVelocitySensor"]["m_bUseHelper"];
CPointAngularVelocitySensor.m_AngularVelocity = jsonData["CPointAngularVelocitySensor"]["m_AngularVelocity"];
CPointAngularVelocitySensor.m_OnLessThan = jsonData["CPointAngularVelocitySensor"]["m_OnLessThan"];
CPointAngularVelocitySensor.m_OnLessThanOrEqualTo = jsonData["CPointAngularVelocitySensor"]["m_OnLessThanOrEqualTo"];
CPointAngularVelocitySensor.m_OnGreaterThan = jsonData["CPointAngularVelocitySensor"]["m_OnGreaterThan"];
CPointAngularVelocitySensor.m_OnGreaterThanOrEqualTo = jsonData["CPointAngularVelocitySensor"]["m_OnGreaterThanOrEqualTo"];
CPointAngularVelocitySensor.m_OnEqualTo = jsonData["CPointAngularVelocitySensor"]["m_OnEqualTo"];

// Atribuições para CMolotovProjectile
// CMolotovProjectile Offsets
CMolotovProjectile.m_bIsIncGrenade = jsonData["CMolotovProjectile"]["m_bIsIncGrenade"];
CMolotovProjectile.m_bDetonated = jsonData["CMolotovProjectile"]["m_bDetonated"];
CMolotovProjectile.m_stillTimer = jsonData["CMolotovProjectile"]["m_stillTimer"];
CMolotovProjectile.m_bHasBouncedOffPlayer = jsonData["CMolotovProjectile"]["m_bHasBouncedOffPlayer"];

// Atribuições para CEnvInstructorHint
// CEnvInstructorHint Offsets
CEnvInstructorHint.m_iszName = jsonData["CEnvInstructorHint"]["m_iszName"];
CEnvInstructorHint.m_iszReplace_Key = jsonData["CEnvInstructorHint"]["m_iszReplace_Key"];
CEnvInstructorHint.m_iszHintTargetEntity = jsonData["CEnvInstructorHint"]["m_iszHintTargetEntity"];
CEnvInstructorHint.m_iTimeout = jsonData["CEnvInstructorHint"]["m_iTimeout"];
CEnvInstructorHint.m_iDisplayLimit = jsonData["CEnvInstructorHint"]["m_iDisplayLimit"];
CEnvInstructorHint.m_iszIcon_Onscreen = jsonData["CEnvInstructorHint"]["m_iszIcon_Onscreen"];
CEnvInstructorHint.m_iszIcon_Offscreen = jsonData["CEnvInstructorHint"]["m_iszIcon_Offscreen"];
CEnvInstructorHint.m_iszCaption = jsonData["CEnvInstructorHint"]["m_iszCaption"];
CEnvInstructorHint.m_iszActivatorCaption = jsonData["CEnvInstructorHint"]["m_iszActivatorCaption"];
CEnvInstructorHint.m_Color = jsonData["CEnvInstructorHint"]["m_Color"];
CEnvInstructorHint.m_fIconOffset = jsonData["CEnvInstructorHint"]["m_fIconOffset"];
CEnvInstructorHint.m_fRange = jsonData["CEnvInstructorHint"]["m_fRange"];
CEnvInstructorHint.m_iPulseOption = jsonData["CEnvInstructorHint"]["m_iPulseOption"];
CEnvInstructorHint.m_iAlphaOption = jsonData["CEnvInstructorHint"]["m_iAlphaOption"];
CEnvInstructorHint.m_iShakeOption = jsonData["CEnvInstructorHint"]["m_iShakeOption"];
CEnvInstructorHint.m_bStatic = jsonData["CEnvInstructorHint"]["m_bStatic"];
CEnvInstructorHint.m_bNoOffscreen = jsonData["CEnvInstructorHint"]["m_bNoOffscreen"];
CEnvInstructorHint.m_bForceCaption = jsonData["CEnvInstructorHint"]["m_bForceCaption"];
CEnvInstructorHint.m_iInstanceType = jsonData["CEnvInstructorHint"]["m_iInstanceType"];
CEnvInstructorHint.m_bSuppressRest = jsonData["CEnvInstructorHint"]["m_bSuppressRest"];
CEnvInstructorHint.m_iszBinding = jsonData["CEnvInstructorHint"]["m_iszBinding"];
CEnvInstructorHint.m_bAllowNoDrawTarget = jsonData["CEnvInstructorHint"]["m_bAllowNoDrawTarget"];
CEnvInstructorHint.m_bAutoStart = jsonData["CEnvInstructorHint"]["m_bAutoStart"];
CEnvInstructorHint.m_bLocalPlayerOnly = jsonData["CEnvInstructorHint"]["m_bLocalPlayerOnly"];

// Atribuições para CEnvTracer
// CEnvTracer Offsets
CEnvTracer.m_vecEnd = jsonData["CEnvTracer"]["m_vecEnd"];
CEnvTracer.m_flDelay = jsonData["CEnvTracer"]["m_flDelay"];

// Atribuições para CInfoGameEventProxy
// CInfoGameEventProxy Offsets
CInfoGameEventProxy.m_iszEventName = jsonData["CInfoGameEventProxy"]["m_iszEventName"];
CInfoGameEventProxy.m_flRange = jsonData["CInfoGameEventProxy"]["m_flRange"];

// Atribuições para CPointCamera
// CPointCamera Offsets
CPointCamera.m_FOV = jsonData["CPointCamera"]["m_FOV"];
CPointCamera.m_Resolution = jsonData["CPointCamera"]["m_Resolution"];
CPointCamera.m_bFogEnable = jsonData["CPointCamera"]["m_bFogEnable"];
CPointCamera.m_FogColor = jsonData["CPointCamera"]["m_FogColor"];
CPointCamera.m_flFogStart = jsonData["CPointCamera"]["m_flFogStart"];
CPointCamera.m_flFogEnd = jsonData["CPointCamera"]["m_flFogEnd"];
CPointCamera.m_flFogMaxDensity = jsonData["CPointCamera"]["m_flFogMaxDensity"];
CPointCamera.m_bActive = jsonData["CPointCamera"]["m_bActive"];
CPointCamera.m_bUseScreenAspectRatio = jsonData["CPointCamera"]["m_bUseScreenAspectRatio"];
CPointCamera.m_flAspectRatio = jsonData["CPointCamera"]["m_flAspectRatio"];
CPointCamera.m_bNoSky = jsonData["CPointCamera"]["m_bNoSky"];
CPointCamera.m_fBrightness = jsonData["CPointCamera"]["m_fBrightness"];
CPointCamera.m_flZFar = jsonData["CPointCamera"]["m_flZFar"];
CPointCamera.m_flZNear = jsonData["CPointCamera"]["m_flZNear"];
CPointCamera.m_bCanHLTVUse = jsonData["CPointCamera"]["m_bCanHLTVUse"];
CPointCamera.m_bAlignWithParent = jsonData["CPointCamera"]["m_bAlignWithParent"];
CPointCamera.m_bDofEnabled = jsonData["CPointCamera"]["m_bDofEnabled"];
CPointCamera.m_flDofNearBlurry = jsonData["CPointCamera"]["m_flDofNearBlurry"];
CPointCamera.m_flDofNearCrisp = jsonData["CPointCamera"]["m_flDofNearCrisp"];
CPointCamera.m_flDofFarCrisp = jsonData["CPointCamera"]["m_flDofFarCrisp"];
CPointCamera.m_flDofFarBlurry = jsonData["CPointCamera"]["m_flDofFarBlurry"];
CPointCamera.m_flDofTiltToGround = jsonData["CPointCamera"]["m_flDofTiltToGround"];
CPointCamera.m_TargetFOV = jsonData["CPointCamera"]["m_TargetFOV"];
CPointCamera.m_DegreesPerSecond = jsonData["CPointCamera"]["m_DegreesPerSecond"];
CPointCamera.m_bIsOn = jsonData["CPointCamera"]["m_bIsOn"];
CPointCamera.m_pNext = jsonData["CPointCamera"]["m_pNext"];

// Atribuições para CFuncLadder
// CFuncLadder Offsets
CFuncLadder.m_vecLadderDir = jsonData["CFuncLadder"]["m_vecLadderDir"];
CFuncLadder.m_Dismounts = jsonData["CFuncLadder"]["m_Dismounts"];
CFuncLadder.m_vecLocalTop = jsonData["CFuncLadder"]["m_vecLocalTop"];
CFuncLadder.m_vecPlayerMountPositionTop = jsonData["CFuncLadder"]["m_vecPlayerMountPositionTop"];
CFuncLadder.m_vecPlayerMountPositionBottom = jsonData["CFuncLadder"]["m_vecPlayerMountPositionBottom"];
CFuncLadder.m_flAutoRideSpeed = jsonData["CFuncLadder"]["m_flAutoRideSpeed"];
CFuncLadder.m_bDisabled = jsonData["CFuncLadder"]["m_bDisabled"];
CFuncLadder.m_bFakeLadder = jsonData["CFuncLadder"]["m_bFakeLadder"];
CFuncLadder.m_bHasSlack = jsonData["CFuncLadder"]["m_bHasSlack"];
CFuncLadder.m_surfacePropName = jsonData["CFuncLadder"]["m_surfacePropName"];
CFuncLadder.m_OnPlayerGotOnLadder = jsonData["CFuncLadder"]["m_OnPlayerGotOnLadder"];
CFuncLadder.m_OnPlayerGotOffLadder = jsonData["CFuncLadder"]["m_OnPlayerGotOffLadder"];

// Atribuições para CPathKeyFrame
// CPathKeyFrame Offsets
CPathKeyFrame.m_Origin = jsonData["CPathKeyFrame"]["m_Origin"];
CPathKeyFrame.m_Angles = jsonData["CPathKeyFrame"]["m_Angles"];
CPathKeyFrame.m_qAngle = jsonData["CPathKeyFrame"]["m_qAngle"];
CPathKeyFrame.m_iNextKey = jsonData["CPathKeyFrame"]["m_iNextKey"];
CPathKeyFrame.m_flNextTime = jsonData["CPathKeyFrame"]["m_flNextTime"];
CPathKeyFrame.m_pNextKey = jsonData["CPathKeyFrame"]["m_pNextKey"];
CPathKeyFrame.m_pPrevKey = jsonData["CPathKeyFrame"]["m_pPrevKey"];
CPathKeyFrame.m_flMoveSpeed = jsonData["CPathKeyFrame"]["m_flMoveSpeed"];

// Atribuições para CFuncInteractionLayerClip
// CFuncInteractionLayerClip Offsets
CFuncInteractionLayerClip.m_bDisabled = jsonData["CFuncInteractionLayerClip"]["m_bDisabled"];
CFuncInteractionLayerClip.m_iszInteractsAs = jsonData["CFuncInteractionLayerClip"]["m_iszInteractsAs"];
CFuncInteractionLayerClip.m_iszInteractsWith = jsonData["CFuncInteractionLayerClip"]["m_iszInteractsWith"];

// Atribuições para COrnamentProp
// COrnamentProp Offsets
COrnamentProp.m_initialOwner = jsonData["COrnamentProp"]["m_initialOwner"];

// Atribuições para CLogicGameEvent
// CLogicGameEvent Offsets
CLogicGameEvent.m_iszEventName = jsonData["CLogicGameEvent"]["m_iszEventName"];

// Atribuições para CEnvMuzzleFlash
// CEnvMuzzleFlash Offsets
CEnvMuzzleFlash.m_flScale = jsonData["CEnvMuzzleFlash"]["m_flScale"];
CEnvMuzzleFlash.m_iszParentAttachment = jsonData["CEnvMuzzleFlash"]["m_iszParentAttachment"];

// Atribuições para CPlayerSprayDecal
// CPlayerSprayDecal Offsets
CPlayerSprayDecal.m_nUniqueID = jsonData["CPlayerSprayDecal"]["m_nUniqueID"];
CPlayerSprayDecal.m_unAccountID = jsonData["CPlayerSprayDecal"]["m_unAccountID"];
CPlayerSprayDecal.m_unTraceID = jsonData["CPlayerSprayDecal"]["m_unTraceID"];
CPlayerSprayDecal.m_rtGcTime = jsonData["CPlayerSprayDecal"]["m_rtGcTime"];
CPlayerSprayDecal.m_vecEndPos = jsonData["CPlayerSprayDecal"]["m_vecEndPos"];
CPlayerSprayDecal.m_vecStart = jsonData["CPlayerSprayDecal"]["m_vecStart"];
CPlayerSprayDecal.m_vecLeft = jsonData["CPlayerSprayDecal"]["m_vecLeft"];
CPlayerSprayDecal.m_vecNormal = jsonData["CPlayerSprayDecal"]["m_vecNormal"];
CPlayerSprayDecal.m_nPlayer = jsonData["CPlayerSprayDecal"]["m_nPlayer"];
CPlayerSprayDecal.m_nEntity = jsonData["CPlayerSprayDecal"]["m_nEntity"];
CPlayerSprayDecal.m_nHitbox = jsonData["CPlayerSprayDecal"]["m_nHitbox"];
CPlayerSprayDecal.m_flCreationTime = jsonData["CPlayerSprayDecal"]["m_flCreationTime"];
CPlayerSprayDecal.m_nTintID = jsonData["CPlayerSprayDecal"]["m_nTintID"];
CPlayerSprayDecal.m_nVersion = jsonData["CPlayerSprayDecal"]["m_nVersion"];
CPlayerSprayDecal.m_ubSignature = jsonData["CPlayerSprayDecal"]["m_ubSignature"];

// Atribuições para CPhysicsSpring
// CPhysicsSpring Offsets
CPhysicsSpring.m_flFrequency = jsonData["CPhysicsSpring"]["m_flFrequency"];
CPhysicsSpring.m_flDampingRatio = jsonData["CPhysicsSpring"]["m_flDampingRatio"];
CPhysicsSpring.m_flRestLength = jsonData["CPhysicsSpring"]["m_flRestLength"];
CPhysicsSpring.m_nameAttachStart = jsonData["CPhysicsSpring"]["m_nameAttachStart"];
CPhysicsSpring.m_nameAttachEnd = jsonData["CPhysicsSpring"]["m_nameAttachEnd"];
CPhysicsSpring.m_start = jsonData["CPhysicsSpring"]["m_start"];
CPhysicsSpring.m_end = jsonData["CPhysicsSpring"]["m_end"];
CPhysicsSpring.m_teleportTick = jsonData["CPhysicsSpring"]["m_teleportTick"];

// Atribuições para CEnvLightProbeVolume
// CEnvLightProbeVolume Offsets
CEnvLightProbeVolume.m_Entity_hLightProbeTexture = jsonData["CEnvLightProbeVolume"]["m_Entity_hLightProbeTexture"];
CEnvLightProbeVolume.m_Entity_hLightProbeDirectLightIndicesTexture = jsonData["CEnvLightProbeVolume"]["m_Entity_hLightProbeDirectLightIndicesTexture"];
CEnvLightProbeVolume.m_Entity_hLightProbeDirectLightScalarsTexture = jsonData["CEnvLightProbeVolume"]["m_Entity_hLightProbeDirectLightScalarsTexture"];
CEnvLightProbeVolume.m_Entity_hLightProbeDirectLightShadowsTexture = jsonData["CEnvLightProbeVolume"]["m_Entity_hLightProbeDirectLightShadowsTexture"];
CEnvLightProbeVolume.m_Entity_vBoxMins = jsonData["CEnvLightProbeVolume"]["m_Entity_vBoxMins"];
CEnvLightProbeVolume.m_Entity_vBoxMaxs = jsonData["CEnvLightProbeVolume"]["m_Entity_vBoxMaxs"];
CEnvLightProbeVolume.m_Entity_bMoveable = jsonData["CEnvLightProbeVolume"]["m_Entity_bMoveable"];
CEnvLightProbeVolume.m_Entity_nHandshake = jsonData["CEnvLightProbeVolume"]["m_Entity_nHandshake"];
CEnvLightProbeVolume.m_Entity_nPriority = jsonData["CEnvLightProbeVolume"]["m_Entity_nPriority"];
CEnvLightProbeVolume.m_Entity_bStartDisabled = jsonData["CEnvLightProbeVolume"]["m_Entity_bStartDisabled"];
CEnvLightProbeVolume.m_Entity_nLightProbeSizeX = jsonData["CEnvLightProbeVolume"]["m_Entity_nLightProbeSizeX"];
CEnvLightProbeVolume.m_Entity_nLightProbeSizeY = jsonData["CEnvLightProbeVolume"]["m_Entity_nLightProbeSizeY"];
CEnvLightProbeVolume.m_Entity_nLightProbeSizeZ = jsonData["CEnvLightProbeVolume"]["m_Entity_nLightProbeSizeZ"];
CEnvLightProbeVolume.m_Entity_nLightProbeAtlasX = jsonData["CEnvLightProbeVolume"]["m_Entity_nLightProbeAtlasX"];
CEnvLightProbeVolume.m_Entity_nLightProbeAtlasY = jsonData["CEnvLightProbeVolume"]["m_Entity_nLightProbeAtlasY"];
CEnvLightProbeVolume.m_Entity_nLightProbeAtlasZ = jsonData["CEnvLightProbeVolume"]["m_Entity_nLightProbeAtlasZ"];
CEnvLightProbeVolume.m_Entity_bEnabled = jsonData["CEnvLightProbeVolume"]["m_Entity_bEnabled"];

// Atribuições para CScriptTriggerPush
// CScriptTriggerPush Offsets
CScriptTriggerPush.m_vExtent = jsonData["CScriptTriggerPush"]["m_vExtent"];

// Atribuições para CEnvEntityIgniter
// CEnvEntityIgniter Offsets
CEnvEntityIgniter.m_flLifetime = jsonData["CEnvEntityIgniter"]["m_flLifetime"];

// Atribuições para CFuncWall
// CFuncWall Offsets
CFuncWall.m_nState = jsonData["CFuncWall"]["m_nState"];

// Atribuições para CLogicAutosave
// CLogicAutosave Offsets
CLogicAutosave.m_bForceNewLevelUnit = jsonData["CLogicAutosave"]["m_bForceNewLevelUnit"];
CLogicAutosave.m_minHitPoints = jsonData["CLogicAutosave"]["m_minHitPoints"];
CLogicAutosave.m_minHitPointsToCommit = jsonData["CLogicAutosave"]["m_minHitPointsToCommit"];

// Atribuições para CSoundEventPathCornerEntity
// CSoundEventPathCornerEntity Offsets
CSoundEventPathCornerEntity.m_iszPathCorner = jsonData["CSoundEventPathCornerEntity"]["m_iszPathCorner"];
CSoundEventPathCornerEntity.m_iCountMax = jsonData["CSoundEventPathCornerEntity"]["m_iCountMax"];
CSoundEventPathCornerEntity.m_flDistanceMax = jsonData["CSoundEventPathCornerEntity"]["m_flDistanceMax"];
CSoundEventPathCornerEntity.m_flDistMaxSqr = jsonData["CSoundEventPathCornerEntity"]["m_flDistMaxSqr"];
CSoundEventPathCornerEntity.m_flDotProductMax = jsonData["CSoundEventPathCornerEntity"]["m_flDotProductMax"];
CSoundEventPathCornerEntity.m_bPlaying = jsonData["CSoundEventPathCornerEntity"]["m_bPlaying"];
CSoundEventPathCornerEntity.m_vecCornerPairsNetworked = jsonData["CSoundEventPathCornerEntity"]["m_vecCornerPairsNetworked"];

// Atribuições para CEnvSoundscapeProxy
// CEnvSoundscapeProxy Offsets
CEnvSoundscapeProxy.m_MainSoundscapeName = jsonData["CEnvSoundscapeProxy"]["m_MainSoundscapeName"];

// Atribuições para CSmokeGrenadeProjectile
// CSmokeGrenadeProjectile Offsets
CSmokeGrenadeProjectile.m_nSmokeEffectTickBegin = jsonData["CSmokeGrenadeProjectile"]["m_nSmokeEffectTickBegin"];
CSmokeGrenadeProjectile.m_bDidSmokeEffect = jsonData["CSmokeGrenadeProjectile"]["m_bDidSmokeEffect"];
CSmokeGrenadeProjectile.m_nRandomSeed = jsonData["CSmokeGrenadeProjectile"]["m_nRandomSeed"];
CSmokeGrenadeProjectile.m_vSmokeColor = jsonData["CSmokeGrenadeProjectile"]["m_vSmokeColor"];
CSmokeGrenadeProjectile.m_vSmokeDetonationPos = jsonData["CSmokeGrenadeProjectile"]["m_vSmokeDetonationPos"];
CSmokeGrenadeProjectile.m_VoxelFrameData = jsonData["CSmokeGrenadeProjectile"]["m_VoxelFrameData"];
CSmokeGrenadeProjectile.m_flLastBounce = jsonData["CSmokeGrenadeProjectile"]["m_flLastBounce"];
CSmokeGrenadeProjectile.m_fllastSimulationTime = jsonData["CSmokeGrenadeProjectile"]["m_fllastSimulationTime"];
CSmokeGrenadeProjectile.m_bExplodeFromInferno = jsonData["CSmokeGrenadeProjectile"]["m_bExplodeFromInferno"];

// Atribuições para CScriptTriggerMultiple
// CScriptTriggerMultiple Offsets
CScriptTriggerMultiple.m_vExtent = jsonData["CScriptTriggerMultiple"]["m_vExtent"];

// Atribuições para CSoundOpvarSetAutoRoomEntity
// CSoundOpvarSetAutoRoomEntity Offsets
CSoundOpvarSetAutoRoomEntity.m_traceResults = jsonData["CSoundOpvarSetAutoRoomEntity"]["m_traceResults"];
CSoundOpvarSetAutoRoomEntity.m_doorwayPairs = jsonData["CSoundOpvarSetAutoRoomEntity"]["m_doorwayPairs"];
CSoundOpvarSetAutoRoomEntity.m_flSize = jsonData["CSoundOpvarSetAutoRoomEntity"]["m_flSize"];
CSoundOpvarSetAutoRoomEntity.m_flHeightTolerance = jsonData["CSoundOpvarSetAutoRoomEntity"]["m_flHeightTolerance"];
CSoundOpvarSetAutoRoomEntity.m_flSizeSqr = jsonData["CSoundOpvarSetAutoRoomEntity"]["m_flSizeSqr"];

// Atribuições para FilterDamageType
// FilterDamageType Offsets
FilterDamageType.m_iDamageType = jsonData["FilterDamageType"]["m_iDamageType"];

// Atribuições para CCSBot
// CCSBot Offsets
CCSBot.m_eyePosition = jsonData["CCSBot"]["m_eyePosition"];
CCSBot.m_name = jsonData["CCSBot"]["m_name"];
CCSBot.m_combatRange = jsonData["CCSBot"]["m_combatRange"];
CCSBot.m_isRogue = jsonData["CCSBot"]["m_isRogue"];
CCSBot.m_rogueTimer = jsonData["CCSBot"]["m_rogueTimer"];
CCSBot.m_diedLastRound = jsonData["CCSBot"]["m_diedLastRound"];
CCSBot.m_safeTime = jsonData["CCSBot"]["m_safeTime"];
CCSBot.m_wasSafe = jsonData["CCSBot"]["m_wasSafe"];
CCSBot.m_blindFire = jsonData["CCSBot"]["m_blindFire"];
CCSBot.m_surpriseTimer = jsonData["CCSBot"]["m_surpriseTimer"];
CCSBot.m_bAllowActive = jsonData["CCSBot"]["m_bAllowActive"];
CCSBot.m_isFollowing = jsonData["CCSBot"]["m_isFollowing"];
CCSBot.m_leader = jsonData["CCSBot"]["m_leader"];
CCSBot.m_followTimestamp = jsonData["CCSBot"]["m_followTimestamp"];
CCSBot.m_allowAutoFollowTime = jsonData["CCSBot"]["m_allowAutoFollowTime"];
CCSBot.m_hurryTimer = jsonData["CCSBot"]["m_hurryTimer"];
CCSBot.m_alertTimer = jsonData["CCSBot"]["m_alertTimer"];
CCSBot.m_sneakTimer = jsonData["CCSBot"]["m_sneakTimer"];
CCSBot.m_panicTimer = jsonData["CCSBot"]["m_panicTimer"];
CCSBot.m_stateTimestamp = jsonData["CCSBot"]["m_stateTimestamp"];
CCSBot.m_isAttacking = jsonData["CCSBot"]["m_isAttacking"];
CCSBot.m_isOpeningDoor = jsonData["CCSBot"]["m_isOpeningDoor"];
CCSBot.m_taskEntity = jsonData["CCSBot"]["m_taskEntity"];
CCSBot.m_goalPosition = jsonData["CCSBot"]["m_goalPosition"];
CCSBot.m_goalEntity = jsonData["CCSBot"]["m_goalEntity"];
CCSBot.m_avoid = jsonData["CCSBot"]["m_avoid"];
CCSBot.m_avoidTimestamp = jsonData["CCSBot"]["m_avoidTimestamp"];
CCSBot.m_isStopping = jsonData["CCSBot"]["m_isStopping"];
CCSBot.m_hasVisitedEnemySpawn = jsonData["CCSBot"]["m_hasVisitedEnemySpawn"];
CCSBot.m_stillTimer = jsonData["CCSBot"]["m_stillTimer"];
CCSBot.m_bEyeAnglesUnderPathFinderControl = jsonData["CCSBot"]["m_bEyeAnglesUnderPathFinderControl"];
CCSBot.m_pathIndex = jsonData["CCSBot"]["m_pathIndex"];
CCSBot.m_areaEnteredTimestamp = jsonData["CCSBot"]["m_areaEnteredTimestamp"];
CCSBot.m_repathTimer = jsonData["CCSBot"]["m_repathTimer"];
CCSBot.m_avoidFriendTimer = jsonData["CCSBot"]["m_avoidFriendTimer"];
CCSBot.m_isFriendInTheWay = jsonData["CCSBot"]["m_isFriendInTheWay"];
CCSBot.m_politeTimer = jsonData["CCSBot"]["m_politeTimer"];
CCSBot.m_isWaitingBehindFriend = jsonData["CCSBot"]["m_isWaitingBehindFriend"];
CCSBot.m_pathLadderEnd = jsonData["CCSBot"]["m_pathLadderEnd"];
CCSBot.m_mustRunTimer = jsonData["CCSBot"]["m_mustRunTimer"];
CCSBot.m_waitTimer = jsonData["CCSBot"]["m_waitTimer"];
CCSBot.m_updateTravelDistanceTimer = jsonData["CCSBot"]["m_updateTravelDistanceTimer"];
CCSBot.m_playerTravelDistance = jsonData["CCSBot"]["m_playerTravelDistance"];
CCSBot.m_travelDistancePhase = jsonData["CCSBot"]["m_travelDistancePhase"];
CCSBot.m_hostageEscortCount = jsonData["CCSBot"]["m_hostageEscortCount"];
CCSBot.m_hostageEscortCountTimestamp = jsonData["CCSBot"]["m_hostageEscortCountTimestamp"];
CCSBot.m_desiredTeam = jsonData["CCSBot"]["m_desiredTeam"];
CCSBot.m_hasJoined = jsonData["CCSBot"]["m_hasJoined"];
CCSBot.m_isWaitingForHostage = jsonData["CCSBot"]["m_isWaitingForHostage"];
CCSBot.m_inhibitWaitingForHostageTimer = jsonData["CCSBot"]["m_inhibitWaitingForHostageTimer"];
CCSBot.m_waitForHostageTimer = jsonData["CCSBot"]["m_waitForHostageTimer"];
CCSBot.m_noisePosition = jsonData["CCSBot"]["m_noisePosition"];
CCSBot.m_noiseTravelDistance = jsonData["CCSBot"]["m_noiseTravelDistance"];
CCSBot.m_noiseTimestamp = jsonData["CCSBot"]["m_noiseTimestamp"];
CCSBot.m_noiseSource = jsonData["CCSBot"]["m_noiseSource"];
CCSBot.m_noiseBendTimer = jsonData["CCSBot"]["m_noiseBendTimer"];
CCSBot.m_bentNoisePosition = jsonData["CCSBot"]["m_bentNoisePosition"];
CCSBot.m_bendNoisePositionValid = jsonData["CCSBot"]["m_bendNoisePositionValid"];
CCSBot.m_lookAroundStateTimestamp = jsonData["CCSBot"]["m_lookAroundStateTimestamp"];
CCSBot.m_lookAheadAngle = jsonData["CCSBot"]["m_lookAheadAngle"];
CCSBot.m_forwardAngle = jsonData["CCSBot"]["m_forwardAngle"];
CCSBot.m_inhibitLookAroundTimestamp = jsonData["CCSBot"]["m_inhibitLookAroundTimestamp"];
CCSBot.m_lookAtSpot = jsonData["CCSBot"]["m_lookAtSpot"];
CCSBot.m_lookAtSpotDuration = jsonData["CCSBot"]["m_lookAtSpotDuration"];
CCSBot.m_lookAtSpotTimestamp = jsonData["CCSBot"]["m_lookAtSpotTimestamp"];
CCSBot.m_lookAtSpotAngleTolerance = jsonData["CCSBot"]["m_lookAtSpotAngleTolerance"];
CCSBot.m_lookAtSpotClearIfClose = jsonData["CCSBot"]["m_lookAtSpotClearIfClose"];
CCSBot.m_lookAtSpotAttack = jsonData["CCSBot"]["m_lookAtSpotAttack"];
CCSBot.m_lookAtDesc = jsonData["CCSBot"]["m_lookAtDesc"];
CCSBot.m_peripheralTimestamp = jsonData["CCSBot"]["m_peripheralTimestamp"];
CCSBot.m_approachPointCount = jsonData["CCSBot"]["m_approachPointCount"];
CCSBot.m_approachPointViewPosition = jsonData["CCSBot"]["m_approachPointViewPosition"];
CCSBot.m_viewSteadyTimer = jsonData["CCSBot"]["m_viewSteadyTimer"];
CCSBot.m_tossGrenadeTimer = jsonData["CCSBot"]["m_tossGrenadeTimer"];
CCSBot.m_isAvoidingGrenade = jsonData["CCSBot"]["m_isAvoidingGrenade"];
CCSBot.m_spotCheckTimestamp = jsonData["CCSBot"]["m_spotCheckTimestamp"];
CCSBot.m_checkedHidingSpotCount = jsonData["CCSBot"]["m_checkedHidingSpotCount"];
CCSBot.m_lookPitch = jsonData["CCSBot"]["m_lookPitch"];
CCSBot.m_lookPitchVel = jsonData["CCSBot"]["m_lookPitchVel"];
CCSBot.m_lookYaw = jsonData["CCSBot"]["m_lookYaw"];
CCSBot.m_lookYawVel = jsonData["CCSBot"]["m_lookYawVel"];
CCSBot.m_targetSpot = jsonData["CCSBot"]["m_targetSpot"];
CCSBot.m_targetSpotVelocity = jsonData["CCSBot"]["m_targetSpotVelocity"];
CCSBot.m_targetSpotPredicted = jsonData["CCSBot"]["m_targetSpotPredicted"];
CCSBot.m_aimError = jsonData["CCSBot"]["m_aimError"];
CCSBot.m_aimGoal = jsonData["CCSBot"]["m_aimGoal"];
CCSBot.m_targetSpotTime = jsonData["CCSBot"]["m_targetSpotTime"];
CCSBot.m_aimFocus = jsonData["CCSBot"]["m_aimFocus"];
CCSBot.m_aimFocusInterval = jsonData["CCSBot"]["m_aimFocusInterval"];
CCSBot.m_aimFocusNextUpdate = jsonData["CCSBot"]["m_aimFocusNextUpdate"];
CCSBot.m_ignoreEnemiesTimer = jsonData["CCSBot"]["m_ignoreEnemiesTimer"];
CCSBot.m_enemy = jsonData["CCSBot"]["m_enemy"];
CCSBot.m_isEnemyVisible = jsonData["CCSBot"]["m_isEnemyVisible"];
CCSBot.m_visibleEnemyParts = jsonData["CCSBot"]["m_visibleEnemyParts"];
CCSBot.m_lastEnemyPosition = jsonData["CCSBot"]["m_lastEnemyPosition"];
CCSBot.m_lastSawEnemyTimestamp = jsonData["CCSBot"]["m_lastSawEnemyTimestamp"];
CCSBot.m_firstSawEnemyTimestamp = jsonData["CCSBot"]["m_firstSawEnemyTimestamp"];
CCSBot.m_currentEnemyAcquireTimestamp = jsonData["CCSBot"]["m_currentEnemyAcquireTimestamp"];
CCSBot.m_enemyDeathTimestamp = jsonData["CCSBot"]["m_enemyDeathTimestamp"];
CCSBot.m_friendDeathTimestamp = jsonData["CCSBot"]["m_friendDeathTimestamp"];
CCSBot.m_isLastEnemyDead = jsonData["CCSBot"]["m_isLastEnemyDead"];
CCSBot.m_nearbyEnemyCount = jsonData["CCSBot"]["m_nearbyEnemyCount"];
CCSBot.m_bomber = jsonData["CCSBot"]["m_bomber"];
CCSBot.m_nearbyFriendCount = jsonData["CCSBot"]["m_nearbyFriendCount"];
CCSBot.m_closestVisibleFriend = jsonData["CCSBot"]["m_closestVisibleFriend"];
CCSBot.m_closestVisibleHumanFriend = jsonData["CCSBot"]["m_closestVisibleHumanFriend"];
CCSBot.m_attentionInterval = jsonData["CCSBot"]["m_attentionInterval"];
CCSBot.m_attacker = jsonData["CCSBot"]["m_attacker"];
CCSBot.m_attackedTimestamp = jsonData["CCSBot"]["m_attackedTimestamp"];
CCSBot.m_burnedByFlamesTimer = jsonData["CCSBot"]["m_burnedByFlamesTimer"];
CCSBot.m_lastVictimID = jsonData["CCSBot"]["m_lastVictimID"];
CCSBot.m_isAimingAtEnemy = jsonData["CCSBot"]["m_isAimingAtEnemy"];
CCSBot.m_isRapidFiring = jsonData["CCSBot"]["m_isRapidFiring"];
CCSBot.m_equipTimer = jsonData["CCSBot"]["m_equipTimer"];
CCSBot.m_zoomTimer = jsonData["CCSBot"]["m_zoomTimer"];
CCSBot.m_fireWeaponTimestamp = jsonData["CCSBot"]["m_fireWeaponTimestamp"];
CCSBot.m_lookForWeaponsOnGroundTimer = jsonData["CCSBot"]["m_lookForWeaponsOnGroundTimer"];
CCSBot.m_bIsSleeping = jsonData["CCSBot"]["m_bIsSleeping"];
CCSBot.m_isEnemySniperVisible = jsonData["CCSBot"]["m_isEnemySniperVisible"];
CCSBot.m_sawEnemySniperTimer = jsonData["CCSBot"]["m_sawEnemySniperTimer"];
CCSBot.m_enemyQueueIndex = jsonData["CCSBot"]["m_enemyQueueIndex"];
CCSBot.m_enemyQueueCount = jsonData["CCSBot"]["m_enemyQueueCount"];
CCSBot.m_enemyQueueAttendIndex = jsonData["CCSBot"]["m_enemyQueueAttendIndex"];
CCSBot.m_isStuck = jsonData["CCSBot"]["m_isStuck"];
CCSBot.m_stuckTimestamp = jsonData["CCSBot"]["m_stuckTimestamp"];
CCSBot.m_stuckSpot = jsonData["CCSBot"]["m_stuckSpot"];
CCSBot.m_wiggleTimer = jsonData["CCSBot"]["m_wiggleTimer"];
CCSBot.m_stuckJumpTimer = jsonData["CCSBot"]["m_stuckJumpTimer"];
CCSBot.m_nextCleanupCheckTimestamp = jsonData["CCSBot"]["m_nextCleanupCheckTimestamp"];
CCSBot.m_avgVel = jsonData["CCSBot"]["m_avgVel"];
CCSBot.m_avgVelIndex = jsonData["CCSBot"]["m_avgVelIndex"];
CCSBot.m_avgVelCount = jsonData["CCSBot"]["m_avgVelCount"];
CCSBot.m_lastOrigin = jsonData["CCSBot"]["m_lastOrigin"];
CCSBot.m_lastRadioRecievedTimestamp = jsonData["CCSBot"]["m_lastRadioRecievedTimestamp"];
CCSBot.m_lastRadioSentTimestamp = jsonData["CCSBot"]["m_lastRadioSentTimestamp"];
CCSBot.m_radioSubject = jsonData["CCSBot"]["m_radioSubject"];
CCSBot.m_radioPosition = jsonData["CCSBot"]["m_radioPosition"];
CCSBot.m_voiceEndTimestamp = jsonData["CCSBot"]["m_voiceEndTimestamp"];
CCSBot.m_lastValidReactionQueueFrame = jsonData["CCSBot"]["m_lastValidReactionQueueFrame"];

// Atribuições para CPhysMotor
// CPhysMotor Offsets
CPhysMotor.m_nameAttach = jsonData["CPhysMotor"]["m_nameAttach"];
CPhysMotor.m_hAttachedObject = jsonData["CPhysMotor"]["m_hAttachedObject"];
CPhysMotor.m_spinUp = jsonData["CPhysMotor"]["m_spinUp"];
CPhysMotor.m_additionalAcceleration = jsonData["CPhysMotor"]["m_additionalAcceleration"];
CPhysMotor.m_angularAcceleration = jsonData["CPhysMotor"]["m_angularAcceleration"];
CPhysMotor.m_lastTime = jsonData["CPhysMotor"]["m_lastTime"];
CPhysMotor.m_motor = jsonData["CPhysMotor"]["m_motor"];

// Atribuições para CSoundAreaEntityBase
// CSoundAreaEntityBase Offsets
CSoundAreaEntityBase.m_bDisabled = jsonData["CSoundAreaEntityBase"]["m_bDisabled"];
CSoundAreaEntityBase.m_iszSoundAreaType = jsonData["CSoundAreaEntityBase"]["m_iszSoundAreaType"];
CSoundAreaEntityBase.m_vPos = jsonData["CSoundAreaEntityBase"]["m_vPos"];

// Atribuições para CCSPlayer_UseServices
// CCSPlayer_UseServices Offsets
CCSPlayer_UseServices.m_hLastKnownUseEntity = jsonData["CCSPlayer_UseServices"]["m_hLastKnownUseEntity"];
CCSPlayer_UseServices.m_flLastUseTimeStamp = jsonData["CCSPlayer_UseServices"]["m_flLastUseTimeStamp"];
CCSPlayer_UseServices.m_flTimeLastUsedWindow = jsonData["CCSPlayer_UseServices"]["m_flTimeLastUsedWindow"];

// Atribuições para CTriggerHurt
// CTriggerHurt Offsets
CTriggerHurt.m_flOriginalDamage = jsonData["CTriggerHurt"]["m_flOriginalDamage"];
CTriggerHurt.m_flDamage = jsonData["CTriggerHurt"]["m_flDamage"];
CTriggerHurt.m_flDamageCap = jsonData["CTriggerHurt"]["m_flDamageCap"];
CTriggerHurt.m_flLastDmgTime = jsonData["CTriggerHurt"]["m_flLastDmgTime"];
CTriggerHurt.m_flForgivenessDelay = jsonData["CTriggerHurt"]["m_flForgivenessDelay"];
CTriggerHurt.m_bitsDamageInflict = jsonData["CTriggerHurt"]["m_bitsDamageInflict"];
CTriggerHurt.m_damageModel = jsonData["CTriggerHurt"]["m_damageModel"];
CTriggerHurt.m_bNoDmgForce = jsonData["CTriggerHurt"]["m_bNoDmgForce"];
CTriggerHurt.m_vDamageForce = jsonData["CTriggerHurt"]["m_vDamageForce"];
CTriggerHurt.m_thinkAlways = jsonData["CTriggerHurt"]["m_thinkAlways"];
CTriggerHurt.m_hurtThinkPeriod = jsonData["CTriggerHurt"]["m_hurtThinkPeriod"];
CTriggerHurt.m_OnHurt = jsonData["CTriggerHurt"]["m_OnHurt"];
CTriggerHurt.m_OnHurtPlayer = jsonData["CTriggerHurt"]["m_OnHurtPlayer"];
CTriggerHurt.m_hurtEntities = jsonData["CTriggerHurt"]["m_hurtEntities"];

// Atribuições para CPhysConstraint
// CPhysConstraint Offsets
CPhysConstraint.m_nameAttach1 = jsonData["CPhysConstraint"]["m_nameAttach1"];
CPhysConstraint.m_nameAttach2 = jsonData["CPhysConstraint"]["m_nameAttach2"];
CPhysConstraint.m_hAttach1 = jsonData["CPhysConstraint"]["m_hAttach1"];
CPhysConstraint.m_hAttach2 = jsonData["CPhysConstraint"]["m_hAttach2"];
CPhysConstraint.m_nameAttachment1 = jsonData["CPhysConstraint"]["m_nameAttachment1"];
CPhysConstraint.m_nameAttachment2 = jsonData["CPhysConstraint"]["m_nameAttachment2"];
CPhysConstraint.m_breakSound = jsonData["CPhysConstraint"]["m_breakSound"];
CPhysConstraint.m_forceLimit = jsonData["CPhysConstraint"]["m_forceLimit"];
CPhysConstraint.m_torqueLimit = jsonData["CPhysConstraint"]["m_torqueLimit"];
CPhysConstraint.m_teleportTick = jsonData["CPhysConstraint"]["m_teleportTick"];
CPhysConstraint.m_minTeleportDistance = jsonData["CPhysConstraint"]["m_minTeleportDistance"];
CPhysConstraint.m_bSnapObjectPositions = jsonData["CPhysConstraint"]["m_bSnapObjectPositions"];
CPhysConstraint.m_OnBreak = jsonData["CPhysConstraint"]["m_OnBreak"];

// Atribuições para CMapVetoPickController
// CMapVetoPickController Offsets
CMapVetoPickController.m_bPlayedIntroVcd = jsonData["CMapVetoPickController"]["m_bPlayedIntroVcd"];
CMapVetoPickController.m_bNeedToPlayFiveSecondsRemaining = jsonData["CMapVetoPickController"]["m_bNeedToPlayFiveSecondsRemaining"];
CMapVetoPickController.m_dblPreMatchDraftSequenceTime = jsonData["CMapVetoPickController"]["m_dblPreMatchDraftSequenceTime"];
CMapVetoPickController.m_bPreMatchDraftStateChanged = jsonData["CMapVetoPickController"]["m_bPreMatchDraftStateChanged"];
CMapVetoPickController.m_nDraftType = jsonData["CMapVetoPickController"]["m_nDraftType"];
CMapVetoPickController.m_nTeamWinningCoinToss = jsonData["CMapVetoPickController"]["m_nTeamWinningCoinToss"];
CMapVetoPickController.m_nTeamWithFirstChoice = jsonData["CMapVetoPickController"]["m_nTeamWithFirstChoice"];
CMapVetoPickController.m_nVoteMapIdsList = jsonData["CMapVetoPickController"]["m_nVoteMapIdsList"];
CMapVetoPickController.m_nAccountIDs = jsonData["CMapVetoPickController"]["m_nAccountIDs"];
CMapVetoPickController.m_nMapId0 = jsonData["CMapVetoPickController"]["m_nMapId0"];
CMapVetoPickController.m_nMapId1 = jsonData["CMapVetoPickController"]["m_nMapId1"];
CMapVetoPickController.m_nMapId2 = jsonData["CMapVetoPickController"]["m_nMapId2"];
CMapVetoPickController.m_nMapId3 = jsonData["CMapVetoPickController"]["m_nMapId3"];
CMapVetoPickController.m_nMapId4 = jsonData["CMapVetoPickController"]["m_nMapId4"];
CMapVetoPickController.m_nMapId5 = jsonData["CMapVetoPickController"]["m_nMapId5"];
CMapVetoPickController.m_nStartingSide0 = jsonData["CMapVetoPickController"]["m_nStartingSide0"];
CMapVetoPickController.m_nCurrentPhase = jsonData["CMapVetoPickController"]["m_nCurrentPhase"];
CMapVetoPickController.m_nPhaseStartTick = jsonData["CMapVetoPickController"]["m_nPhaseStartTick"];
CMapVetoPickController.m_nPhaseDurationTicks = jsonData["CMapVetoPickController"]["m_nPhaseDurationTicks"];
CMapVetoPickController.m_OnMapVetoed = jsonData["CMapVetoPickController"]["m_OnMapVetoed"];
CMapVetoPickController.m_OnMapPicked = jsonData["CMapVetoPickController"]["m_OnMapPicked"];
CMapVetoPickController.m_OnSidesPicked = jsonData["CMapVetoPickController"]["m_OnSidesPicked"];
CMapVetoPickController.m_OnNewPhaseStarted = jsonData["CMapVetoPickController"]["m_OnNewPhaseStarted"];
CMapVetoPickController.m_OnLevelTransition = jsonData["CMapVetoPickController"]["m_OnLevelTransition"];

// Atribuições para CSoundEnt
// CSoundEnt Offsets
CSoundEnt.m_iFreeSound = jsonData["CSoundEnt"]["m_iFreeSound"];
CSoundEnt.m_iActiveSound = jsonData["CSoundEnt"]["m_iActiveSound"];
CSoundEnt.m_cLastActiveSounds = jsonData["CSoundEnt"]["m_cLastActiveSounds"];
CSoundEnt.m_SoundPool = jsonData["CSoundEnt"]["m_SoundPool"];

// Atribuições para CTriggerSave
// CTriggerSave Offsets
CTriggerSave.m_bForceNewLevelUnit = jsonData["CTriggerSave"]["m_bForceNewLevelUnit"];
CTriggerSave.m_fDangerousTimer = jsonData["CTriggerSave"]["m_fDangerousTimer"];
CTriggerSave.m_minHitPoints = jsonData["CTriggerSave"]["m_minHitPoints"];

// Atribuições para CPhysWheelConstraint
// CPhysWheelConstraint Offsets
CPhysWheelConstraint.m_flSuspensionFrequency = jsonData["CPhysWheelConstraint"]["m_flSuspensionFrequency"];
CPhysWheelConstraint.m_flSuspensionDampingRatio = jsonData["CPhysWheelConstraint"]["m_flSuspensionDampingRatio"];
CPhysWheelConstraint.m_flSuspensionHeightOffset = jsonData["CPhysWheelConstraint"]["m_flSuspensionHeightOffset"];
CPhysWheelConstraint.m_bEnableSuspensionLimit = jsonData["CPhysWheelConstraint"]["m_bEnableSuspensionLimit"];
CPhysWheelConstraint.m_flMinSuspensionOffset = jsonData["CPhysWheelConstraint"]["m_flMinSuspensionOffset"];
CPhysWheelConstraint.m_flMaxSuspensionOffset = jsonData["CPhysWheelConstraint"]["m_flMaxSuspensionOffset"];
CPhysWheelConstraint.m_bEnableSteeringLimit = jsonData["CPhysWheelConstraint"]["m_bEnableSteeringLimit"];
CPhysWheelConstraint.m_flMinSteeringAngle = jsonData["CPhysWheelConstraint"]["m_flMinSteeringAngle"];
CPhysWheelConstraint.m_flMaxSteeringAngle = jsonData["CPhysWheelConstraint"]["m_flMaxSteeringAngle"];
CPhysWheelConstraint.m_flSteeringAxisFriction = jsonData["CPhysWheelConstraint"]["m_flSteeringAxisFriction"];
CPhysWheelConstraint.m_flSpinAxisFriction = jsonData["CPhysWheelConstraint"]["m_flSpinAxisFriction"];

// Atribuições para CPhysFixed
// CPhysFixed Offsets
CPhysFixed.m_flLinearFrequency = jsonData["CPhysFixed"]["m_flLinearFrequency"];
CPhysFixed.m_flLinearDampingRatio = jsonData["CPhysFixed"]["m_flLinearDampingRatio"];
CPhysFixed.m_flAngularFrequency = jsonData["CPhysFixed"]["m_flAngularFrequency"];
CPhysFixed.m_flAngularDampingRatio = jsonData["CPhysFixed"]["m_flAngularDampingRatio"];
CPhysFixed.m_bEnableLinearConstraint = jsonData["CPhysFixed"]["m_bEnableLinearConstraint"];
CPhysFixed.m_bEnableAngularConstraint = jsonData["CPhysFixed"]["m_bEnableAngularConstraint"];

// Atribuições para CEnvSoundscape
// CEnvSoundscape Offsets
CEnvSoundscape.m_OnPlay = jsonData["CEnvSoundscape"]["m_OnPlay"];
CEnvSoundscape.m_flRadius = jsonData["CEnvSoundscape"]["m_flRadius"];
CEnvSoundscape.m_soundscapeName = jsonData["CEnvSoundscape"]["m_soundscapeName"];
CEnvSoundscape.m_soundEventName = jsonData["CEnvSoundscape"]["m_soundEventName"];
CEnvSoundscape.m_bOverrideWithEvent = jsonData["CEnvSoundscape"]["m_bOverrideWithEvent"];
CEnvSoundscape.m_soundscapeIndex = jsonData["CEnvSoundscape"]["m_soundscapeIndex"];
CEnvSoundscape.m_soundscapeEntityListId = jsonData["CEnvSoundscape"]["m_soundscapeEntityListId"];
CEnvSoundscape.m_soundEventHash = jsonData["CEnvSoundscape"]["m_soundEventHash"];
CEnvSoundscape.m_positionNames = jsonData["CEnvSoundscape"]["m_positionNames"];
CEnvSoundscape.m_hProxySoundscape = jsonData["CEnvSoundscape"]["m_hProxySoundscape"];
CEnvSoundscape.m_bDisabled = jsonData["CEnvSoundscape"]["m_bDisabled"];

// Atribuições para CEnvLaser
// CEnvLaser Offsets
CEnvLaser.m_iszLaserTarget = jsonData["CEnvLaser"]["m_iszLaserTarget"];
CEnvLaser.m_pSprite = jsonData["CEnvLaser"]["m_pSprite"];
CEnvLaser.m_iszSpriteName = jsonData["CEnvLaser"]["m_iszSpriteName"];
CEnvLaser.m_firePosition = jsonData["CEnvLaser"]["m_firePosition"];
CEnvLaser.m_flStartFrame = jsonData["CEnvLaser"]["m_flStartFrame"];

// Atribuições para CPhysPulley
// CPhysPulley Offsets
CPhysPulley.m_position2 = jsonData["CPhysPulley"]["m_position2"];
CPhysPulley.m_offset = jsonData["CPhysPulley"]["m_offset"];
CPhysPulley.m_addLength = jsonData["CPhysPulley"]["m_addLength"];
CPhysPulley.m_gearRatio = jsonData["CPhysPulley"]["m_gearRatio"];

// Atribuições para CBasePlayerWeapon
// CBasePlayerWeapon Offsets
CBasePlayerWeapon.m_nNextPrimaryAttackTick = jsonData["CBasePlayerWeapon"]["m_nNextPrimaryAttackTick"];
CBasePlayerWeapon.m_flNextPrimaryAttackTickRatio = jsonData["CBasePlayerWeapon"]["m_flNextPrimaryAttackTickRatio"];
CBasePlayerWeapon.m_nNextSecondaryAttackTick = jsonData["CBasePlayerWeapon"]["m_nNextSecondaryAttackTick"];
CBasePlayerWeapon.m_flNextSecondaryAttackTickRatio = jsonData["CBasePlayerWeapon"]["m_flNextSecondaryAttackTickRatio"];
CBasePlayerWeapon.m_iClip1 = jsonData["CBasePlayerWeapon"]["m_iClip1"];
CBasePlayerWeapon.m_iClip2 = jsonData["CBasePlayerWeapon"]["m_iClip2"];
CBasePlayerWeapon.m_pReserveAmmo = jsonData["CBasePlayerWeapon"]["m_pReserveAmmo"];
CBasePlayerWeapon.m_OnPlayerUse = jsonData["CBasePlayerWeapon"]["m_OnPlayerUse"];

// Atribuições para CFish
// CFish Offsets
CFish.m_pool = jsonData["CFish"]["m_pool"];
CFish.m_id = jsonData["CFish"]["m_id"];
CFish.m_x = jsonData["CFish"]["m_x"];
CFish.m_y = jsonData["CFish"]["m_y"];
CFish.m_z = jsonData["CFish"]["m_z"];
CFish.m_angle = jsonData["CFish"]["m_angle"];
CFish.m_angleChange = jsonData["CFish"]["m_angleChange"];
CFish.m_forward = jsonData["CFish"]["m_forward"];
CFish.m_perp = jsonData["CFish"]["m_perp"];
CFish.m_poolOrigin = jsonData["CFish"]["m_poolOrigin"];
CFish.m_waterLevel = jsonData["CFish"]["m_waterLevel"];
CFish.m_speed = jsonData["CFish"]["m_speed"];
CFish.m_desiredSpeed = jsonData["CFish"]["m_desiredSpeed"];
CFish.m_calmSpeed = jsonData["CFish"]["m_calmSpeed"];
CFish.m_panicSpeed = jsonData["CFish"]["m_panicSpeed"];
CFish.m_avoidRange = jsonData["CFish"]["m_avoidRange"];
CFish.m_turnTimer = jsonData["CFish"]["m_turnTimer"];
CFish.m_turnClockwise = jsonData["CFish"]["m_turnClockwise"];
CFish.m_goTimer = jsonData["CFish"]["m_goTimer"];
CFish.m_moveTimer = jsonData["CFish"]["m_moveTimer"];
CFish.m_panicTimer = jsonData["CFish"]["m_panicTimer"];
CFish.m_disperseTimer = jsonData["CFish"]["m_disperseTimer"];
CFish.m_proximityTimer = jsonData["CFish"]["m_proximityTimer"];
CFish.m_visible = jsonData["CFish"]["m_visible"];

// Atribuições para CEnvFireSource
// CEnvFireSource Offsets
CEnvFireSource.m_bEnabled = jsonData["CEnvFireSource"]["m_bEnabled"];
CEnvFireSource.m_radius = jsonData["CEnvFireSource"]["m_radius"];
CEnvFireSource.m_damage = jsonData["CEnvFireSource"]["m_damage"];

// Atribuições para CTriggerGameEvent
// CTriggerGameEvent Offsets
CTriggerGameEvent.m_strStartTouchEventName = jsonData["CTriggerGameEvent"]["m_strStartTouchEventName"];
CTriggerGameEvent.m_strEndTouchEventName = jsonData["CTriggerGameEvent"]["m_strEndTouchEventName"];
CTriggerGameEvent.m_strTriggerID = jsonData["CTriggerGameEvent"]["m_strTriggerID"];

// Atribuições para CPhysSlideConstraint
// CPhysSlideConstraint Offsets
CPhysSlideConstraint.m_axisEnd = jsonData["CPhysSlideConstraint"]["m_axisEnd"];
CPhysSlideConstraint.m_slideFriction = jsonData["CPhysSlideConstraint"]["m_slideFriction"];
CPhysSlideConstraint.m_systemLoadScale = jsonData["CPhysSlideConstraint"]["m_systemLoadScale"];
CPhysSlideConstraint.m_initialOffset = jsonData["CPhysSlideConstraint"]["m_initialOffset"];
CPhysSlideConstraint.m_bEnableLinearConstraint = jsonData["CPhysSlideConstraint"]["m_bEnableLinearConstraint"];
CPhysSlideConstraint.m_bEnableAngularConstraint = jsonData["CPhysSlideConstraint"]["m_bEnableAngularConstraint"];
CPhysSlideConstraint.m_flMotorFrequency = jsonData["CPhysSlideConstraint"]["m_flMotorFrequency"];
CPhysSlideConstraint.m_flMotorDampingRatio = jsonData["CPhysSlideConstraint"]["m_flMotorDampingRatio"];
CPhysSlideConstraint.m_bUseEntityPivot = jsonData["CPhysSlideConstraint"]["m_bUseEntityPivot"];
CPhysSlideConstraint.m_soundInfo = jsonData["CPhysSlideConstraint"]["m_soundInfo"];

// Atribuições para CDebugHistory
// CDebugHistory Offsets
CDebugHistory.m_nNpcEvents = jsonData["CDebugHistory"]["m_nNpcEvents"];

// Atribuições para CLightEntity
// CLightEntity Offsets
CLightEntity.m_CLightComponent = jsonData["CLightEntity"]["m_CLightComponent"];

// Atribuições para CFuncRotating
// CFuncRotating Offsets
CFuncRotating.m_OnStopped = jsonData["CFuncRotating"]["m_OnStopped"];
CFuncRotating.m_OnStarted = jsonData["CFuncRotating"]["m_OnStarted"];
CFuncRotating.m_OnReachedStart = jsonData["CFuncRotating"]["m_OnReachedStart"];
CFuncRotating.m_localRotationVector = jsonData["CFuncRotating"]["m_localRotationVector"];
CFuncRotating.m_flFanFriction = jsonData["CFuncRotating"]["m_flFanFriction"];
CFuncRotating.m_flAttenuation = jsonData["CFuncRotating"]["m_flAttenuation"];
CFuncRotating.m_flVolume = jsonData["CFuncRotating"]["m_flVolume"];
CFuncRotating.m_flTargetSpeed = jsonData["CFuncRotating"]["m_flTargetSpeed"];
CFuncRotating.m_flMaxSpeed = jsonData["CFuncRotating"]["m_flMaxSpeed"];
CFuncRotating.m_flBlockDamage = jsonData["CFuncRotating"]["m_flBlockDamage"];
CFuncRotating.m_NoiseRunning = jsonData["CFuncRotating"]["m_NoiseRunning"];
CFuncRotating.m_bReversed = jsonData["CFuncRotating"]["m_bReversed"];
CFuncRotating.m_bAccelDecel = jsonData["CFuncRotating"]["m_bAccelDecel"];
CFuncRotating.m_prevLocalAngles = jsonData["CFuncRotating"]["m_prevLocalAngles"];
CFuncRotating.m_angStart = jsonData["CFuncRotating"]["m_angStart"];
CFuncRotating.m_bStopAtStartPos = jsonData["CFuncRotating"]["m_bStopAtStartPos"];
CFuncRotating.m_vecClientOrigin = jsonData["CFuncRotating"]["m_vecClientOrigin"];
CFuncRotating.m_vecClientAngles = jsonData["CFuncRotating"]["m_vecClientAngles"];

// Atribuições para CBaseCSGrenadeProjectile
// CBaseCSGrenadeProjectile Offsets
CBaseCSGrenadeProjectile.m_vInitialPosition = jsonData["CBaseCSGrenadeProjectile"]["m_vInitialPosition"];
CBaseCSGrenadeProjectile.m_vInitialVelocity = jsonData["CBaseCSGrenadeProjectile"]["m_vInitialVelocity"];
CBaseCSGrenadeProjectile.m_nBounces = jsonData["CBaseCSGrenadeProjectile"]["m_nBounces"];
CBaseCSGrenadeProjectile.m_nExplodeEffectIndex = jsonData["CBaseCSGrenadeProjectile"]["m_nExplodeEffectIndex"];
CBaseCSGrenadeProjectile.m_nExplodeEffectTickBegin = jsonData["CBaseCSGrenadeProjectile"]["m_nExplodeEffectTickBegin"];
CBaseCSGrenadeProjectile.m_vecExplodeEffectOrigin = jsonData["CBaseCSGrenadeProjectile"]["m_vecExplodeEffectOrigin"];
CBaseCSGrenadeProjectile.m_flSpawnTime = jsonData["CBaseCSGrenadeProjectile"]["m_flSpawnTime"];
CBaseCSGrenadeProjectile.m_unOGSExtraFlags = jsonData["CBaseCSGrenadeProjectile"]["m_unOGSExtraFlags"];
CBaseCSGrenadeProjectile.m_bDetonationRecorded = jsonData["CBaseCSGrenadeProjectile"]["m_bDetonationRecorded"];
CBaseCSGrenadeProjectile.m_nItemIndex = jsonData["CBaseCSGrenadeProjectile"]["m_nItemIndex"];
CBaseCSGrenadeProjectile.m_vecOriginalSpawnLocation = jsonData["CBaseCSGrenadeProjectile"]["m_vecOriginalSpawnLocation"];
CBaseCSGrenadeProjectile.m_flLastBounceSoundTime = jsonData["CBaseCSGrenadeProjectile"]["m_flLastBounceSoundTime"];
CBaseCSGrenadeProjectile.m_vecGrenadeSpin = jsonData["CBaseCSGrenadeProjectile"]["m_vecGrenadeSpin"];
CBaseCSGrenadeProjectile.m_vecLastHitSurfaceNormal = jsonData["CBaseCSGrenadeProjectile"]["m_vecLastHitSurfaceNormal"];
CBaseCSGrenadeProjectile.m_nTicksAtZeroVelocity = jsonData["CBaseCSGrenadeProjectile"]["m_nTicksAtZeroVelocity"];
CBaseCSGrenadeProjectile.m_bHasEverHitPlayer = jsonData["CBaseCSGrenadeProjectile"]["m_bHasEverHitPlayer"];
CBaseCSGrenadeProjectile.m_bClearFromPlayers = jsonData["CBaseCSGrenadeProjectile"]["m_bClearFromPlayers"];

// Atribuições para CCSPlace
// CCSPlace Offsets
CCSPlace.m_name = jsonData["CCSPlace"]["m_name"];

// Atribuições para CEntityDissolve
// CEntityDissolve Offsets
CEntityDissolve.m_flFadeInStart = jsonData["CEntityDissolve"]["m_flFadeInStart"];
CEntityDissolve.m_flFadeInLength = jsonData["CEntityDissolve"]["m_flFadeInLength"];
CEntityDissolve.m_flFadeOutModelStart = jsonData["CEntityDissolve"]["m_flFadeOutModelStart"];
CEntityDissolve.m_flFadeOutModelLength = jsonData["CEntityDissolve"]["m_flFadeOutModelLength"];
CEntityDissolve.m_flFadeOutStart = jsonData["CEntityDissolve"]["m_flFadeOutStart"];
CEntityDissolve.m_flFadeOutLength = jsonData["CEntityDissolve"]["m_flFadeOutLength"];
CEntityDissolve.m_flStartTime = jsonData["CEntityDissolve"]["m_flStartTime"];
CEntityDissolve.m_nDissolveType = jsonData["CEntityDissolve"]["m_nDissolveType"];
CEntityDissolve.m_vDissolverOrigin = jsonData["CEntityDissolve"]["m_vDissolverOrigin"];
CEntityDissolve.m_nMagnitude = jsonData["CEntityDissolve"]["m_nMagnitude"];

// Atribuições para CPointAngleSensor
// CPointAngleSensor Offsets
CPointAngleSensor.m_bDisabled = jsonData["CPointAngleSensor"]["m_bDisabled"];
CPointAngleSensor.m_nLookAtName = jsonData["CPointAngleSensor"]["m_nLookAtName"];
CPointAngleSensor.m_hTargetEntity = jsonData["CPointAngleSensor"]["m_hTargetEntity"];
CPointAngleSensor.m_hLookAtEntity = jsonData["CPointAngleSensor"]["m_hLookAtEntity"];
CPointAngleSensor.m_flDuration = jsonData["CPointAngleSensor"]["m_flDuration"];
CPointAngleSensor.m_flDotTolerance = jsonData["CPointAngleSensor"]["m_flDotTolerance"];
CPointAngleSensor.m_flFacingTime = jsonData["CPointAngleSensor"]["m_flFacingTime"];
CPointAngleSensor.m_bFired = jsonData["CPointAngleSensor"]["m_bFired"];
CPointAngleSensor.m_OnFacingLookat = jsonData["CPointAngleSensor"]["m_OnFacingLookat"];
CPointAngleSensor.m_OnNotFacingLookat = jsonData["CPointAngleSensor"]["m_OnNotFacingLookat"];
CPointAngleSensor.m_TargetDir = jsonData["CPointAngleSensor"]["m_TargetDir"];
CPointAngleSensor.m_FacingPercentage = jsonData["CPointAngleSensor"]["m_FacingPercentage"];

// Atribuições para CSoundEventOBBEntity
// CSoundEventOBBEntity Offsets
CSoundEventOBBEntity.m_vMins = jsonData["CSoundEventOBBEntity"]["m_vMins"];
CSoundEventOBBEntity.m_vMaxs = jsonData["CSoundEventOBBEntity"]["m_vMaxs"];

// Atribuições para CBtNodeCondition
// CBtNodeCondition Offsets
CBtNodeCondition.m_bNegated = jsonData["CBtNodeCondition"]["m_bNegated"];

// Atribuições para CEnvVolumetricFogVolume
// CEnvVolumetricFogVolume Offsets
CEnvVolumetricFogVolume.m_bActive = jsonData["CEnvVolumetricFogVolume"]["m_bActive"];
CEnvVolumetricFogVolume.m_vBoxMins = jsonData["CEnvVolumetricFogVolume"]["m_vBoxMins"];
CEnvVolumetricFogVolume.m_vBoxMaxs = jsonData["CEnvVolumetricFogVolume"]["m_vBoxMaxs"];
CEnvVolumetricFogVolume.m_bStartDisabled = jsonData["CEnvVolumetricFogVolume"]["m_bStartDisabled"];
CEnvVolumetricFogVolume.m_flStrength = jsonData["CEnvVolumetricFogVolume"]["m_flStrength"];
CEnvVolumetricFogVolume.m_nFalloffShape = jsonData["CEnvVolumetricFogVolume"]["m_nFalloffShape"];
CEnvVolumetricFogVolume.m_flFalloffExponent = jsonData["CEnvVolumetricFogVolume"]["m_flFalloffExponent"];
CEnvVolumetricFogVolume.m_flHeightFogDepth = jsonData["CEnvVolumetricFogVolume"]["m_flHeightFogDepth"];
CEnvVolumetricFogVolume.m_fHeightFogEdgeWidth = jsonData["CEnvVolumetricFogVolume"]["m_fHeightFogEdgeWidth"];
CEnvVolumetricFogVolume.m_fIndirectLightStrength = jsonData["CEnvVolumetricFogVolume"]["m_fIndirectLightStrength"];
CEnvVolumetricFogVolume.m_fSunLightStrength = jsonData["CEnvVolumetricFogVolume"]["m_fSunLightStrength"];
CEnvVolumetricFogVolume.m_fNoiseStrength = jsonData["CEnvVolumetricFogVolume"]["m_fNoiseStrength"];
CEnvVolumetricFogVolume.m_bOverrideIndirectLightStrength = jsonData["CEnvVolumetricFogVolume"]["m_bOverrideIndirectLightStrength"];
CEnvVolumetricFogVolume.m_bOverrideSunLightStrength = jsonData["CEnvVolumetricFogVolume"]["m_bOverrideSunLightStrength"];
CEnvVolumetricFogVolume.m_bOverrideNoiseStrength = jsonData["CEnvVolumetricFogVolume"]["m_bOverrideNoiseStrength"];
CEnvVolumetricFogVolume.m_bAllowLPVIndirect = jsonData["CEnvVolumetricFogVolume"]["m_bAllowLPVIndirect"];

// Atribuições para CBeam
// CBeam Offsets
CBeam.m_flFrameRate = jsonData["CBeam"]["m_flFrameRate"];
CBeam.m_flHDRColorScale = jsonData["CBeam"]["m_flHDRColorScale"];
CBeam.m_flFireTime = jsonData["CBeam"]["m_flFireTime"];
CBeam.m_flDamage = jsonData["CBeam"]["m_flDamage"];
CBeam.m_nNumBeamEnts = jsonData["CBeam"]["m_nNumBeamEnts"];
CBeam.m_hBaseMaterial = jsonData["CBeam"]["m_hBaseMaterial"];
CBeam.m_nHaloIndex = jsonData["CBeam"]["m_nHaloIndex"];
CBeam.m_nBeamType = jsonData["CBeam"]["m_nBeamType"];
CBeam.m_nBeamFlags = jsonData["CBeam"]["m_nBeamFlags"];
CBeam.m_hAttachEntity = jsonData["CBeam"]["m_hAttachEntity"];
CBeam.m_nAttachIndex = jsonData["CBeam"]["m_nAttachIndex"];
CBeam.m_fWidth = jsonData["CBeam"]["m_fWidth"];
CBeam.m_fEndWidth = jsonData["CBeam"]["m_fEndWidth"];
CBeam.m_fFadeLength = jsonData["CBeam"]["m_fFadeLength"];
CBeam.m_fHaloScale = jsonData["CBeam"]["m_fHaloScale"];
CBeam.m_fAmplitude = jsonData["CBeam"]["m_fAmplitude"];
CBeam.m_fStartFrame = jsonData["CBeam"]["m_fStartFrame"];
CBeam.m_fSpeed = jsonData["CBeam"]["m_fSpeed"];
CBeam.m_flFrame = jsonData["CBeam"]["m_flFrame"];
CBeam.m_nClipStyle = jsonData["CBeam"]["m_nClipStyle"];
CBeam.m_bTurnedOff = jsonData["CBeam"]["m_bTurnedOff"];
CBeam.m_vecEndPos = jsonData["CBeam"]["m_vecEndPos"];
CBeam.m_hEndEntity = jsonData["CBeam"]["m_hEndEntity"];
CBeam.m_nDissolveType = jsonData["CBeam"]["m_nDissolveType"];

// Atribuições para CBaseModelEntity
// CBaseModelEntity Offsets
CBaseModelEntity.m_CRenderComponent = jsonData["CBaseModelEntity"]["m_CRenderComponent"];
CBaseModelEntity.m_CHitboxComponent = jsonData["CBaseModelEntity"]["m_CHitboxComponent"];
CBaseModelEntity.m_flDissolveStartTime = jsonData["CBaseModelEntity"]["m_flDissolveStartTime"];
CBaseModelEntity.m_OnIgnite = jsonData["CBaseModelEntity"]["m_OnIgnite"];
CBaseModelEntity.m_nRenderMode = jsonData["CBaseModelEntity"]["m_nRenderMode"];
CBaseModelEntity.m_nRenderFX = jsonData["CBaseModelEntity"]["m_nRenderFX"];
CBaseModelEntity.m_bAllowFadeInView = jsonData["CBaseModelEntity"]["m_bAllowFadeInView"];
CBaseModelEntity.m_clrRender = jsonData["CBaseModelEntity"]["m_clrRender"];
CBaseModelEntity.m_vecRenderAttributes = jsonData["CBaseModelEntity"]["m_vecRenderAttributes"];
CBaseModelEntity.m_bRenderToCubemaps = jsonData["CBaseModelEntity"]["m_bRenderToCubemaps"];
CBaseModelEntity.m_bNoInterpolate = jsonData["CBaseModelEntity"]["m_bNoInterpolate"];
CBaseModelEntity.m_Collision = jsonData["CBaseModelEntity"]["m_Collision"];
CBaseModelEntity.m_Glow = jsonData["CBaseModelEntity"]["m_Glow"];
CBaseModelEntity.m_flGlowBackfaceMult = jsonData["CBaseModelEntity"]["m_flGlowBackfaceMult"];
CBaseModelEntity.m_fadeMinDist = jsonData["CBaseModelEntity"]["m_fadeMinDist"];
CBaseModelEntity.m_fadeMaxDist = jsonData["CBaseModelEntity"]["m_fadeMaxDist"];
CBaseModelEntity.m_flFadeScale = jsonData["CBaseModelEntity"]["m_flFadeScale"];
CBaseModelEntity.m_flShadowStrength = jsonData["CBaseModelEntity"]["m_flShadowStrength"];
CBaseModelEntity.m_nObjectCulling = jsonData["CBaseModelEntity"]["m_nObjectCulling"];
CBaseModelEntity.m_nAddDecal = jsonData["CBaseModelEntity"]["m_nAddDecal"];
CBaseModelEntity.m_vDecalPosition = jsonData["CBaseModelEntity"]["m_vDecalPosition"];
CBaseModelEntity.m_vDecalForwardAxis = jsonData["CBaseModelEntity"]["m_vDecalForwardAxis"];
CBaseModelEntity.m_flDecalHealBloodRate = jsonData["CBaseModelEntity"]["m_flDecalHealBloodRate"];
CBaseModelEntity.m_flDecalHealHeightRate = jsonData["CBaseModelEntity"]["m_flDecalHealHeightRate"];
CBaseModelEntity.m_ConfigEntitiesToPropagateMaterialDecalsTo = jsonData["CBaseModelEntity"]["m_ConfigEntitiesToPropagateMaterialDecalsTo"];
CBaseModelEntity.m_vecViewOffset = jsonData["CBaseModelEntity"]["m_vecViewOffset"];

// Atribuições para CPhysMagnet
// CPhysMagnet Offsets
CPhysMagnet.m_OnMagnetAttach = jsonData["CPhysMagnet"]["m_OnMagnetAttach"];
CPhysMagnet.m_OnMagnetDetach = jsonData["CPhysMagnet"]["m_OnMagnetDetach"];
CPhysMagnet.m_massScale = jsonData["CPhysMagnet"]["m_massScale"];
CPhysMagnet.m_forceLimit = jsonData["CPhysMagnet"]["m_forceLimit"];
CPhysMagnet.m_torqueLimit = jsonData["CPhysMagnet"]["m_torqueLimit"];
CPhysMagnet.m_MagnettedEntities = jsonData["CPhysMagnet"]["m_MagnettedEntities"];
CPhysMagnet.m_bActive = jsonData["CPhysMagnet"]["m_bActive"];
CPhysMagnet.m_bHasHitSomething = jsonData["CPhysMagnet"]["m_bHasHitSomething"];
CPhysMagnet.m_flTotalMass = jsonData["CPhysMagnet"]["m_flTotalMass"];
CPhysMagnet.m_flRadius = jsonData["CPhysMagnet"]["m_flRadius"];
CPhysMagnet.m_flNextSuckTime = jsonData["CPhysMagnet"]["m_flNextSuckTime"];
CPhysMagnet.m_iMaxObjectsAttached = jsonData["CPhysMagnet"]["m_iMaxObjectsAttached"];

// Atribuições para CFuncNavBlocker
// CFuncNavBlocker Offsets
CFuncNavBlocker.m_bDisabled = jsonData["CFuncNavBlocker"]["m_bDisabled"];
CFuncNavBlocker.m_nBlockedTeamNumber = jsonData["CFuncNavBlocker"]["m_nBlockedTeamNumber"];

// Atribuições para CRagdollMagnet
// CRagdollMagnet Offsets
CRagdollMagnet.m_bDisabled = jsonData["CRagdollMagnet"]["m_bDisabled"];
CRagdollMagnet.m_radius = jsonData["CRagdollMagnet"]["m_radius"];
CRagdollMagnet.m_force = jsonData["CRagdollMagnet"]["m_force"];
CRagdollMagnet.m_axis = jsonData["CRagdollMagnet"]["m_axis"];

// Atribuições para CFuncBrush
// CFuncBrush Offsets
CFuncBrush.m_iSolidity = jsonData["CFuncBrush"]["m_iSolidity"];
CFuncBrush.m_iDisabled = jsonData["CFuncBrush"]["m_iDisabled"];
CFuncBrush.m_bSolidBsp = jsonData["CFuncBrush"]["m_bSolidBsp"];
CFuncBrush.m_iszExcludedClass = jsonData["CFuncBrush"]["m_iszExcludedClass"];
CFuncBrush.m_bInvertExclusion = jsonData["CFuncBrush"]["m_bInvertExclusion"];
CFuncBrush.m_bScriptedMovement = jsonData["CFuncBrush"]["m_bScriptedMovement"];

// Atribuições para CPointProximitySensor
// CPointProximitySensor Offsets
CPointProximitySensor.m_bDisabled = jsonData["CPointProximitySensor"]["m_bDisabled"];
CPointProximitySensor.m_hTargetEntity = jsonData["CPointProximitySensor"]["m_hTargetEntity"];
CPointProximitySensor.m_Distance = jsonData["CPointProximitySensor"]["m_Distance"];

// Atribuições para CFilterClass
// CFilterClass Offsets
CFilterClass.m_iFilterClass = jsonData["CFilterClass"]["m_iFilterClass"];

// Atribuições para CPhysBox
// CPhysBox Offsets
CPhysBox.m_damageType = jsonData["CPhysBox"]["m_damageType"];
CPhysBox.m_damageToEnableMotion = jsonData["CPhysBox"]["m_damageToEnableMotion"];
CPhysBox.m_flForceToEnableMotion = jsonData["CPhysBox"]["m_flForceToEnableMotion"];
CPhysBox.m_angPreferredCarryAngles = jsonData["CPhysBox"]["m_angPreferredCarryAngles"];
CPhysBox.m_bNotSolidToWorld = jsonData["CPhysBox"]["m_bNotSolidToWorld"];
CPhysBox.m_bEnableUseOutput = jsonData["CPhysBox"]["m_bEnableUseOutput"];
CPhysBox.m_iExploitableByPlayer = jsonData["CPhysBox"]["m_iExploitableByPlayer"];
CPhysBox.m_flTouchOutputPerEntityDelay = jsonData["CPhysBox"]["m_flTouchOutputPerEntityDelay"];
CPhysBox.m_OnDamaged = jsonData["CPhysBox"]["m_OnDamaged"];
CPhysBox.m_OnAwakened = jsonData["CPhysBox"]["m_OnAwakened"];
CPhysBox.m_OnMotionEnabled = jsonData["CPhysBox"]["m_OnMotionEnabled"];
CPhysBox.m_OnPlayerUse = jsonData["CPhysBox"]["m_OnPlayerUse"];
CPhysBox.m_OnStartTouch = jsonData["CPhysBox"]["m_OnStartTouch"];
CPhysBox.m_hCarryingPlayer = jsonData["CPhysBox"]["m_hCarryingPlayer"];

// Atribuições para CBaseGrenade
// CBaseGrenade Offsets
CBaseGrenade.m_OnPlayerPickup = jsonData["CBaseGrenade"]["m_OnPlayerPickup"];
CBaseGrenade.m_OnExplode = jsonData["CBaseGrenade"]["m_OnExplode"];
CBaseGrenade.m_bHasWarnedAI = jsonData["CBaseGrenade"]["m_bHasWarnedAI"];
CBaseGrenade.m_bIsSmokeGrenade = jsonData["CBaseGrenade"]["m_bIsSmokeGrenade"];
CBaseGrenade.m_bIsLive = jsonData["CBaseGrenade"]["m_bIsLive"];
CBaseGrenade.m_DmgRadius = jsonData["CBaseGrenade"]["m_DmgRadius"];
CBaseGrenade.m_flDetonateTime = jsonData["CBaseGrenade"]["m_flDetonateTime"];
CBaseGrenade.m_flWarnAITime = jsonData["CBaseGrenade"]["m_flWarnAITime"];
CBaseGrenade.m_flDamage = jsonData["CBaseGrenade"]["m_flDamage"];
CBaseGrenade.m_iszBounceSound = jsonData["CBaseGrenade"]["m_iszBounceSound"];
CBaseGrenade.m_ExplosionSound = jsonData["CBaseGrenade"]["m_ExplosionSound"];
CBaseGrenade.m_hThrower = jsonData["CBaseGrenade"]["m_hThrower"];
CBaseGrenade.m_flNextAttack = jsonData["CBaseGrenade"]["m_flNextAttack"];
CBaseGrenade.m_hOriginalThrower = jsonData["CBaseGrenade"]["m_hOriginalThrower"];

// Atribuições para CTimerEntity
// CTimerEntity Offsets
CTimerEntity.m_OnTimer = jsonData["CTimerEntity"]["m_OnTimer"];
CTimerEntity.m_OnTimerHigh = jsonData["CTimerEntity"]["m_OnTimerHigh"];
CTimerEntity.m_OnTimerLow = jsonData["CTimerEntity"]["m_OnTimerLow"];
CTimerEntity.m_iDisabled = jsonData["CTimerEntity"]["m_iDisabled"];
CTimerEntity.m_flInitialDelay = jsonData["CTimerEntity"]["m_flInitialDelay"];
CTimerEntity.m_flRefireTime = jsonData["CTimerEntity"]["m_flRefireTime"];
CTimerEntity.m_bUpDownState = jsonData["CTimerEntity"]["m_bUpDownState"];
CTimerEntity.m_iUseRandomTime = jsonData["CTimerEntity"]["m_iUseRandomTime"];
CTimerEntity.m_bPauseAfterFiring = jsonData["CTimerEntity"]["m_bPauseAfterFiring"];
CTimerEntity.m_flLowerRandomBound = jsonData["CTimerEntity"]["m_flLowerRandomBound"];
CTimerEntity.m_flUpperRandomBound = jsonData["CTimerEntity"]["m_flUpperRandomBound"];
CTimerEntity.m_flRemainingTime = jsonData["CTimerEntity"]["m_flRemainingTime"];
CTimerEntity.m_bPaused = jsonData["CTimerEntity"]["m_bPaused"];

// Atribuições para CEnvWind
// CEnvWind Offsets
CEnvWind.m_EnvWindShared = jsonData["CEnvWind"]["m_EnvWindShared"];

// Atribuições para CCSWeaponBase
// CCSWeaponBase Offsets
CCSWeaponBase.m_bRemoveable = jsonData["CCSWeaponBase"]["m_bRemoveable"];
CCSWeaponBase.m_flFireSequenceStartTime = jsonData["CCSWeaponBase"]["m_flFireSequenceStartTime"];
CCSWeaponBase.m_nFireSequenceStartTimeChange = jsonData["CCSWeaponBase"]["m_nFireSequenceStartTimeChange"];
CCSWeaponBase.m_nFireSequenceStartTimeAck = jsonData["CCSWeaponBase"]["m_nFireSequenceStartTimeAck"];
CCSWeaponBase.m_ePlayerFireEvent = jsonData["CCSWeaponBase"]["m_ePlayerFireEvent"];
CCSWeaponBase.m_ePlayerFireEventAttackType = jsonData["CCSWeaponBase"]["m_ePlayerFireEventAttackType"];
CCSWeaponBase.m_seqIdle = jsonData["CCSWeaponBase"]["m_seqIdle"];
CCSWeaponBase.m_seqFirePrimary = jsonData["CCSWeaponBase"]["m_seqFirePrimary"];
CCSWeaponBase.m_seqFireSecondary = jsonData["CCSWeaponBase"]["m_seqFireSecondary"];
CCSWeaponBase.m_thirdPersonFireSequences = jsonData["CCSWeaponBase"]["m_thirdPersonFireSequences"];
CCSWeaponBase.m_hCurrentThirdPersonSequence = jsonData["CCSWeaponBase"]["m_hCurrentThirdPersonSequence"];
CCSWeaponBase.m_nSilencerBoneIndex = jsonData["CCSWeaponBase"]["m_nSilencerBoneIndex"];
CCSWeaponBase.m_thirdPersonSequences = jsonData["CCSWeaponBase"]["m_thirdPersonSequences"];
CCSWeaponBase.m_bPlayerAmmoStockOnPickup = jsonData["CCSWeaponBase"]["m_bPlayerAmmoStockOnPickup"];
CCSWeaponBase.m_bRequireUseToTouch = jsonData["CCSWeaponBase"]["m_bRequireUseToTouch"];
CCSWeaponBase.m_iState = jsonData["CCSWeaponBase"]["m_iState"];
CCSWeaponBase.m_flLastTimeInAir = jsonData["CCSWeaponBase"]["m_flLastTimeInAir"];
CCSWeaponBase.m_flLastDeployTime = jsonData["CCSWeaponBase"]["m_flLastDeployTime"];
CCSWeaponBase.m_nLastEmptySoundCmdNum = jsonData["CCSWeaponBase"]["m_nLastEmptySoundCmdNum"];
CCSWeaponBase.m_nViewModelIndex = jsonData["CCSWeaponBase"]["m_nViewModelIndex"];
CCSWeaponBase.m_bReloadsWithClips = jsonData["CCSWeaponBase"]["m_bReloadsWithClips"];
CCSWeaponBase.m_flTimeWeaponIdle = jsonData["CCSWeaponBase"]["m_flTimeWeaponIdle"];
CCSWeaponBase.m_bFireOnEmpty = jsonData["CCSWeaponBase"]["m_bFireOnEmpty"];
CCSWeaponBase.m_OnPlayerPickup = jsonData["CCSWeaponBase"]["m_OnPlayerPickup"];
CCSWeaponBase.m_weaponMode = jsonData["CCSWeaponBase"]["m_weaponMode"];
CCSWeaponBase.m_flTurningInaccuracyDelta = jsonData["CCSWeaponBase"]["m_flTurningInaccuracyDelta"];
CCSWeaponBase.m_vecTurningInaccuracyEyeDirLast = jsonData["CCSWeaponBase"]["m_vecTurningInaccuracyEyeDirLast"];
CCSWeaponBase.m_flTurningInaccuracy = jsonData["CCSWeaponBase"]["m_flTurningInaccuracy"];
CCSWeaponBase.m_fAccuracyPenalty = jsonData["CCSWeaponBase"]["m_fAccuracyPenalty"];
CCSWeaponBase.m_flLastAccuracyUpdateTime = jsonData["CCSWeaponBase"]["m_flLastAccuracyUpdateTime"];
CCSWeaponBase.m_fAccuracySmoothedForZoom = jsonData["CCSWeaponBase"]["m_fAccuracySmoothedForZoom"];
CCSWeaponBase.m_fScopeZoomEndTime = jsonData["CCSWeaponBase"]["m_fScopeZoomEndTime"];
CCSWeaponBase.m_iRecoilIndex = jsonData["CCSWeaponBase"]["m_iRecoilIndex"];
CCSWeaponBase.m_flRecoilIndex = jsonData["CCSWeaponBase"]["m_flRecoilIndex"];
CCSWeaponBase.m_bBurstMode = jsonData["CCSWeaponBase"]["m_bBurstMode"];
CCSWeaponBase.m_nPostponeFireReadyTicks = jsonData["CCSWeaponBase"]["m_nPostponeFireReadyTicks"];
CCSWeaponBase.m_flPostponeFireReadyFrac = jsonData["CCSWeaponBase"]["m_flPostponeFireReadyFrac"];
CCSWeaponBase.m_bInReload = jsonData["CCSWeaponBase"]["m_bInReload"];
CCSWeaponBase.m_bReloadVisuallyComplete = jsonData["CCSWeaponBase"]["m_bReloadVisuallyComplete"];
CCSWeaponBase.m_flDroppedAtTime = jsonData["CCSWeaponBase"]["m_flDroppedAtTime"];
CCSWeaponBase.m_bIsHauledBack = jsonData["CCSWeaponBase"]["m_bIsHauledBack"];
CCSWeaponBase.m_bSilencerOn = jsonData["CCSWeaponBase"]["m_bSilencerOn"];
CCSWeaponBase.m_flTimeSilencerSwitchComplete = jsonData["CCSWeaponBase"]["m_flTimeSilencerSwitchComplete"];
CCSWeaponBase.m_iOriginalTeamNumber = jsonData["CCSWeaponBase"]["m_iOriginalTeamNumber"];
CCSWeaponBase.m_iMostRecentTeamNumber = jsonData["CCSWeaponBase"]["m_iMostRecentTeamNumber"];
CCSWeaponBase.m_bDroppedNearBuyZone = jsonData["CCSWeaponBase"]["m_bDroppedNearBuyZone"];
CCSWeaponBase.m_flNextAttackRenderTimeOffset = jsonData["CCSWeaponBase"]["m_flNextAttackRenderTimeOffset"];
CCSWeaponBase.m_bCanBePickedUp = jsonData["CCSWeaponBase"]["m_bCanBePickedUp"];
CCSWeaponBase.m_bUseCanOverrideNextOwnerTouchTime = jsonData["CCSWeaponBase"]["m_bUseCanOverrideNextOwnerTouchTime"];
CCSWeaponBase.m_nextOwnerTouchTime = jsonData["CCSWeaponBase"]["m_nextOwnerTouchTime"];
CCSWeaponBase.m_nextPrevOwnerTouchTime = jsonData["CCSWeaponBase"]["m_nextPrevOwnerTouchTime"];
CCSWeaponBase.m_hPrevOwner = jsonData["CCSWeaponBase"]["m_hPrevOwner"];
CCSWeaponBase.m_nDropTick = jsonData["CCSWeaponBase"]["m_nDropTick"];
CCSWeaponBase.m_donated = jsonData["CCSWeaponBase"]["m_donated"];
CCSWeaponBase.m_fLastShotTime = jsonData["CCSWeaponBase"]["m_fLastShotTime"];
CCSWeaponBase.m_bWasOwnedByCT = jsonData["CCSWeaponBase"]["m_bWasOwnedByCT"];
CCSWeaponBase.m_bWasOwnedByTerrorist = jsonData["CCSWeaponBase"]["m_bWasOwnedByTerrorist"];
CCSWeaponBase.m_bFiredOutOfAmmoEvent = jsonData["CCSWeaponBase"]["m_bFiredOutOfAmmoEvent"];
CCSWeaponBase.m_numRemoveUnownedWeaponThink = jsonData["CCSWeaponBase"]["m_numRemoveUnownedWeaponThink"];
CCSWeaponBase.m_IronSightController = jsonData["CCSWeaponBase"]["m_IronSightController"];
CCSWeaponBase.m_iIronSightMode = jsonData["CCSWeaponBase"]["m_iIronSightMode"];
CCSWeaponBase.m_flLastLOSTraceFailureTime = jsonData["CCSWeaponBase"]["m_flLastLOSTraceFailureTime"];
CCSWeaponBase.m_iNumEmptyAttacks = jsonData["CCSWeaponBase"]["m_iNumEmptyAttacks"];
CCSWeaponBase.m_flWatTickOffset = jsonData["CCSWeaponBase"]["m_flWatTickOffset"];

// Atribuições para CRagdollConstraint
// CRagdollConstraint Offsets
CRagdollConstraint.m_xmin = jsonData["CRagdollConstraint"]["m_xmin"];
CRagdollConstraint.m_xmax = jsonData["CRagdollConstraint"]["m_xmax"];
CRagdollConstraint.m_ymin = jsonData["CRagdollConstraint"]["m_ymin"];
CRagdollConstraint.m_ymax = jsonData["CRagdollConstraint"]["m_ymax"];
CRagdollConstraint.m_zmin = jsonData["CRagdollConstraint"]["m_zmin"];
CRagdollConstraint.m_zmax = jsonData["CRagdollConstraint"]["m_zmax"];
CRagdollConstraint.m_xfriction = jsonData["CRagdollConstraint"]["m_xfriction"];
CRagdollConstraint.m_yfriction = jsonData["CRagdollConstraint"]["m_yfriction"];
CRagdollConstraint.m_zfriction = jsonData["CRagdollConstraint"]["m_zfriction"];

// Atribuições para CPhysExplosion
// CPhysExplosion Offsets
CPhysExplosion.m_bExplodeOnSpawn = jsonData["CPhysExplosion"]["m_bExplodeOnSpawn"];
CPhysExplosion.m_flMagnitude = jsonData["CPhysExplosion"]["m_flMagnitude"];
CPhysExplosion.m_flDamage = jsonData["CPhysExplosion"]["m_flDamage"];
CPhysExplosion.m_radius = jsonData["CPhysExplosion"]["m_radius"];
CPhysExplosion.m_targetEntityName = jsonData["CPhysExplosion"]["m_targetEntityName"];
CPhysExplosion.m_flInnerRadius = jsonData["CPhysExplosion"]["m_flInnerRadius"];
CPhysExplosion.m_flPushScale = jsonData["CPhysExplosion"]["m_flPushScale"];
CPhysExplosion.m_bConvertToDebrisWhenPossible = jsonData["CPhysExplosion"]["m_bConvertToDebrisWhenPossible"];
CPhysExplosion.m_OnPushedPlayer = jsonData["CPhysExplosion"]["m_OnPushedPlayer"];

// Atribuições para CPointPush
// CPointPush Offsets
CPointPush.m_bEnabled = jsonData["CPointPush"]["m_bEnabled"];
CPointPush.m_flMagnitude = jsonData["CPointPush"]["m_flMagnitude"];
CPointPush.m_flRadius = jsonData["CPointPush"]["m_flRadius"];
CPointPush.m_flInnerRadius = jsonData["CPointPush"]["m_flInnerRadius"];
CPointPush.m_flConeOfInfluence = jsonData["CPointPush"]["m_flConeOfInfluence"];
CPointPush.m_iszFilterName = jsonData["CPointPush"]["m_iszFilterName"];
CPointPush.m_hFilter = jsonData["CPointPush"]["m_hFilter"];

// Atribuições para CCredits
// CCredits Offsets
CCredits.m_OnCreditsDone = jsonData["CCredits"]["m_OnCreditsDone"];
CCredits.m_bRolledOutroCredits = jsonData["CCredits"]["m_bRolledOutroCredits"];
CCredits.m_flLogoLength = jsonData["CCredits"]["m_flLogoLength"];

// Atribuições para CCSPlayerResource
// CCSPlayerResource Offsets
CCSPlayerResource.m_bHostageAlive = jsonData["CCSPlayerResource"]["m_bHostageAlive"];
CCSPlayerResource.m_isHostageFollowingSomeone = jsonData["CCSPlayerResource"]["m_isHostageFollowingSomeone"];
CCSPlayerResource.m_iHostageEntityIDs = jsonData["CCSPlayerResource"]["m_iHostageEntityIDs"];
CCSPlayerResource.m_bombsiteCenterA = jsonData["CCSPlayerResource"]["m_bombsiteCenterA"];
CCSPlayerResource.m_bombsiteCenterB = jsonData["CCSPlayerResource"]["m_bombsiteCenterB"];
CCSPlayerResource.m_hostageRescueX = jsonData["CCSPlayerResource"]["m_hostageRescueX"];
CCSPlayerResource.m_hostageRescueY = jsonData["CCSPlayerResource"]["m_hostageRescueY"];
CCSPlayerResource.m_hostageRescueZ = jsonData["CCSPlayerResource"]["m_hostageRescueZ"];
CCSPlayerResource.m_bEndMatchNextMapAllVoted = jsonData["CCSPlayerResource"]["m_bEndMatchNextMapAllVoted"];
CCSPlayerResource.m_foundGoalPositions = jsonData["CCSPlayerResource"]["m_foundGoalPositions"];

// Atribuições para CCSTeam
// CCSTeam Offsets
CCSTeam.m_nLastRecievedShorthandedRoundBonus = jsonData["CCSTeam"]["m_nLastRecievedShorthandedRoundBonus"];
CCSTeam.m_nShorthandedRoundBonusStartRound = jsonData["CCSTeam"]["m_nShorthandedRoundBonusStartRound"];
CCSTeam.m_bSurrendered = jsonData["CCSTeam"]["m_bSurrendered"];
CCSTeam.m_szTeamMatchStat = jsonData["CCSTeam"]["m_szTeamMatchStat"];
CCSTeam.m_numMapVictories = jsonData["CCSTeam"]["m_numMapVictories"];
CCSTeam.m_scoreFirstHalf = jsonData["CCSTeam"]["m_scoreFirstHalf"];
CCSTeam.m_scoreSecondHalf = jsonData["CCSTeam"]["m_scoreSecondHalf"];
CCSTeam.m_scoreOvertime = jsonData["CCSTeam"]["m_scoreOvertime"];
CCSTeam.m_szClanTeamname = jsonData["CCSTeam"]["m_szClanTeamname"];
CCSTeam.m_iClanID = jsonData["CCSTeam"]["m_iClanID"];
CCSTeam.m_szTeamFlagImage = jsonData["CCSTeam"]["m_szTeamFlagImage"];
CCSTeam.m_szTeamLogoImage = jsonData["CCSTeam"]["m_szTeamLogoImage"];
CCSTeam.m_flNextResourceTime = jsonData["CCSTeam"]["m_flNextResourceTime"];
CCSTeam.m_iLastUpdateSentAt = jsonData["CCSTeam"]["m_iLastUpdateSentAt"];

// Atribuições para CTriggerImpact
// CTriggerImpact Offsets
CTriggerImpact.m_flMagnitude = jsonData["CTriggerImpact"]["m_flMagnitude"];
CTriggerImpact.m_flNoise = jsonData["CTriggerImpact"]["m_flNoise"];
CTriggerImpact.m_flViewkick = jsonData["CTriggerImpact"]["m_flViewkick"];
CTriggerImpact.m_pOutputForce = jsonData["CTriggerImpact"]["m_pOutputForce"];

// Atribuições para CSun
// CSun Offsets
CSun.m_vDirection = jsonData["CSun"]["m_vDirection"];
CSun.m_clrOverlay = jsonData["CSun"]["m_clrOverlay"];
CSun.m_iszEffectName = jsonData["CSun"]["m_iszEffectName"];
CSun.m_iszSSEffectName = jsonData["CSun"]["m_iszSSEffectName"];
CSun.m_bOn = jsonData["CSun"]["m_bOn"];
CSun.m_bmaxColor = jsonData["CSun"]["m_bmaxColor"];
CSun.m_flSize = jsonData["CSun"]["m_flSize"];
CSun.m_flRotation = jsonData["CSun"]["m_flRotation"];
CSun.m_flHazeScale = jsonData["CSun"]["m_flHazeScale"];
CSun.m_flAlphaHaze = jsonData["CSun"]["m_flAlphaHaze"];
CSun.m_flAlphaHdr = jsonData["CSun"]["m_flAlphaHdr"];
CSun.m_flAlphaScale = jsonData["CSun"]["m_flAlphaScale"];
CSun.m_flHDRColorScale = jsonData["CSun"]["m_flHDRColorScale"];
CSun.m_flFarZScale = jsonData["CSun"]["m_flFarZScale"];

// Atribuições para CTriggerDetectBulletFire
// CTriggerDetectBulletFire Offsets
CTriggerDetectBulletFire.m_bPlayerFireOnly = jsonData["CTriggerDetectBulletFire"]["m_bPlayerFireOnly"];
CTriggerDetectBulletFire.m_OnDetectedBulletFire = jsonData["CTriggerDetectBulletFire"]["m_OnDetectedBulletFire"];

// Atribuições para CPointGiveAmmo
// CPointGiveAmmo Offsets
CPointGiveAmmo.m_pActivator = jsonData["CPointGiveAmmo"]["m_pActivator"];

// Atribuições para CPathParticleRope
// CPathParticleRope Offsets
CPathParticleRope.m_bStartActive = jsonData["CPathParticleRope"]["m_bStartActive"];
CPathParticleRope.m_flMaxSimulationTime = jsonData["CPathParticleRope"]["m_flMaxSimulationTime"];
CPathParticleRope.m_iszEffectName = jsonData["CPathParticleRope"]["m_iszEffectName"];
CPathParticleRope.m_PathNodes_Name = jsonData["CPathParticleRope"]["m_PathNodes_Name"];
CPathParticleRope.m_flParticleSpacing = jsonData["CPathParticleRope"]["m_flParticleSpacing"];
CPathParticleRope.m_flSlack = jsonData["CPathParticleRope"]["m_flSlack"];
CPathParticleRope.m_flRadius = jsonData["CPathParticleRope"]["m_flRadius"];
CPathParticleRope.m_ColorTint = jsonData["CPathParticleRope"]["m_ColorTint"];
CPathParticleRope.m_nEffectState = jsonData["CPathParticleRope"]["m_nEffectState"];
CPathParticleRope.m_iEffectIndex = jsonData["CPathParticleRope"]["m_iEffectIndex"];
CPathParticleRope.m_PathNodes_Position = jsonData["CPathParticleRope"]["m_PathNodes_Position"];
CPathParticleRope.m_PathNodes_TangentIn = jsonData["CPathParticleRope"]["m_PathNodes_TangentIn"];
CPathParticleRope.m_PathNodes_TangentOut = jsonData["CPathParticleRope"]["m_PathNodes_TangentOut"];
CPathParticleRope.m_PathNodes_Color = jsonData["CPathParticleRope"]["m_PathNodes_Color"];
CPathParticleRope.m_PathNodes_PinEnabled = jsonData["CPathParticleRope"]["m_PathNodes_PinEnabled"];
CPathParticleRope.m_PathNodes_RadiusScale = jsonData["CPathParticleRope"]["m_PathNodes_RadiusScale"];

// Atribuições para CPlayerVisibility
// CPlayerVisibility Offsets
CPlayerVisibility.m_flVisibilityStrength = jsonData["CPlayerVisibility"]["m_flVisibilityStrength"];
CPlayerVisibility.m_flFogDistanceMultiplier = jsonData["CPlayerVisibility"]["m_flFogDistanceMultiplier"];
CPlayerVisibility.m_flFogMaxDensityMultiplier = jsonData["CPlayerVisibility"]["m_flFogMaxDensityMultiplier"];
CPlayerVisibility.m_flFadeTime = jsonData["CPlayerVisibility"]["m_flFadeTime"];
CPlayerVisibility.m_bStartDisabled = jsonData["CPlayerVisibility"]["m_bStartDisabled"];
CPlayerVisibility.m_bIsEnabled = jsonData["CPlayerVisibility"]["m_bIsEnabled"];

// Atribuições para CTriggerTeleport
// CTriggerTeleport Offsets
CTriggerTeleport.m_iLandmark = jsonData["CTriggerTeleport"]["m_iLandmark"];
CTriggerTeleport.m_bUseLandmarkAngles = jsonData["CTriggerTeleport"]["m_bUseLandmarkAngles"];
CTriggerTeleport.m_bMirrorPlayer = jsonData["CTriggerTeleport"]["m_bMirrorPlayer"];
CTriggerTeleport.m_bCheckDestIfClearForPlayer = jsonData["CTriggerTeleport"]["m_bCheckDestIfClearForPlayer"];

// Atribuições para CFuncMover
// CFuncMover Offsets
CFuncMover.m_bCreateMovableNavMesh = jsonData["CFuncMover"]["m_bCreateMovableNavMesh"];
CFuncMover.m_iszPathName = jsonData["CFuncMover"]["m_iszPathName"];
CFuncMover.m_hPathMover = jsonData["CFuncMover"]["m_hPathMover"];
CFuncMover.m_iszPathNodeStart = jsonData["CFuncMover"]["m_iszPathNodeStart"];
CFuncMover.m_eMoveType = jsonData["CFuncMover"]["m_eMoveType"];
CFuncMover.m_bIsReversing = jsonData["CFuncMover"]["m_bIsReversing"];
CFuncMover.m_vTarget = jsonData["CFuncMover"]["m_vTarget"];
CFuncMover.m_flStartSpeed = jsonData["CFuncMover"]["m_flStartSpeed"];
CFuncMover.m_flPathLocation = jsonData["CFuncMover"]["m_flPathLocation"];
CFuncMover.m_flT = jsonData["CFuncMover"]["m_flT"];
CFuncMover.m_nCurrentNodeIndex = jsonData["CFuncMover"]["m_nCurrentNodeIndex"];
CFuncMover.m_nPreviousNodeIndex = jsonData["CFuncMover"]["m_nPreviousNodeIndex"];
CFuncMover.m_bFixedOrientation = jsonData["CFuncMover"]["m_bFixedOrientation"];
CFuncMover.m_bFixedPitch = jsonData["CFuncMover"]["m_bFixedPitch"];
CFuncMover.m_eSolidType = jsonData["CFuncMover"]["m_eSolidType"];
CFuncMover.m_bIsMoving = jsonData["CFuncMover"]["m_bIsMoving"];
CFuncMover.m_flTimeToReachMaxSpeed = jsonData["CFuncMover"]["m_flTimeToReachMaxSpeed"];
CFuncMover.m_flDistanceToReachMaxSpeed = jsonData["CFuncMover"]["m_flDistanceToReachMaxSpeed"];
CFuncMover.m_flTimeToReachZeroSpeed = jsonData["CFuncMover"]["m_flTimeToReachZeroSpeed"];
CFuncMover.m_flDistanceToReachZeroSpeed = jsonData["CFuncMover"]["m_flDistanceToReachZeroSpeed"];
CFuncMover.m_flTimeMovementStart = jsonData["CFuncMover"]["m_flTimeMovementStart"];
CFuncMover.m_flTimeMovementStop = jsonData["CFuncMover"]["m_flTimeMovementStop"];
CFuncMover.m_hStopAtNode = jsonData["CFuncMover"]["m_hStopAtNode"];
CFuncMover.m_flPathLocationToBeginStop = jsonData["CFuncMover"]["m_flPathLocationToBeginStop"];
CFuncMover.m_iszStartForwardSound = jsonData["CFuncMover"]["m_iszStartForwardSound"];
CFuncMover.m_iszLoopForwardSound = jsonData["CFuncMover"]["m_iszLoopForwardSound"];
CFuncMover.m_iszStopForwardSound = jsonData["CFuncMover"]["m_iszStopForwardSound"];
CFuncMover.m_iszStartReverseSound = jsonData["CFuncMover"]["m_iszStartReverseSound"];
CFuncMover.m_iszLoopReverseSound = jsonData["CFuncMover"]["m_iszLoopReverseSound"];
CFuncMover.m_iszStopReverseSound = jsonData["CFuncMover"]["m_iszStopReverseSound"];
CFuncMover.m_iszArriveAtDestinationSound = jsonData["CFuncMover"]["m_iszArriveAtDestinationSound"];
CFuncMover.m_OnMovementEnd = jsonData["CFuncMover"]["m_OnMovementEnd"];
CFuncMover.m_bStartAtEnd = jsonData["CFuncMover"]["m_bStartAtEnd"];
CFuncMover.m_eOrientationUpdate = jsonData["CFuncMover"]["m_eOrientationUpdate"];
CFuncMover.m_flTimeStartOrientationChange = jsonData["CFuncMover"]["m_flTimeStartOrientationChange"];
CFuncMover.m_flTimeToBlendToNewOrientation = jsonData["CFuncMover"]["m_flTimeToBlendToNewOrientation"];
CFuncMover.m_flDurationBlendToNewOrientationRan = jsonData["CFuncMover"]["m_flDurationBlendToNewOrientationRan"];
CFuncMover.m_qOriginalOrientation = jsonData["CFuncMover"]["m_qOriginalOrientation"];

// Atribuições para CBubbling
// CBubbling Offsets
CBubbling.m_density = jsonData["CBubbling"]["m_density"];
CBubbling.m_frequency = jsonData["CBubbling"]["m_frequency"];
CBubbling.m_state = jsonData["CBubbling"]["m_state"];

// Atribuições para CCSGameRules
// CCSGameRules Offsets
CCSGameRules.m_bFreezePeriod = jsonData["CCSGameRules"]["m_bFreezePeriod"];
CCSGameRules.m_bWarmupPeriod = jsonData["CCSGameRules"]["m_bWarmupPeriod"];
CCSGameRules.m_fWarmupPeriodEnd = jsonData["CCSGameRules"]["m_fWarmupPeriodEnd"];
CCSGameRules.m_fWarmupPeriodStart = jsonData["CCSGameRules"]["m_fWarmupPeriodStart"];
CCSGameRules.m_bServerPaused = jsonData["CCSGameRules"]["m_bServerPaused"];
CCSGameRules.m_bTerroristTimeOutActive = jsonData["CCSGameRules"]["m_bTerroristTimeOutActive"];
CCSGameRules.m_bCTTimeOutActive = jsonData["CCSGameRules"]["m_bCTTimeOutActive"];
CCSGameRules.m_flTerroristTimeOutRemaining = jsonData["CCSGameRules"]["m_flTerroristTimeOutRemaining"];
CCSGameRules.m_flCTTimeOutRemaining = jsonData["CCSGameRules"]["m_flCTTimeOutRemaining"];
CCSGameRules.m_nTerroristTimeOuts = jsonData["CCSGameRules"]["m_nTerroristTimeOuts"];
CCSGameRules.m_nCTTimeOuts = jsonData["CCSGameRules"]["m_nCTTimeOuts"];
CCSGameRules.m_bTechnicalTimeOut = jsonData["CCSGameRules"]["m_bTechnicalTimeOut"];
CCSGameRules.m_bMatchWaitingForResume = jsonData["CCSGameRules"]["m_bMatchWaitingForResume"];
CCSGameRules.m_iRoundTime = jsonData["CCSGameRules"]["m_iRoundTime"];
CCSGameRules.m_fMatchStartTime = jsonData["CCSGameRules"]["m_fMatchStartTime"];
CCSGameRules.m_fRoundStartTime = jsonData["CCSGameRules"]["m_fRoundStartTime"];
CCSGameRules.m_flRestartRoundTime = jsonData["CCSGameRules"]["m_flRestartRoundTime"];
CCSGameRules.m_bGameRestart = jsonData["CCSGameRules"]["m_bGameRestart"];
CCSGameRules.m_flGameStartTime = jsonData["CCSGameRules"]["m_flGameStartTime"];
CCSGameRules.m_timeUntilNextPhaseStarts = jsonData["CCSGameRules"]["m_timeUntilNextPhaseStarts"];
CCSGameRules.m_gamePhase = jsonData["CCSGameRules"]["m_gamePhase"];
CCSGameRules.m_totalRoundsPlayed = jsonData["CCSGameRules"]["m_totalRoundsPlayed"];
CCSGameRules.m_nRoundsPlayedThisPhase = jsonData["CCSGameRules"]["m_nRoundsPlayedThisPhase"];
CCSGameRules.m_nOvertimePlaying = jsonData["CCSGameRules"]["m_nOvertimePlaying"];
CCSGameRules.m_iHostagesRemaining = jsonData["CCSGameRules"]["m_iHostagesRemaining"];
CCSGameRules.m_bAnyHostageReached = jsonData["CCSGameRules"]["m_bAnyHostageReached"];
CCSGameRules.m_bMapHasBombTarget = jsonData["CCSGameRules"]["m_bMapHasBombTarget"];
CCSGameRules.m_bMapHasRescueZone = jsonData["CCSGameRules"]["m_bMapHasRescueZone"];
CCSGameRules.m_bMapHasBuyZone = jsonData["CCSGameRules"]["m_bMapHasBuyZone"];
CCSGameRules.m_bIsQueuedMatchmaking = jsonData["CCSGameRules"]["m_bIsQueuedMatchmaking"];
CCSGameRules.m_nQueuedMatchmakingMode = jsonData["CCSGameRules"]["m_nQueuedMatchmakingMode"];
CCSGameRules.m_bIsValveDS = jsonData["CCSGameRules"]["m_bIsValveDS"];
CCSGameRules.m_bLogoMap = jsonData["CCSGameRules"]["m_bLogoMap"];
CCSGameRules.m_bPlayAllStepSoundsOnServer = jsonData["CCSGameRules"]["m_bPlayAllStepSoundsOnServer"];
CCSGameRules.m_iSpectatorSlotCount = jsonData["CCSGameRules"]["m_iSpectatorSlotCount"];
CCSGameRules.m_MatchDevice = jsonData["CCSGameRules"]["m_MatchDevice"];
CCSGameRules.m_bHasMatchStarted = jsonData["CCSGameRules"]["m_bHasMatchStarted"];
CCSGameRules.m_nNextMapInMapgroup = jsonData["CCSGameRules"]["m_nNextMapInMapgroup"];
CCSGameRules.m_szTournamentEventName = jsonData["CCSGameRules"]["m_szTournamentEventName"];
CCSGameRules.m_szTournamentEventStage = jsonData["CCSGameRules"]["m_szTournamentEventStage"];
CCSGameRules.m_szMatchStatTxt = jsonData["CCSGameRules"]["m_szMatchStatTxt"];
CCSGameRules.m_szTournamentPredictionsTxt = jsonData["CCSGameRules"]["m_szTournamentPredictionsTxt"];
CCSGameRules.m_nTournamentPredictionsPct = jsonData["CCSGameRules"]["m_nTournamentPredictionsPct"];
CCSGameRules.m_flCMMItemDropRevealStartTime = jsonData["CCSGameRules"]["m_flCMMItemDropRevealStartTime"];
CCSGameRules.m_flCMMItemDropRevealEndTime = jsonData["CCSGameRules"]["m_flCMMItemDropRevealEndTime"];
CCSGameRules.m_bIsDroppingItems = jsonData["CCSGameRules"]["m_bIsDroppingItems"];
CCSGameRules.m_bIsQuestEligible = jsonData["CCSGameRules"]["m_bIsQuestEligible"];
CCSGameRules.m_bIsHltvActive = jsonData["CCSGameRules"]["m_bIsHltvActive"];
CCSGameRules.m_arrProhibitedItemIndices = jsonData["CCSGameRules"]["m_arrProhibitedItemIndices"];
CCSGameRules.m_arrTournamentActiveCasterAccounts = jsonData["CCSGameRules"]["m_arrTournamentActiveCasterAccounts"];
CCSGameRules.m_numBestOfMaps = jsonData["CCSGameRules"]["m_numBestOfMaps"];
CCSGameRules.m_nHalloweenMaskListSeed = jsonData["CCSGameRules"]["m_nHalloweenMaskListSeed"];
CCSGameRules.m_bBombDropped = jsonData["CCSGameRules"]["m_bBombDropped"];
CCSGameRules.m_bBombPlanted = jsonData["CCSGameRules"]["m_bBombPlanted"];
CCSGameRules.m_iRoundWinStatus = jsonData["CCSGameRules"]["m_iRoundWinStatus"];
CCSGameRules.m_eRoundWinReason = jsonData["CCSGameRules"]["m_eRoundWinReason"];
CCSGameRules.m_bTCantBuy = jsonData["CCSGameRules"]["m_bTCantBuy"];
CCSGameRules.m_bCTCantBuy = jsonData["CCSGameRules"]["m_bCTCantBuy"];
CCSGameRules.m_iMatchStats_RoundResults = jsonData["CCSGameRules"]["m_iMatchStats_RoundResults"];
CCSGameRules.m_iMatchStats_PlayersAlive_CT = jsonData["CCSGameRules"]["m_iMatchStats_PlayersAlive_CT"];
CCSGameRules.m_iMatchStats_PlayersAlive_T = jsonData["CCSGameRules"]["m_iMatchStats_PlayersAlive_T"];
CCSGameRules.m_TeamRespawnWaveTimes = jsonData["CCSGameRules"]["m_TeamRespawnWaveTimes"];
CCSGameRules.m_flNextRespawnWave = jsonData["CCSGameRules"]["m_flNextRespawnWave"];
CCSGameRules.m_nServerQuestID = jsonData["CCSGameRules"]["m_nServerQuestID"];
CCSGameRules.m_vMinimapMins = jsonData["CCSGameRules"]["m_vMinimapMins"];
CCSGameRules.m_vMinimapMaxs = jsonData["CCSGameRules"]["m_vMinimapMaxs"];
CCSGameRules.m_MinimapVerticalSectionHeights = jsonData["CCSGameRules"]["m_MinimapVerticalSectionHeights"];
CCSGameRules.m_bSpawnedTerrorHuntHeavy = jsonData["CCSGameRules"]["m_bSpawnedTerrorHuntHeavy"];
CCSGameRules.m_nEndMatchMapGroupVoteTypes = jsonData["CCSGameRules"]["m_nEndMatchMapGroupVoteTypes"];
CCSGameRules.m_nEndMatchMapGroupVoteOptions = jsonData["CCSGameRules"]["m_nEndMatchMapGroupVoteOptions"];
CCSGameRules.m_nEndMatchMapVoteWinner = jsonData["CCSGameRules"]["m_nEndMatchMapVoteWinner"];
CCSGameRules.m_iNumConsecutiveCTLoses = jsonData["CCSGameRules"]["m_iNumConsecutiveCTLoses"];
CCSGameRules.m_iNumConsecutiveTerroristLoses = jsonData["CCSGameRules"]["m_iNumConsecutiveTerroristLoses"];
CCSGameRules.m_bHasHostageBeenTouched = jsonData["CCSGameRules"]["m_bHasHostageBeenTouched"];
CCSGameRules.m_flIntermissionStartTime = jsonData["CCSGameRules"]["m_flIntermissionStartTime"];
CCSGameRules.m_flIntermissionEndTime = jsonData["CCSGameRules"]["m_flIntermissionEndTime"];
CCSGameRules.m_bLevelInitialized = jsonData["CCSGameRules"]["m_bLevelInitialized"];
CCSGameRules.m_iTotalRoundsPlayed = jsonData["CCSGameRules"]["m_iTotalRoundsPlayed"];
CCSGameRules.m_iUnBalancedRounds = jsonData["CCSGameRules"]["m_iUnBalancedRounds"];
CCSGameRules.m_endMatchOnRoundReset = jsonData["CCSGameRules"]["m_endMatchOnRoundReset"];
CCSGameRules.m_endMatchOnThink = jsonData["CCSGameRules"]["m_endMatchOnThink"];
CCSGameRules.m_iFreezeTime = jsonData["CCSGameRules"]["m_iFreezeTime"];
CCSGameRules.m_iNumTerrorist = jsonData["CCSGameRules"]["m_iNumTerrorist"];
CCSGameRules.m_iNumCT = jsonData["CCSGameRules"]["m_iNumCT"];
CCSGameRules.m_iNumSpawnableTerrorist = jsonData["CCSGameRules"]["m_iNumSpawnableTerrorist"];
CCSGameRules.m_iNumSpawnableCT = jsonData["CCSGameRules"]["m_iNumSpawnableCT"];
CCSGameRules.m_arrSelectedHostageSpawnIndices = jsonData["CCSGameRules"]["m_arrSelectedHostageSpawnIndices"];
CCSGameRules.m_nSpawnPointsRandomSeed = jsonData["CCSGameRules"]["m_nSpawnPointsRandomSeed"];
CCSGameRules.m_bFirstConnected = jsonData["CCSGameRules"]["m_bFirstConnected"];
CCSGameRules.m_bCompleteReset = jsonData["CCSGameRules"]["m_bCompleteReset"];
CCSGameRules.m_bPickNewTeamsOnReset = jsonData["CCSGameRules"]["m_bPickNewTeamsOnReset"];
CCSGameRules.m_bScrambleTeamsOnRestart = jsonData["CCSGameRules"]["m_bScrambleTeamsOnRestart"];
CCSGameRules.m_bSwapTeamsOnRestart = jsonData["CCSGameRules"]["m_bSwapTeamsOnRestart"];
CCSGameRules.m_nEndMatchTiedVotes = jsonData["CCSGameRules"]["m_nEndMatchTiedVotes"];
CCSGameRules.m_bNeedToAskPlayersForContinueVote = jsonData["CCSGameRules"]["m_bNeedToAskPlayersForContinueVote"];
CCSGameRules.m_numQueuedMatchmakingAccounts = jsonData["CCSGameRules"]["m_numQueuedMatchmakingAccounts"];
CCSGameRules.m_fAvgPlayerRank = jsonData["CCSGameRules"]["m_fAvgPlayerRank"];
CCSGameRules.m_pQueuedMatchmakingReservationString = jsonData["CCSGameRules"]["m_pQueuedMatchmakingReservationString"];
CCSGameRules.m_numTotalTournamentDrops = jsonData["CCSGameRules"]["m_numTotalTournamentDrops"];
CCSGameRules.m_numSpectatorsCountMax = jsonData["CCSGameRules"]["m_numSpectatorsCountMax"];
CCSGameRules.m_numSpectatorsCountMaxTV = jsonData["CCSGameRules"]["m_numSpectatorsCountMaxTV"];
CCSGameRules.m_numSpectatorsCountMaxLnk = jsonData["CCSGameRules"]["m_numSpectatorsCountMaxLnk"];
CCSGameRules.m_bForceTeamChangeSilent = jsonData["CCSGameRules"]["m_bForceTeamChangeSilent"];
CCSGameRules.m_bLoadingRoundBackupData = jsonData["CCSGameRules"]["m_bLoadingRoundBackupData"];
CCSGameRules.m_nMatchInfoShowType = jsonData["CCSGameRules"]["m_nMatchInfoShowType"];
CCSGameRules.m_flMatchInfoDecidedTime = jsonData["CCSGameRules"]["m_flMatchInfoDecidedTime"];
CCSGameRules.mTeamDMLastWinningTeamNumber = jsonData["CCSGameRules"]["mTeamDMLastWinningTeamNumber"];
CCSGameRules.mTeamDMLastThinkTime = jsonData["CCSGameRules"]["mTeamDMLastThinkTime"];
CCSGameRules.m_flTeamDMLastAnnouncementTime = jsonData["CCSGameRules"]["m_flTeamDMLastAnnouncementTime"];
CCSGameRules.m_iAccountTerrorist = jsonData["CCSGameRules"]["m_iAccountTerrorist"];
CCSGameRules.m_iAccountCT = jsonData["CCSGameRules"]["m_iAccountCT"];
CCSGameRules.m_iSpawnPointCount_Terrorist = jsonData["CCSGameRules"]["m_iSpawnPointCount_Terrorist"];
CCSGameRules.m_iSpawnPointCount_CT = jsonData["CCSGameRules"]["m_iSpawnPointCount_CT"];
CCSGameRules.m_iMaxNumTerrorists = jsonData["CCSGameRules"]["m_iMaxNumTerrorists"];
CCSGameRules.m_iMaxNumCTs = jsonData["CCSGameRules"]["m_iMaxNumCTs"];
CCSGameRules.m_iLoserBonusMostRecentTeam = jsonData["CCSGameRules"]["m_iLoserBonusMostRecentTeam"];
CCSGameRules.m_tmNextPeriodicThink = jsonData["CCSGameRules"]["m_tmNextPeriodicThink"];
CCSGameRules.m_bVoiceWonMatchBragFired = jsonData["CCSGameRules"]["m_bVoiceWonMatchBragFired"];
CCSGameRules.m_fWarmupNextChatNoticeTime = jsonData["CCSGameRules"]["m_fWarmupNextChatNoticeTime"];
CCSGameRules.m_iHostagesRescued = jsonData["CCSGameRules"]["m_iHostagesRescued"];
CCSGameRules.m_iHostagesTouched = jsonData["CCSGameRules"]["m_iHostagesTouched"];
CCSGameRules.m_flNextHostageAnnouncement = jsonData["CCSGameRules"]["m_flNextHostageAnnouncement"];
CCSGameRules.m_bNoTerroristsKilled = jsonData["CCSGameRules"]["m_bNoTerroristsKilled"];
CCSGameRules.m_bNoCTsKilled = jsonData["CCSGameRules"]["m_bNoCTsKilled"];
CCSGameRules.m_bNoEnemiesKilled = jsonData["CCSGameRules"]["m_bNoEnemiesKilled"];
CCSGameRules.m_bCanDonateWeapons = jsonData["CCSGameRules"]["m_bCanDonateWeapons"];
CCSGameRules.m_firstKillTime = jsonData["CCSGameRules"]["m_firstKillTime"];
CCSGameRules.m_firstBloodTime = jsonData["CCSGameRules"]["m_firstBloodTime"];
CCSGameRules.m_hostageWasInjured = jsonData["CCSGameRules"]["m_hostageWasInjured"];
CCSGameRules.m_hostageWasKilled = jsonData["CCSGameRules"]["m_hostageWasKilled"];
CCSGameRules.m_bVoteCalled = jsonData["CCSGameRules"]["m_bVoteCalled"];
CCSGameRules.m_bServerVoteOnReset = jsonData["CCSGameRules"]["m_bServerVoteOnReset"];
CCSGameRules.m_flVoteCheckThrottle = jsonData["CCSGameRules"]["m_flVoteCheckThrottle"];
CCSGameRules.m_bBuyTimeEnded = jsonData["CCSGameRules"]["m_bBuyTimeEnded"];
CCSGameRules.m_nLastFreezeEndBeep = jsonData["CCSGameRules"]["m_nLastFreezeEndBeep"];
CCSGameRules.m_bTargetBombed = jsonData["CCSGameRules"]["m_bTargetBombed"];
CCSGameRules.m_bBombDefused = jsonData["CCSGameRules"]["m_bBombDefused"];
CCSGameRules.m_bMapHasBombZone = jsonData["CCSGameRules"]["m_bMapHasBombZone"];
CCSGameRules.m_vecMainCTSpawnPos = jsonData["CCSGameRules"]["m_vecMainCTSpawnPos"];
CCSGameRules.m_CTSpawnPointsMasterList = jsonData["CCSGameRules"]["m_CTSpawnPointsMasterList"];
CCSGameRules.m_TerroristSpawnPointsMasterList = jsonData["CCSGameRules"]["m_TerroristSpawnPointsMasterList"];
CCSGameRules.m_bRespawningAllRespawnablePlayers = jsonData["CCSGameRules"]["m_bRespawningAllRespawnablePlayers"];
CCSGameRules.m_iNextCTSpawnPoint = jsonData["CCSGameRules"]["m_iNextCTSpawnPoint"];
CCSGameRules.m_flCTSpawnPointUsedTime = jsonData["CCSGameRules"]["m_flCTSpawnPointUsedTime"];
CCSGameRules.m_iNextTerroristSpawnPoint = jsonData["CCSGameRules"]["m_iNextTerroristSpawnPoint"];
CCSGameRules.m_flTerroristSpawnPointUsedTime = jsonData["CCSGameRules"]["m_flTerroristSpawnPointUsedTime"];
CCSGameRules.m_CTSpawnPoints = jsonData["CCSGameRules"]["m_CTSpawnPoints"];
CCSGameRules.m_TerroristSpawnPoints = jsonData["CCSGameRules"]["m_TerroristSpawnPoints"];
CCSGameRules.m_bIsUnreservedGameServer = jsonData["CCSGameRules"]["m_bIsUnreservedGameServer"];
CCSGameRules.m_fAutobalanceDisplayTime = jsonData["CCSGameRules"]["m_fAutobalanceDisplayTime"];
CCSGameRules.m_bAllowWeaponSwitch = jsonData["CCSGameRules"]["m_bAllowWeaponSwitch"];
CCSGameRules.m_bRoundTimeWarningTriggered = jsonData["CCSGameRules"]["m_bRoundTimeWarningTriggered"];
CCSGameRules.m_phaseChangeAnnouncementTime = jsonData["CCSGameRules"]["m_phaseChangeAnnouncementTime"];
CCSGameRules.m_fNextUpdateTeamClanNamesTime = jsonData["CCSGameRules"]["m_fNextUpdateTeamClanNamesTime"];
CCSGameRules.m_flLastThinkTime = jsonData["CCSGameRules"]["m_flLastThinkTime"];
CCSGameRules.m_fAccumulatedRoundOffDamage = jsonData["CCSGameRules"]["m_fAccumulatedRoundOffDamage"];
CCSGameRules.m_nShorthandedBonusLastEvalRound = jsonData["CCSGameRules"]["m_nShorthandedBonusLastEvalRound"];
CCSGameRules.m_nMatchAbortedEarlyReason = jsonData["CCSGameRules"]["m_nMatchAbortedEarlyReason"];
CCSGameRules.m_bHasTriggeredRoundStartMusic = jsonData["CCSGameRules"]["m_bHasTriggeredRoundStartMusic"];
CCSGameRules.m_bSwitchingTeamsAtRoundReset = jsonData["CCSGameRules"]["m_bSwitchingTeamsAtRoundReset"];
CCSGameRules.m_pGameModeRules = jsonData["CCSGameRules"]["m_pGameModeRules"];
CCSGameRules.m_BtGlobalBlackboard = jsonData["CCSGameRules"]["m_BtGlobalBlackboard"];
CCSGameRules.m_hPlayerResource = jsonData["CCSGameRules"]["m_hPlayerResource"];
CCSGameRules.m_RetakeRules = jsonData["CCSGameRules"]["m_RetakeRules"];
CCSGameRules.m_arrTeamUniqueKillWeaponsMatch = jsonData["CCSGameRules"]["m_arrTeamUniqueKillWeaponsMatch"];
CCSGameRules.m_bTeamLastKillUsedUniqueWeaponMatch = jsonData["CCSGameRules"]["m_bTeamLastKillUsedUniqueWeaponMatch"];
CCSGameRules.m_nMatchEndCount = jsonData["CCSGameRules"]["m_nMatchEndCount"];
CCSGameRules.m_nTTeamIntroVariant = jsonData["CCSGameRules"]["m_nTTeamIntroVariant"];
CCSGameRules.m_nCTTeamIntroVariant = jsonData["CCSGameRules"]["m_nCTTeamIntroVariant"];
CCSGameRules.m_bTeamIntroPeriod = jsonData["CCSGameRules"]["m_bTeamIntroPeriod"];
CCSGameRules.m_fTeamIntroPeriodEnd = jsonData["CCSGameRules"]["m_fTeamIntroPeriodEnd"];
CCSGameRules.m_bPlayedTeamIntroVO = jsonData["CCSGameRules"]["m_bPlayedTeamIntroVO"];
CCSGameRules.m_iRoundEndWinnerTeam = jsonData["CCSGameRules"]["m_iRoundEndWinnerTeam"];
CCSGameRules.m_eRoundEndReason = jsonData["CCSGameRules"]["m_eRoundEndReason"];
CCSGameRules.m_bRoundEndShowTimerDefend = jsonData["CCSGameRules"]["m_bRoundEndShowTimerDefend"];
CCSGameRules.m_iRoundEndTimerTime = jsonData["CCSGameRules"]["m_iRoundEndTimerTime"];
CCSGameRules.m_sRoundEndFunFactToken = jsonData["CCSGameRules"]["m_sRoundEndFunFactToken"];
CCSGameRules.m_iRoundEndFunFactPlayerSlot = jsonData["CCSGameRules"]["m_iRoundEndFunFactPlayerSlot"];
CCSGameRules.m_iRoundEndFunFactData1 = jsonData["CCSGameRules"]["m_iRoundEndFunFactData1"];
CCSGameRules.m_iRoundEndFunFactData2 = jsonData["CCSGameRules"]["m_iRoundEndFunFactData2"];
CCSGameRules.m_iRoundEndFunFactData3 = jsonData["CCSGameRules"]["m_iRoundEndFunFactData3"];
CCSGameRules.m_sRoundEndMessage = jsonData["CCSGameRules"]["m_sRoundEndMessage"];
CCSGameRules.m_iRoundEndPlayerCount = jsonData["CCSGameRules"]["m_iRoundEndPlayerCount"];
CCSGameRules.m_bRoundEndNoMusic = jsonData["CCSGameRules"]["m_bRoundEndNoMusic"];
CCSGameRules.m_iRoundEndLegacy = jsonData["CCSGameRules"]["m_iRoundEndLegacy"];
CCSGameRules.m_nRoundEndCount = jsonData["CCSGameRules"]["m_nRoundEndCount"];
CCSGameRules.m_iRoundStartRoundNumber = jsonData["CCSGameRules"]["m_iRoundStartRoundNumber"];
CCSGameRules.m_nRoundStartCount = jsonData["CCSGameRules"]["m_nRoundStartCount"];
CCSGameRules.m_flLastPerfSampleTime = jsonData["CCSGameRules"]["m_flLastPerfSampleTime"];

// Atribuições para CAI_ChangeHintGroup
// CAI_ChangeHintGroup Offsets
CAI_ChangeHintGroup.m_iSearchType = jsonData["CAI_ChangeHintGroup"]["m_iSearchType"];
CAI_ChangeHintGroup.m_strSearchName = jsonData["CAI_ChangeHintGroup"]["m_strSearchName"];
CAI_ChangeHintGroup.m_strNewHintGroup = jsonData["CAI_ChangeHintGroup"]["m_strNewHintGroup"];
CAI_ChangeHintGroup.m_flRadius = jsonData["CAI_ChangeHintGroup"]["m_flRadius"];

// Atribuições para CColorCorrectionVolume
// CColorCorrectionVolume Offsets
CColorCorrectionVolume.m_bEnabled = jsonData["CColorCorrectionVolume"]["m_bEnabled"];
CColorCorrectionVolume.m_MaxWeight = jsonData["CColorCorrectionVolume"]["m_MaxWeight"];
CColorCorrectionVolume.m_FadeDuration = jsonData["CColorCorrectionVolume"]["m_FadeDuration"];
CColorCorrectionVolume.m_bStartDisabled = jsonData["CColorCorrectionVolume"]["m_bStartDisabled"];
CColorCorrectionVolume.m_Weight = jsonData["CColorCorrectionVolume"]["m_Weight"];
CColorCorrectionVolume.m_lookupFilename = jsonData["CColorCorrectionVolume"]["m_lookupFilename"];
CColorCorrectionVolume.m_LastEnterWeight = jsonData["CColorCorrectionVolume"]["m_LastEnterWeight"];
CColorCorrectionVolume.m_LastEnterTime = jsonData["CColorCorrectionVolume"]["m_LastEnterTime"];
CColorCorrectionVolume.m_LastExitWeight = jsonData["CColorCorrectionVolume"]["m_LastExitWeight"];
CColorCorrectionVolume.m_LastExitTime = jsonData["CColorCorrectionVolume"]["m_LastExitTime"];

// Atribuições para CFilterEnemy
// CFilterEnemy Offsets
CFilterEnemy.m_iszEnemyName = jsonData["CFilterEnemy"]["m_iszEnemyName"];
CFilterEnemy.m_flRadius = jsonData["CFilterEnemy"]["m_flRadius"];
CFilterEnemy.m_flOuterRadius = jsonData["CFilterEnemy"]["m_flOuterRadius"];
CFilterEnemy.m_nMaxSquadmatesPerEnemy = jsonData["CFilterEnemy"]["m_nMaxSquadmatesPerEnemy"];
CFilterEnemy.m_iszPlayerName = jsonData["CFilterEnemy"]["m_iszPlayerName"];

// Atribuições para CEnvCubemapFog
// CEnvCubemapFog Offsets
CEnvCubemapFog.m_flEndDistance = jsonData["CEnvCubemapFog"]["m_flEndDistance"];
CEnvCubemapFog.m_flStartDistance = jsonData["CEnvCubemapFog"]["m_flStartDistance"];
CEnvCubemapFog.m_flFogFalloffExponent = jsonData["CEnvCubemapFog"]["m_flFogFalloffExponent"];
CEnvCubemapFog.m_bHeightFogEnabled = jsonData["CEnvCubemapFog"]["m_bHeightFogEnabled"];
CEnvCubemapFog.m_flFogHeightWidth = jsonData["CEnvCubemapFog"]["m_flFogHeightWidth"];
CEnvCubemapFog.m_flFogHeightEnd = jsonData["CEnvCubemapFog"]["m_flFogHeightEnd"];
CEnvCubemapFog.m_flFogHeightStart = jsonData["CEnvCubemapFog"]["m_flFogHeightStart"];
CEnvCubemapFog.m_flFogHeightExponent = jsonData["CEnvCubemapFog"]["m_flFogHeightExponent"];
CEnvCubemapFog.m_flLODBias = jsonData["CEnvCubemapFog"]["m_flLODBias"];
CEnvCubemapFog.m_bActive = jsonData["CEnvCubemapFog"]["m_bActive"];
CEnvCubemapFog.m_bStartDisabled = jsonData["CEnvCubemapFog"]["m_bStartDisabled"];
CEnvCubemapFog.m_flFogMaxOpacity = jsonData["CEnvCubemapFog"]["m_flFogMaxOpacity"];
CEnvCubemapFog.m_nCubemapSourceType = jsonData["CEnvCubemapFog"]["m_nCubemapSourceType"];
CEnvCubemapFog.m_hSkyMaterial = jsonData["CEnvCubemapFog"]["m_hSkyMaterial"];
CEnvCubemapFog.m_iszSkyEntity = jsonData["CEnvCubemapFog"]["m_iszSkyEntity"];
CEnvCubemapFog.m_hFogCubemapTexture = jsonData["CEnvCubemapFog"]["m_hFogCubemapTexture"];
CEnvCubemapFog.m_bHasHeightFogEnd = jsonData["CEnvCubemapFog"]["m_bHasHeightFogEnd"];
CEnvCubemapFog.m_bFirstTime = jsonData["CEnvCubemapFog"]["m_bFirstTime"];

// Atribuições para CEnvExplosion
// CEnvExplosion Offsets
CEnvExplosion.m_iMagnitude = jsonData["CEnvExplosion"]["m_iMagnitude"];
CEnvExplosion.m_flPlayerDamage = jsonData["CEnvExplosion"]["m_flPlayerDamage"];
CEnvExplosion.m_iRadiusOverride = jsonData["CEnvExplosion"]["m_iRadiusOverride"];
CEnvExplosion.m_flInnerRadius = jsonData["CEnvExplosion"]["m_flInnerRadius"];
CEnvExplosion.m_spriteScale = jsonData["CEnvExplosion"]["m_spriteScale"];
CEnvExplosion.m_flDamageForce = jsonData["CEnvExplosion"]["m_flDamageForce"];
CEnvExplosion.m_hInflictor = jsonData["CEnvExplosion"]["m_hInflictor"];
CEnvExplosion.m_iCustomDamageType = jsonData["CEnvExplosion"]["m_iCustomDamageType"];
CEnvExplosion.m_bCreateDebris = jsonData["CEnvExplosion"]["m_bCreateDebris"];
CEnvExplosion.m_iszExplosionType = jsonData["CEnvExplosion"]["m_iszExplosionType"];
CEnvExplosion.m_iszCustomEffectName = jsonData["CEnvExplosion"]["m_iszCustomEffectName"];
CEnvExplosion.m_iszCustomSoundName = jsonData["CEnvExplosion"]["m_iszCustomSoundName"];
CEnvExplosion.m_iClassIgnore = jsonData["CEnvExplosion"]["m_iClassIgnore"];
CEnvExplosion.m_iClassIgnore2 = jsonData["CEnvExplosion"]["m_iClassIgnore2"];
CEnvExplosion.m_iszEntityIgnoreName = jsonData["CEnvExplosion"]["m_iszEntityIgnoreName"];
CEnvExplosion.m_hEntityIgnore = jsonData["CEnvExplosion"]["m_hEntityIgnore"];

// Atribuições para CSoundEventAABBEntity
// CSoundEventAABBEntity Offsets
CSoundEventAABBEntity.m_vMins = jsonData["CSoundEventAABBEntity"]["m_vMins"];
CSoundEventAABBEntity.m_vMaxs = jsonData["CSoundEventAABBEntity"]["m_vMaxs"];

// Atribuições para CPointCommentaryNode
// CPointCommentaryNode Offsets
CPointCommentaryNode.m_iszPreCommands = jsonData["CPointCommentaryNode"]["m_iszPreCommands"];
CPointCommentaryNode.m_iszPostCommands = jsonData["CPointCommentaryNode"]["m_iszPostCommands"];
CPointCommentaryNode.m_iszCommentaryFile = jsonData["CPointCommentaryNode"]["m_iszCommentaryFile"];
CPointCommentaryNode.m_iszViewTarget = jsonData["CPointCommentaryNode"]["m_iszViewTarget"];
CPointCommentaryNode.m_hViewTarget = jsonData["CPointCommentaryNode"]["m_hViewTarget"];
CPointCommentaryNode.m_hViewTargetAngles = jsonData["CPointCommentaryNode"]["m_hViewTargetAngles"];
CPointCommentaryNode.m_iszViewPosition = jsonData["CPointCommentaryNode"]["m_iszViewPosition"];
CPointCommentaryNode.m_hViewPosition = jsonData["CPointCommentaryNode"]["m_hViewPosition"];
CPointCommentaryNode.m_hViewPositionMover = jsonData["CPointCommentaryNode"]["m_hViewPositionMover"];
CPointCommentaryNode.m_bPreventMovement = jsonData["CPointCommentaryNode"]["m_bPreventMovement"];
CPointCommentaryNode.m_bUnderCrosshair = jsonData["CPointCommentaryNode"]["m_bUnderCrosshair"];
CPointCommentaryNode.m_bUnstoppable = jsonData["CPointCommentaryNode"]["m_bUnstoppable"];
CPointCommentaryNode.m_flFinishedTime = jsonData["CPointCommentaryNode"]["m_flFinishedTime"];
CPointCommentaryNode.m_vecFinishOrigin = jsonData["CPointCommentaryNode"]["m_vecFinishOrigin"];
CPointCommentaryNode.m_vecOriginalAngles = jsonData["CPointCommentaryNode"]["m_vecOriginalAngles"];
CPointCommentaryNode.m_vecFinishAngles = jsonData["CPointCommentaryNode"]["m_vecFinishAngles"];
CPointCommentaryNode.m_bPreventChangesWhileMoving = jsonData["CPointCommentaryNode"]["m_bPreventChangesWhileMoving"];
CPointCommentaryNode.m_bDisabled = jsonData["CPointCommentaryNode"]["m_bDisabled"];
CPointCommentaryNode.m_vecTeleportOrigin = jsonData["CPointCommentaryNode"]["m_vecTeleportOrigin"];
CPointCommentaryNode.m_flAbortedPlaybackAt = jsonData["CPointCommentaryNode"]["m_flAbortedPlaybackAt"];
CPointCommentaryNode.m_pOnCommentaryStarted = jsonData["CPointCommentaryNode"]["m_pOnCommentaryStarted"];
CPointCommentaryNode.m_pOnCommentaryStopped = jsonData["CPointCommentaryNode"]["m_pOnCommentaryStopped"];
CPointCommentaryNode.m_bActive = jsonData["CPointCommentaryNode"]["m_bActive"];
CPointCommentaryNode.m_flStartTime = jsonData["CPointCommentaryNode"]["m_flStartTime"];
CPointCommentaryNode.m_flStartTimeInCommentary = jsonData["CPointCommentaryNode"]["m_flStartTimeInCommentary"];
CPointCommentaryNode.m_iszTitle = jsonData["CPointCommentaryNode"]["m_iszTitle"];
CPointCommentaryNode.m_iszSpeakers = jsonData["CPointCommentaryNode"]["m_iszSpeakers"];
CPointCommentaryNode.m_iNodeNumber = jsonData["CPointCommentaryNode"]["m_iNodeNumber"];
CPointCommentaryNode.m_iNodeNumberMax = jsonData["CPointCommentaryNode"]["m_iNodeNumberMax"];
CPointCommentaryNode.m_bListenedTo = jsonData["CPointCommentaryNode"]["m_bListenedTo"];

// Atribuições para CPointClientUIWorldPanel
// CPointClientUIWorldPanel Offsets
CPointClientUIWorldPanel.m_bIgnoreInput = jsonData["CPointClientUIWorldPanel"]["m_bIgnoreInput"];
CPointClientUIWorldPanel.m_bLit = jsonData["CPointClientUIWorldPanel"]["m_bLit"];
CPointClientUIWorldPanel.m_bFollowPlayerAcrossTeleport = jsonData["CPointClientUIWorldPanel"]["m_bFollowPlayerAcrossTeleport"];
CPointClientUIWorldPanel.m_flWidth = jsonData["CPointClientUIWorldPanel"]["m_flWidth"];
CPointClientUIWorldPanel.m_flHeight = jsonData["CPointClientUIWorldPanel"]["m_flHeight"];
CPointClientUIWorldPanel.m_flDPI = jsonData["CPointClientUIWorldPanel"]["m_flDPI"];
CPointClientUIWorldPanel.m_flInteractDistance = jsonData["CPointClientUIWorldPanel"]["m_flInteractDistance"];
CPointClientUIWorldPanel.m_flDepthOffset = jsonData["CPointClientUIWorldPanel"]["m_flDepthOffset"];
CPointClientUIWorldPanel.m_unOwnerContext = jsonData["CPointClientUIWorldPanel"]["m_unOwnerContext"];
CPointClientUIWorldPanel.m_unHorizontalAlign = jsonData["CPointClientUIWorldPanel"]["m_unHorizontalAlign"];
CPointClientUIWorldPanel.m_unVerticalAlign = jsonData["CPointClientUIWorldPanel"]["m_unVerticalAlign"];
CPointClientUIWorldPanel.m_unOrientation = jsonData["CPointClientUIWorldPanel"]["m_unOrientation"];
CPointClientUIWorldPanel.m_bAllowInteractionFromAllSceneWorlds = jsonData["CPointClientUIWorldPanel"]["m_bAllowInteractionFromAllSceneWorlds"];
CPointClientUIWorldPanel.m_vecCSSClasses = jsonData["CPointClientUIWorldPanel"]["m_vecCSSClasses"];
CPointClientUIWorldPanel.m_bOpaque = jsonData["CPointClientUIWorldPanel"]["m_bOpaque"];
CPointClientUIWorldPanel.m_bNoDepth = jsonData["CPointClientUIWorldPanel"]["m_bNoDepth"];
CPointClientUIWorldPanel.m_bRenderBackface = jsonData["CPointClientUIWorldPanel"]["m_bRenderBackface"];
CPointClientUIWorldPanel.m_bUseOffScreenIndicator = jsonData["CPointClientUIWorldPanel"]["m_bUseOffScreenIndicator"];
CPointClientUIWorldPanel.m_bExcludeFromSaveGames = jsonData["CPointClientUIWorldPanel"]["m_bExcludeFromSaveGames"];
CPointClientUIWorldPanel.m_bGrabbable = jsonData["CPointClientUIWorldPanel"]["m_bGrabbable"];
CPointClientUIWorldPanel.m_bOnlyRenderToTexture = jsonData["CPointClientUIWorldPanel"]["m_bOnlyRenderToTexture"];
CPointClientUIWorldPanel.m_bDisableMipGen = jsonData["CPointClientUIWorldPanel"]["m_bDisableMipGen"];
CPointClientUIWorldPanel.m_nExplicitImageLayout = jsonData["CPointClientUIWorldPanel"]["m_nExplicitImageLayout"];

// Atribuições para CFilterContext
// CFilterContext Offsets
CFilterContext.m_iFilterContext = jsonData["CFilterContext"]["m_iFilterContext"];

// Atribuições para CFilterAttributeInt
// CFilterAttributeInt Offsets
CFilterAttributeInt.m_sAttributeName = jsonData["CFilterAttributeInt"]["m_sAttributeName"];

// Atribuições para CAISound
// CAISound Offsets
CAISound.m_iSoundType = jsonData["CAISound"]["m_iSoundType"];
CAISound.m_iSoundFlags = jsonData["CAISound"]["m_iSoundFlags"];
CAISound.m_iVolume = jsonData["CAISound"]["m_iVolume"];
CAISound.m_iSoundIndex = jsonData["CAISound"]["m_iSoundIndex"];
CAISound.m_flDuration = jsonData["CAISound"]["m_flDuration"];
CAISound.m_iszProxyEntityName = jsonData["CAISound"]["m_iszProxyEntityName"];

// Atribuições para CPointEntityFinder
// CPointEntityFinder Offsets
CPointEntityFinder.m_hEntity = jsonData["CPointEntityFinder"]["m_hEntity"];
CPointEntityFinder.m_iFilterName = jsonData["CPointEntityFinder"]["m_iFilterName"];
CPointEntityFinder.m_hFilter = jsonData["CPointEntityFinder"]["m_hFilter"];
CPointEntityFinder.m_iRefName = jsonData["CPointEntityFinder"]["m_iRefName"];
CPointEntityFinder.m_hReference = jsonData["CPointEntityFinder"]["m_hReference"];
CPointEntityFinder.m_FindMethod = jsonData["CPointEntityFinder"]["m_FindMethod"];
CPointEntityFinder.m_OnFoundEntity = jsonData["CPointEntityFinder"]["m_OnFoundEntity"];

// Atribuições para CEnvSky
// CEnvSky Offsets
CEnvSky.m_hSkyMaterial = jsonData["CEnvSky"]["m_hSkyMaterial"];
CEnvSky.m_hSkyMaterialLightingOnly = jsonData["CEnvSky"]["m_hSkyMaterialLightingOnly"];
CEnvSky.m_bStartDisabled = jsonData["CEnvSky"]["m_bStartDisabled"];
CEnvSky.m_vTintColor = jsonData["CEnvSky"]["m_vTintColor"];
CEnvSky.m_vTintColorLightingOnly = jsonData["CEnvSky"]["m_vTintColorLightingOnly"];
CEnvSky.m_flBrightnessScale = jsonData["CEnvSky"]["m_flBrightnessScale"];
CEnvSky.m_nFogType = jsonData["CEnvSky"]["m_nFogType"];
CEnvSky.m_flFogMinStart = jsonData["CEnvSky"]["m_flFogMinStart"];
CEnvSky.m_flFogMinEnd = jsonData["CEnvSky"]["m_flFogMinEnd"];
CEnvSky.m_flFogMaxStart = jsonData["CEnvSky"]["m_flFogMaxStart"];
CEnvSky.m_flFogMaxEnd = jsonData["CEnvSky"]["m_flFogMaxEnd"];
CEnvSky.m_bEnabled = jsonData["CEnvSky"]["m_bEnabled"];

// Atribuições para CPointVelocitySensor
// CPointVelocitySensor Offsets
CPointVelocitySensor.m_hTargetEntity = jsonData["CPointVelocitySensor"]["m_hTargetEntity"];
CPointVelocitySensor.m_vecAxis = jsonData["CPointVelocitySensor"]["m_vecAxis"];
CPointVelocitySensor.m_bEnabled = jsonData["CPointVelocitySensor"]["m_bEnabled"];
CPointVelocitySensor.m_fPrevVelocity = jsonData["CPointVelocitySensor"]["m_fPrevVelocity"];
CPointVelocitySensor.m_flAvgInterval = jsonData["CPointVelocitySensor"]["m_flAvgInterval"];
CPointVelocitySensor.m_Velocity = jsonData["CPointVelocitySensor"]["m_Velocity"];

// Atribuições para CFilterMassGreater
// CFilterMassGreater Offsets
CFilterMassGreater.m_fFilterMass = jsonData["CFilterMassGreater"]["m_fFilterMass"];

// Atribuições para FilterTeam
// FilterTeam Offsets
FilterTeam.m_iFilterTeam = jsonData["FilterTeam"]["m_iFilterTeam"];

// Atribuições para CFuncTankTrain
// CFuncTankTrain Offsets
CFuncTankTrain.m_OnDeath = jsonData["CFuncTankTrain"]["m_OnDeath"];

// Atribuições para CMarkupVolumeTagged_NavGame
// CMarkupVolumeTagged_NavGame Offsets
CMarkupVolumeTagged_NavGame.m_bFloodFillAttribute = jsonData["CMarkupVolumeTagged_NavGame"]["m_bFloodFillAttribute"];

// Atribuições para CBuyZone
// CBuyZone Offsets
CBuyZone.m_LegacyTeamNum = jsonData["CBuyZone"]["m_LegacyTeamNum"];

// Atribuições para CPhysForce
// CPhysForce Offsets
CPhysForce.m_nameAttach = jsonData["CPhysForce"]["m_nameAttach"];
CPhysForce.m_force = jsonData["CPhysForce"]["m_force"];
CPhysForce.m_forceTime = jsonData["CPhysForce"]["m_forceTime"];
CPhysForce.m_attachedObject = jsonData["CPhysForce"]["m_attachedObject"];
CPhysForce.m_wasRestored = jsonData["CPhysForce"]["m_wasRestored"];
CPhysForce.m_integrator = jsonData["CPhysForce"]["m_integrator"];

// Atribuições para CLogicDistanceAutosave
// CLogicDistanceAutosave Offsets
CLogicDistanceAutosave.m_iszTargetEntity = jsonData["CLogicDistanceAutosave"]["m_iszTargetEntity"];
CLogicDistanceAutosave.m_flDistanceToPlayer = jsonData["CLogicDistanceAutosave"]["m_flDistanceToPlayer"];
CLogicDistanceAutosave.m_bForceNewLevelUnit = jsonData["CLogicDistanceAutosave"]["m_bForceNewLevelUnit"];
CLogicDistanceAutosave.m_bCheckCough = jsonData["CLogicDistanceAutosave"]["m_bCheckCough"];
CLogicDistanceAutosave.m_bThinkDangerous = jsonData["CLogicDistanceAutosave"]["m_bThinkDangerous"];
CLogicDistanceAutosave.m_flDangerousTime = jsonData["CLogicDistanceAutosave"]["m_flDangerousTime"];

// Atribuições para CSoundOpvarSetAABBEntity
// CSoundOpvarSetAABBEntity Offsets
CSoundOpvarSetAABBEntity.m_vDistanceInnerMins = jsonData["CSoundOpvarSetAABBEntity"]["m_vDistanceInnerMins"];
CSoundOpvarSetAABBEntity.m_vDistanceInnerMaxs = jsonData["CSoundOpvarSetAABBEntity"]["m_vDistanceInnerMaxs"];
CSoundOpvarSetAABBEntity.m_vDistanceOuterMins = jsonData["CSoundOpvarSetAABBEntity"]["m_vDistanceOuterMins"];
CSoundOpvarSetAABBEntity.m_vDistanceOuterMaxs = jsonData["CSoundOpvarSetAABBEntity"]["m_vDistanceOuterMaxs"];
CSoundOpvarSetAABBEntity.m_nAABBDirection = jsonData["CSoundOpvarSetAABBEntity"]["m_nAABBDirection"];
CSoundOpvarSetAABBEntity.m_vInnerMins = jsonData["CSoundOpvarSetAABBEntity"]["m_vInnerMins"];
CSoundOpvarSetAABBEntity.m_vInnerMaxs = jsonData["CSoundOpvarSetAABBEntity"]["m_vInnerMaxs"];
CSoundOpvarSetAABBEntity.m_vOuterMins = jsonData["CSoundOpvarSetAABBEntity"]["m_vOuterMins"];
CSoundOpvarSetAABBEntity.m_vOuterMaxs = jsonData["CSoundOpvarSetAABBEntity"]["m_vOuterMaxs"];

// Atribuições para CEnvWindShared__WindVariationEvent_t
// CEnvWindShared__WindVariationEvent_t Offsets
CEnvWindShared__WindVariationEvent_t.m_flWindAngleVariation = jsonData["CEnvWindShared__WindVariationEvent_t"]["m_flWindAngleVariation"];
CEnvWindShared__WindVariationEvent_t.m_flWindSpeedVariation = jsonData["CEnvWindShared__WindVariationEvent_t"]["m_flWindSpeedVariation"];

// Atribuições para CScriptTriggerOnce
// CScriptTriggerOnce Offsets
CScriptTriggerOnce.m_vExtent = jsonData["CScriptTriggerOnce"]["m_vExtent"];

// Atribuições para CFlashbangProjectile
// CFlashbangProjectile Offsets
CFlashbangProjectile.m_flTimeToDetonate = jsonData["CFlashbangProjectile"]["m_flTimeToDetonate"];
CFlashbangProjectile.m_numOpponentsHit = jsonData["CFlashbangProjectile"]["m_numOpponentsHit"];
CFlashbangProjectile.m_numTeammatesHit = jsonData["CFlashbangProjectile"]["m_numTeammatesHit"];

// Atribuições para CPointClientUIWorldTextPanel
// CPointClientUIWorldTextPanel Offsets
CPointClientUIWorldTextPanel.m_messageText = jsonData["CPointClientUIWorldTextPanel"]["m_messageText"];

// Atribuições para CLogicBranch
// CLogicBranch Offsets
CLogicBranch.m_bInValue = jsonData["CLogicBranch"]["m_bInValue"];
CLogicBranch.m_Listeners = jsonData["CLogicBranch"]["m_Listeners"];
CLogicBranch.m_OnTrue = jsonData["CLogicBranch"]["m_OnTrue"];
CLogicBranch.m_OnFalse = jsonData["CLogicBranch"]["m_OnFalse"];

// Atribuições para CBaseButton
// CBaseButton Offsets
CBaseButton.m_angMoveEntitySpace = jsonData["CBaseButton"]["m_angMoveEntitySpace"];
CBaseButton.m_fStayPushed = jsonData["CBaseButton"]["m_fStayPushed"];
CBaseButton.m_fRotating = jsonData["CBaseButton"]["m_fRotating"];
CBaseButton.m_ls = jsonData["CBaseButton"]["m_ls"];
CBaseButton.m_sUseSound = jsonData["CBaseButton"]["m_sUseSound"];
CBaseButton.m_sLockedSound = jsonData["CBaseButton"]["m_sLockedSound"];
CBaseButton.m_sUnlockedSound = jsonData["CBaseButton"]["m_sUnlockedSound"];
CBaseButton.m_sOverrideAnticipationName = jsonData["CBaseButton"]["m_sOverrideAnticipationName"];
CBaseButton.m_bLocked = jsonData["CBaseButton"]["m_bLocked"];
CBaseButton.m_bDisabled = jsonData["CBaseButton"]["m_bDisabled"];
CBaseButton.m_flUseLockedTime = jsonData["CBaseButton"]["m_flUseLockedTime"];
CBaseButton.m_bSolidBsp = jsonData["CBaseButton"]["m_bSolidBsp"];
CBaseButton.m_OnDamaged = jsonData["CBaseButton"]["m_OnDamaged"];
CBaseButton.m_OnPressed = jsonData["CBaseButton"]["m_OnPressed"];
CBaseButton.m_OnUseLocked = jsonData["CBaseButton"]["m_OnUseLocked"];
CBaseButton.m_OnIn = jsonData["CBaseButton"]["m_OnIn"];
CBaseButton.m_OnOut = jsonData["CBaseButton"]["m_OnOut"];
CBaseButton.m_nState = jsonData["CBaseButton"]["m_nState"];
CBaseButton.m_hConstraint = jsonData["CBaseButton"]["m_hConstraint"];
CBaseButton.m_hConstraintParent = jsonData["CBaseButton"]["m_hConstraintParent"];
CBaseButton.m_bForceNpcExclude = jsonData["CBaseButton"]["m_bForceNpcExclude"];
CBaseButton.m_sGlowEntity = jsonData["CBaseButton"]["m_sGlowEntity"];
CBaseButton.m_glowEntity = jsonData["CBaseButton"]["m_glowEntity"];
CBaseButton.m_usable = jsonData["CBaseButton"]["m_usable"];
CBaseButton.m_szDisplayText = jsonData["CBaseButton"]["m_szDisplayText"];

// Atribuições para CPhysLength
// CPhysLength Offsets
CPhysLength.m_offset = jsonData["CPhysLength"]["m_offset"];
CPhysLength.m_vecAttach = jsonData["CPhysLength"]["m_vecAttach"];
CPhysLength.m_addLength = jsonData["CPhysLength"]["m_addLength"];
CPhysLength.m_minLength = jsonData["CPhysLength"]["m_minLength"];
CPhysLength.m_totalLength = jsonData["CPhysLength"]["m_totalLength"];
CPhysLength.m_bEnableCollision = jsonData["CPhysLength"]["m_bEnableCollision"];

// Atribuições para CLogicNPCCounter
// CLogicNPCCounter Offsets
CLogicNPCCounter.m_OnMinCountAll = jsonData["CLogicNPCCounter"]["m_OnMinCountAll"];
CLogicNPCCounter.m_OnMaxCountAll = jsonData["CLogicNPCCounter"]["m_OnMaxCountAll"];
CLogicNPCCounter.m_OnFactorAll = jsonData["CLogicNPCCounter"]["m_OnFactorAll"];
CLogicNPCCounter.m_OnMinPlayerDistAll = jsonData["CLogicNPCCounter"]["m_OnMinPlayerDistAll"];
CLogicNPCCounter.m_OnMinCount_1 = jsonData["CLogicNPCCounter"]["m_OnMinCount_1"];
CLogicNPCCounter.m_OnMaxCount_1 = jsonData["CLogicNPCCounter"]["m_OnMaxCount_1"];
CLogicNPCCounter.m_OnFactor_1 = jsonData["CLogicNPCCounter"]["m_OnFactor_1"];
CLogicNPCCounter.m_OnMinPlayerDist_1 = jsonData["CLogicNPCCounter"]["m_OnMinPlayerDist_1"];
CLogicNPCCounter.m_OnMinCount_2 = jsonData["CLogicNPCCounter"]["m_OnMinCount_2"];
CLogicNPCCounter.m_OnMaxCount_2 = jsonData["CLogicNPCCounter"]["m_OnMaxCount_2"];
CLogicNPCCounter.m_OnFactor_2 = jsonData["CLogicNPCCounter"]["m_OnFactor_2"];
CLogicNPCCounter.m_OnMinPlayerDist_2 = jsonData["CLogicNPCCounter"]["m_OnMinPlayerDist_2"];
CLogicNPCCounter.m_OnMinCount_3 = jsonData["CLogicNPCCounter"]["m_OnMinCount_3"];
CLogicNPCCounter.m_OnMaxCount_3 = jsonData["CLogicNPCCounter"]["m_OnMaxCount_3"];
CLogicNPCCounter.m_OnFactor_3 = jsonData["CLogicNPCCounter"]["m_OnFactor_3"];
CLogicNPCCounter.m_OnMinPlayerDist_3 = jsonData["CLogicNPCCounter"]["m_OnMinPlayerDist_3"];
CLogicNPCCounter.m_hSource = jsonData["CLogicNPCCounter"]["m_hSource"];
CLogicNPCCounter.m_iszSourceEntityName = jsonData["CLogicNPCCounter"]["m_iszSourceEntityName"];
CLogicNPCCounter.m_flDistanceMax = jsonData["CLogicNPCCounter"]["m_flDistanceMax"];
CLogicNPCCounter.m_bDisabled = jsonData["CLogicNPCCounter"]["m_bDisabled"];
CLogicNPCCounter.m_nMinCountAll = jsonData["CLogicNPCCounter"]["m_nMinCountAll"];
CLogicNPCCounter.m_nMaxCountAll = jsonData["CLogicNPCCounter"]["m_nMaxCountAll"];
CLogicNPCCounter.m_nMinFactorAll = jsonData["CLogicNPCCounter"]["m_nMinFactorAll"];
CLogicNPCCounter.m_nMaxFactorAll = jsonData["CLogicNPCCounter"]["m_nMaxFactorAll"];
CLogicNPCCounter.m_iszNPCClassname_1 = jsonData["CLogicNPCCounter"]["m_iszNPCClassname_1"];
CLogicNPCCounter.m_nNPCState_1 = jsonData["CLogicNPCCounter"]["m_nNPCState_1"];
CLogicNPCCounter.m_bInvertState_1 = jsonData["CLogicNPCCounter"]["m_bInvertState_1"];
CLogicNPCCounter.m_nMinCount_1 = jsonData["CLogicNPCCounter"]["m_nMinCount_1"];
CLogicNPCCounter.m_nMaxCount_1 = jsonData["CLogicNPCCounter"]["m_nMaxCount_1"];
CLogicNPCCounter.m_nMinFactor_1 = jsonData["CLogicNPCCounter"]["m_nMinFactor_1"];
CLogicNPCCounter.m_nMaxFactor_1 = jsonData["CLogicNPCCounter"]["m_nMaxFactor_1"];
CLogicNPCCounter.m_flDefaultDist_1 = jsonData["CLogicNPCCounter"]["m_flDefaultDist_1"];
CLogicNPCCounter.m_iszNPCClassname_2 = jsonData["CLogicNPCCounter"]["m_iszNPCClassname_2"];
CLogicNPCCounter.m_nNPCState_2 = jsonData["CLogicNPCCounter"]["m_nNPCState_2"];
CLogicNPCCounter.m_bInvertState_2 = jsonData["CLogicNPCCounter"]["m_bInvertState_2"];
CLogicNPCCounter.m_nMinCount_2 = jsonData["CLogicNPCCounter"]["m_nMinCount_2"];
CLogicNPCCounter.m_nMaxCount_2 = jsonData["CLogicNPCCounter"]["m_nMaxCount_2"];
CLogicNPCCounter.m_nMinFactor_2 = jsonData["CLogicNPCCounter"]["m_nMinFactor_2"];
CLogicNPCCounter.m_nMaxFactor_2 = jsonData["CLogicNPCCounter"]["m_nMaxFactor_2"];
CLogicNPCCounter.m_flDefaultDist_2 = jsonData["CLogicNPCCounter"]["m_flDefaultDist_2"];
CLogicNPCCounter.m_iszNPCClassname_3 = jsonData["CLogicNPCCounter"]["m_iszNPCClassname_3"];
CLogicNPCCounter.m_nNPCState_3 = jsonData["CLogicNPCCounter"]["m_nNPCState_3"];
CLogicNPCCounter.m_bInvertState_3 = jsonData["CLogicNPCCounter"]["m_bInvertState_3"];
CLogicNPCCounter.m_nMinCount_3 = jsonData["CLogicNPCCounter"]["m_nMinCount_3"];
CLogicNPCCounter.m_nMaxCount_3 = jsonData["CLogicNPCCounter"]["m_nMaxCount_3"];
CLogicNPCCounter.m_nMinFactor_3 = jsonData["CLogicNPCCounter"]["m_nMinFactor_3"];
CLogicNPCCounter.m_nMaxFactor_3 = jsonData["CLogicNPCCounter"]["m_nMaxFactor_3"];
CLogicNPCCounter.m_flDefaultDist_3 = jsonData["CLogicNPCCounter"]["m_flDefaultDist_3"];

// Atribuições para CCSGOViewModel
// CCSGOViewModel Offsets
CCSGOViewModel.m_bShouldIgnoreOffsetAndAccuracy = jsonData["CCSGOViewModel"]["m_bShouldIgnoreOffsetAndAccuracy"];

// Atribuições para CWeaponShield
// CWeaponShield Offsets
CWeaponShield.m_flBulletDamageAbsorbed = jsonData["CWeaponShield"]["m_flBulletDamageAbsorbed"];
CWeaponShield.m_flLastBulletHitSoundTime = jsonData["CWeaponShield"]["m_flLastBulletHitSoundTime"];
CWeaponShield.m_flDisplayHealth = jsonData["CWeaponShield"]["m_flDisplayHealth"];

// Atribuições para CBlood
// CBlood Offsets
CBlood.m_vecSprayAngles = jsonData["CBlood"]["m_vecSprayAngles"];
CBlood.m_vecSprayDir = jsonData["CBlood"]["m_vecSprayDir"];
CBlood.m_flAmount = jsonData["CBlood"]["m_flAmount"];
CBlood.m_Color = jsonData["CBlood"]["m_Color"];

// Atribuições para CEnvFade
// CEnvFade Offsets
CEnvFade.m_fadeColor = jsonData["CEnvFade"]["m_fadeColor"];
CEnvFade.m_Duration = jsonData["CEnvFade"]["m_Duration"];
CEnvFade.m_HoldDuration = jsonData["CEnvFade"]["m_HoldDuration"];
CEnvFade.m_OnBeginFade = jsonData["CEnvFade"]["m_OnBeginFade"];

// Atribuições para CBreakableProp
// CBreakableProp Offsets
CBreakableProp.m_CPropDataComponent = jsonData["CBreakableProp"]["m_CPropDataComponent"];
CBreakableProp.m_OnBreak = jsonData["CBreakableProp"]["m_OnBreak"];
CBreakableProp.m_OnHealthChanged = jsonData["CBreakableProp"]["m_OnHealthChanged"];
CBreakableProp.m_OnTakeDamage = jsonData["CBreakableProp"]["m_OnTakeDamage"];
CBreakableProp.m_impactEnergyScale = jsonData["CBreakableProp"]["m_impactEnergyScale"];
CBreakableProp.m_iMinHealthDmg = jsonData["CBreakableProp"]["m_iMinHealthDmg"];
CBreakableProp.m_preferredCarryAngles = jsonData["CBreakableProp"]["m_preferredCarryAngles"];
CBreakableProp.m_flPressureDelay = jsonData["CBreakableProp"]["m_flPressureDelay"];
CBreakableProp.m_flDefBurstScale = jsonData["CBreakableProp"]["m_flDefBurstScale"];
CBreakableProp.m_vDefBurstOffset = jsonData["CBreakableProp"]["m_vDefBurstOffset"];
CBreakableProp.m_hBreaker = jsonData["CBreakableProp"]["m_hBreaker"];
CBreakableProp.m_PerformanceMode = jsonData["CBreakableProp"]["m_PerformanceMode"];
CBreakableProp.m_flPreventDamageBeforeTime = jsonData["CBreakableProp"]["m_flPreventDamageBeforeTime"];
CBreakableProp.m_BreakableContentsType = jsonData["CBreakableProp"]["m_BreakableContentsType"];
CBreakableProp.m_strBreakableContentsPropGroupOverride = jsonData["CBreakableProp"]["m_strBreakableContentsPropGroupOverride"];
CBreakableProp.m_strBreakableContentsParticleOverride = jsonData["CBreakableProp"]["m_strBreakableContentsParticleOverride"];
CBreakableProp.m_bHasBreakPiecesOrCommands = jsonData["CBreakableProp"]["m_bHasBreakPiecesOrCommands"];
CBreakableProp.m_explodeDamage = jsonData["CBreakableProp"]["m_explodeDamage"];
CBreakableProp.m_explodeRadius = jsonData["CBreakableProp"]["m_explodeRadius"];
CBreakableProp.m_explosionDelay = jsonData["CBreakableProp"]["m_explosionDelay"];
CBreakableProp.m_explosionBuildupSound = jsonData["CBreakableProp"]["m_explosionBuildupSound"];
CBreakableProp.m_explosionCustomEffect = jsonData["CBreakableProp"]["m_explosionCustomEffect"];
CBreakableProp.m_explosionCustomSound = jsonData["CBreakableProp"]["m_explosionCustomSound"];
CBreakableProp.m_explosionModifier = jsonData["CBreakableProp"]["m_explosionModifier"];
CBreakableProp.m_hPhysicsAttacker = jsonData["CBreakableProp"]["m_hPhysicsAttacker"];
CBreakableProp.m_flLastPhysicsInfluenceTime = jsonData["CBreakableProp"]["m_flLastPhysicsInfluenceTime"];
CBreakableProp.m_bOriginalBlockLOS = jsonData["CBreakableProp"]["m_bOriginalBlockLOS"];
CBreakableProp.m_flDefaultFadeScale = jsonData["CBreakableProp"]["m_flDefaultFadeScale"];
CBreakableProp.m_hLastAttacker = jsonData["CBreakableProp"]["m_hLastAttacker"];
CBreakableProp.m_hFlareEnt = jsonData["CBreakableProp"]["m_hFlareEnt"];
CBreakableProp.m_bUsePuntSound = jsonData["CBreakableProp"]["m_bUsePuntSound"];
CBreakableProp.m_iszPuntSound = jsonData["CBreakableProp"]["m_iszPuntSound"];
CBreakableProp.m_noGhostCollision = jsonData["CBreakableProp"]["m_noGhostCollision"];

// Atribuições para CBaseCombatCharacter
// CBaseCombatCharacter Offsets
CBaseCombatCharacter.m_bForceServerRagdoll = jsonData["CBaseCombatCharacter"]["m_bForceServerRagdoll"];
CBaseCombatCharacter.m_hMyWearables = jsonData["CBaseCombatCharacter"]["m_hMyWearables"];
CBaseCombatCharacter.m_impactEnergyScale = jsonData["CBaseCombatCharacter"]["m_impactEnergyScale"];
CBaseCombatCharacter.m_LastHitGroup = jsonData["CBaseCombatCharacter"]["m_LastHitGroup"];
CBaseCombatCharacter.m_bApplyStressDamage = jsonData["CBaseCombatCharacter"]["m_bApplyStressDamage"];
CBaseCombatCharacter.m_iDamageCount = jsonData["CBaseCombatCharacter"]["m_iDamageCount"];
CBaseCombatCharacter.m_pVecRelationships = jsonData["CBaseCombatCharacter"]["m_pVecRelationships"];
CBaseCombatCharacter.m_strRelationships = jsonData["CBaseCombatCharacter"]["m_strRelationships"];
CBaseCombatCharacter.m_eHull = jsonData["CBaseCombatCharacter"]["m_eHull"];
CBaseCombatCharacter.m_nNavHullIdx = jsonData["CBaseCombatCharacter"]["m_nNavHullIdx"];

// Atribuições para CInferno
// CInferno Offsets
CInferno.m_firePositions = jsonData["CInferno"]["m_firePositions"];
CInferno.m_fireParentPositions = jsonData["CInferno"]["m_fireParentPositions"];
CInferno.m_bFireIsBurning = jsonData["CInferno"]["m_bFireIsBurning"];
CInferno.m_BurnNormal = jsonData["CInferno"]["m_BurnNormal"];
CInferno.m_fireCount = jsonData["CInferno"]["m_fireCount"];
CInferno.m_nInfernoType = jsonData["CInferno"]["m_nInfernoType"];
CInferno.m_nFireEffectTickBegin = jsonData["CInferno"]["m_nFireEffectTickBegin"];
CInferno.m_nFireLifetime = jsonData["CInferno"]["m_nFireLifetime"];
CInferno.m_bInPostEffectTime = jsonData["CInferno"]["m_bInPostEffectTime"];
CInferno.m_nFiresExtinguishCount = jsonData["CInferno"]["m_nFiresExtinguishCount"];
CInferno.m_bWasCreatedInSmoke = jsonData["CInferno"]["m_bWasCreatedInSmoke"];
CInferno.m_extent = jsonData["CInferno"]["m_extent"];
CInferno.m_damageTimer = jsonData["CInferno"]["m_damageTimer"];
CInferno.m_damageRampTimer = jsonData["CInferno"]["m_damageRampTimer"];
CInferno.m_splashVelocity = jsonData["CInferno"]["m_splashVelocity"];
CInferno.m_InitialSplashVelocity = jsonData["CInferno"]["m_InitialSplashVelocity"];
CInferno.m_startPos = jsonData["CInferno"]["m_startPos"];
CInferno.m_vecOriginalSpawnLocation = jsonData["CInferno"]["m_vecOriginalSpawnLocation"];
CInferno.m_activeTimer = jsonData["CInferno"]["m_activeTimer"];
CInferno.m_fireSpawnOffset = jsonData["CInferno"]["m_fireSpawnOffset"];
CInferno.m_nMaxFlames = jsonData["CInferno"]["m_nMaxFlames"];
CInferno.m_nSpreadCount = jsonData["CInferno"]["m_nSpreadCount"];
CInferno.m_BookkeepingTimer = jsonData["CInferno"]["m_BookkeepingTimer"];
CInferno.m_NextSpreadTimer = jsonData["CInferno"]["m_NextSpreadTimer"];
CInferno.m_nSourceItemDefIndex = jsonData["CInferno"]["m_nSourceItemDefIndex"];

// Atribuições para CEnvGlobal
// CEnvGlobal Offsets
CEnvGlobal.m_outCounter = jsonData["CEnvGlobal"]["m_outCounter"];
CEnvGlobal.m_globalstate = jsonData["CEnvGlobal"]["m_globalstate"];
CEnvGlobal.m_triggermode = jsonData["CEnvGlobal"]["m_triggermode"];
CEnvGlobal.m_initialstate = jsonData["CEnvGlobal"]["m_initialstate"];
CEnvGlobal.m_counter = jsonData["CEnvGlobal"]["m_counter"];

// Atribuições para CBaseFilter
// CBaseFilter Offsets
CBaseFilter.m_bNegated = jsonData["CBaseFilter"]["m_bNegated"];
CBaseFilter.m_OnPass = jsonData["CBaseFilter"]["m_OnPass"];
CBaseFilter.m_OnFail = jsonData["CBaseFilter"]["m_OnFail"];

// Atribuições para CTeam
// CTeam Offsets
CTeam.m_aPlayerControllers = jsonData["CTeam"]["m_aPlayerControllers"];
CTeam.m_aPlayers = jsonData["CTeam"]["m_aPlayers"];
CTeam.m_iScore = jsonData["CTeam"]["m_iScore"];
CTeam.m_szTeamname = jsonData["CTeam"]["m_szTeamname"];

// Atribuições para CSprite
// CSprite Offsets
CSprite.m_hSpriteMaterial = jsonData["CSprite"]["m_hSpriteMaterial"];
CSprite.m_hAttachedToEntity = jsonData["CSprite"]["m_hAttachedToEntity"];
CSprite.m_nAttachment = jsonData["CSprite"]["m_nAttachment"];
CSprite.m_flSpriteFramerate = jsonData["CSprite"]["m_flSpriteFramerate"];
CSprite.m_flFrame = jsonData["CSprite"]["m_flFrame"];
CSprite.m_flDieTime = jsonData["CSprite"]["m_flDieTime"];
CSprite.m_nBrightness = jsonData["CSprite"]["m_nBrightness"];
CSprite.m_flBrightnessDuration = jsonData["CSprite"]["m_flBrightnessDuration"];
CSprite.m_flSpriteScale = jsonData["CSprite"]["m_flSpriteScale"];
CSprite.m_flScaleDuration = jsonData["CSprite"]["m_flScaleDuration"];
CSprite.m_bWorldSpaceScale = jsonData["CSprite"]["m_bWorldSpaceScale"];
CSprite.m_flGlowProxySize = jsonData["CSprite"]["m_flGlowProxySize"];
CSprite.m_flHDRColorScale = jsonData["CSprite"]["m_flHDRColorScale"];
CSprite.m_flLastTime = jsonData["CSprite"]["m_flLastTime"];
CSprite.m_flMaxFrame = jsonData["CSprite"]["m_flMaxFrame"];
CSprite.m_flStartScale = jsonData["CSprite"]["m_flStartScale"];
CSprite.m_flDestScale = jsonData["CSprite"]["m_flDestScale"];
CSprite.m_flScaleTimeStart = jsonData["CSprite"]["m_flScaleTimeStart"];
CSprite.m_nStartBrightness = jsonData["CSprite"]["m_nStartBrightness"];
CSprite.m_nDestBrightness = jsonData["CSprite"]["m_nDestBrightness"];
CSprite.m_flBrightnessTimeStart = jsonData["CSprite"]["m_flBrightnessTimeStart"];
CSprite.m_nSpriteWidth = jsonData["CSprite"]["m_nSpriteWidth"];
CSprite.m_nSpriteHeight = jsonData["CSprite"]["m_nSpriteHeight"];

// Atribuições para CPathMover
// CPathMover Offsets
CPathMover.m_vecPathNodes = jsonData["CPathMover"]["m_vecPathNodes"];
CPathMover.m_flPathLength = jsonData["CPathMover"]["m_flPathLength"];
CPathMover.m_bClosedLoop = jsonData["CPathMover"]["m_bClosedLoop"];

// Atribuições para CChicken
// CChicken Offsets
CChicken.m_AttributeManager = jsonData["CChicken"]["m_AttributeManager"];
CChicken.m_updateTimer = jsonData["CChicken"]["m_updateTimer"];
CChicken.m_stuckAnchor = jsonData["CChicken"]["m_stuckAnchor"];
CChicken.m_stuckTimer = jsonData["CChicken"]["m_stuckTimer"];
CChicken.m_collisionStuckTimer = jsonData["CChicken"]["m_collisionStuckTimer"];
CChicken.m_isOnGround = jsonData["CChicken"]["m_isOnGround"];
CChicken.m_vFallVelocity = jsonData["CChicken"]["m_vFallVelocity"];
CChicken.m_desiredActivity = jsonData["CChicken"]["m_desiredActivity"];
CChicken.m_currentActivity = jsonData["CChicken"]["m_currentActivity"];
CChicken.m_activityTimer = jsonData["CChicken"]["m_activityTimer"];
CChicken.m_turnRate = jsonData["CChicken"]["m_turnRate"];
CChicken.m_fleeFrom = jsonData["CChicken"]["m_fleeFrom"];
CChicken.m_moveRateThrottleTimer = jsonData["CChicken"]["m_moveRateThrottleTimer"];
CChicken.m_startleTimer = jsonData["CChicken"]["m_startleTimer"];
CChicken.m_vocalizeTimer = jsonData["CChicken"]["m_vocalizeTimer"];
CChicken.m_flWhenZombified = jsonData["CChicken"]["m_flWhenZombified"];
CChicken.m_jumpedThisFrame = jsonData["CChicken"]["m_jumpedThisFrame"];
CChicken.m_leader = jsonData["CChicken"]["m_leader"];
CChicken.m_reuseTimer = jsonData["CChicken"]["m_reuseTimer"];
CChicken.m_hasBeenUsed = jsonData["CChicken"]["m_hasBeenUsed"];
CChicken.m_jumpTimer = jsonData["CChicken"]["m_jumpTimer"];
CChicken.m_flLastJumpTime = jsonData["CChicken"]["m_flLastJumpTime"];
CChicken.m_bInJump = jsonData["CChicken"]["m_bInJump"];
CChicken.m_repathTimer = jsonData["CChicken"]["m_repathTimer"];
CChicken.m_vecPathGoal = jsonData["CChicken"]["m_vecPathGoal"];
CChicken.m_flActiveFollowStartTime = jsonData["CChicken"]["m_flActiveFollowStartTime"];
CChicken.m_followMinuteTimer = jsonData["CChicken"]["m_followMinuteTimer"];
CChicken.m_BlockDirectionTimer = jsonData["CChicken"]["m_BlockDirectionTimer"];

// Atribuições para CChangeLevel
// CChangeLevel Offsets
CChangeLevel.m_sMapName = jsonData["CChangeLevel"]["m_sMapName"];
CChangeLevel.m_sLandmarkName = jsonData["CChangeLevel"]["m_sLandmarkName"];
CChangeLevel.m_OnChangeLevel = jsonData["CChangeLevel"]["m_OnChangeLevel"];
CChangeLevel.m_bTouched = jsonData["CChangeLevel"]["m_bTouched"];
CChangeLevel.m_bNoTouch = jsonData["CChangeLevel"]["m_bNoTouch"];
CChangeLevel.m_bNewChapter = jsonData["CChangeLevel"]["m_bNewChapter"];
CChangeLevel.m_bOnChangeLevelFired = jsonData["CChangeLevel"]["m_bOnChangeLevelFired"];

// Atribuições para CTriggerLerpObject
// CTriggerLerpObject Offsets
CTriggerLerpObject.m_iszLerpTarget = jsonData["CTriggerLerpObject"]["m_iszLerpTarget"];
CTriggerLerpObject.m_hLerpTarget = jsonData["CTriggerLerpObject"]["m_hLerpTarget"];
CTriggerLerpObject.m_iszLerpTargetAttachment = jsonData["CTriggerLerpObject"]["m_iszLerpTargetAttachment"];
CTriggerLerpObject.m_hLerpTargetAttachment = jsonData["CTriggerLerpObject"]["m_hLerpTargetAttachment"];
CTriggerLerpObject.m_flLerpDuration = jsonData["CTriggerLerpObject"]["m_flLerpDuration"];
CTriggerLerpObject.m_bLerpRestoreMoveType = jsonData["CTriggerLerpObject"]["m_bLerpRestoreMoveType"];
CTriggerLerpObject.m_bSingleLerpObject = jsonData["CTriggerLerpObject"]["m_bSingleLerpObject"];
CTriggerLerpObject.m_vecLerpingObjects = jsonData["CTriggerLerpObject"]["m_vecLerpingObjects"];
CTriggerLerpObject.m_iszLerpEffect = jsonData["CTriggerLerpObject"]["m_iszLerpEffect"];
CTriggerLerpObject.m_iszLerpSound = jsonData["CTriggerLerpObject"]["m_iszLerpSound"];
CTriggerLerpObject.m_bAttachTouchingObject = jsonData["CTriggerLerpObject"]["m_bAttachTouchingObject"];
CTriggerLerpObject.m_hEntityToWaitForDisconnect = jsonData["CTriggerLerpObject"]["m_hEntityToWaitForDisconnect"];
CTriggerLerpObject.m_OnLerpStarted = jsonData["CTriggerLerpObject"]["m_OnLerpStarted"];
CTriggerLerpObject.m_OnLerpFinished = jsonData["CTriggerLerpObject"]["m_OnLerpFinished"];

// Atribuições para CBaseTrigger
// CBaseTrigger Offsets
CBaseTrigger.m_bDisabled = jsonData["CBaseTrigger"]["m_bDisabled"];
CBaseTrigger.m_iFilterName = jsonData["CBaseTrigger"]["m_iFilterName"];
CBaseTrigger.m_hFilter = jsonData["CBaseTrigger"]["m_hFilter"];
CBaseTrigger.m_OnStartTouch = jsonData["CBaseTrigger"]["m_OnStartTouch"];
CBaseTrigger.m_OnStartTouchAll = jsonData["CBaseTrigger"]["m_OnStartTouchAll"];
CBaseTrigger.m_OnEndTouch = jsonData["CBaseTrigger"]["m_OnEndTouch"];
CBaseTrigger.m_OnEndTouchAll = jsonData["CBaseTrigger"]["m_OnEndTouchAll"];
CBaseTrigger.m_OnTouching = jsonData["CBaseTrigger"]["m_OnTouching"];
CBaseTrigger.m_OnTouchingEachEntity = jsonData["CBaseTrigger"]["m_OnTouchingEachEntity"];
CBaseTrigger.m_OnNotTouching = jsonData["CBaseTrigger"]["m_OnNotTouching"];
CBaseTrigger.m_hTouchingEntities = jsonData["CBaseTrigger"]["m_hTouchingEntities"];
CBaseTrigger.m_bClientSidePredicted = jsonData["CBaseTrigger"]["m_bClientSidePredicted"];

// Atribuições para CEconEntity
// CEconEntity Offsets
CEconEntity.m_AttributeManager = jsonData["CEconEntity"]["m_AttributeManager"];
CEconEntity.m_OriginalOwnerXuidLow = jsonData["CEconEntity"]["m_OriginalOwnerXuidLow"];
CEconEntity.m_OriginalOwnerXuidHigh = jsonData["CEconEntity"]["m_OriginalOwnerXuidHigh"];
CEconEntity.m_nFallbackPaintKit = jsonData["CEconEntity"]["m_nFallbackPaintKit"];
CEconEntity.m_nFallbackSeed = jsonData["CEconEntity"]["m_nFallbackSeed"];
CEconEntity.m_flFallbackWear = jsonData["CEconEntity"]["m_flFallbackWear"];
CEconEntity.m_nFallbackStatTrak = jsonData["CEconEntity"]["m_nFallbackStatTrak"];
CEconEntity.m_hOldProvidee = jsonData["CEconEntity"]["m_hOldProvidee"];
CEconEntity.m_iOldOwnerClass = jsonData["CEconEntity"]["m_iOldOwnerClass"];

// Atribuições para CPointWorldText
// CPointWorldText Offsets
CPointWorldText.m_messageText = jsonData["CPointWorldText"]["m_messageText"];
CPointWorldText.m_FontName = jsonData["CPointWorldText"]["m_FontName"];
CPointWorldText.m_bEnabled = jsonData["CPointWorldText"]["m_bEnabled"];
CPointWorldText.m_bFullbright = jsonData["CPointWorldText"]["m_bFullbright"];
CPointWorldText.m_flWorldUnitsPerPx = jsonData["CPointWorldText"]["m_flWorldUnitsPerPx"];
CPointWorldText.m_flFontSize = jsonData["CPointWorldText"]["m_flFontSize"];
CPointWorldText.m_flDepthOffset = jsonData["CPointWorldText"]["m_flDepthOffset"];
CPointWorldText.m_Color = jsonData["CPointWorldText"]["m_Color"];
CPointWorldText.m_nJustifyHorizontal = jsonData["CPointWorldText"]["m_nJustifyHorizontal"];
CPointWorldText.m_nJustifyVertical = jsonData["CPointWorldText"]["m_nJustifyVertical"];
CPointWorldText.m_nReorientMode = jsonData["CPointWorldText"]["m_nReorientMode"];

// Atribuições para CSoundAreaEntityOrientedBox
// CSoundAreaEntityOrientedBox Offsets
CSoundAreaEntityOrientedBox.m_vMin = jsonData["CSoundAreaEntityOrientedBox"]["m_vMin"];
CSoundAreaEntityOrientedBox.m_vMax = jsonData["CSoundAreaEntityOrientedBox"]["m_vMax"];

// Atribuições para CTriggerPhysics
// CTriggerPhysics Offsets
CTriggerPhysics.m_gravityScale = jsonData["CTriggerPhysics"]["m_gravityScale"];
CTriggerPhysics.m_linearLimit = jsonData["CTriggerPhysics"]["m_linearLimit"];
CTriggerPhysics.m_linearDamping = jsonData["CTriggerPhysics"]["m_linearDamping"];
CTriggerPhysics.m_angularLimit = jsonData["CTriggerPhysics"]["m_angularLimit"];
CTriggerPhysics.m_angularDamping = jsonData["CTriggerPhysics"]["m_angularDamping"];
CTriggerPhysics.m_linearForce = jsonData["CTriggerPhysics"]["m_linearForce"];
CTriggerPhysics.m_flFrequency = jsonData["CTriggerPhysics"]["m_flFrequency"];
CTriggerPhysics.m_flDampingRatio = jsonData["CTriggerPhysics"]["m_flDampingRatio"];
CTriggerPhysics.m_vecLinearForcePointAt = jsonData["CTriggerPhysics"]["m_vecLinearForcePointAt"];
CTriggerPhysics.m_bCollapseToForcePoint = jsonData["CTriggerPhysics"]["m_bCollapseToForcePoint"];
CTriggerPhysics.m_vecLinearForcePointAtWorld = jsonData["CTriggerPhysics"]["m_vecLinearForcePointAtWorld"];
CTriggerPhysics.m_vecLinearForceDirection = jsonData["CTriggerPhysics"]["m_vecLinearForceDirection"];
CTriggerPhysics.m_bConvertToDebrisWhenPossible = jsonData["CTriggerPhysics"]["m_bConvertToDebrisWhenPossible"];

// Atribuições para CFuncShatterglass
// CFuncShatterglass Offsets
CFuncShatterglass.m_matPanelTransform = jsonData["CFuncShatterglass"]["m_matPanelTransform"];
CFuncShatterglass.m_matPanelTransformWsTemp = jsonData["CFuncShatterglass"]["m_matPanelTransformWsTemp"];
CFuncShatterglass.m_vecShatterGlassShards = jsonData["CFuncShatterglass"]["m_vecShatterGlassShards"];
CFuncShatterglass.m_PanelSize = jsonData["CFuncShatterglass"]["m_PanelSize"];
CFuncShatterglass.m_flLastShatterSoundEmitTime = jsonData["CFuncShatterglass"]["m_flLastShatterSoundEmitTime"];
CFuncShatterglass.m_flLastCleanupTime = jsonData["CFuncShatterglass"]["m_flLastCleanupTime"];
CFuncShatterglass.m_flInitAtTime = jsonData["CFuncShatterglass"]["m_flInitAtTime"];
CFuncShatterglass.m_flGlassThickness = jsonData["CFuncShatterglass"]["m_flGlassThickness"];
CFuncShatterglass.m_flSpawnInvulnerability = jsonData["CFuncShatterglass"]["m_flSpawnInvulnerability"];
CFuncShatterglass.m_bBreakSilent = jsonData["CFuncShatterglass"]["m_bBreakSilent"];
CFuncShatterglass.m_bBreakShardless = jsonData["CFuncShatterglass"]["m_bBreakShardless"];
CFuncShatterglass.m_bBroken = jsonData["CFuncShatterglass"]["m_bBroken"];
CFuncShatterglass.m_bGlassNavIgnore = jsonData["CFuncShatterglass"]["m_bGlassNavIgnore"];
CFuncShatterglass.m_bGlassInFrame = jsonData["CFuncShatterglass"]["m_bGlassInFrame"];
CFuncShatterglass.m_bStartBroken = jsonData["CFuncShatterglass"]["m_bStartBroken"];
CFuncShatterglass.m_iInitialDamageType = jsonData["CFuncShatterglass"]["m_iInitialDamageType"];
CFuncShatterglass.m_szDamagePositioningEntityName01 = jsonData["CFuncShatterglass"]["m_szDamagePositioningEntityName01"];
CFuncShatterglass.m_szDamagePositioningEntityName02 = jsonData["CFuncShatterglass"]["m_szDamagePositioningEntityName02"];
CFuncShatterglass.m_szDamagePositioningEntityName03 = jsonData["CFuncShatterglass"]["m_szDamagePositioningEntityName03"];
CFuncShatterglass.m_szDamagePositioningEntityName04 = jsonData["CFuncShatterglass"]["m_szDamagePositioningEntityName04"];
CFuncShatterglass.m_vInitialDamagePositions = jsonData["CFuncShatterglass"]["m_vInitialDamagePositions"];
CFuncShatterglass.m_vExtraDamagePositions = jsonData["CFuncShatterglass"]["m_vExtraDamagePositions"];
CFuncShatterglass.m_vInitialPanelVertices = jsonData["CFuncShatterglass"]["m_vInitialPanelVertices"];
CFuncShatterglass.m_OnBroken = jsonData["CFuncShatterglass"]["m_OnBroken"];
CFuncShatterglass.m_iSurfaceType = jsonData["CFuncShatterglass"]["m_iSurfaceType"];
CFuncShatterglass.m_hMaterialDamageBase = jsonData["CFuncShatterglass"]["m_hMaterialDamageBase"];

// Atribuições para CSoundEventSphereEntity
// CSoundEventSphereEntity Offsets
CSoundEventSphereEntity.m_flRadius = jsonData["CSoundEventSphereEntity"]["m_flRadius"];

// Atribuições para CPlantedC4
// CPlantedC4 Offsets
CPlantedC4.m_bBombTicking = jsonData["CPlantedC4"]["m_bBombTicking"];
CPlantedC4.m_flC4Blow = jsonData["CPlantedC4"]["m_flC4Blow"];
CPlantedC4.m_nBombSite = jsonData["CPlantedC4"]["m_nBombSite"];
CPlantedC4.m_nSourceSoundscapeHash = jsonData["CPlantedC4"]["m_nSourceSoundscapeHash"];
CPlantedC4.m_AttributeManager = jsonData["CPlantedC4"]["m_AttributeManager"];
CPlantedC4.m_OnBombDefused = jsonData["CPlantedC4"]["m_OnBombDefused"];
CPlantedC4.m_OnBombBeginDefuse = jsonData["CPlantedC4"]["m_OnBombBeginDefuse"];
CPlantedC4.m_OnBombDefuseAborted = jsonData["CPlantedC4"]["m_OnBombDefuseAborted"];
CPlantedC4.m_bCannotBeDefused = jsonData["CPlantedC4"]["m_bCannotBeDefused"];
CPlantedC4.m_entitySpottedState = jsonData["CPlantedC4"]["m_entitySpottedState"];
CPlantedC4.m_nSpotRules = jsonData["CPlantedC4"]["m_nSpotRules"];
CPlantedC4.m_bTrainingPlacedByPlayer = jsonData["CPlantedC4"]["m_bTrainingPlacedByPlayer"];
CPlantedC4.m_bHasExploded = jsonData["CPlantedC4"]["m_bHasExploded"];
CPlantedC4.m_flTimerLength = jsonData["CPlantedC4"]["m_flTimerLength"];
CPlantedC4.m_bBeingDefused = jsonData["CPlantedC4"]["m_bBeingDefused"];
CPlantedC4.m_fLastDefuseTime = jsonData["CPlantedC4"]["m_fLastDefuseTime"];
CPlantedC4.m_flDefuseLength = jsonData["CPlantedC4"]["m_flDefuseLength"];
CPlantedC4.m_flDefuseCountDown = jsonData["CPlantedC4"]["m_flDefuseCountDown"];
CPlantedC4.m_bBombDefused = jsonData["CPlantedC4"]["m_bBombDefused"];
CPlantedC4.m_hBombDefuser = jsonData["CPlantedC4"]["m_hBombDefuser"];
CPlantedC4.m_hControlPanel = jsonData["CPlantedC4"]["m_hControlPanel"];
CPlantedC4.m_iProgressBarTime = jsonData["CPlantedC4"]["m_iProgressBarTime"];
CPlantedC4.m_bVoiceAlertFired = jsonData["CPlantedC4"]["m_bVoiceAlertFired"];
CPlantedC4.m_bVoiceAlertPlayed = jsonData["CPlantedC4"]["m_bVoiceAlertPlayed"];
CPlantedC4.m_flNextBotBeepTime = jsonData["CPlantedC4"]["m_flNextBotBeepTime"];
CPlantedC4.m_angCatchUpToPlayerEye = jsonData["CPlantedC4"]["m_angCatchUpToPlayerEye"];
CPlantedC4.m_flLastSpinDetectionTime = jsonData["CPlantedC4"]["m_flLastSpinDetectionTime"];

// Atribuições para CPointClientUIDialog
// CPointClientUIDialog Offsets
CPointClientUIDialog.m_hActivator = jsonData["CPointClientUIDialog"]["m_hActivator"];
CPointClientUIDialog.m_bStartEnabled = jsonData["CPointClientUIDialog"]["m_bStartEnabled"];

// Atribuições para CEnvSplash
// CEnvSplash Offsets
CEnvSplash.m_flScale = jsonData["CEnvSplash"]["m_flScale"];

// Atribuições para CPointCameraVFOV
// CPointCameraVFOV Offsets
CPointCameraVFOV.m_flVerticalFOV = jsonData["CPointCameraVFOV"]["m_flVerticalFOV"];

// Atribuições para CWeaponTaser
// CWeaponTaser Offsets
CWeaponTaser.m_fFireTime = jsonData["CWeaponTaser"]["m_fFireTime"];
CWeaponTaser.m_nLastAttackTick = jsonData["CWeaponTaser"]["m_nLastAttackTick"];

// Atribuições para CMarkupVolume
// CMarkupVolume Offsets
CMarkupVolume.m_bDisabled = jsonData["CMarkupVolume"]["m_bDisabled"];

// Atribuições para CMessage
// CMessage Offsets
CMessage.m_iszMessage = jsonData["CMessage"]["m_iszMessage"];
CMessage.m_MessageVolume = jsonData["CMessage"]["m_MessageVolume"];
CMessage.m_MessageAttenuation = jsonData["CMessage"]["m_MessageAttenuation"];
CMessage.m_Radius = jsonData["CMessage"]["m_Radius"];
CMessage.m_sNoise = jsonData["CMessage"]["m_sNoise"];
CMessage.m_OnShowMessage = jsonData["CMessage"]["m_OnShowMessage"];

// Atribuições para CLogicGameEventListener
// CLogicGameEventListener Offsets
CLogicGameEventListener.m_OnEventFired = jsonData["CLogicGameEventListener"]["m_OnEventFired"];
CLogicGameEventListener.m_iszGameEventName = jsonData["CLogicGameEventListener"]["m_iszGameEventName"];
CLogicGameEventListener.m_iszGameEventItem = jsonData["CLogicGameEventListener"]["m_iszGameEventItem"];
CLogicGameEventListener.m_bEnabled = jsonData["CLogicGameEventListener"]["m_bEnabled"];
CLogicGameEventListener.m_bStartDisabled = jsonData["CLogicGameEventListener"]["m_bStartDisabled"];

// Atribuições para CBreakable
// CBreakable Offsets
CBreakable.m_CPropDataComponent = jsonData["CBreakable"]["m_CPropDataComponent"];
CBreakable.m_Material = jsonData["CBreakable"]["m_Material"];
CBreakable.m_hBreaker = jsonData["CBreakable"]["m_hBreaker"];
CBreakable.m_Explosion = jsonData["CBreakable"]["m_Explosion"];
CBreakable.m_iszSpawnObject = jsonData["CBreakable"]["m_iszSpawnObject"];
CBreakable.m_flPressureDelay = jsonData["CBreakable"]["m_flPressureDelay"];
CBreakable.m_iMinHealthDmg = jsonData["CBreakable"]["m_iMinHealthDmg"];
CBreakable.m_iszPropData = jsonData["CBreakable"]["m_iszPropData"];
CBreakable.m_impactEnergyScale = jsonData["CBreakable"]["m_impactEnergyScale"];
CBreakable.m_nOverrideBlockLOS = jsonData["CBreakable"]["m_nOverrideBlockLOS"];
CBreakable.m_OnBreak = jsonData["CBreakable"]["m_OnBreak"];
CBreakable.m_OnHealthChanged = jsonData["CBreakable"]["m_OnHealthChanged"];
CBreakable.m_PerformanceMode = jsonData["CBreakable"]["m_PerformanceMode"];
CBreakable.m_hPhysicsAttacker = jsonData["CBreakable"]["m_hPhysicsAttacker"];
CBreakable.m_flLastPhysicsInfluenceTime = jsonData["CBreakable"]["m_flLastPhysicsInfluenceTime"];

// Atribuições para CBaseToggle
// CBaseToggle Offsets
CBaseToggle.m_toggle_state = jsonData["CBaseToggle"]["m_toggle_state"];
CBaseToggle.m_flMoveDistance = jsonData["CBaseToggle"]["m_flMoveDistance"];
CBaseToggle.m_flWait = jsonData["CBaseToggle"]["m_flWait"];
CBaseToggle.m_flLip = jsonData["CBaseToggle"]["m_flLip"];
CBaseToggle.m_bAlwaysFireBlockedOutputs = jsonData["CBaseToggle"]["m_bAlwaysFireBlockedOutputs"];
CBaseToggle.m_vecPosition1 = jsonData["CBaseToggle"]["m_vecPosition1"];
CBaseToggle.m_vecPosition2 = jsonData["CBaseToggle"]["m_vecPosition2"];
CBaseToggle.m_vecMoveAng = jsonData["CBaseToggle"]["m_vecMoveAng"];
CBaseToggle.m_vecAngle1 = jsonData["CBaseToggle"]["m_vecAngle1"];
CBaseToggle.m_vecAngle2 = jsonData["CBaseToggle"]["m_vecAngle2"];
CBaseToggle.m_flHeight = jsonData["CBaseToggle"]["m_flHeight"];
CBaseToggle.m_hActivator = jsonData["CBaseToggle"]["m_hActivator"];
CBaseToggle.m_vecFinalDest = jsonData["CBaseToggle"]["m_vecFinalDest"];
CBaseToggle.m_vecFinalAngle = jsonData["CBaseToggle"]["m_vecFinalAngle"];
CBaseToggle.m_movementType = jsonData["CBaseToggle"]["m_movementType"];
CBaseToggle.m_sMaster = jsonData["CBaseToggle"]["m_sMaster"];

// Atribuições para CMomentaryRotButton
// CMomentaryRotButton Offsets
CMomentaryRotButton.m_Position = jsonData["CMomentaryRotButton"]["m_Position"];
CMomentaryRotButton.m_OnUnpressed = jsonData["CMomentaryRotButton"]["m_OnUnpressed"];
CMomentaryRotButton.m_OnFullyOpen = jsonData["CMomentaryRotButton"]["m_OnFullyOpen"];
CMomentaryRotButton.m_OnFullyClosed = jsonData["CMomentaryRotButton"]["m_OnFullyClosed"];
CMomentaryRotButton.m_OnReachedPosition = jsonData["CMomentaryRotButton"]["m_OnReachedPosition"];
CMomentaryRotButton.m_lastUsed = jsonData["CMomentaryRotButton"]["m_lastUsed"];
CMomentaryRotButton.m_start = jsonData["CMomentaryRotButton"]["m_start"];
CMomentaryRotButton.m_end = jsonData["CMomentaryRotButton"]["m_end"];
CMomentaryRotButton.m_IdealYaw = jsonData["CMomentaryRotButton"]["m_IdealYaw"];
CMomentaryRotButton.m_sNoise = jsonData["CMomentaryRotButton"]["m_sNoise"];
CMomentaryRotButton.m_bUpdateTarget = jsonData["CMomentaryRotButton"]["m_bUpdateTarget"];
CMomentaryRotButton.m_direction = jsonData["CMomentaryRotButton"]["m_direction"];
CMomentaryRotButton.m_returnSpeed = jsonData["CMomentaryRotButton"]["m_returnSpeed"];
CMomentaryRotButton.m_flStartPosition = jsonData["CMomentaryRotButton"]["m_flStartPosition"];

// Atribuições para CGameText
// CGameText Offsets
CGameText.m_iszMessage = jsonData["CGameText"]["m_iszMessage"];
CGameText.m_textParms = jsonData["CGameText"]["m_textParms"];

// Atribuições para CTextureBasedAnimatable
// CTextureBasedAnimatable Offsets
CTextureBasedAnimatable.m_bLoop = jsonData["CTextureBasedAnimatable"]["m_bLoop"];
CTextureBasedAnimatable.m_flFPS = jsonData["CTextureBasedAnimatable"]["m_flFPS"];
CTextureBasedAnimatable.m_hPositionKeys = jsonData["CTextureBasedAnimatable"]["m_hPositionKeys"];
CTextureBasedAnimatable.m_hRotationKeys = jsonData["CTextureBasedAnimatable"]["m_hRotationKeys"];
CTextureBasedAnimatable.m_vAnimationBoundsMin = jsonData["CTextureBasedAnimatable"]["m_vAnimationBoundsMin"];
CTextureBasedAnimatable.m_vAnimationBoundsMax = jsonData["CTextureBasedAnimatable"]["m_vAnimationBoundsMax"];
CTextureBasedAnimatable.m_flStartTime = jsonData["CTextureBasedAnimatable"]["m_flStartTime"];
CTextureBasedAnimatable.m_flStartFrame = jsonData["CTextureBasedAnimatable"]["m_flStartFrame"];

// Atribuições para CMarkupVolumeWithRef
// CMarkupVolumeWithRef Offsets
CMarkupVolumeWithRef.m_bUseRef = jsonData["CMarkupVolumeWithRef"]["m_bUseRef"];
CMarkupVolumeWithRef.m_vRefPos = jsonData["CMarkupVolumeWithRef"]["m_vRefPos"];
CMarkupVolumeWithRef.m_flRefDot = jsonData["CMarkupVolumeWithRef"]["m_flRefDot"];

// Atribuições para CPhysThruster
// CPhysThruster Offsets
CPhysThruster.m_localOrigin = jsonData["CPhysThruster"]["m_localOrigin"];

// Atribuições para CShatterGlassShardPhysics
// CShatterGlassShardPhysics Offsets
CShatterGlassShardPhysics.m_bDebris = jsonData["CShatterGlassShardPhysics"]["m_bDebris"];
CShatterGlassShardPhysics.m_hParentShard = jsonData["CShatterGlassShardPhysics"]["m_hParentShard"];
CShatterGlassShardPhysics.m_ShardDesc = jsonData["CShatterGlassShardPhysics"]["m_ShardDesc"];

// Atribuições para CFilterModel
// CFilterModel Offsets
CFilterModel.m_iFilterModel = jsonData["CFilterModel"]["m_iFilterModel"];

// Atribuições para CCSPlayerPawnBase
// CCSPlayerPawnBase Offsets
CCSPlayerPawnBase.m_CTouchExpansionComponent = jsonData["CCSPlayerPawnBase"]["m_CTouchExpansionComponent"];
CCSPlayerPawnBase.m_pPingServices = jsonData["CCSPlayerPawnBase"]["m_pPingServices"];
CCSPlayerPawnBase.m_pViewModelServices = jsonData["CCSPlayerPawnBase"]["m_pViewModelServices"];
CCSPlayerPawnBase.m_blindUntilTime = jsonData["CCSPlayerPawnBase"]["m_blindUntilTime"];
CCSPlayerPawnBase.m_blindStartTime = jsonData["CCSPlayerPawnBase"]["m_blindStartTime"];
CCSPlayerPawnBase.m_iPlayerState = jsonData["CCSPlayerPawnBase"]["m_iPlayerState"];
CCSPlayerPawnBase.m_bRespawning = jsonData["CCSPlayerPawnBase"]["m_bRespawning"];
CCSPlayerPawnBase.m_fImmuneToGunGameDamageTime = jsonData["CCSPlayerPawnBase"]["m_fImmuneToGunGameDamageTime"];
CCSPlayerPawnBase.m_bGunGameImmunity = jsonData["CCSPlayerPawnBase"]["m_bGunGameImmunity"];
CCSPlayerPawnBase.m_fMolotovDamageTime = jsonData["CCSPlayerPawnBase"]["m_fMolotovDamageTime"];
CCSPlayerPawnBase.m_bHasMovedSinceSpawn = jsonData["CCSPlayerPawnBase"]["m_bHasMovedSinceSpawn"];
CCSPlayerPawnBase.m_iNumSpawns = jsonData["CCSPlayerPawnBase"]["m_iNumSpawns"];
CCSPlayerPawnBase.m_flIdleTimeSinceLastAction = jsonData["CCSPlayerPawnBase"]["m_flIdleTimeSinceLastAction"];
CCSPlayerPawnBase.m_fNextRadarUpdateTime = jsonData["CCSPlayerPawnBase"]["m_fNextRadarUpdateTime"];
CCSPlayerPawnBase.m_flFlashDuration = jsonData["CCSPlayerPawnBase"]["m_flFlashDuration"];
CCSPlayerPawnBase.m_flFlashMaxAlpha = jsonData["CCSPlayerPawnBase"]["m_flFlashMaxAlpha"];
CCSPlayerPawnBase.m_flProgressBarStartTime = jsonData["CCSPlayerPawnBase"]["m_flProgressBarStartTime"];
CCSPlayerPawnBase.m_iProgressBarDuration = jsonData["CCSPlayerPawnBase"]["m_iProgressBarDuration"];
CCSPlayerPawnBase.m_angEyeAngles = jsonData["CCSPlayerPawnBase"]["m_angEyeAngles"];
CCSPlayerPawnBase.m_wasNotKilledNaturally = jsonData["CCSPlayerPawnBase"]["m_wasNotKilledNaturally"];
CCSPlayerPawnBase.m_bCommittingSuicideOnTeamChange = jsonData["CCSPlayerPawnBase"]["m_bCommittingSuicideOnTeamChange"];
CCSPlayerPawnBase.m_hOriginalController = jsonData["CCSPlayerPawnBase"]["m_hOriginalController"];

// Atribuições para CPathTrack
// CPathTrack Offsets
CPathTrack.m_pnext = jsonData["CPathTrack"]["m_pnext"];
CPathTrack.m_pprevious = jsonData["CPathTrack"]["m_pprevious"];
CPathTrack.m_paltpath = jsonData["CPathTrack"]["m_paltpath"];
CPathTrack.m_flRadius = jsonData["CPathTrack"]["m_flRadius"];
CPathTrack.m_length = jsonData["CPathTrack"]["m_length"];
CPathTrack.m_altName = jsonData["CPathTrack"]["m_altName"];
CPathTrack.m_nIterVal = jsonData["CPathTrack"]["m_nIterVal"];
CPathTrack.m_eOrientationType = jsonData["CPathTrack"]["m_eOrientationType"];
CPathTrack.m_OnPass = jsonData["CPathTrack"]["m_OnPass"];

// Atribuições para CLogicDistanceCheck
// CLogicDistanceCheck Offsets
CLogicDistanceCheck.m_iszEntityA = jsonData["CLogicDistanceCheck"]["m_iszEntityA"];
CLogicDistanceCheck.m_iszEntityB = jsonData["CLogicDistanceCheck"]["m_iszEntityB"];
CLogicDistanceCheck.m_flZone1Distance = jsonData["CLogicDistanceCheck"]["m_flZone1Distance"];
CLogicDistanceCheck.m_flZone2Distance = jsonData["CLogicDistanceCheck"]["m_flZone2Distance"];
CLogicDistanceCheck.m_InZone1 = jsonData["CLogicDistanceCheck"]["m_InZone1"];
CLogicDistanceCheck.m_InZone2 = jsonData["CLogicDistanceCheck"]["m_InZone2"];
CLogicDistanceCheck.m_InZone3 = jsonData["CLogicDistanceCheck"]["m_InZone3"];

// Atribuições para COmniLight
// COmniLight Offsets
COmniLight.m_flInnerAngle = jsonData["COmniLight"]["m_flInnerAngle"];
COmniLight.m_flOuterAngle = jsonData["COmniLight"]["m_flOuterAngle"];
COmniLight.m_bShowLight = jsonData["COmniLight"]["m_bShowLight"];

// Atribuições para CInfoVisibilityBox
// CInfoVisibilityBox Offsets
CInfoVisibilityBox.m_nMode = jsonData["CInfoVisibilityBox"]["m_nMode"];
CInfoVisibilityBox.m_vBoxSize = jsonData["CInfoVisibilityBox"]["m_vBoxSize"];
CInfoVisibilityBox.m_bEnabled = jsonData["CInfoVisibilityBox"]["m_bEnabled"];

// Atribuições para CSoundOpvarSetPathCornerEntity
// CSoundOpvarSetPathCornerEntity Offsets
CSoundOpvarSetPathCornerEntity.m_flDistMinSqr = jsonData["CSoundOpvarSetPathCornerEntity"]["m_flDistMinSqr"];
CSoundOpvarSetPathCornerEntity.m_flDistMaxSqr = jsonData["CSoundOpvarSetPathCornerEntity"]["m_flDistMaxSqr"];
CSoundOpvarSetPathCornerEntity.m_iszPathCornerEntityName = jsonData["CSoundOpvarSetPathCornerEntity"]["m_iszPathCornerEntityName"];

// Atribuições para CEntityFlame
// CEntityFlame Offsets
CEntityFlame.m_hEntAttached = jsonData["CEntityFlame"]["m_hEntAttached"];
CEntityFlame.m_bCheapEffect = jsonData["CEntityFlame"]["m_bCheapEffect"];
CEntityFlame.m_flSize = jsonData["CEntityFlame"]["m_flSize"];
CEntityFlame.m_bUseHitboxes = jsonData["CEntityFlame"]["m_bUseHitboxes"];
CEntityFlame.m_iNumHitboxFires = jsonData["CEntityFlame"]["m_iNumHitboxFires"];
CEntityFlame.m_flHitboxFireScale = jsonData["CEntityFlame"]["m_flHitboxFireScale"];
CEntityFlame.m_flLifetime = jsonData["CEntityFlame"]["m_flLifetime"];
CEntityFlame.m_hAttacker = jsonData["CEntityFlame"]["m_hAttacker"];
CEntityFlame.m_iDangerSound = jsonData["CEntityFlame"]["m_iDangerSound"];
CEntityFlame.m_flDirectDamagePerSecond = jsonData["CEntityFlame"]["m_flDirectDamagePerSecond"];
CEntityFlame.m_iCustomDamageType = jsonData["CEntityFlame"]["m_iCustomDamageType"];

// Atribuições para CCSWeaponBaseGun
// CCSWeaponBaseGun Offsets
CCSWeaponBaseGun.m_zoomLevel = jsonData["CCSWeaponBaseGun"]["m_zoomLevel"];
CCSWeaponBaseGun.m_iBurstShotsRemaining = jsonData["CCSWeaponBaseGun"]["m_iBurstShotsRemaining"];
CCSWeaponBaseGun.m_silencedModelIndex = jsonData["CCSWeaponBaseGun"]["m_silencedModelIndex"];
CCSWeaponBaseGun.m_inPrecache = jsonData["CCSWeaponBaseGun"]["m_inPrecache"];
CCSWeaponBaseGun.m_bNeedsBoltAction = jsonData["CCSWeaponBaseGun"]["m_bNeedsBoltAction"];
CCSWeaponBaseGun.m_bSkillReloadAvailable = jsonData["CCSWeaponBaseGun"]["m_bSkillReloadAvailable"];
CCSWeaponBaseGun.m_bSkillReloadLiftedReloadKey = jsonData["CCSWeaponBaseGun"]["m_bSkillReloadLiftedReloadKey"];
CCSWeaponBaseGun.m_bSkillBoltInterruptAvailable = jsonData["CCSWeaponBaseGun"]["m_bSkillBoltInterruptAvailable"];
CCSWeaponBaseGun.m_bSkillBoltLiftedFireKey = jsonData["CCSWeaponBaseGun"]["m_bSkillBoltLiftedFireKey"];

// Atribuições para CBot
// CBot Offsets
CBot.m_pController = jsonData["CBot"]["m_pController"];
CBot.m_pPlayer = jsonData["CBot"]["m_pPlayer"];
CBot.m_bHasSpawned = jsonData["CBot"]["m_bHasSpawned"];
CBot.m_id = jsonData["CBot"]["m_id"];
CBot.m_isRunning = jsonData["CBot"]["m_isRunning"];
CBot.m_isCrouching = jsonData["CBot"]["m_isCrouching"];
CBot.m_forwardSpeed = jsonData["CBot"]["m_forwardSpeed"];
CBot.m_leftSpeed = jsonData["CBot"]["m_leftSpeed"];
CBot.m_verticalSpeed = jsonData["CBot"]["m_verticalSpeed"];
CBot.m_buttonFlags = jsonData["CBot"]["m_buttonFlags"];
CBot.m_jumpTimestamp = jsonData["CBot"]["m_jumpTimestamp"];
CBot.m_viewForward = jsonData["CBot"]["m_viewForward"];
CBot.m_postureStackIndex = jsonData["CBot"]["m_postureStackIndex"];

// Atribuições para CGunTarget
// CGunTarget Offsets
CGunTarget.m_on = jsonData["CGunTarget"]["m_on"];
CGunTarget.m_hTargetEnt = jsonData["CGunTarget"]["m_hTargetEnt"];
CGunTarget.m_OnDeath = jsonData["CGunTarget"]["m_OnDeath"];

// Atribuições para CSoundEventParameter
// CSoundEventParameter Offsets
CSoundEventParameter.m_iszParamName = jsonData["CSoundEventParameter"]["m_iszParamName"];
CSoundEventParameter.m_flFloatValue = jsonData["CSoundEventParameter"]["m_flFloatValue"];

// Atribuições para CMarkupVolumeTagged
// CMarkupVolumeTagged Offsets
CMarkupVolumeTagged.m_bIsGroup = jsonData["CMarkupVolumeTagged"]["m_bIsGroup"];
CMarkupVolumeTagged.m_bGroupByPrefab = jsonData["CMarkupVolumeTagged"]["m_bGroupByPrefab"];
CMarkupVolumeTagged.m_bGroupByVolume = jsonData["CMarkupVolumeTagged"]["m_bGroupByVolume"];
CMarkupVolumeTagged.m_bGroupOtherGroups = jsonData["CMarkupVolumeTagged"]["m_bGroupOtherGroups"];
CMarkupVolumeTagged.m_bIsInGroup = jsonData["CMarkupVolumeTagged"]["m_bIsInGroup"];

// Atribuições para CTestEffect
// CTestEffect Offsets
CTestEffect.m_iLoop = jsonData["CTestEffect"]["m_iLoop"];
CTestEffect.m_iBeam = jsonData["CTestEffect"]["m_iBeam"];
CTestEffect.m_pBeam = jsonData["CTestEffect"]["m_pBeam"];
CTestEffect.m_flBeamTime = jsonData["CTestEffect"]["m_flBeamTime"];
CTestEffect.m_flStartTime = jsonData["CTestEffect"]["m_flStartTime"];

// Atribuições para CScriptNavBlocker
// CScriptNavBlocker Offsets
CScriptNavBlocker.m_vExtent = jsonData["CScriptNavBlocker"]["m_vExtent"];

// Atribuições para CConstraintAnchor
// CConstraintAnchor Offsets
CConstraintAnchor.m_massScale = jsonData["CConstraintAnchor"]["m_massScale"];

// Atribuições para CSceneEntity
// CSceneEntity Offsets
CSceneEntity.m_iszSceneFile = jsonData["CSceneEntity"]["m_iszSceneFile"];
CSceneEntity.m_iszResumeSceneFile = jsonData["CSceneEntity"]["m_iszResumeSceneFile"];
CSceneEntity.m_iszTarget1 = jsonData["CSceneEntity"]["m_iszTarget1"];
CSceneEntity.m_iszTarget2 = jsonData["CSceneEntity"]["m_iszTarget2"];
CSceneEntity.m_iszTarget3 = jsonData["CSceneEntity"]["m_iszTarget3"];
CSceneEntity.m_iszTarget4 = jsonData["CSceneEntity"]["m_iszTarget4"];
CSceneEntity.m_iszTarget5 = jsonData["CSceneEntity"]["m_iszTarget5"];
CSceneEntity.m_iszTarget6 = jsonData["CSceneEntity"]["m_iszTarget6"];
CSceneEntity.m_iszTarget7 = jsonData["CSceneEntity"]["m_iszTarget7"];
CSceneEntity.m_iszTarget8 = jsonData["CSceneEntity"]["m_iszTarget8"];
CSceneEntity.m_hTarget1 = jsonData["CSceneEntity"]["m_hTarget1"];
CSceneEntity.m_hTarget2 = jsonData["CSceneEntity"]["m_hTarget2"];
CSceneEntity.m_hTarget3 = jsonData["CSceneEntity"]["m_hTarget3"];
CSceneEntity.m_hTarget4 = jsonData["CSceneEntity"]["m_hTarget4"];
CSceneEntity.m_hTarget5 = jsonData["CSceneEntity"]["m_hTarget5"];
CSceneEntity.m_hTarget6 = jsonData["CSceneEntity"]["m_hTarget6"];
CSceneEntity.m_hTarget7 = jsonData["CSceneEntity"]["m_hTarget7"];
CSceneEntity.m_hTarget8 = jsonData["CSceneEntity"]["m_hTarget8"];
CSceneEntity.m_sTargetAttachment = jsonData["CSceneEntity"]["m_sTargetAttachment"];
CSceneEntity.m_bIsPlayingBack = jsonData["CSceneEntity"]["m_bIsPlayingBack"];
CSceneEntity.m_bPaused = jsonData["CSceneEntity"]["m_bPaused"];
CSceneEntity.m_bMultiplayer = jsonData["CSceneEntity"]["m_bMultiplayer"];
CSceneEntity.m_bAutogenerated = jsonData["CSceneEntity"]["m_bAutogenerated"];
CSceneEntity.m_flForceClientTime = jsonData["CSceneEntity"]["m_flForceClientTime"];
CSceneEntity.m_flCurrentTime = jsonData["CSceneEntity"]["m_flCurrentTime"];
CSceneEntity.m_flFrameTime = jsonData["CSceneEntity"]["m_flFrameTime"];
CSceneEntity.m_bCancelAtNextInterrupt = jsonData["CSceneEntity"]["m_bCancelAtNextInterrupt"];
CSceneEntity.m_fPitch = jsonData["CSceneEntity"]["m_fPitch"];
CSceneEntity.m_bAutomated = jsonData["CSceneEntity"]["m_bAutomated"];
CSceneEntity.m_nAutomatedAction = jsonData["CSceneEntity"]["m_nAutomatedAction"];
CSceneEntity.m_flAutomationDelay = jsonData["CSceneEntity"]["m_flAutomationDelay"];
CSceneEntity.m_flAutomationTime = jsonData["CSceneEntity"]["m_flAutomationTime"];
CSceneEntity.m_hWaitingForThisResumeScene = jsonData["CSceneEntity"]["m_hWaitingForThisResumeScene"];
CSceneEntity.m_bWaitingForResumeScene = jsonData["CSceneEntity"]["m_bWaitingForResumeScene"];
CSceneEntity.m_bPausedViaInput = jsonData["CSceneEntity"]["m_bPausedViaInput"];
CSceneEntity.m_bPauseAtNextInterrupt = jsonData["CSceneEntity"]["m_bPauseAtNextInterrupt"];
CSceneEntity.m_bWaitingForActor = jsonData["CSceneEntity"]["m_bWaitingForActor"];
CSceneEntity.m_bWaitingForInterrupt = jsonData["CSceneEntity"]["m_bWaitingForInterrupt"];
CSceneEntity.m_bInterruptedActorsScenes = jsonData["CSceneEntity"]["m_bInterruptedActorsScenes"];
CSceneEntity.m_bBreakOnNonIdle = jsonData["CSceneEntity"]["m_bBreakOnNonIdle"];
CSceneEntity.m_bSceneFinished = jsonData["CSceneEntity"]["m_bSceneFinished"];
CSceneEntity.m_hActorList = jsonData["CSceneEntity"]["m_hActorList"];
CSceneEntity.m_hRemoveActorList = jsonData["CSceneEntity"]["m_hRemoveActorList"];
CSceneEntity.m_nSceneFlushCounter = jsonData["CSceneEntity"]["m_nSceneFlushCounter"];
CSceneEntity.m_nSceneStringIndex = jsonData["CSceneEntity"]["m_nSceneStringIndex"];
CSceneEntity.m_OnStart = jsonData["CSceneEntity"]["m_OnStart"];
CSceneEntity.m_OnCompletion = jsonData["CSceneEntity"]["m_OnCompletion"];
CSceneEntity.m_OnCanceled = jsonData["CSceneEntity"]["m_OnCanceled"];
CSceneEntity.m_OnPaused = jsonData["CSceneEntity"]["m_OnPaused"];
CSceneEntity.m_OnResumed = jsonData["CSceneEntity"]["m_OnResumed"];
CSceneEntity.m_OnTrigger = jsonData["CSceneEntity"]["m_OnTrigger"];
CSceneEntity.m_hInterruptScene = jsonData["CSceneEntity"]["m_hInterruptScene"];
CSceneEntity.m_nInterruptCount = jsonData["CSceneEntity"]["m_nInterruptCount"];
CSceneEntity.m_bSceneMissing = jsonData["CSceneEntity"]["m_bSceneMissing"];
CSceneEntity.m_bInterrupted = jsonData["CSceneEntity"]["m_bInterrupted"];
CSceneEntity.m_bCompletedEarly = jsonData["CSceneEntity"]["m_bCompletedEarly"];
CSceneEntity.m_bInterruptSceneFinished = jsonData["CSceneEntity"]["m_bInterruptSceneFinished"];
CSceneEntity.m_bRestoring = jsonData["CSceneEntity"]["m_bRestoring"];
CSceneEntity.m_hNotifySceneCompletion = jsonData["CSceneEntity"]["m_hNotifySceneCompletion"];
CSceneEntity.m_hListManagers = jsonData["CSceneEntity"]["m_hListManagers"];
CSceneEntity.m_iszSoundName = jsonData["CSceneEntity"]["m_iszSoundName"];
CSceneEntity.m_iszSequenceName = jsonData["CSceneEntity"]["m_iszSequenceName"];
CSceneEntity.m_hActor = jsonData["CSceneEntity"]["m_hActor"];
CSceneEntity.m_hActivator = jsonData["CSceneEntity"]["m_hActivator"];
CSceneEntity.m_BusyActor = jsonData["CSceneEntity"]["m_BusyActor"];
CSceneEntity.m_iPlayerDeathBehavior = jsonData["CSceneEntity"]["m_iPlayerDeathBehavior"];

// Atribuições para CLogicActiveAutosave
// CLogicActiveAutosave Offsets
CLogicActiveAutosave.m_TriggerHitPoints = jsonData["CLogicActiveAutosave"]["m_TriggerHitPoints"];
CLogicActiveAutosave.m_flTimeToTrigger = jsonData["CLogicActiveAutosave"]["m_flTimeToTrigger"];
CLogicActiveAutosave.m_flStartTime = jsonData["CLogicActiveAutosave"]["m_flStartTime"];
CLogicActiveAutosave.m_flDangerousTime = jsonData["CLogicActiveAutosave"]["m_flDangerousTime"];

// Atribuições para CEnvBeverage
// CEnvBeverage Offsets
CEnvBeverage.m_CanInDispenser = jsonData["CEnvBeverage"]["m_CanInDispenser"];
CEnvBeverage.m_nBeverageType = jsonData["CEnvBeverage"]["m_nBeverageType"];

// Atribuições para CVoteController
// CVoteController Offsets
CVoteController.m_iActiveIssueIndex = jsonData["CVoteController"]["m_iActiveIssueIndex"];
CVoteController.m_iOnlyTeamToVote = jsonData["CVoteController"]["m_iOnlyTeamToVote"];
CVoteController.m_nVoteOptionCount = jsonData["CVoteController"]["m_nVoteOptionCount"];
CVoteController.m_nPotentialVotes = jsonData["CVoteController"]["m_nPotentialVotes"];
CVoteController.m_bIsYesNoVote = jsonData["CVoteController"]["m_bIsYesNoVote"];
CVoteController.m_acceptingVotesTimer = jsonData["CVoteController"]["m_acceptingVotesTimer"];
CVoteController.m_executeCommandTimer = jsonData["CVoteController"]["m_executeCommandTimer"];
CVoteController.m_resetVoteTimer = jsonData["CVoteController"]["m_resetVoteTimer"];
CVoteController.m_nVotesCast = jsonData["CVoteController"]["m_nVotesCast"];
CVoteController.m_playerHoldingVote = jsonData["CVoteController"]["m_playerHoldingVote"];
CVoteController.m_playerOverrideForVote = jsonData["CVoteController"]["m_playerOverrideForVote"];
CVoteController.m_nHighestCountIndex = jsonData["CVoteController"]["m_nHighestCountIndex"];
CVoteController.m_potentialIssues = jsonData["CVoteController"]["m_potentialIssues"];
CVoteController.m_VoteOptions = jsonData["CVoteController"]["m_VoteOptions"];

// Atribuições para CBaseFlex
// CBaseFlex Offsets
CBaseFlex.m_flexWeight = jsonData["CBaseFlex"]["m_flexWeight"];
CBaseFlex.m_vLookTargetPosition = jsonData["CBaseFlex"]["m_vLookTargetPosition"];
CBaseFlex.m_blinktoggle = jsonData["CBaseFlex"]["m_blinktoggle"];
CBaseFlex.m_flAllowResponsesEndTime = jsonData["CBaseFlex"]["m_flAllowResponsesEndTime"];
CBaseFlex.m_flLastFlexAnimationTime = jsonData["CBaseFlex"]["m_flLastFlexAnimationTime"];
CBaseFlex.m_nNextSceneEventId = jsonData["CBaseFlex"]["m_nNextSceneEventId"];
CBaseFlex.m_bUpdateLayerPriorities = jsonData["CBaseFlex"]["m_bUpdateLayerPriorities"];

// Atribuições para CScriptTriggerHurt
// CScriptTriggerHurt Offsets
CScriptTriggerHurt.m_vExtent = jsonData["CScriptTriggerHurt"]["m_vExtent"];

// Atribuições para CMathColorBlend
// CMathColorBlend Offsets
CMathColorBlend.m_flInMin = jsonData["CMathColorBlend"]["m_flInMin"];
CMathColorBlend.m_flInMax = jsonData["CMathColorBlend"]["m_flInMax"];
CMathColorBlend.m_OutColor1 = jsonData["CMathColorBlend"]["m_OutColor1"];
CMathColorBlend.m_OutColor2 = jsonData["CMathColorBlend"]["m_OutColor2"];
CMathColorBlend.m_OutValue = jsonData["CMathColorBlend"]["m_OutValue"];

// Atribuições para CEnvScreenOverlay
// CEnvScreenOverlay Offsets
CEnvScreenOverlay.m_iszOverlayNames = jsonData["CEnvScreenOverlay"]["m_iszOverlayNames"];
CEnvScreenOverlay.m_flOverlayTimes = jsonData["CEnvScreenOverlay"]["m_flOverlayTimes"];
CEnvScreenOverlay.m_flStartTime = jsonData["CEnvScreenOverlay"]["m_flStartTime"];
CEnvScreenOverlay.m_iDesiredOverlay = jsonData["CEnvScreenOverlay"]["m_iDesiredOverlay"];
CEnvScreenOverlay.m_bIsActive = jsonData["CEnvScreenOverlay"]["m_bIsActive"];

// Atribuições para CCSPlayerPawn
// CCSPlayerPawn Offsets
CCSPlayerPawn.m_pBulletServices = jsonData["CCSPlayerPawn"]["m_pBulletServices"];
CCSPlayerPawn.m_pHostageServices = jsonData["CCSPlayerPawn"]["m_pHostageServices"];
CCSPlayerPawn.m_pBuyServices = jsonData["CCSPlayerPawn"]["m_pBuyServices"];
CCSPlayerPawn.m_pActionTrackingServices = jsonData["CCSPlayerPawn"]["m_pActionTrackingServices"];
CCSPlayerPawn.m_pRadioServices = jsonData["CCSPlayerPawn"]["m_pRadioServices"];
CCSPlayerPawn.m_pDamageReactServices = jsonData["CCSPlayerPawn"]["m_pDamageReactServices"];
CCSPlayerPawn.m_nCharacterDefIndex = jsonData["CCSPlayerPawn"]["m_nCharacterDefIndex"];
CCSPlayerPawn.m_bHasFemaleVoice = jsonData["CCSPlayerPawn"]["m_bHasFemaleVoice"];
CCSPlayerPawn.m_strVOPrefix = jsonData["CCSPlayerPawn"]["m_strVOPrefix"];
CCSPlayerPawn.m_szLastPlaceName = jsonData["CCSPlayerPawn"]["m_szLastPlaceName"];
CCSPlayerPawn.m_bInHostageResetZone = jsonData["CCSPlayerPawn"]["m_bInHostageResetZone"];
CCSPlayerPawn.m_bInBuyZone = jsonData["CCSPlayerPawn"]["m_bInBuyZone"];
CCSPlayerPawn.m_TouchingBuyZones = jsonData["CCSPlayerPawn"]["m_TouchingBuyZones"];
CCSPlayerPawn.m_bWasInBuyZone = jsonData["CCSPlayerPawn"]["m_bWasInBuyZone"];
CCSPlayerPawn.m_bInHostageRescueZone = jsonData["CCSPlayerPawn"]["m_bInHostageRescueZone"];
CCSPlayerPawn.m_bInBombZone = jsonData["CCSPlayerPawn"]["m_bInBombZone"];
CCSPlayerPawn.m_bWasInHostageRescueZone = jsonData["CCSPlayerPawn"]["m_bWasInHostageRescueZone"];
CCSPlayerPawn.m_iRetakesOffering = jsonData["CCSPlayerPawn"]["m_iRetakesOffering"];
CCSPlayerPawn.m_iRetakesOfferingCard = jsonData["CCSPlayerPawn"]["m_iRetakesOfferingCard"];
CCSPlayerPawn.m_bRetakesHasDefuseKit = jsonData["CCSPlayerPawn"]["m_bRetakesHasDefuseKit"];
CCSPlayerPawn.m_bRetakesMVPLastRound = jsonData["CCSPlayerPawn"]["m_bRetakesMVPLastRound"];
CCSPlayerPawn.m_iRetakesMVPBoostItem = jsonData["CCSPlayerPawn"]["m_iRetakesMVPBoostItem"];
CCSPlayerPawn.m_RetakesMVPBoostExtraUtility = jsonData["CCSPlayerPawn"]["m_RetakesMVPBoostExtraUtility"];
CCSPlayerPawn.m_flHealthShotBoostExpirationTime = jsonData["CCSPlayerPawn"]["m_flHealthShotBoostExpirationTime"];
CCSPlayerPawn.m_flLandingTimeSeconds = jsonData["CCSPlayerPawn"]["m_flLandingTimeSeconds"];
CCSPlayerPawn.m_aimPunchAngle = jsonData["CCSPlayerPawn"]["m_aimPunchAngle"];
CCSPlayerPawn.m_aimPunchAngleVel = jsonData["CCSPlayerPawn"]["m_aimPunchAngleVel"];
CCSPlayerPawn.m_aimPunchTickBase = jsonData["CCSPlayerPawn"]["m_aimPunchTickBase"];
CCSPlayerPawn.m_aimPunchTickFraction = jsonData["CCSPlayerPawn"]["m_aimPunchTickFraction"];
CCSPlayerPawn.m_aimPunchCache = jsonData["CCSPlayerPawn"]["m_aimPunchCache"];
CCSPlayerPawn.m_bIsBuyMenuOpen = jsonData["CCSPlayerPawn"]["m_bIsBuyMenuOpen"];
CCSPlayerPawn.m_xLastHeadBoneTransform = jsonData["CCSPlayerPawn"]["m_xLastHeadBoneTransform"];
CCSPlayerPawn.m_bLastHeadBoneTransformIsValid = jsonData["CCSPlayerPawn"]["m_bLastHeadBoneTransformIsValid"];
CCSPlayerPawn.m_lastLandTime = jsonData["CCSPlayerPawn"]["m_lastLandTime"];
CCSPlayerPawn.m_bOnGroundLastTick = jsonData["CCSPlayerPawn"]["m_bOnGroundLastTick"];
CCSPlayerPawn.m_iPlayerLocked = jsonData["CCSPlayerPawn"]["m_iPlayerLocked"];
CCSPlayerPawn.m_flTimeOfLastInjury = jsonData["CCSPlayerPawn"]["m_flTimeOfLastInjury"];
CCSPlayerPawn.m_flNextSprayDecalTime = jsonData["CCSPlayerPawn"]["m_flNextSprayDecalTime"];
CCSPlayerPawn.m_bNextSprayDecalTimeExpedited = jsonData["CCSPlayerPawn"]["m_bNextSprayDecalTimeExpedited"];
CCSPlayerPawn.m_nRagdollDamageBone = jsonData["CCSPlayerPawn"]["m_nRagdollDamageBone"];
CCSPlayerPawn.m_vRagdollDamageForce = jsonData["CCSPlayerPawn"]["m_vRagdollDamageForce"];
CCSPlayerPawn.m_vRagdollDamagePosition = jsonData["CCSPlayerPawn"]["m_vRagdollDamagePosition"];
CCSPlayerPawn.m_szRagdollDamageWeaponName = jsonData["CCSPlayerPawn"]["m_szRagdollDamageWeaponName"];
CCSPlayerPawn.m_bRagdollDamageHeadshot = jsonData["CCSPlayerPawn"]["m_bRagdollDamageHeadshot"];
CCSPlayerPawn.m_vRagdollServerOrigin = jsonData["CCSPlayerPawn"]["m_vRagdollServerOrigin"];
CCSPlayerPawn.m_EconGloves = jsonData["CCSPlayerPawn"]["m_EconGloves"];
CCSPlayerPawn.m_nEconGlovesChanged = jsonData["CCSPlayerPawn"]["m_nEconGlovesChanged"];
CCSPlayerPawn.m_qDeathEyeAngles = jsonData["CCSPlayerPawn"]["m_qDeathEyeAngles"];
CCSPlayerPawn.m_bSkipOneHeadConstraintUpdate = jsonData["CCSPlayerPawn"]["m_bSkipOneHeadConstraintUpdate"];
CCSPlayerPawn.m_bLeftHanded = jsonData["CCSPlayerPawn"]["m_bLeftHanded"];
CCSPlayerPawn.m_fSwitchedHandednessTime = jsonData["CCSPlayerPawn"]["m_fSwitchedHandednessTime"];
CCSPlayerPawn.m_flViewmodelOffsetX = jsonData["CCSPlayerPawn"]["m_flViewmodelOffsetX"];
CCSPlayerPawn.m_flViewmodelOffsetY = jsonData["CCSPlayerPawn"]["m_flViewmodelOffsetY"];
CCSPlayerPawn.m_flViewmodelOffsetZ = jsonData["CCSPlayerPawn"]["m_flViewmodelOffsetZ"];
CCSPlayerPawn.m_flViewmodelFOV = jsonData["CCSPlayerPawn"]["m_flViewmodelFOV"];
CCSPlayerPawn.m_bIsWalking = jsonData["CCSPlayerPawn"]["m_bIsWalking"];
CCSPlayerPawn.m_fLastGivenDefuserTime = jsonData["CCSPlayerPawn"]["m_fLastGivenDefuserTime"];
CCSPlayerPawn.m_fLastGivenBombTime = jsonData["CCSPlayerPawn"]["m_fLastGivenBombTime"];
CCSPlayerPawn.m_flDealtDamageToEnemyMostRecentTimestamp = jsonData["CCSPlayerPawn"]["m_flDealtDamageToEnemyMostRecentTimestamp"];
CCSPlayerPawn.m_iDisplayHistoryBits = jsonData["CCSPlayerPawn"]["m_iDisplayHistoryBits"];
CCSPlayerPawn.m_flLastAttackedTeammate = jsonData["CCSPlayerPawn"]["m_flLastAttackedTeammate"];
CCSPlayerPawn.m_allowAutoFollowTime = jsonData["CCSPlayerPawn"]["m_allowAutoFollowTime"];
CCSPlayerPawn.m_bResetArmorNextSpawn = jsonData["CCSPlayerPawn"]["m_bResetArmorNextSpawn"];
CCSPlayerPawn.m_nLastKillerIndex = jsonData["CCSPlayerPawn"]["m_nLastKillerIndex"];
CCSPlayerPawn.m_entitySpottedState = jsonData["CCSPlayerPawn"]["m_entitySpottedState"];
CCSPlayerPawn.m_nSpotRules = jsonData["CCSPlayerPawn"]["m_nSpotRules"];
CCSPlayerPawn.m_bIsScoped = jsonData["CCSPlayerPawn"]["m_bIsScoped"];
CCSPlayerPawn.m_bResumeZoom = jsonData["CCSPlayerPawn"]["m_bResumeZoom"];
CCSPlayerPawn.m_bIsDefusing = jsonData["CCSPlayerPawn"]["m_bIsDefusing"];
CCSPlayerPawn.m_bIsGrabbingHostage = jsonData["CCSPlayerPawn"]["m_bIsGrabbingHostage"];
CCSPlayerPawn.m_iBlockingUseActionInProgress = jsonData["CCSPlayerPawn"]["m_iBlockingUseActionInProgress"];
CCSPlayerPawn.m_flEmitSoundTime = jsonData["CCSPlayerPawn"]["m_flEmitSoundTime"];
CCSPlayerPawn.m_bInNoDefuseArea = jsonData["CCSPlayerPawn"]["m_bInNoDefuseArea"];
CCSPlayerPawn.m_iBombSiteIndex = jsonData["CCSPlayerPawn"]["m_iBombSiteIndex"];
CCSPlayerPawn.m_nWhichBombZone = jsonData["CCSPlayerPawn"]["m_nWhichBombZone"];
CCSPlayerPawn.m_bInBombZoneTrigger = jsonData["CCSPlayerPawn"]["m_bInBombZoneTrigger"];
CCSPlayerPawn.m_bWasInBombZoneTrigger = jsonData["CCSPlayerPawn"]["m_bWasInBombZoneTrigger"];
CCSPlayerPawn.m_iShotsFired = jsonData["CCSPlayerPawn"]["m_iShotsFired"];
CCSPlayerPawn.m_flFlinchStack = jsonData["CCSPlayerPawn"]["m_flFlinchStack"];
CCSPlayerPawn.m_flVelocityModifier = jsonData["CCSPlayerPawn"]["m_flVelocityModifier"];
CCSPlayerPawn.m_flHitHeading = jsonData["CCSPlayerPawn"]["m_flHitHeading"];
CCSPlayerPawn.m_nHitBodyPart = jsonData["CCSPlayerPawn"]["m_nHitBodyPart"];
CCSPlayerPawn.m_vecTotalBulletForce = jsonData["CCSPlayerPawn"]["m_vecTotalBulletForce"];
CCSPlayerPawn.m_bWaitForNoAttack = jsonData["CCSPlayerPawn"]["m_bWaitForNoAttack"];
CCSPlayerPawn.m_ignoreLadderJumpTime = jsonData["CCSPlayerPawn"]["m_ignoreLadderJumpTime"];
CCSPlayerPawn.m_bKilledByHeadshot = jsonData["CCSPlayerPawn"]["m_bKilledByHeadshot"];
CCSPlayerPawn.m_LastHitBox = jsonData["CCSPlayerPawn"]["m_LastHitBox"];
CCSPlayerPawn.m_LastHealth = jsonData["CCSPlayerPawn"]["m_LastHealth"];
CCSPlayerPawn.m_pBot = jsonData["CCSPlayerPawn"]["m_pBot"];
CCSPlayerPawn.m_bBotAllowActive = jsonData["CCSPlayerPawn"]["m_bBotAllowActive"];
CCSPlayerPawn.m_thirdPersonHeading = jsonData["CCSPlayerPawn"]["m_thirdPersonHeading"];
CCSPlayerPawn.m_flSlopeDropOffset = jsonData["CCSPlayerPawn"]["m_flSlopeDropOffset"];
CCSPlayerPawn.m_flSlopeDropHeight = jsonData["CCSPlayerPawn"]["m_flSlopeDropHeight"];
CCSPlayerPawn.m_vHeadConstraintOffset = jsonData["CCSPlayerPawn"]["m_vHeadConstraintOffset"];
CCSPlayerPawn.m_nLastPickupPriority = jsonData["CCSPlayerPawn"]["m_nLastPickupPriority"];
CCSPlayerPawn.m_flLastPickupPriorityTime = jsonData["CCSPlayerPawn"]["m_flLastPickupPriorityTime"];
CCSPlayerPawn.m_ArmorValue = jsonData["CCSPlayerPawn"]["m_ArmorValue"];
CCSPlayerPawn.m_unCurrentEquipmentValue = jsonData["CCSPlayerPawn"]["m_unCurrentEquipmentValue"];
CCSPlayerPawn.m_unRoundStartEquipmentValue = jsonData["CCSPlayerPawn"]["m_unRoundStartEquipmentValue"];
CCSPlayerPawn.m_unFreezetimeEndEquipmentValue = jsonData["CCSPlayerPawn"]["m_unFreezetimeEndEquipmentValue"];
CCSPlayerPawn.m_iLastWeaponFireUsercmd = jsonData["CCSPlayerPawn"]["m_iLastWeaponFireUsercmd"];
CCSPlayerPawn.m_bIsSpawning = jsonData["CCSPlayerPawn"]["m_bIsSpawning"];
CCSPlayerPawn.m_iDeathFlags = jsonData["CCSPlayerPawn"]["m_iDeathFlags"];
CCSPlayerPawn.m_bHasDeathInfo = jsonData["CCSPlayerPawn"]["m_bHasDeathInfo"];
CCSPlayerPawn.m_flDeathInfoTime = jsonData["CCSPlayerPawn"]["m_flDeathInfoTime"];
CCSPlayerPawn.m_vecDeathInfoOrigin = jsonData["CCSPlayerPawn"]["m_vecDeathInfoOrigin"];
CCSPlayerPawn.m_vecPlayerPatchEconIndices = jsonData["CCSPlayerPawn"]["m_vecPlayerPatchEconIndices"];
CCSPlayerPawn.m_GunGameImmunityColor = jsonData["CCSPlayerPawn"]["m_GunGameImmunityColor"];
CCSPlayerPawn.m_grenadeParameterStashTime = jsonData["CCSPlayerPawn"]["m_grenadeParameterStashTime"];
CCSPlayerPawn.m_bGrenadeParametersStashed = jsonData["CCSPlayerPawn"]["m_bGrenadeParametersStashed"];
CCSPlayerPawn.m_angStashedShootAngles = jsonData["CCSPlayerPawn"]["m_angStashedShootAngles"];
CCSPlayerPawn.m_vecStashedGrenadeThrowPosition = jsonData["CCSPlayerPawn"]["m_vecStashedGrenadeThrowPosition"];
CCSPlayerPawn.m_vecStashedVelocity = jsonData["CCSPlayerPawn"]["m_vecStashedVelocity"];
CCSPlayerPawn.m_angShootAngleHistory = jsonData["CCSPlayerPawn"]["m_angShootAngleHistory"];
CCSPlayerPawn.m_vecThrowPositionHistory = jsonData["CCSPlayerPawn"]["m_vecThrowPositionHistory"];
CCSPlayerPawn.m_vecVelocityHistory = jsonData["CCSPlayerPawn"]["m_vecVelocityHistory"];
CCSPlayerPawn.m_PredictedDamageTags = jsonData["CCSPlayerPawn"]["m_PredictedDamageTags"];
CCSPlayerPawn.m_nHighestAppliedDamageTagTick = jsonData["CCSPlayerPawn"]["m_nHighestAppliedDamageTagTick"];

// Atribuições para CEconItemView
// CEconItemView Offsets
CEconItemView.m_iItemDefinitionIndex = jsonData["CEconItemView"]["m_iItemDefinitionIndex"];
CEconItemView.m_iEntityQuality = jsonData["CEconItemView"]["m_iEntityQuality"];
CEconItemView.m_iEntityLevel = jsonData["CEconItemView"]["m_iEntityLevel"];
CEconItemView.m_iItemID = jsonData["CEconItemView"]["m_iItemID"];
CEconItemView.m_iItemIDHigh = jsonData["CEconItemView"]["m_iItemIDHigh"];
CEconItemView.m_iItemIDLow = jsonData["CEconItemView"]["m_iItemIDLow"];
CEconItemView.m_iAccountID = jsonData["CEconItemView"]["m_iAccountID"];
CEconItemView.m_iInventoryPosition = jsonData["CEconItemView"]["m_iInventoryPosition"];
CEconItemView.m_bInitialized = jsonData["CEconItemView"]["m_bInitialized"];
CEconItemView.m_AttributeList = jsonData["CEconItemView"]["m_AttributeList"];
CEconItemView.m_NetworkedDynamicAttributes = jsonData["CEconItemView"]["m_NetworkedDynamicAttributes"];
CEconItemView.m_szCustomName = jsonData["CEconItemView"]["m_szCustomName"];
CEconItemView.m_szCustomNameOverride = jsonData["CEconItemView"]["m_szCustomNameOverride"];

// Atribuições para CBasePlayerPawn
// CBasePlayerPawn Offsets
CBasePlayerPawn.m_pWeaponServices = jsonData["CBasePlayerPawn"]["m_pWeaponServices"];
CBasePlayerPawn.m_pItemServices = jsonData["CBasePlayerPawn"]["m_pItemServices"];
CBasePlayerPawn.m_pAutoaimServices = jsonData["CBasePlayerPawn"]["m_pAutoaimServices"];
CBasePlayerPawn.m_pObserverServices = jsonData["CBasePlayerPawn"]["m_pObserverServices"];
CBasePlayerPawn.m_pWaterServices = jsonData["CBasePlayerPawn"]["m_pWaterServices"];
CBasePlayerPawn.m_pUseServices = jsonData["CBasePlayerPawn"]["m_pUseServices"];
CBasePlayerPawn.m_pFlashlightServices = jsonData["CBasePlayerPawn"]["m_pFlashlightServices"];
CBasePlayerPawn.m_pCameraServices = jsonData["CBasePlayerPawn"]["m_pCameraServices"];
CBasePlayerPawn.m_pMovementServices = jsonData["CBasePlayerPawn"]["m_pMovementServices"];
CBasePlayerPawn.m_ServerViewAngleChanges = jsonData["CBasePlayerPawn"]["m_ServerViewAngleChanges"];
CBasePlayerPawn.m_nHighestGeneratedServerViewAngleChangeIndex = jsonData["CBasePlayerPawn"]["m_nHighestGeneratedServerViewAngleChangeIndex"];
CBasePlayerPawn.v_angle = jsonData["CBasePlayerPawn"]["v_angle"];
CBasePlayerPawn.v_anglePrevious = jsonData["CBasePlayerPawn"]["v_anglePrevious"];
CBasePlayerPawn.m_iHideHUD = jsonData["CBasePlayerPawn"]["m_iHideHUD"];
CBasePlayerPawn.m_skybox3d = jsonData["CBasePlayerPawn"]["m_skybox3d"];
CBasePlayerPawn.m_fTimeLastHurt = jsonData["CBasePlayerPawn"]["m_fTimeLastHurt"];
CBasePlayerPawn.m_flDeathTime = jsonData["CBasePlayerPawn"]["m_flDeathTime"];
CBasePlayerPawn.m_fNextSuicideTime = jsonData["CBasePlayerPawn"]["m_fNextSuicideTime"];
CBasePlayerPawn.m_fInitHUD = jsonData["CBasePlayerPawn"]["m_fInitHUD"];
CBasePlayerPawn.m_pExpresser = jsonData["CBasePlayerPawn"]["m_pExpresser"];
CBasePlayerPawn.m_hController = jsonData["CBasePlayerPawn"]["m_hController"];
CBasePlayerPawn.m_fHltvReplayDelay = jsonData["CBasePlayerPawn"]["m_fHltvReplayDelay"];
CBasePlayerPawn.m_fHltvReplayEnd = jsonData["CBasePlayerPawn"]["m_fHltvReplayEnd"];
CBasePlayerPawn.m_iHltvReplayEntity = jsonData["CBasePlayerPawn"]["m_iHltvReplayEntity"];
CBasePlayerPawn.m_sndOpvarLatchData = jsonData["CBasePlayerPawn"]["m_sndOpvarLatchData"];

// Atribuições para CPostProcessingVolume
// CPostProcessingVolume Offsets
CPostProcessingVolume.m_hPostSettings = jsonData["CPostProcessingVolume"]["m_hPostSettings"];
CPostProcessingVolume.m_flFadeDuration = jsonData["CPostProcessingVolume"]["m_flFadeDuration"];
CPostProcessingVolume.m_flMinLogExposure = jsonData["CPostProcessingVolume"]["m_flMinLogExposure"];
CPostProcessingVolume.m_flMaxLogExposure = jsonData["CPostProcessingVolume"]["m_flMaxLogExposure"];
CPostProcessingVolume.m_flMinExposure = jsonData["CPostProcessingVolume"]["m_flMinExposure"];
CPostProcessingVolume.m_flMaxExposure = jsonData["CPostProcessingVolume"]["m_flMaxExposure"];
CPostProcessingVolume.m_flExposureCompensation = jsonData["CPostProcessingVolume"]["m_flExposureCompensation"];
CPostProcessingVolume.m_flExposureFadeSpeedUp = jsonData["CPostProcessingVolume"]["m_flExposureFadeSpeedUp"];
CPostProcessingVolume.m_flExposureFadeSpeedDown = jsonData["CPostProcessingVolume"]["m_flExposureFadeSpeedDown"];
CPostProcessingVolume.m_flTonemapEVSmoothingRange = jsonData["CPostProcessingVolume"]["m_flTonemapEVSmoothingRange"];
CPostProcessingVolume.m_bMaster = jsonData["CPostProcessingVolume"]["m_bMaster"];
CPostProcessingVolume.m_bExposureControl = jsonData["CPostProcessingVolume"]["m_bExposureControl"];
CPostProcessingVolume.m_flRate = jsonData["CPostProcessingVolume"]["m_flRate"];
CPostProcessingVolume.m_flTonemapPercentTarget = jsonData["CPostProcessingVolume"]["m_flTonemapPercentTarget"];
CPostProcessingVolume.m_flTonemapPercentBrightPixels = jsonData["CPostProcessingVolume"]["m_flTonemapPercentBrightPixels"];
CPostProcessingVolume.m_flTonemapMinAvgLum = jsonData["CPostProcessingVolume"]["m_flTonemapMinAvgLum"];

// Atribuições para CSpotlightEnd
// CSpotlightEnd Offsets
CSpotlightEnd.m_flLightScale = jsonData["CSpotlightEnd"]["m_flLightScale"];
CSpotlightEnd.m_Radius = jsonData["CSpotlightEnd"]["m_Radius"];
CSpotlightEnd.m_vSpotlightDir = jsonData["CSpotlightEnd"]["m_vSpotlightDir"];
CSpotlightEnd.m_vSpotlightOrg = jsonData["CSpotlightEnd"]["m_vSpotlightOrg"];

// Atribuições para CRuleEntity
// CRuleEntity Offsets
CRuleEntity.m_iszMaster = jsonData["CRuleEntity"]["m_iszMaster"];

// Atribuições para CCSGO_TeamPreviewCharacterPosition
// CCSGO_TeamPreviewCharacterPosition Offsets
CCSGO_TeamPreviewCharacterPosition.m_nVariant = jsonData["CCSGO_TeamPreviewCharacterPosition"]["m_nVariant"];
CCSGO_TeamPreviewCharacterPosition.m_nRandom = jsonData["CCSGO_TeamPreviewCharacterPosition"]["m_nRandom"];
CCSGO_TeamPreviewCharacterPosition.m_nOrdinal = jsonData["CCSGO_TeamPreviewCharacterPosition"]["m_nOrdinal"];
CCSGO_TeamPreviewCharacterPosition.m_sWeaponName = jsonData["CCSGO_TeamPreviewCharacterPosition"]["m_sWeaponName"];
CCSGO_TeamPreviewCharacterPosition.m_xuid = jsonData["CCSGO_TeamPreviewCharacterPosition"]["m_xuid"];
CCSGO_TeamPreviewCharacterPosition.m_agentItem = jsonData["CCSGO_TeamPreviewCharacterPosition"]["m_agentItem"];
CCSGO_TeamPreviewCharacterPosition.m_glovesItem = jsonData["CCSGO_TeamPreviewCharacterPosition"]["m_glovesItem"];
CCSGO_TeamPreviewCharacterPosition.m_weaponItem = jsonData["CCSGO_TeamPreviewCharacterPosition"]["m_weaponItem"];

// Atribuições para CTriggerDetectExplosion
// CTriggerDetectExplosion Offsets
CTriggerDetectExplosion.m_OnDetectedExplosion = jsonData["CTriggerDetectExplosion"]["m_OnDetectedExplosion"];

// Atribuições para CSoundStackSave
// CSoundStackSave Offsets
CSoundStackSave.m_iszStackName = jsonData["CSoundStackSave"]["m_iszStackName"];

// Atribuições para CPhysHinge
// CPhysHinge Offsets
CPhysHinge.m_soundInfo = jsonData["CPhysHinge"]["m_soundInfo"];
CPhysHinge.m_NotifyMinLimitReached = jsonData["CPhysHinge"]["m_NotifyMinLimitReached"];
CPhysHinge.m_NotifyMaxLimitReached = jsonData["CPhysHinge"]["m_NotifyMaxLimitReached"];
CPhysHinge.m_bAtMinLimit = jsonData["CPhysHinge"]["m_bAtMinLimit"];
CPhysHinge.m_bAtMaxLimit = jsonData["CPhysHinge"]["m_bAtMaxLimit"];
CPhysHinge.m_hinge = jsonData["CPhysHinge"]["m_hinge"];
CPhysHinge.m_hingeFriction = jsonData["CPhysHinge"]["m_hingeFriction"];
CPhysHinge.m_systemLoadScale = jsonData["CPhysHinge"]["m_systemLoadScale"];
CPhysHinge.m_bIsAxisLocal = jsonData["CPhysHinge"]["m_bIsAxisLocal"];
CPhysHinge.m_flMinRotation = jsonData["CPhysHinge"]["m_flMinRotation"];
CPhysHinge.m_flMaxRotation = jsonData["CPhysHinge"]["m_flMaxRotation"];
CPhysHinge.m_flInitialRotation = jsonData["CPhysHinge"]["m_flInitialRotation"];
CPhysHinge.m_flMotorFrequency = jsonData["CPhysHinge"]["m_flMotorFrequency"];
CPhysHinge.m_flMotorDampingRatio = jsonData["CPhysHinge"]["m_flMotorDampingRatio"];
CPhysHinge.m_flAngleSpeed = jsonData["CPhysHinge"]["m_flAngleSpeed"];
CPhysHinge.m_flAngleSpeedThreshold = jsonData["CPhysHinge"]["m_flAngleSpeedThreshold"];
CPhysHinge.m_OnStartMoving = jsonData["CPhysHinge"]["m_OnStartMoving"];
CPhysHinge.m_OnStopMoving = jsonData["CPhysHinge"]["m_OnStopMoving"];

// Atribuições para CSingleplayRules
// CSingleplayRules Offsets
CSingleplayRules.m_bSinglePlayerGameEnding = jsonData["CSingleplayRules"]["m_bSinglePlayerGameEnding"];

// Atribuições para CFilterProximity
// CFilterProximity Offsets
CFilterProximity.m_flRadius = jsonData["CFilterProximity"]["m_flRadius"];

// Atribuições para CEconWearable
// CEconWearable Offsets
CEconWearable.m_nForceSkin = jsonData["CEconWearable"]["m_nForceSkin"];
CEconWearable.m_bAlwaysAllow = jsonData["CEconWearable"]["m_bAlwaysAllow"];

// Atribuições para CFuncConveyor
// CFuncConveyor Offsets
CFuncConveyor.m_szConveyorModels = jsonData["CFuncConveyor"]["m_szConveyorModels"];
CFuncConveyor.m_flTransitionDurationSeconds = jsonData["CFuncConveyor"]["m_flTransitionDurationSeconds"];
CFuncConveyor.m_angMoveEntitySpace = jsonData["CFuncConveyor"]["m_angMoveEntitySpace"];
CFuncConveyor.m_vecMoveDirEntitySpace = jsonData["CFuncConveyor"]["m_vecMoveDirEntitySpace"];
CFuncConveyor.m_flTargetSpeed = jsonData["CFuncConveyor"]["m_flTargetSpeed"];
CFuncConveyor.m_nTransitionStartTick = jsonData["CFuncConveyor"]["m_nTransitionStartTick"];
CFuncConveyor.m_nTransitionDurationTicks = jsonData["CFuncConveyor"]["m_nTransitionDurationTicks"];
CFuncConveyor.m_flTransitionStartSpeed = jsonData["CFuncConveyor"]["m_flTransitionStartSpeed"];
CFuncConveyor.m_hConveyorModels = jsonData["CFuncConveyor"]["m_hConveyorModels"];

// Atribuições para CMathCounter
// CMathCounter Offsets
CMathCounter.m_flMin = jsonData["CMathCounter"]["m_flMin"];
CMathCounter.m_flMax = jsonData["CMathCounter"]["m_flMax"];
CMathCounter.m_bHitMin = jsonData["CMathCounter"]["m_bHitMin"];
CMathCounter.m_bHitMax = jsonData["CMathCounter"]["m_bHitMax"];
CMathCounter.m_bDisabled = jsonData["CMathCounter"]["m_bDisabled"];
CMathCounter.m_OutValue = jsonData["CMathCounter"]["m_OutValue"];
CMathCounter.m_OnGetValue = jsonData["CMathCounter"]["m_OnGetValue"];
CMathCounter.m_OnHitMin = jsonData["CMathCounter"]["m_OnHitMin"];
CMathCounter.m_OnHitMax = jsonData["CMathCounter"]["m_OnHitMax"];
CMathCounter.m_OnChangedFromMin = jsonData["CMathCounter"]["m_OnChangedFromMin"];
CMathCounter.m_OnChangedFromMax = jsonData["CMathCounter"]["m_OnChangedFromMax"];

// Atribuições para CRectLight
// CRectLight Offsets
CRectLight.m_bShowLight = jsonData["CRectLight"]["m_bShowLight"];

// Atribuições para CRotDoor
// CRotDoor Offsets
CRotDoor.m_bSolidBsp = jsonData["CRotDoor"]["m_bSolidBsp"];

// Atribuições para CLogicLineToEntity
// CLogicLineToEntity Offsets
CLogicLineToEntity.m_Line = jsonData["CLogicLineToEntity"]["m_Line"];
CLogicLineToEntity.m_SourceName = jsonData["CLogicLineToEntity"]["m_SourceName"];
CLogicLineToEntity.m_StartEntity = jsonData["CLogicLineToEntity"]["m_StartEntity"];
CLogicLineToEntity.m_EndEntity = jsonData["CLogicLineToEntity"]["m_EndEntity"];

// Atribuições para CGameRules
// CGameRules Offsets
CGameRules.__m_pChainEntity = jsonData["CGameRules"]["__m_pChainEntity"];
CGameRules.m_szQuestName = jsonData["CGameRules"]["m_szQuestName"];
CGameRules.m_nQuestPhase = jsonData["CGameRules"]["m_nQuestPhase"];
CGameRules.m_nTotalPausedTicks = jsonData["CGameRules"]["m_nTotalPausedTicks"];
CGameRules.m_nPauseStartTick = jsonData["CGameRules"]["m_nPauseStartTick"];
CGameRules.m_bGamePaused = jsonData["CGameRules"]["m_bGamePaused"];

// Atribuições para CEnvCubemap
// CEnvCubemap Offsets
CEnvCubemap.m_Entity_hCubemapTexture = jsonData["CEnvCubemap"]["m_Entity_hCubemapTexture"];
CEnvCubemap.m_Entity_bCustomCubemapTexture = jsonData["CEnvCubemap"]["m_Entity_bCustomCubemapTexture"];
CEnvCubemap.m_Entity_flInfluenceRadius = jsonData["CEnvCubemap"]["m_Entity_flInfluenceRadius"];
CEnvCubemap.m_Entity_vBoxProjectMins = jsonData["CEnvCubemap"]["m_Entity_vBoxProjectMins"];
CEnvCubemap.m_Entity_vBoxProjectMaxs = jsonData["CEnvCubemap"]["m_Entity_vBoxProjectMaxs"];
CEnvCubemap.m_Entity_bMoveable = jsonData["CEnvCubemap"]["m_Entity_bMoveable"];
CEnvCubemap.m_Entity_nHandshake = jsonData["CEnvCubemap"]["m_Entity_nHandshake"];
CEnvCubemap.m_Entity_nEnvCubeMapArrayIndex = jsonData["CEnvCubemap"]["m_Entity_nEnvCubeMapArrayIndex"];
CEnvCubemap.m_Entity_nPriority = jsonData["CEnvCubemap"]["m_Entity_nPriority"];
CEnvCubemap.m_Entity_flEdgeFadeDist = jsonData["CEnvCubemap"]["m_Entity_flEdgeFadeDist"];
CEnvCubemap.m_Entity_vEdgeFadeDists = jsonData["CEnvCubemap"]["m_Entity_vEdgeFadeDists"];
CEnvCubemap.m_Entity_flDiffuseScale = jsonData["CEnvCubemap"]["m_Entity_flDiffuseScale"];
CEnvCubemap.m_Entity_bStartDisabled = jsonData["CEnvCubemap"]["m_Entity_bStartDisabled"];
CEnvCubemap.m_Entity_bDefaultEnvMap = jsonData["CEnvCubemap"]["m_Entity_bDefaultEnvMap"];
CEnvCubemap.m_Entity_bDefaultSpecEnvMap = jsonData["CEnvCubemap"]["m_Entity_bDefaultSpecEnvMap"];
CEnvCubemap.m_Entity_bIndoorCubeMap = jsonData["CEnvCubemap"]["m_Entity_bIndoorCubeMap"];
CEnvCubemap.m_Entity_bCopyDiffuseFromDefaultCubemap = jsonData["CEnvCubemap"]["m_Entity_bCopyDiffuseFromDefaultCubemap"];
CEnvCubemap.m_Entity_bEnabled = jsonData["CEnvCubemap"]["m_Entity_bEnabled"];

// Atribuições para CRetakeGameRules
// CRetakeGameRules Offsets
CRetakeGameRules.m_nMatchSeed = jsonData["CRetakeGameRules"]["m_nMatchSeed"];
CRetakeGameRules.m_bBlockersPresent = jsonData["CRetakeGameRules"]["m_bBlockersPresent"];
CRetakeGameRules.m_bRoundInProgress = jsonData["CRetakeGameRules"]["m_bRoundInProgress"];
CRetakeGameRules.m_iFirstSecondHalfRound = jsonData["CRetakeGameRules"]["m_iFirstSecondHalfRound"];
CRetakeGameRules.m_iBombSite = jsonData["CRetakeGameRules"]["m_iBombSite"];

// Atribuições para CColorCorrection
// CColorCorrection Offsets
CColorCorrection.m_flFadeInDuration = jsonData["CColorCorrection"]["m_flFadeInDuration"];
CColorCorrection.m_flFadeOutDuration = jsonData["CColorCorrection"]["m_flFadeOutDuration"];
CColorCorrection.m_flStartFadeInWeight = jsonData["CColorCorrection"]["m_flStartFadeInWeight"];
CColorCorrection.m_flStartFadeOutWeight = jsonData["CColorCorrection"]["m_flStartFadeOutWeight"];
CColorCorrection.m_flTimeStartFadeIn = jsonData["CColorCorrection"]["m_flTimeStartFadeIn"];
CColorCorrection.m_flTimeStartFadeOut = jsonData["CColorCorrection"]["m_flTimeStartFadeOut"];
CColorCorrection.m_flMaxWeight = jsonData["CColorCorrection"]["m_flMaxWeight"];
CColorCorrection.m_bStartDisabled = jsonData["CColorCorrection"]["m_bStartDisabled"];
CColorCorrection.m_bEnabled = jsonData["CColorCorrection"]["m_bEnabled"];
CColorCorrection.m_bMaster = jsonData["CColorCorrection"]["m_bMaster"];
CColorCorrection.m_bClientSide = jsonData["CColorCorrection"]["m_bClientSide"];
CColorCorrection.m_bExclusive = jsonData["CColorCorrection"]["m_bExclusive"];
CColorCorrection.m_MinFalloff = jsonData["CColorCorrection"]["m_MinFalloff"];
CColorCorrection.m_MaxFalloff = jsonData["CColorCorrection"]["m_MaxFalloff"];
CColorCorrection.m_flCurWeight = jsonData["CColorCorrection"]["m_flCurWeight"];
CColorCorrection.m_netlookupFilename = jsonData["CColorCorrection"]["m_netlookupFilename"];
CColorCorrection.m_lookupFilename = jsonData["CColorCorrection"]["m_lookupFilename"];

// Atribuições para CC4
// CC4 Offsets
CC4.m_vecLastValidPlayerHeldPosition = jsonData["CC4"]["m_vecLastValidPlayerHeldPosition"];
CC4.m_vecLastValidDroppedPosition = jsonData["CC4"]["m_vecLastValidDroppedPosition"];
CC4.m_bDoValidDroppedPositionCheck = jsonData["CC4"]["m_bDoValidDroppedPositionCheck"];
CC4.m_bStartedArming = jsonData["CC4"]["m_bStartedArming"];
CC4.m_fArmedTime = jsonData["CC4"]["m_fArmedTime"];
CC4.m_bBombPlacedAnimation = jsonData["CC4"]["m_bBombPlacedAnimation"];
CC4.m_bIsPlantingViaUse = jsonData["CC4"]["m_bIsPlantingViaUse"];
CC4.m_entitySpottedState = jsonData["CC4"]["m_entitySpottedState"];
CC4.m_nSpotRules = jsonData["CC4"]["m_nSpotRules"];
CC4.m_bPlayedArmingBeeps = jsonData["CC4"]["m_bPlayedArmingBeeps"];
CC4.m_bBombPlanted = jsonData["CC4"]["m_bBombPlanted"];

// Atribuições para CPointPrefab
// CPointPrefab Offsets
CPointPrefab.m_targetMapName = jsonData["CPointPrefab"]["m_targetMapName"];
CPointPrefab.m_forceWorldGroupID = jsonData["CPointPrefab"]["m_forceWorldGroupID"];
CPointPrefab.m_associatedRelayTargetName = jsonData["CPointPrefab"]["m_associatedRelayTargetName"];
CPointPrefab.m_fixupNames = jsonData["CPointPrefab"]["m_fixupNames"];
CPointPrefab.m_bLoadDynamic = jsonData["CPointPrefab"]["m_bLoadDynamic"];
CPointPrefab.m_associatedRelayEntity = jsonData["CPointPrefab"]["m_associatedRelayEntity"];

// Atribuições para CBaseDoor
// CBaseDoor Offsets
CBaseDoor.m_angMoveEntitySpace = jsonData["CBaseDoor"]["m_angMoveEntitySpace"];
CBaseDoor.m_vecMoveDirParentSpace = jsonData["CBaseDoor"]["m_vecMoveDirParentSpace"];
CBaseDoor.m_ls = jsonData["CBaseDoor"]["m_ls"];
CBaseDoor.m_bForceClosed = jsonData["CBaseDoor"]["m_bForceClosed"];
CBaseDoor.m_bDoorGroup = jsonData["CBaseDoor"]["m_bDoorGroup"];
CBaseDoor.m_bLocked = jsonData["CBaseDoor"]["m_bLocked"];
CBaseDoor.m_bIgnoreDebris = jsonData["CBaseDoor"]["m_bIgnoreDebris"];
CBaseDoor.m_eSpawnPosition = jsonData["CBaseDoor"]["m_eSpawnPosition"];
CBaseDoor.m_flBlockDamage = jsonData["CBaseDoor"]["m_flBlockDamage"];
CBaseDoor.m_NoiseMoving = jsonData["CBaseDoor"]["m_NoiseMoving"];
CBaseDoor.m_NoiseArrived = jsonData["CBaseDoor"]["m_NoiseArrived"];
CBaseDoor.m_NoiseMovingClosed = jsonData["CBaseDoor"]["m_NoiseMovingClosed"];
CBaseDoor.m_NoiseArrivedClosed = jsonData["CBaseDoor"]["m_NoiseArrivedClosed"];
CBaseDoor.m_ChainTarget = jsonData["CBaseDoor"]["m_ChainTarget"];
CBaseDoor.m_OnBlockedClosing = jsonData["CBaseDoor"]["m_OnBlockedClosing"];
CBaseDoor.m_OnBlockedOpening = jsonData["CBaseDoor"]["m_OnBlockedOpening"];
CBaseDoor.m_OnUnblockedClosing = jsonData["CBaseDoor"]["m_OnUnblockedClosing"];
CBaseDoor.m_OnUnblockedOpening = jsonData["CBaseDoor"]["m_OnUnblockedOpening"];
CBaseDoor.m_OnFullyClosed = jsonData["CBaseDoor"]["m_OnFullyClosed"];
CBaseDoor.m_OnFullyOpen = jsonData["CBaseDoor"]["m_OnFullyOpen"];
CBaseDoor.m_OnClose = jsonData["CBaseDoor"]["m_OnClose"];
CBaseDoor.m_OnOpen = jsonData["CBaseDoor"]["m_OnOpen"];
CBaseDoor.m_OnLockedUse = jsonData["CBaseDoor"]["m_OnLockedUse"];
CBaseDoor.m_bLoopMoveSound = jsonData["CBaseDoor"]["m_bLoopMoveSound"];
CBaseDoor.m_bCreateNavObstacle = jsonData["CBaseDoor"]["m_bCreateNavObstacle"];
CBaseDoor.m_isChaining = jsonData["CBaseDoor"]["m_isChaining"];
CBaseDoor.m_bIsUsable = jsonData["CBaseDoor"]["m_bIsUsable"];

// Atribuições para CTankTrainAI
// CTankTrainAI Offsets
CTankTrainAI.m_hTrain = jsonData["CTankTrainAI"]["m_hTrain"];
CTankTrainAI.m_hTargetEntity = jsonData["CTankTrainAI"]["m_hTargetEntity"];
CTankTrainAI.m_soundPlaying = jsonData["CTankTrainAI"]["m_soundPlaying"];
CTankTrainAI.m_startSoundName = jsonData["CTankTrainAI"]["m_startSoundName"];
CTankTrainAI.m_engineSoundName = jsonData["CTankTrainAI"]["m_engineSoundName"];
CTankTrainAI.m_movementSoundName = jsonData["CTankTrainAI"]["m_movementSoundName"];
CTankTrainAI.m_targetEntityName = jsonData["CTankTrainAI"]["m_targetEntityName"];

// Atribuições para CGameGibManager
// CGameGibManager Offsets
CGameGibManager.m_bAllowNewGibs = jsonData["CGameGibManager"]["m_bAllowNewGibs"];
CGameGibManager.m_iCurrentMaxPieces = jsonData["CGameGibManager"]["m_iCurrentMaxPieces"];
CGameGibManager.m_iMaxPieces = jsonData["CGameGibManager"]["m_iMaxPieces"];
CGameGibManager.m_iLastFrame = jsonData["CGameGibManager"]["m_iLastFrame"];

// Atribuições para SpawnPoint
// SpawnPoint Offsets
SpawnPoint.m_iPriority = jsonData["SpawnPoint"]["m_iPriority"];
SpawnPoint.m_bEnabled = jsonData["SpawnPoint"]["m_bEnabled"];
SpawnPoint.m_nType = jsonData["SpawnPoint"]["m_nType"];

// Atribuições para CFuncPlatRot
// CFuncPlatRot Offsets
CFuncPlatRot.m_end = jsonData["CFuncPlatRot"]["m_end"];
CFuncPlatRot.m_start = jsonData["CFuncPlatRot"]["m_start"];

// Atribuições para CEnvSpark
// CEnvSpark Offsets
CEnvSpark.m_flDelay = jsonData["CEnvSpark"]["m_flDelay"];
CEnvSpark.m_nMagnitude = jsonData["CEnvSpark"]["m_nMagnitude"];
CEnvSpark.m_nTrailLength = jsonData["CEnvSpark"]["m_nTrailLength"];
CEnvSpark.m_nType = jsonData["CEnvSpark"]["m_nType"];
CEnvSpark.m_OnSpark = jsonData["CEnvSpark"]["m_OnSpark"];

// Atribuições para CFuncTrain
// CFuncTrain Offsets
CFuncTrain.m_hCurrentTarget = jsonData["CFuncTrain"]["m_hCurrentTarget"];
CFuncTrain.m_activated = jsonData["CFuncTrain"]["m_activated"];
CFuncTrain.m_hEnemy = jsonData["CFuncTrain"]["m_hEnemy"];
CFuncTrain.m_flBlockDamage = jsonData["CFuncTrain"]["m_flBlockDamage"];
CFuncTrain.m_flNextBlockTime = jsonData["CFuncTrain"]["m_flNextBlockTime"];
CFuncTrain.m_iszLastTarget = jsonData["CFuncTrain"]["m_iszLastTarget"];

// Atribuições para CHostage
// CHostage Offsets
CHostage.m_OnHostageBeginGrab = jsonData["CHostage"]["m_OnHostageBeginGrab"];
CHostage.m_OnFirstPickedUp = jsonData["CHostage"]["m_OnFirstPickedUp"];
CHostage.m_OnDroppedNotRescued = jsonData["CHostage"]["m_OnDroppedNotRescued"];
CHostage.m_OnRescued = jsonData["CHostage"]["m_OnRescued"];
CHostage.m_entitySpottedState = jsonData["CHostage"]["m_entitySpottedState"];
CHostage.m_nSpotRules = jsonData["CHostage"]["m_nSpotRules"];
CHostage.m_uiHostageSpawnExclusionGroupMask = jsonData["CHostage"]["m_uiHostageSpawnExclusionGroupMask"];
CHostage.m_nHostageSpawnRandomFactor = jsonData["CHostage"]["m_nHostageSpawnRandomFactor"];
CHostage.m_bRemove = jsonData["CHostage"]["m_bRemove"];
CHostage.m_vel = jsonData["CHostage"]["m_vel"];
CHostage.m_isRescued = jsonData["CHostage"]["m_isRescued"];
CHostage.m_jumpedThisFrame = jsonData["CHostage"]["m_jumpedThisFrame"];
CHostage.m_nHostageState = jsonData["CHostage"]["m_nHostageState"];
CHostage.m_leader = jsonData["CHostage"]["m_leader"];
CHostage.m_lastLeader = jsonData["CHostage"]["m_lastLeader"];
CHostage.m_reuseTimer = jsonData["CHostage"]["m_reuseTimer"];
CHostage.m_hasBeenUsed = jsonData["CHostage"]["m_hasBeenUsed"];
CHostage.m_accel = jsonData["CHostage"]["m_accel"];
CHostage.m_isRunning = jsonData["CHostage"]["m_isRunning"];
CHostage.m_isCrouching = jsonData["CHostage"]["m_isCrouching"];
CHostage.m_jumpTimer = jsonData["CHostage"]["m_jumpTimer"];
CHostage.m_isWaitingForLeader = jsonData["CHostage"]["m_isWaitingForLeader"];
CHostage.m_repathTimer = jsonData["CHostage"]["m_repathTimer"];
CHostage.m_inhibitDoorTimer = jsonData["CHostage"]["m_inhibitDoorTimer"];
CHostage.m_inhibitObstacleAvoidanceTimer = jsonData["CHostage"]["m_inhibitObstacleAvoidanceTimer"];
CHostage.m_wiggleTimer = jsonData["CHostage"]["m_wiggleTimer"];
CHostage.m_isAdjusted = jsonData["CHostage"]["m_isAdjusted"];
CHostage.m_bHandsHaveBeenCut = jsonData["CHostage"]["m_bHandsHaveBeenCut"];
CHostage.m_hHostageGrabber = jsonData["CHostage"]["m_hHostageGrabber"];
CHostage.m_fLastGrabTime = jsonData["CHostage"]["m_fLastGrabTime"];
CHostage.m_vecPositionWhenStartedDroppingToGround = jsonData["CHostage"]["m_vecPositionWhenStartedDroppingToGround"];
CHostage.m_vecGrabbedPos = jsonData["CHostage"]["m_vecGrabbedPos"];
CHostage.m_flRescueStartTime = jsonData["CHostage"]["m_flRescueStartTime"];
CHostage.m_flGrabSuccessTime = jsonData["CHostage"]["m_flGrabSuccessTime"];
CHostage.m_flDropStartTime = jsonData["CHostage"]["m_flDropStartTime"];
CHostage.m_nApproachRewardPayouts = jsonData["CHostage"]["m_nApproachRewardPayouts"];
CHostage.m_nPickupEventCount = jsonData["CHostage"]["m_nPickupEventCount"];
CHostage.m_vecSpawnGroundPos = jsonData["CHostage"]["m_vecSpawnGroundPos"];
CHostage.m_vecHostageResetPosition = jsonData["CHostage"]["m_vecHostageResetPosition"];

// Atribuições para CNavLinkAreaEntity
// CNavLinkAreaEntity Offsets
CNavLinkAreaEntity.m_flWidth = jsonData["CNavLinkAreaEntity"]["m_flWidth"];
CNavLinkAreaEntity.m_vLocatorOffset = jsonData["CNavLinkAreaEntity"]["m_vLocatorOffset"];
CNavLinkAreaEntity.m_qLocatorAnglesOffset = jsonData["CNavLinkAreaEntity"]["m_qLocatorAnglesOffset"];
CNavLinkAreaEntity.m_strMovementForward = jsonData["CNavLinkAreaEntity"]["m_strMovementForward"];
CNavLinkAreaEntity.m_strMovementReverse = jsonData["CNavLinkAreaEntity"]["m_strMovementReverse"];
CNavLinkAreaEntity.m_nNavLinkIdForward = jsonData["CNavLinkAreaEntity"]["m_nNavLinkIdForward"];
CNavLinkAreaEntity.m_nNavLinkIdReverse = jsonData["CNavLinkAreaEntity"]["m_nNavLinkIdReverse"];
CNavLinkAreaEntity.m_bEnabled = jsonData["CNavLinkAreaEntity"]["m_bEnabled"];
CNavLinkAreaEntity.m_strFilterName = jsonData["CNavLinkAreaEntity"]["m_strFilterName"];
CNavLinkAreaEntity.m_hFilter = jsonData["CNavLinkAreaEntity"]["m_hFilter"];
CNavLinkAreaEntity.m_OnNavLinkStart = jsonData["CNavLinkAreaEntity"]["m_OnNavLinkStart"];
CNavLinkAreaEntity.m_OnNavLinkFinish = jsonData["CNavLinkAreaEntity"]["m_OnNavLinkFinish"];
CNavLinkAreaEntity.m_bIsTerminus = jsonData["CNavLinkAreaEntity"]["m_bIsTerminus"];

// Atribuições para CFuncMoveLinear
// CFuncMoveLinear Offsets
CFuncMoveLinear.m_authoredPosition = jsonData["CFuncMoveLinear"]["m_authoredPosition"];
CFuncMoveLinear.m_angMoveEntitySpace = jsonData["CFuncMoveLinear"]["m_angMoveEntitySpace"];
CFuncMoveLinear.m_vecMoveDirParentSpace = jsonData["CFuncMoveLinear"]["m_vecMoveDirParentSpace"];
CFuncMoveLinear.m_soundStart = jsonData["CFuncMoveLinear"]["m_soundStart"];
CFuncMoveLinear.m_soundStop = jsonData["CFuncMoveLinear"]["m_soundStop"];
CFuncMoveLinear.m_currentSound = jsonData["CFuncMoveLinear"]["m_currentSound"];
CFuncMoveLinear.m_flBlockDamage = jsonData["CFuncMoveLinear"]["m_flBlockDamage"];
CFuncMoveLinear.m_flStartPosition = jsonData["CFuncMoveLinear"]["m_flStartPosition"];
CFuncMoveLinear.m_OnFullyOpen = jsonData["CFuncMoveLinear"]["m_OnFullyOpen"];
CFuncMoveLinear.m_OnFullyClosed = jsonData["CFuncMoveLinear"]["m_OnFullyClosed"];
CFuncMoveLinear.m_bCreateMovableNavMesh = jsonData["CFuncMoveLinear"]["m_bCreateMovableNavMesh"];
CFuncMoveLinear.m_bCreateNavObstacle = jsonData["CFuncMoveLinear"]["m_bCreateNavObstacle"];

// Atribuições para CCommentaryAuto
// CCommentaryAuto Offsets
CCommentaryAuto.m_OnCommentaryNewGame = jsonData["CCommentaryAuto"]["m_OnCommentaryNewGame"];
CCommentaryAuto.m_OnCommentaryMidGame = jsonData["CCommentaryAuto"]["m_OnCommentaryMidGame"];
CCommentaryAuto.m_OnCommentaryMultiplayerSpawn = jsonData["CCommentaryAuto"]["m_OnCommentaryMultiplayerSpawn"];

// Atribuições para CMapInfo
// CMapInfo Offsets
CMapInfo.m_iBuyingStatus = jsonData["CMapInfo"]["m_iBuyingStatus"];
CMapInfo.m_flBombRadius = jsonData["CMapInfo"]["m_flBombRadius"];
CMapInfo.m_iPetPopulation = jsonData["CMapInfo"]["m_iPetPopulation"];
CMapInfo.m_bUseNormalSpawnsForDM = jsonData["CMapInfo"]["m_bUseNormalSpawnsForDM"];
CMapInfo.m_bDisableAutoGeneratedDMSpawns = jsonData["CMapInfo"]["m_bDisableAutoGeneratedDMSpawns"];
CMapInfo.m_flBotMaxVisionDistance = jsonData["CMapInfo"]["m_flBotMaxVisionDistance"];
CMapInfo.m_iHostageCount = jsonData["CMapInfo"]["m_iHostageCount"];
CMapInfo.m_bFadePlayerVisibilityFarZ = jsonData["CMapInfo"]["m_bFadePlayerVisibilityFarZ"];

// Atribuições para CBaseEntity
// CBaseEntity Offsets
CBaseEntity.m_CBodyComponent = jsonData["CBaseEntity"]["m_CBodyComponent"];
CBaseEntity.m_NetworkTransmitComponent = jsonData["CBaseEntity"]["m_NetworkTransmitComponent"];
CBaseEntity.m_aThinkFunctions = jsonData["CBaseEntity"]["m_aThinkFunctions"];
CBaseEntity.m_iCurrentThinkContext = jsonData["CBaseEntity"]["m_iCurrentThinkContext"];
CBaseEntity.m_nLastThinkTick = jsonData["CBaseEntity"]["m_nLastThinkTick"];
CBaseEntity.m_bDisabledContextThinks = jsonData["CBaseEntity"]["m_bDisabledContextThinks"];
CBaseEntity.m_isSteadyState = jsonData["CBaseEntity"]["m_isSteadyState"];
CBaseEntity.m_lastNetworkChange = jsonData["CBaseEntity"]["m_lastNetworkChange"];
CBaseEntity.m_ResponseContexts = jsonData["CBaseEntity"]["m_ResponseContexts"];
CBaseEntity.m_iszResponseContext = jsonData["CBaseEntity"]["m_iszResponseContext"];
CBaseEntity.m_iHealth = jsonData["CBaseEntity"]["m_iHealth"];
CBaseEntity.m_iMaxHealth = jsonData["CBaseEntity"]["m_iMaxHealth"];
CBaseEntity.m_lifeState = jsonData["CBaseEntity"]["m_lifeState"];
CBaseEntity.m_flDamageAccumulator = jsonData["CBaseEntity"]["m_flDamageAccumulator"];
CBaseEntity.m_bTakesDamage = jsonData["CBaseEntity"]["m_bTakesDamage"];
CBaseEntity.m_nTakeDamageFlags = jsonData["CBaseEntity"]["m_nTakeDamageFlags"];
CBaseEntity.m_nPlatformType = jsonData["CBaseEntity"]["m_nPlatformType"];
CBaseEntity.m_MoveCollide = jsonData["CBaseEntity"]["m_MoveCollide"];
CBaseEntity.m_MoveType = jsonData["CBaseEntity"]["m_MoveType"];
CBaseEntity.m_nActualMoveType = jsonData["CBaseEntity"]["m_nActualMoveType"];
CBaseEntity.m_nWaterTouch = jsonData["CBaseEntity"]["m_nWaterTouch"];
CBaseEntity.m_nSlimeTouch = jsonData["CBaseEntity"]["m_nSlimeTouch"];
CBaseEntity.m_bRestoreInHierarchy = jsonData["CBaseEntity"]["m_bRestoreInHierarchy"];
CBaseEntity.m_target = jsonData["CBaseEntity"]["m_target"];
CBaseEntity.m_hDamageFilter = jsonData["CBaseEntity"]["m_hDamageFilter"];
CBaseEntity.m_iszDamageFilterName = jsonData["CBaseEntity"]["m_iszDamageFilterName"];
CBaseEntity.m_flMoveDoneTime = jsonData["CBaseEntity"]["m_flMoveDoneTime"];
CBaseEntity.m_nSubclassID = jsonData["CBaseEntity"]["m_nSubclassID"];
CBaseEntity.m_flAnimTime = jsonData["CBaseEntity"]["m_flAnimTime"];
CBaseEntity.m_flSimulationTime = jsonData["CBaseEntity"]["m_flSimulationTime"];
CBaseEntity.m_flCreateTime = jsonData["CBaseEntity"]["m_flCreateTime"];
CBaseEntity.m_bClientSideRagdoll = jsonData["CBaseEntity"]["m_bClientSideRagdoll"];
CBaseEntity.m_ubInterpolationFrame = jsonData["CBaseEntity"]["m_ubInterpolationFrame"];
CBaseEntity.m_vPrevVPhysicsUpdatePos = jsonData["CBaseEntity"]["m_vPrevVPhysicsUpdatePos"];
CBaseEntity.m_iTeamNum = jsonData["CBaseEntity"]["m_iTeamNum"];
CBaseEntity.m_iGlobalname = jsonData["CBaseEntity"]["m_iGlobalname"];
CBaseEntity.m_iSentToClients = jsonData["CBaseEntity"]["m_iSentToClients"];
CBaseEntity.m_flSpeed = jsonData["CBaseEntity"]["m_flSpeed"];
CBaseEntity.m_sUniqueHammerID = jsonData["CBaseEntity"]["m_sUniqueHammerID"];
CBaseEntity.m_spawnflags = jsonData["CBaseEntity"]["m_spawnflags"];
CBaseEntity.m_nNextThinkTick = jsonData["CBaseEntity"]["m_nNextThinkTick"];
CBaseEntity.m_nSimulationTick = jsonData["CBaseEntity"]["m_nSimulationTick"];
CBaseEntity.m_OnKilled = jsonData["CBaseEntity"]["m_OnKilled"];
CBaseEntity.m_fFlags = jsonData["CBaseEntity"]["m_fFlags"];
CBaseEntity.m_vecAbsVelocity = jsonData["CBaseEntity"]["m_vecAbsVelocity"];
CBaseEntity.m_vecVelocity = jsonData["CBaseEntity"]["m_vecVelocity"];
CBaseEntity.m_vecBaseVelocity = jsonData["CBaseEntity"]["m_vecBaseVelocity"];
CBaseEntity.m_nPushEnumCount = jsonData["CBaseEntity"]["m_nPushEnumCount"];
CBaseEntity.m_pCollision = jsonData["CBaseEntity"]["m_pCollision"];
CBaseEntity.m_hEffectEntity = jsonData["CBaseEntity"]["m_hEffectEntity"];
CBaseEntity.m_hOwnerEntity = jsonData["CBaseEntity"]["m_hOwnerEntity"];
CBaseEntity.m_fEffects = jsonData["CBaseEntity"]["m_fEffects"];
CBaseEntity.m_hGroundEntity = jsonData["CBaseEntity"]["m_hGroundEntity"];
CBaseEntity.m_nGroundBodyIndex = jsonData["CBaseEntity"]["m_nGroundBodyIndex"];
CBaseEntity.m_flFriction = jsonData["CBaseEntity"]["m_flFriction"];
CBaseEntity.m_flElasticity = jsonData["CBaseEntity"]["m_flElasticity"];
CBaseEntity.m_flGravityScale = jsonData["CBaseEntity"]["m_flGravityScale"];
CBaseEntity.m_flTimeScale = jsonData["CBaseEntity"]["m_flTimeScale"];
CBaseEntity.m_flWaterLevel = jsonData["CBaseEntity"]["m_flWaterLevel"];
CBaseEntity.m_bAnimatedEveryTick = jsonData["CBaseEntity"]["m_bAnimatedEveryTick"];
CBaseEntity.m_bDisableLowViolence = jsonData["CBaseEntity"]["m_bDisableLowViolence"];
CBaseEntity.m_nWaterType = jsonData["CBaseEntity"]["m_nWaterType"];
CBaseEntity.m_iEFlags = jsonData["CBaseEntity"]["m_iEFlags"];
CBaseEntity.m_OnUser1 = jsonData["CBaseEntity"]["m_OnUser1"];
CBaseEntity.m_OnUser2 = jsonData["CBaseEntity"]["m_OnUser2"];
CBaseEntity.m_OnUser3 = jsonData["CBaseEntity"]["m_OnUser3"];
CBaseEntity.m_OnUser4 = jsonData["CBaseEntity"]["m_OnUser4"];
CBaseEntity.m_iInitialTeamNum = jsonData["CBaseEntity"]["m_iInitialTeamNum"];
CBaseEntity.m_flNavIgnoreUntilTime = jsonData["CBaseEntity"]["m_flNavIgnoreUntilTime"];
CBaseEntity.m_vecAngVelocity = jsonData["CBaseEntity"]["m_vecAngVelocity"];
CBaseEntity.m_bNetworkQuantizeOriginAndAngles = jsonData["CBaseEntity"]["m_bNetworkQuantizeOriginAndAngles"];
CBaseEntity.m_bLagCompensate = jsonData["CBaseEntity"]["m_bLagCompensate"];
CBaseEntity.m_flOverriddenFriction = jsonData["CBaseEntity"]["m_flOverriddenFriction"];
CBaseEntity.m_pBlocker = jsonData["CBaseEntity"]["m_pBlocker"];
CBaseEntity.m_flLocalTime = jsonData["CBaseEntity"]["m_flLocalTime"];
CBaseEntity.m_flVPhysicsUpdateLocalTime = jsonData["CBaseEntity"]["m_flVPhysicsUpdateLocalTime"];
CBaseEntity.m_nBloodType = jsonData["CBaseEntity"]["m_nBloodType"];

// Atribuições para CLogicMeasureMovement
// CLogicMeasureMovement Offsets
CLogicMeasureMovement.m_strMeasureTarget = jsonData["CLogicMeasureMovement"]["m_strMeasureTarget"];
CLogicMeasureMovement.m_strMeasureReference = jsonData["CLogicMeasureMovement"]["m_strMeasureReference"];
CLogicMeasureMovement.m_strTargetReference = jsonData["CLogicMeasureMovement"]["m_strTargetReference"];
CLogicMeasureMovement.m_hMeasureTarget = jsonData["CLogicMeasureMovement"]["m_hMeasureTarget"];
CLogicMeasureMovement.m_hMeasureReference = jsonData["CLogicMeasureMovement"]["m_hMeasureReference"];
CLogicMeasureMovement.m_hTarget = jsonData["CLogicMeasureMovement"]["m_hTarget"];
CLogicMeasureMovement.m_hTargetReference = jsonData["CLogicMeasureMovement"]["m_hTargetReference"];
CLogicMeasureMovement.m_flScale = jsonData["CLogicMeasureMovement"]["m_flScale"];
CLogicMeasureMovement.m_nMeasureType = jsonData["CLogicMeasureMovement"]["m_nMeasureType"];

// Atribuições para CVoiceContainerBlender
// CVoiceContainerBlender Offsets
CVoiceContainerBlender.m_firstSound = jsonData["CVoiceContainerBlender"]["m_firstSound"];
CVoiceContainerBlender.m_secondSound = jsonData["CVoiceContainerBlender"]["m_secondSound"];
CVoiceContainerBlender.m_flBlendFactor = jsonData["CVoiceContainerBlender"]["m_flBlendFactor"];

// Atribuições para VMixFreeverbDesc_t
// VMixFreeverbDesc_t Offsets
VMixFreeverbDesc_t.m_flRoomSize = jsonData["VMixFreeverbDesc_t"]["m_flRoomSize"];
VMixFreeverbDesc_t.m_flDamp = jsonData["VMixFreeverbDesc_t"]["m_flDamp"];
VMixFreeverbDesc_t.m_flWidth = jsonData["VMixFreeverbDesc_t"]["m_flWidth"];
VMixFreeverbDesc_t.m_flLateReflections = jsonData["VMixFreeverbDesc_t"]["m_flLateReflections"];

// Atribuições para CVoiceContainerStaticAdditiveSynth__CHarmonic
// CVoiceContainerStaticAdditiveSynth__CHarmonic Offsets
CVoiceContainerStaticAdditiveSynth__CHarmonic.m_nWaveform = jsonData["CVoiceContainerStaticAdditiveSynth__CHarmonic"]["m_nWaveform"];
CVoiceContainerStaticAdditiveSynth__CHarmonic.m_nFundamental = jsonData["CVoiceContainerStaticAdditiveSynth__CHarmonic"]["m_nFundamental"];
CVoiceContainerStaticAdditiveSynth__CHarmonic.m_nOctave = jsonData["CVoiceContainerStaticAdditiveSynth__CHarmonic"]["m_nOctave"];
CVoiceContainerStaticAdditiveSynth__CHarmonic.m_flCents = jsonData["CVoiceContainerStaticAdditiveSynth__CHarmonic"]["m_flCents"];
CVoiceContainerStaticAdditiveSynth__CHarmonic.m_flPhase = jsonData["CVoiceContainerStaticAdditiveSynth__CHarmonic"]["m_flPhase"];
CVoiceContainerStaticAdditiveSynth__CHarmonic.m_curve = jsonData["CVoiceContainerStaticAdditiveSynth__CHarmonic"]["m_curve"];
CVoiceContainerStaticAdditiveSynth__CHarmonic.m_volumeScaling = jsonData["CVoiceContainerStaticAdditiveSynth__CHarmonic"]["m_volumeScaling"];

// Atribuições para CVoiceContainerStaticAdditiveSynth__CTone
// CVoiceContainerStaticAdditiveSynth__CTone Offsets
CVoiceContainerStaticAdditiveSynth__CTone.m_harmonics = jsonData["CVoiceContainerStaticAdditiveSynth__CTone"]["m_harmonics"];
CVoiceContainerStaticAdditiveSynth__CTone.m_curve = jsonData["CVoiceContainerStaticAdditiveSynth__CTone"]["m_curve"];
CVoiceContainerStaticAdditiveSynth__CTone.m_bSyncInstances = jsonData["CVoiceContainerStaticAdditiveSynth__CTone"]["m_bSyncInstances"];

// Atribuições para CVoiceContainerRandomSampler
// CVoiceContainerRandomSampler Offsets
CVoiceContainerRandomSampler.m_flAmplitude = jsonData["CVoiceContainerRandomSampler"]["m_flAmplitude"];
CVoiceContainerRandomSampler.m_flAmplitudeJitter = jsonData["CVoiceContainerRandomSampler"]["m_flAmplitudeJitter"];
CVoiceContainerRandomSampler.m_flTimeJitter = jsonData["CVoiceContainerRandomSampler"]["m_flTimeJitter"];
CVoiceContainerRandomSampler.m_flMaxLength = jsonData["CVoiceContainerRandomSampler"]["m_flMaxLength"];
CVoiceContainerRandomSampler.m_nNumDelayVariations = jsonData["CVoiceContainerRandomSampler"]["m_nNumDelayVariations"];
CVoiceContainerRandomSampler.m_grainResources = jsonData["CVoiceContainerRandomSampler"]["m_grainResources"];

// Atribuições para CVSound
// CVSound Offsets
CVSound.m_nRate = jsonData["CVSound"]["m_nRate"];
CVSound.m_nFormat = jsonData["CVSound"]["m_nFormat"];
CVSound.m_nChannels = jsonData["CVSound"]["m_nChannels"];
CVSound.m_nLoopStart = jsonData["CVSound"]["m_nLoopStart"];
CVSound.m_nSampleCount = jsonData["CVSound"]["m_nSampleCount"];
CVSound.m_flDuration = jsonData["CVSound"]["m_flDuration"];
CVSound.m_Sentences = jsonData["CVSound"]["m_Sentences"];
CVSound.m_nStreamingSize = jsonData["CVSound"]["m_nStreamingSize"];
CVSound.m_nSeekTable = jsonData["CVSound"]["m_nSeekTable"];
CVSound.m_nLoopEnd = jsonData["CVSound"]["m_nLoopEnd"];
CVSound.m_encodedHeader = jsonData["CVSound"]["m_encodedHeader"];

// Atribuições para CDSPPresetMixgroupModifierTable
// CDSPPresetMixgroupModifierTable Offsets
CDSPPresetMixgroupModifierTable.m_table = jsonData["CDSPPresetMixgroupModifierTable"]["m_table"];

// Atribuições para CSosGroupActionSoundeventClusterSchema
// CSosGroupActionSoundeventClusterSchema Offsets
CSosGroupActionSoundeventClusterSchema.m_nMinNearby = jsonData["CSosGroupActionSoundeventClusterSchema"]["m_nMinNearby"];
CSosGroupActionSoundeventClusterSchema.m_flClusterEpsilon = jsonData["CSosGroupActionSoundeventClusterSchema"]["m_flClusterEpsilon"];
CSosGroupActionSoundeventClusterSchema.m_shouldPlayOpvar = jsonData["CSosGroupActionSoundeventClusterSchema"]["m_shouldPlayOpvar"];
CSosGroupActionSoundeventClusterSchema.m_shouldPlayClusterChild = jsonData["CSosGroupActionSoundeventClusterSchema"]["m_shouldPlayClusterChild"];
CSosGroupActionSoundeventClusterSchema.m_clusterSizeOpvar = jsonData["CSosGroupActionSoundeventClusterSchema"]["m_clusterSizeOpvar"];
CSosGroupActionSoundeventClusterSchema.m_groupBoundingBoxMinsOpvar = jsonData["CSosGroupActionSoundeventClusterSchema"]["m_groupBoundingBoxMinsOpvar"];
CSosGroupActionSoundeventClusterSchema.m_groupBoundingBoxMaxsOpvar = jsonData["CSosGroupActionSoundeventClusterSchema"]["m_groupBoundingBoxMaxsOpvar"];

// Atribuições para CSosGroupActionSetSoundeventParameterSchema
// CSosGroupActionSetSoundeventParameterSchema Offsets
CSosGroupActionSetSoundeventParameterSchema.m_nMaxCount = jsonData["CSosGroupActionSetSoundeventParameterSchema"]["m_nMaxCount"];
CSosGroupActionSetSoundeventParameterSchema.m_flMinValue = jsonData["CSosGroupActionSetSoundeventParameterSchema"]["m_flMinValue"];
CSosGroupActionSetSoundeventParameterSchema.m_flMaxValue = jsonData["CSosGroupActionSetSoundeventParameterSchema"]["m_flMaxValue"];
CSosGroupActionSetSoundeventParameterSchema.m_opvarName = jsonData["CSosGroupActionSetSoundeventParameterSchema"]["m_opvarName"];
CSosGroupActionSetSoundeventParameterSchema.m_nSortType = jsonData["CSosGroupActionSetSoundeventParameterSchema"]["m_nSortType"];

// Atribuições para CSoundContainerReference
// CSoundContainerReference Offsets
CSoundContainerReference.m_bUseReference = jsonData["CSoundContainerReference"]["m_bUseReference"];
CSoundContainerReference.m_sound = jsonData["CSoundContainerReference"]["m_sound"];
CSoundContainerReference.m_pSound = jsonData["CSoundContainerReference"]["m_pSound"];

// Atribuições para VMixSubgraphSwitchDesc_t
// VMixSubgraphSwitchDesc_t Offsets
VMixSubgraphSwitchDesc_t.m_interpolationMode = jsonData["VMixSubgraphSwitchDesc_t"]["m_interpolationMode"];
VMixSubgraphSwitchDesc_t.m_bOnlyTailsOnFadeOut = jsonData["VMixSubgraphSwitchDesc_t"]["m_bOnlyTailsOnFadeOut"];
VMixSubgraphSwitchDesc_t.m_flInterpolationTime = jsonData["VMixSubgraphSwitchDesc_t"]["m_flInterpolationTime"];

// Atribuições para CVoiceContainerAnalysisBase
// CVoiceContainerAnalysisBase Offsets
CVoiceContainerAnalysisBase.m_bRegenerateCurveOnCompile = jsonData["CVoiceContainerAnalysisBase"]["m_bRegenerateCurveOnCompile"];
CVoiceContainerAnalysisBase.m_curve = jsonData["CVoiceContainerAnalysisBase"]["m_curve"];

// Atribuições para CSosGroupActionSoundeventMinMaxValuesSchema
// CSosGroupActionSoundeventMinMaxValuesSchema Offsets
CSosGroupActionSoundeventMinMaxValuesSchema.m_strQueryPublicFieldName = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_strQueryPublicFieldName"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_strDelayPublicFieldName = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_strDelayPublicFieldName"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_bExcludeStoppedSounds = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_bExcludeStoppedSounds"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_bExcludeDelayedSounds = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_bExcludeDelayedSounds"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_bExcludeSoundsBelowThreshold = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_bExcludeSoundsBelowThreshold"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_flExcludeSoundsMinThresholdValue = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_flExcludeSoundsMinThresholdValue"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_bExcludSoundsAboveThreshold = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_bExcludSoundsAboveThreshold"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_flExcludeSoundsMaxThresholdValue = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_flExcludeSoundsMaxThresholdValue"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_strMinValueName = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_strMinValueName"];
CSosGroupActionSoundeventMinMaxValuesSchema.m_strMaxValueName = jsonData["CSosGroupActionSoundeventMinMaxValuesSchema"]["m_strMaxValueName"];

// Atribuições para VMixPannerDesc_t
// VMixPannerDesc_t Offsets
VMixPannerDesc_t.m_type = jsonData["VMixPannerDesc_t"]["m_type"];
VMixPannerDesc_t.m_flStrength = jsonData["VMixPannerDesc_t"]["m_flStrength"];

// Atribuições para CSosGroupActionSoundeventPrioritySchema
// CSosGroupActionSoundeventPrioritySchema Offsets
CSosGroupActionSoundeventPrioritySchema.m_priorityValue = jsonData["CSosGroupActionSoundeventPrioritySchema"]["m_priorityValue"];
CSosGroupActionSoundeventPrioritySchema.m_priorityVolumeScalar = jsonData["CSosGroupActionSoundeventPrioritySchema"]["m_priorityVolumeScalar"];
CSosGroupActionSoundeventPrioritySchema.m_priorityContributeButDontRead = jsonData["CSosGroupActionSoundeventPrioritySchema"]["m_priorityContributeButDontRead"];
CSosGroupActionSoundeventPrioritySchema.m_bPriorityReadButDontContribute = jsonData["CSosGroupActionSoundeventPrioritySchema"]["m_bPriorityReadButDontContribute"];

// Atribuições para CVoiceContainerRealtimeFMSineWave
// CVoiceContainerRealtimeFMSineWave Offsets
CVoiceContainerRealtimeFMSineWave.m_flCarrierFrequency = jsonData["CVoiceContainerRealtimeFMSineWave"]["m_flCarrierFrequency"];
CVoiceContainerRealtimeFMSineWave.m_flModulatorFrequency = jsonData["CVoiceContainerRealtimeFMSineWave"]["m_flModulatorFrequency"];
CVoiceContainerRealtimeFMSineWave.m_flModulatorAmount = jsonData["CVoiceContainerRealtimeFMSineWave"]["m_flModulatorAmount"];

// Atribuições para SelectedEditItemInfo_t
// SelectedEditItemInfo_t Offsets
SelectedEditItemInfo_t.m_EditItems = jsonData["SelectedEditItemInfo_t"]["m_EditItems"];

// Atribuições para VMixModDelayDesc_t
// VMixModDelayDesc_t Offsets
VMixModDelayDesc_t.m_feedbackFilter = jsonData["VMixModDelayDesc_t"]["m_feedbackFilter"];
VMixModDelayDesc_t.m_bPhaseInvert = jsonData["VMixModDelayDesc_t"]["m_bPhaseInvert"];
VMixModDelayDesc_t.m_flGlideTime = jsonData["VMixModDelayDesc_t"]["m_flGlideTime"];
VMixModDelayDesc_t.m_flDelay = jsonData["VMixModDelayDesc_t"]["m_flDelay"];
VMixModDelayDesc_t.m_flOutputGain = jsonData["VMixModDelayDesc_t"]["m_flOutputGain"];
VMixModDelayDesc_t.m_flFeedbackGain = jsonData["VMixModDelayDesc_t"]["m_flFeedbackGain"];
VMixModDelayDesc_t.m_flModRate = jsonData["VMixModDelayDesc_t"]["m_flModRate"];
VMixModDelayDesc_t.m_flModDepth = jsonData["VMixModDelayDesc_t"]["m_flModDepth"];
VMixModDelayDesc_t.m_bApplyAntialiasing = jsonData["VMixModDelayDesc_t"]["m_bApplyAntialiasing"];

// Atribuições para VMixBoxverbDesc_t
// VMixBoxverbDesc_t Offsets
VMixBoxverbDesc_t.m_flSizeMax = jsonData["VMixBoxverbDesc_t"]["m_flSizeMax"];
VMixBoxverbDesc_t.m_flSizeMin = jsonData["VMixBoxverbDesc_t"]["m_flSizeMin"];
VMixBoxverbDesc_t.m_flComplexity = jsonData["VMixBoxverbDesc_t"]["m_flComplexity"];
VMixBoxverbDesc_t.m_flDiffusion = jsonData["VMixBoxverbDesc_t"]["m_flDiffusion"];
VMixBoxverbDesc_t.m_flModDepth = jsonData["VMixBoxverbDesc_t"]["m_flModDepth"];
VMixBoxverbDesc_t.m_flModRate = jsonData["VMixBoxverbDesc_t"]["m_flModRate"];
VMixBoxverbDesc_t.m_bParallel = jsonData["VMixBoxverbDesc_t"]["m_bParallel"];
VMixBoxverbDesc_t.m_filterType = jsonData["VMixBoxverbDesc_t"]["m_filterType"];
VMixBoxverbDesc_t.m_flWidth = jsonData["VMixBoxverbDesc_t"]["m_flWidth"];
VMixBoxverbDesc_t.m_flHeight = jsonData["VMixBoxverbDesc_t"]["m_flHeight"];
VMixBoxverbDesc_t.m_flDepth = jsonData["VMixBoxverbDesc_t"]["m_flDepth"];
VMixBoxverbDesc_t.m_flFeedbackScale = jsonData["VMixBoxverbDesc_t"]["m_flFeedbackScale"];
VMixBoxverbDesc_t.m_flFeedbackWidth = jsonData["VMixBoxverbDesc_t"]["m_flFeedbackWidth"];
VMixBoxverbDesc_t.m_flFeedbackHeight = jsonData["VMixBoxverbDesc_t"]["m_flFeedbackHeight"];
VMixBoxverbDesc_t.m_flFeedbackDepth = jsonData["VMixBoxverbDesc_t"]["m_flFeedbackDepth"];
VMixBoxverbDesc_t.m_flOutputGain = jsonData["VMixBoxverbDesc_t"]["m_flOutputGain"];
VMixBoxverbDesc_t.m_flTaps = jsonData["VMixBoxverbDesc_t"]["m_flTaps"];

// Atribuições para CSosGroupActionSchema
// CSosGroupActionSchema Offsets
CSosGroupActionSchema.m_name = jsonData["CSosGroupActionSchema"]["m_name"];
CSosGroupActionSchema.m_actionType = jsonData["CSosGroupActionSchema"]["m_actionType"];
CSosGroupActionSchema.m_actionInstanceType = jsonData["CSosGroupActionSchema"]["m_actionInstanceType"];

// Atribuições para CSosSoundEventGroupSchema
// CSosSoundEventGroupSchema Offsets
CSosSoundEventGroupSchema.m_name = jsonData["CSosSoundEventGroupSchema"]["m_name"];
CSosSoundEventGroupSchema.m_nType = jsonData["CSosSoundEventGroupSchema"]["m_nType"];
CSosSoundEventGroupSchema.m_bIsBlocking = jsonData["CSosSoundEventGroupSchema"]["m_bIsBlocking"];
CSosSoundEventGroupSchema.m_nBlockMaxCount = jsonData["CSosSoundEventGroupSchema"]["m_nBlockMaxCount"];
CSosSoundEventGroupSchema.m_bInvertMatch = jsonData["CSosSoundEventGroupSchema"]["m_bInvertMatch"];
CSosSoundEventGroupSchema.m_matchPattern = jsonData["CSosSoundEventGroupSchema"]["m_matchPattern"];
CSosSoundEventGroupSchema.m_branchPattern = jsonData["CSosSoundEventGroupSchema"]["m_branchPattern"];
CSosSoundEventGroupSchema.m_flLifeSpanTime = jsonData["CSosSoundEventGroupSchema"]["m_flLifeSpanTime"];
CSosSoundEventGroupSchema.m_vActions = jsonData["CSosSoundEventGroupSchema"]["m_vActions"];

// Atribuições para CSosGroupBranchPattern
// CSosGroupBranchPattern Offsets
CSosGroupBranchPattern.m_bMatchEventName = jsonData["CSosGroupBranchPattern"]["m_bMatchEventName"];
CSosGroupBranchPattern.m_bMatchEventSubString = jsonData["CSosGroupBranchPattern"]["m_bMatchEventSubString"];
CSosGroupBranchPattern.m_bMatchEntIndex = jsonData["CSosGroupBranchPattern"]["m_bMatchEntIndex"];
CSosGroupBranchPattern.m_bMatchOpvar = jsonData["CSosGroupBranchPattern"]["m_bMatchOpvar"];
CSosGroupBranchPattern.m_bMatchString = jsonData["CSosGroupBranchPattern"]["m_bMatchString"];

// Atribuições para VMixDynamics3BandDesc_t
// VMixDynamics3BandDesc_t Offsets
VMixDynamics3BandDesc_t.m_fldbGainOutput = jsonData["VMixDynamics3BandDesc_t"]["m_fldbGainOutput"];
VMixDynamics3BandDesc_t.m_flRMSTimeMS = jsonData["VMixDynamics3BandDesc_t"]["m_flRMSTimeMS"];
VMixDynamics3BandDesc_t.m_fldbKneeWidth = jsonData["VMixDynamics3BandDesc_t"]["m_fldbKneeWidth"];
VMixDynamics3BandDesc_t.m_flDepth = jsonData["VMixDynamics3BandDesc_t"]["m_flDepth"];
VMixDynamics3BandDesc_t.m_flWetMix = jsonData["VMixDynamics3BandDesc_t"]["m_flWetMix"];
VMixDynamics3BandDesc_t.m_flTimeScale = jsonData["VMixDynamics3BandDesc_t"]["m_flTimeScale"];
VMixDynamics3BandDesc_t.m_flLowCutoffFreq = jsonData["VMixDynamics3BandDesc_t"]["m_flLowCutoffFreq"];
VMixDynamics3BandDesc_t.m_flHighCutoffFreq = jsonData["VMixDynamics3BandDesc_t"]["m_flHighCutoffFreq"];
VMixDynamics3BandDesc_t.m_bPeakMode = jsonData["VMixDynamics3BandDesc_t"]["m_bPeakMode"];
VMixDynamics3BandDesc_t.m_bandDesc = jsonData["VMixDynamics3BandDesc_t"]["m_bandDesc"];

// Atribuições para CDSPMixgroupModifier
// CDSPMixgroupModifier Offsets
CDSPMixgroupModifier.m_mixgroup = jsonData["CDSPMixgroupModifier"]["m_mixgroup"];
CDSPMixgroupModifier.m_flModifier = jsonData["CDSPMixgroupModifier"]["m_flModifier"];
CDSPMixgroupModifier.m_flModifierMin = jsonData["CDSPMixgroupModifier"]["m_flModifierMin"];
CDSPMixgroupModifier.m_flSourceModifier = jsonData["CDSPMixgroupModifier"]["m_flSourceModifier"];
CDSPMixgroupModifier.m_flSourceModifierMin = jsonData["CDSPMixgroupModifier"]["m_flSourceModifierMin"];
CDSPMixgroupModifier.m_flListenerReverbModifierWhenSourceReverbIsActive = jsonData["CDSPMixgroupModifier"]["m_flListenerReverbModifierWhenSourceReverbIsActive"];

// Atribuições para CAudioMorphData
// CAudioMorphData Offsets
CAudioMorphData.m_times = jsonData["CAudioMorphData"]["m_times"];
CAudioMorphData.m_nameHashCodes = jsonData["CAudioMorphData"]["m_nameHashCodes"];
CAudioMorphData.m_nameStrings = jsonData["CAudioMorphData"]["m_nameStrings"];
CAudioMorphData.m_samples = jsonData["CAudioMorphData"]["m_samples"];
CAudioMorphData.m_flEaseIn = jsonData["CAudioMorphData"]["m_flEaseIn"];
CAudioMorphData.m_flEaseOut = jsonData["CAudioMorphData"]["m_flEaseOut"];

// Atribuições para CVoiceContainerStaticAdditiveSynth
// CVoiceContainerStaticAdditiveSynth Offsets
CVoiceContainerStaticAdditiveSynth.m_tones = jsonData["CVoiceContainerStaticAdditiveSynth"]["m_tones"];

// Atribuições para CVoiceContainerShapedNoise
// CVoiceContainerShapedNoise Offsets
CVoiceContainerShapedNoise.m_bUseCurveForFrequency = jsonData["CVoiceContainerShapedNoise"]["m_bUseCurveForFrequency"];
CVoiceContainerShapedNoise.m_flFrequency = jsonData["CVoiceContainerShapedNoise"]["m_flFrequency"];
CVoiceContainerShapedNoise.m_frequencySweep = jsonData["CVoiceContainerShapedNoise"]["m_frequencySweep"];
CVoiceContainerShapedNoise.m_bUseCurveForResonance = jsonData["CVoiceContainerShapedNoise"]["m_bUseCurveForResonance"];
CVoiceContainerShapedNoise.m_flResonance = jsonData["CVoiceContainerShapedNoise"]["m_flResonance"];
CVoiceContainerShapedNoise.m_resonanceSweep = jsonData["CVoiceContainerShapedNoise"]["m_resonanceSweep"];
CVoiceContainerShapedNoise.m_bUseCurveForAmplitude = jsonData["CVoiceContainerShapedNoise"]["m_bUseCurveForAmplitude"];
CVoiceContainerShapedNoise.m_flGainInDecibels = jsonData["CVoiceContainerShapedNoise"]["m_flGainInDecibels"];
CVoiceContainerShapedNoise.m_gainSweep = jsonData["CVoiceContainerShapedNoise"]["m_gainSweep"];

// Atribuições para CDspPresetModifierList
// CDspPresetModifierList Offsets
CDspPresetModifierList.m_dspName = jsonData["CDspPresetModifierList"]["m_dspName"];
CDspPresetModifierList.m_modifiers = jsonData["CDspPresetModifierList"]["m_modifiers"];

// Atribuições para CVoiceContainerBase
// CVoiceContainerBase Offsets
CVoiceContainerBase.m_vSound = jsonData["CVoiceContainerBase"]["m_vSound"];
CVoiceContainerBase.m_pEnvelopeAnalyzer = jsonData["CVoiceContainerBase"]["m_pEnvelopeAnalyzer"];

// Atribuições para CVoiceContainerGranulator
// CVoiceContainerGranulator Offsets
CVoiceContainerGranulator.m_flGrainLength = jsonData["CVoiceContainerGranulator"]["m_flGrainLength"];
CVoiceContainerGranulator.m_flGrainCrossfadeAmount = jsonData["CVoiceContainerGranulator"]["m_flGrainCrossfadeAmount"];
CVoiceContainerGranulator.m_flStartJitter = jsonData["CVoiceContainerGranulator"]["m_flStartJitter"];
CVoiceContainerGranulator.m_flPlaybackJitter = jsonData["CVoiceContainerGranulator"]["m_flPlaybackJitter"];
CVoiceContainerGranulator.m_sourceAudio = jsonData["CVoiceContainerGranulator"]["m_sourceAudio"];

// Atribuições para VMixDelayDesc_t
// VMixDelayDesc_t Offsets
VMixDelayDesc_t.m_feedbackFilter = jsonData["VMixDelayDesc_t"]["m_feedbackFilter"];
VMixDelayDesc_t.m_bEnableFilter = jsonData["VMixDelayDesc_t"]["m_bEnableFilter"];
VMixDelayDesc_t.m_flDelay = jsonData["VMixDelayDesc_t"]["m_flDelay"];
VMixDelayDesc_t.m_flDirectGain = jsonData["VMixDelayDesc_t"]["m_flDirectGain"];
VMixDelayDesc_t.m_flDelayGain = jsonData["VMixDelayDesc_t"]["m_flDelayGain"];
VMixDelayDesc_t.m_flFeedbackGain = jsonData["VMixDelayDesc_t"]["m_flFeedbackGain"];
VMixDelayDesc_t.m_flWidth = jsonData["VMixDelayDesc_t"]["m_flWidth"];

// Atribuições para VMixEQ8Desc_t
// VMixEQ8Desc_t Offsets
VMixEQ8Desc_t.m_stages = jsonData["VMixEQ8Desc_t"]["m_stages"];

// Atribuições para CAudioPhonemeTag
// CAudioPhonemeTag Offsets
CAudioPhonemeTag.m_flStartTime = jsonData["CAudioPhonemeTag"]["m_flStartTime"];
CAudioPhonemeTag.m_flEndTime = jsonData["CAudioPhonemeTag"]["m_flEndTime"];
CAudioPhonemeTag.m_nPhonemeCode = jsonData["CAudioPhonemeTag"]["m_nPhonemeCode"];

// Atribuições para CSosGroupActionSoundeventCountSchema
// CSosGroupActionSoundeventCountSchema Offsets
CSosGroupActionSoundeventCountSchema.m_bExcludeStoppedSounds = jsonData["CSosGroupActionSoundeventCountSchema"]["m_bExcludeStoppedSounds"];
CSosGroupActionSoundeventCountSchema.m_strCountKeyName = jsonData["CSosGroupActionSoundeventCountSchema"]["m_strCountKeyName"];

// Atribuições para CVoiceContainerEnvelopeAnalyzer
// CVoiceContainerEnvelopeAnalyzer Offsets
CVoiceContainerEnvelopeAnalyzer.m_mode = jsonData["CVoiceContainerEnvelopeAnalyzer"]["m_mode"];
CVoiceContainerEnvelopeAnalyzer.m_nSamples = jsonData["CVoiceContainerEnvelopeAnalyzer"]["m_nSamples"];
CVoiceContainerEnvelopeAnalyzer.m_flThreshold = jsonData["CVoiceContainerEnvelopeAnalyzer"]["m_flThreshold"];

// Atribuições para CSoundEventMetaData
// CSoundEventMetaData Offsets
CSoundEventMetaData.m_soundEventVMix = jsonData["CSoundEventMetaData"]["m_soundEventVMix"];

// Atribuições para VMixPitchShiftDesc_t
// VMixPitchShiftDesc_t Offsets
VMixPitchShiftDesc_t.m_nGrainSampleCount = jsonData["VMixPitchShiftDesc_t"]["m_nGrainSampleCount"];
VMixPitchShiftDesc_t.m_flPitchShift = jsonData["VMixPitchShiftDesc_t"]["m_flPitchShift"];
VMixPitchShiftDesc_t.m_nQuality = jsonData["VMixPitchShiftDesc_t"]["m_nQuality"];
VMixPitchShiftDesc_t.m_nProcType = jsonData["VMixPitchShiftDesc_t"]["m_nProcType"];

// Atribuições para CAudioEmphasisSample
// CAudioEmphasisSample Offsets
CAudioEmphasisSample.m_flTime = jsonData["CAudioEmphasisSample"]["m_flTime"];
CAudioEmphasisSample.m_flValue = jsonData["CAudioEmphasisSample"]["m_flValue"];

// Atribuições para CVoiceContainerSet
// CVoiceContainerSet Offsets
CVoiceContainerSet.m_soundsToPlay = jsonData["CVoiceContainerSet"]["m_soundsToPlay"];

// Atribuições para VMixConvolutionDesc_t
// VMixConvolutionDesc_t Offsets
VMixConvolutionDesc_t.m_fldbGain = jsonData["VMixConvolutionDesc_t"]["m_fldbGain"];
VMixConvolutionDesc_t.m_flPreDelayMS = jsonData["VMixConvolutionDesc_t"]["m_flPreDelayMS"];
VMixConvolutionDesc_t.m_flWetMix = jsonData["VMixConvolutionDesc_t"]["m_flWetMix"];
VMixConvolutionDesc_t.m_fldbLow = jsonData["VMixConvolutionDesc_t"]["m_fldbLow"];
VMixConvolutionDesc_t.m_fldbMid = jsonData["VMixConvolutionDesc_t"]["m_fldbMid"];
VMixConvolutionDesc_t.m_fldbHigh = jsonData["VMixConvolutionDesc_t"]["m_fldbHigh"];
VMixConvolutionDesc_t.m_flLowCutoffFreq = jsonData["VMixConvolutionDesc_t"]["m_flLowCutoffFreq"];
VMixConvolutionDesc_t.m_flHighCutoffFreq = jsonData["VMixConvolutionDesc_t"]["m_flHighCutoffFreq"];

// Atribuições para CVoiceContainerSetElement
// CVoiceContainerSetElement Offsets
CVoiceContainerSetElement.m_sound = jsonData["CVoiceContainerSetElement"]["m_sound"];
CVoiceContainerSetElement.m_flVolumeDB = jsonData["CVoiceContainerSetElement"]["m_flVolumeDB"];

// Atribuições para CSosSoundEventGroupListSchema
// CSosSoundEventGroupListSchema Offsets
CSosSoundEventGroupListSchema.m_groupList = jsonData["CSosSoundEventGroupListSchema"]["m_groupList"];

// Atribuições para CSosGroupMatchPattern
// CSosGroupMatchPattern Offsets
CSosGroupMatchPattern.m_matchSoundEventName = jsonData["CSosGroupMatchPattern"]["m_matchSoundEventName"];
CSosGroupMatchPattern.m_matchSoundEventSubString = jsonData["CSosGroupMatchPattern"]["m_matchSoundEventSubString"];
CSosGroupMatchPattern.m_flEntIndex = jsonData["CSosGroupMatchPattern"]["m_flEntIndex"];
CSosGroupMatchPattern.m_flOpvar = jsonData["CSosGroupMatchPattern"]["m_flOpvar"];
CSosGroupMatchPattern.m_opvarString = jsonData["CSosGroupMatchPattern"]["m_opvarString"];

// Atribuições para SosEditItemInfo_t
// SosEditItemInfo_t Offsets
SosEditItemInfo_t.itemType = jsonData["SosEditItemInfo_t"]["itemType"];
SosEditItemInfo_t.itemName = jsonData["SosEditItemInfo_t"]["itemName"];
SosEditItemInfo_t.itemTypeName = jsonData["SosEditItemInfo_t"]["itemTypeName"];
SosEditItemInfo_t.itemKVString = jsonData["SosEditItemInfo_t"]["itemKVString"];
SosEditItemInfo_t.itemPos = jsonData["SosEditItemInfo_t"]["itemPos"];

// Atribuições para VMixPlateverbDesc_t
// VMixPlateverbDesc_t Offsets
VMixPlateverbDesc_t.m_flPrefilter = jsonData["VMixPlateverbDesc_t"]["m_flPrefilter"];
VMixPlateverbDesc_t.m_flInputDiffusion1 = jsonData["VMixPlateverbDesc_t"]["m_flInputDiffusion1"];
VMixPlateverbDesc_t.m_flInputDiffusion2 = jsonData["VMixPlateverbDesc_t"]["m_flInputDiffusion2"];
VMixPlateverbDesc_t.m_flDecay = jsonData["VMixPlateverbDesc_t"]["m_flDecay"];
VMixPlateverbDesc_t.m_flDamp = jsonData["VMixPlateverbDesc_t"]["m_flDamp"];
VMixPlateverbDesc_t.m_flFeedbackDiffusion1 = jsonData["VMixPlateverbDesc_t"]["m_flFeedbackDiffusion1"];
VMixPlateverbDesc_t.m_flFeedbackDiffusion2 = jsonData["VMixPlateverbDesc_t"]["m_flFeedbackDiffusion2"];

// Atribuições para CSoundContainerReferenceArray
// CSoundContainerReferenceArray Offsets
CSoundContainerReferenceArray.m_bUseReference = jsonData["CSoundContainerReferenceArray"]["m_bUseReference"];
CSoundContainerReferenceArray.m_sounds = jsonData["CSoundContainerReferenceArray"]["m_sounds"];
CSoundContainerReferenceArray.m_pSounds = jsonData["CSoundContainerReferenceArray"]["m_pSounds"];

// Atribuições para VMixDiffusorDesc_t
// VMixDiffusorDesc_t Offsets
VMixDiffusorDesc_t.m_flSize = jsonData["VMixDiffusorDesc_t"]["m_flSize"];
VMixDiffusorDesc_t.m_flComplexity = jsonData["VMixDiffusorDesc_t"]["m_flComplexity"];
VMixDiffusorDesc_t.m_flFeedback = jsonData["VMixDiffusorDesc_t"]["m_flFeedback"];
VMixDiffusorDesc_t.m_flOutputGain = jsonData["VMixDiffusorDesc_t"]["m_flOutputGain"];

// Atribuições para VMixDynamicsCompressorDesc_t
// VMixDynamicsCompressorDesc_t Offsets
VMixDynamicsCompressorDesc_t.m_fldbOutputGain = jsonData["VMixDynamicsCompressorDesc_t"]["m_fldbOutputGain"];
VMixDynamicsCompressorDesc_t.m_fldbCompressionThreshold = jsonData["VMixDynamicsCompressorDesc_t"]["m_fldbCompressionThreshold"];
VMixDynamicsCompressorDesc_t.m_fldbKneeWidth = jsonData["VMixDynamicsCompressorDesc_t"]["m_fldbKneeWidth"];
VMixDynamicsCompressorDesc_t.m_flCompressionRatio = jsonData["VMixDynamicsCompressorDesc_t"]["m_flCompressionRatio"];
VMixDynamicsCompressorDesc_t.m_flAttackTimeMS = jsonData["VMixDynamicsCompressorDesc_t"]["m_flAttackTimeMS"];
VMixDynamicsCompressorDesc_t.m_flReleaseTimeMS = jsonData["VMixDynamicsCompressorDesc_t"]["m_flReleaseTimeMS"];
VMixDynamicsCompressorDesc_t.m_flRMSTimeMS = jsonData["VMixDynamicsCompressorDesc_t"]["m_flRMSTimeMS"];
VMixDynamicsCompressorDesc_t.m_flWetMix = jsonData["VMixDynamicsCompressorDesc_t"]["m_flWetMix"];
VMixDynamicsCompressorDesc_t.m_bPeakMode = jsonData["VMixDynamicsCompressorDesc_t"]["m_bPeakMode"];

// Atribuições para VMixShaperDesc_t
// VMixShaperDesc_t Offsets
VMixShaperDesc_t.m_nShape = jsonData["VMixShaperDesc_t"]["m_nShape"];
VMixShaperDesc_t.m_fldbDrive = jsonData["VMixShaperDesc_t"]["m_fldbDrive"];
VMixShaperDesc_t.m_fldbOutputGain = jsonData["VMixShaperDesc_t"]["m_fldbOutputGain"];
VMixShaperDesc_t.m_flWetMix = jsonData["VMixShaperDesc_t"]["m_flWetMix"];
VMixShaperDesc_t.m_nOversampleFactor = jsonData["VMixShaperDesc_t"]["m_nOversampleFactor"];

// Atribuições para VMixEnvelopeDesc_t
// VMixEnvelopeDesc_t Offsets
VMixEnvelopeDesc_t.m_flAttackTimeMS = jsonData["VMixEnvelopeDesc_t"]["m_flAttackTimeMS"];
VMixEnvelopeDesc_t.m_flHoldTimeMS = jsonData["VMixEnvelopeDesc_t"]["m_flHoldTimeMS"];
VMixEnvelopeDesc_t.m_flReleaseTimeMS = jsonData["VMixEnvelopeDesc_t"]["m_flReleaseTimeMS"];

// Atribuições para CAudioSentence
// CAudioSentence Offsets
CAudioSentence.m_bShouldVoiceDuck = jsonData["CAudioSentence"]["m_bShouldVoiceDuck"];
CAudioSentence.m_RunTimePhonemes = jsonData["CAudioSentence"]["m_RunTimePhonemes"];
CAudioSentence.m_EmphasisSamples = jsonData["CAudioSentence"]["m_EmphasisSamples"];
CAudioSentence.m_morphData = jsonData["CAudioSentence"]["m_morphData"];

// Atribuições para CSosGroupActionLimitSchema
// CSosGroupActionLimitSchema Offsets
CSosGroupActionLimitSchema.m_nMaxCount = jsonData["CSosGroupActionLimitSchema"]["m_nMaxCount"];
CSosGroupActionLimitSchema.m_nStopType = jsonData["CSosGroupActionLimitSchema"]["m_nStopType"];
CSosGroupActionLimitSchema.m_nSortType = jsonData["CSosGroupActionLimitSchema"]["m_nSortType"];

// Atribuições para CVoiceContainerAmpedDecayingSineWave
// CVoiceContainerAmpedDecayingSineWave Offsets
CVoiceContainerAmpedDecayingSineWave.m_flGainAmount = jsonData["CVoiceContainerAmpedDecayingSineWave"]["m_flGainAmount"];

// Atribuições para CVoiceContainerEnvelope
// CVoiceContainerEnvelope Offsets
CVoiceContainerEnvelope.m_sound = jsonData["CVoiceContainerEnvelope"]["m_sound"];
CVoiceContainerEnvelope.m_analysisContainer = jsonData["CVoiceContainerEnvelope"]["m_analysisContainer"];

// Atribuições para VMixAutoFilterDesc_t
// VMixAutoFilterDesc_t Offsets
VMixAutoFilterDesc_t.m_flEnvelopeAmount = jsonData["VMixAutoFilterDesc_t"]["m_flEnvelopeAmount"];
VMixAutoFilterDesc_t.m_flAttackTimeMS = jsonData["VMixAutoFilterDesc_t"]["m_flAttackTimeMS"];
VMixAutoFilterDesc_t.m_flReleaseTimeMS = jsonData["VMixAutoFilterDesc_t"]["m_flReleaseTimeMS"];
VMixAutoFilterDesc_t.m_filter = jsonData["VMixAutoFilterDesc_t"]["m_filter"];
VMixAutoFilterDesc_t.m_flLFOAmount = jsonData["VMixAutoFilterDesc_t"]["m_flLFOAmount"];
VMixAutoFilterDesc_t.m_flLFORate = jsonData["VMixAutoFilterDesc_t"]["m_flLFORate"];
VMixAutoFilterDesc_t.m_flPhase = jsonData["VMixAutoFilterDesc_t"]["m_flPhase"];
VMixAutoFilterDesc_t.m_nLFOShape = jsonData["VMixAutoFilterDesc_t"]["m_nLFOShape"];

// Atribuições para VMixDynamicsBand_t
// VMixDynamicsBand_t Offsets
VMixDynamicsBand_t.m_fldbGainInput = jsonData["VMixDynamicsBand_t"]["m_fldbGainInput"];
VMixDynamicsBand_t.m_fldbGainOutput = jsonData["VMixDynamicsBand_t"]["m_fldbGainOutput"];
VMixDynamicsBand_t.m_fldbThresholdBelow = jsonData["VMixDynamicsBand_t"]["m_fldbThresholdBelow"];
VMixDynamicsBand_t.m_fldbThresholdAbove = jsonData["VMixDynamicsBand_t"]["m_fldbThresholdAbove"];
VMixDynamicsBand_t.m_flRatioBelow = jsonData["VMixDynamicsBand_t"]["m_flRatioBelow"];
VMixDynamicsBand_t.m_flRatioAbove = jsonData["VMixDynamicsBand_t"]["m_flRatioAbove"];
VMixDynamicsBand_t.m_flAttackTimeMS = jsonData["VMixDynamicsBand_t"]["m_flAttackTimeMS"];
VMixDynamicsBand_t.m_flReleaseTimeMS = jsonData["VMixDynamicsBand_t"]["m_flReleaseTimeMS"];
VMixDynamicsBand_t.m_bEnable = jsonData["VMixDynamicsBand_t"]["m_bEnable"];
VMixDynamicsBand_t.m_bSolo = jsonData["VMixDynamicsBand_t"]["m_bSolo"];

// Atribuições para VMixEffectChainDesc_t
// VMixEffectChainDesc_t Offsets
VMixEffectChainDesc_t.m_flCrossfadeTime = jsonData["VMixEffectChainDesc_t"]["m_flCrossfadeTime"];

// Atribuições para CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance
// CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance Offsets
CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance.m_flMinVolume = jsonData["CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance"]["m_flMinVolume"];
CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance.m_nInstancesAtMinVolume = jsonData["CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance"]["m_nInstancesAtMinVolume"];
CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance.m_flMaxVolume = jsonData["CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance"]["m_flMaxVolume"];
CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance.m_nInstancesAtMaxVolume = jsonData["CVoiceContainerStaticAdditiveSynth__CGainScalePerInstance"]["m_nInstancesAtMaxVolume"];

// Atribuições para CVoiceContainerSelector
// CVoiceContainerSelector Offsets
CVoiceContainerSelector.m_mode = jsonData["CVoiceContainerSelector"]["m_mode"];
CVoiceContainerSelector.m_soundsToPlay = jsonData["CVoiceContainerSelector"]["m_soundsToPlay"];
CVoiceContainerSelector.m_fProbabilityWeights = jsonData["CVoiceContainerSelector"]["m_fProbabilityWeights"];

// Atribuições para CSosGroupActionTimeBlockLimitSchema
// CSosGroupActionTimeBlockLimitSchema Offsets
CSosGroupActionTimeBlockLimitSchema.m_nMaxCount = jsonData["CSosGroupActionTimeBlockLimitSchema"]["m_nMaxCount"];
CSosGroupActionTimeBlockLimitSchema.m_flMaxDuration = jsonData["CSosGroupActionTimeBlockLimitSchema"]["m_flMaxDuration"];

// Atribuições para CTestBlendContainer
// CTestBlendContainer Offsets
CTestBlendContainer.m_firstSound = jsonData["CTestBlendContainer"]["m_firstSound"];
CTestBlendContainer.m_secondSound = jsonData["CTestBlendContainer"]["m_secondSound"];

// Atribuições para CSosGroupActionMemberCountEnvelopeSchema
// CSosGroupActionMemberCountEnvelopeSchema Offsets
CSosGroupActionMemberCountEnvelopeSchema.m_nBaseCount = jsonData["CSosGroupActionMemberCountEnvelopeSchema"]["m_nBaseCount"];
CSosGroupActionMemberCountEnvelopeSchema.m_nTargetCount = jsonData["CSosGroupActionMemberCountEnvelopeSchema"]["m_nTargetCount"];
CSosGroupActionMemberCountEnvelopeSchema.m_flBaseValue = jsonData["CSosGroupActionMemberCountEnvelopeSchema"]["m_flBaseValue"];
CSosGroupActionMemberCountEnvelopeSchema.m_flTargetValue = jsonData["CSosGroupActionMemberCountEnvelopeSchema"]["m_flTargetValue"];
CSosGroupActionMemberCountEnvelopeSchema.m_flAttack = jsonData["CSosGroupActionMemberCountEnvelopeSchema"]["m_flAttack"];
CSosGroupActionMemberCountEnvelopeSchema.m_flDecay = jsonData["CSosGroupActionMemberCountEnvelopeSchema"]["m_flDecay"];
CSosGroupActionMemberCountEnvelopeSchema.m_resultVarName = jsonData["CSosGroupActionMemberCountEnvelopeSchema"]["m_resultVarName"];
CSosGroupActionMemberCountEnvelopeSchema.m_bSaveToGroup = jsonData["CSosGroupActionMemberCountEnvelopeSchema"]["m_bSaveToGroup"];

// Atribuições para CVoiceContainerSwitch
// CVoiceContainerSwitch Offsets
CVoiceContainerSwitch.m_soundsToPlay = jsonData["CVoiceContainerSwitch"]["m_soundsToPlay"];

// Atribuições para CSosGroupActionTimeLimitSchema
// CSosGroupActionTimeLimitSchema Offsets
CSosGroupActionTimeLimitSchema.m_flMaxDuration = jsonData["CSosGroupActionTimeLimitSchema"]["m_flMaxDuration"];

// Atribuições para VMixVocoderDesc_t
// VMixVocoderDesc_t Offsets
VMixVocoderDesc_t.m_nBandCount = jsonData["VMixVocoderDesc_t"]["m_nBandCount"];
VMixVocoderDesc_t.m_flBandwidth = jsonData["VMixVocoderDesc_t"]["m_flBandwidth"];
VMixVocoderDesc_t.m_fldBModGain = jsonData["VMixVocoderDesc_t"]["m_fldBModGain"];
VMixVocoderDesc_t.m_flFreqRangeStart = jsonData["VMixVocoderDesc_t"]["m_flFreqRangeStart"];
VMixVocoderDesc_t.m_flFreqRangeEnd = jsonData["VMixVocoderDesc_t"]["m_flFreqRangeEnd"];
VMixVocoderDesc_t.m_fldBUnvoicedGain = jsonData["VMixVocoderDesc_t"]["m_fldBUnvoicedGain"];
VMixVocoderDesc_t.m_flAttackTimeMS = jsonData["VMixVocoderDesc_t"]["m_flAttackTimeMS"];
VMixVocoderDesc_t.m_flReleaseTimeMS = jsonData["VMixVocoderDesc_t"]["m_flReleaseTimeMS"];
VMixVocoderDesc_t.m_nDebugBand = jsonData["VMixVocoderDesc_t"]["m_nDebugBand"];
VMixVocoderDesc_t.m_bPeakMode = jsonData["VMixVocoderDesc_t"]["m_bPeakMode"];

// Atribuições para VMixUtilityDesc_t
// VMixUtilityDesc_t Offsets
VMixUtilityDesc_t.m_nOp = jsonData["VMixUtilityDesc_t"]["m_nOp"];
VMixUtilityDesc_t.m_flInputPan = jsonData["VMixUtilityDesc_t"]["m_flInputPan"];
VMixUtilityDesc_t.m_flOutputBalance = jsonData["VMixUtilityDesc_t"]["m_flOutputBalance"];
VMixUtilityDesc_t.m_fldbOutputGain = jsonData["VMixUtilityDesc_t"]["m_fldbOutputGain"];
VMixUtilityDesc_t.m_bBassMono = jsonData["VMixUtilityDesc_t"]["m_bBassMono"];
VMixUtilityDesc_t.m_flBassFreq = jsonData["VMixUtilityDesc_t"]["m_flBassFreq"];

// Atribuições para CVoiceContainerLoopTrigger
// CVoiceContainerLoopTrigger Offsets
CVoiceContainerLoopTrigger.m_sound = jsonData["CVoiceContainerLoopTrigger"]["m_sound"];
CVoiceContainerLoopTrigger.m_flRetriggerTimeMin = jsonData["CVoiceContainerLoopTrigger"]["m_flRetriggerTimeMin"];
CVoiceContainerLoopTrigger.m_flRetriggerTimeMax = jsonData["CVoiceContainerLoopTrigger"]["m_flRetriggerTimeMax"];
CVoiceContainerLoopTrigger.m_flFadeTime = jsonData["CVoiceContainerLoopTrigger"]["m_flFadeTime"];
CVoiceContainerLoopTrigger.m_bCrossFade = jsonData["CVoiceContainerLoopTrigger"]["m_bCrossFade"];

// Atribuições para CVoiceContainerDecayingSineWave
// CVoiceContainerDecayingSineWave Offsets
CVoiceContainerDecayingSineWave.m_flFrequency = jsonData["CVoiceContainerDecayingSineWave"]["m_flFrequency"];
CVoiceContainerDecayingSineWave.m_flDecayTime = jsonData["CVoiceContainerDecayingSineWave"]["m_flDecayTime"];

// Atribuições para VMixFilterDesc_t
// VMixFilterDesc_t Offsets
VMixFilterDesc_t.m_nFilterType = jsonData["VMixFilterDesc_t"]["m_nFilterType"];
VMixFilterDesc_t.m_nFilterSlope = jsonData["VMixFilterDesc_t"]["m_nFilterSlope"];
VMixFilterDesc_t.m_bEnabled = jsonData["VMixFilterDesc_t"]["m_bEnabled"];
VMixFilterDesc_t.m_fldbGain = jsonData["VMixFilterDesc_t"]["m_fldbGain"];
VMixFilterDesc_t.m_flCutoffFreq = jsonData["VMixFilterDesc_t"]["m_flCutoffFreq"];
VMixFilterDesc_t.m_flQ = jsonData["VMixFilterDesc_t"]["m_flQ"];

// Atribuições para VMixOscDesc_t
// VMixOscDesc_t Offsets
VMixOscDesc_t.oscType = jsonData["VMixOscDesc_t"]["oscType"];
VMixOscDesc_t.m_freq = jsonData["VMixOscDesc_t"]["m_freq"];
VMixOscDesc_t.m_flPhase = jsonData["VMixOscDesc_t"]["m_flPhase"];

// Atribuições para VMixDynamicsDesc_t
// VMixDynamicsDesc_t Offsets
VMixDynamicsDesc_t.m_fldbGain = jsonData["VMixDynamicsDesc_t"]["m_fldbGain"];
VMixDynamicsDesc_t.m_fldbNoiseGateThreshold = jsonData["VMixDynamicsDesc_t"]["m_fldbNoiseGateThreshold"];
VMixDynamicsDesc_t.m_fldbCompressionThreshold = jsonData["VMixDynamicsDesc_t"]["m_fldbCompressionThreshold"];
VMixDynamicsDesc_t.m_fldbLimiterThreshold = jsonData["VMixDynamicsDesc_t"]["m_fldbLimiterThreshold"];
VMixDynamicsDesc_t.m_fldbKneeWidth = jsonData["VMixDynamicsDesc_t"]["m_fldbKneeWidth"];
VMixDynamicsDesc_t.m_flRatio = jsonData["VMixDynamicsDesc_t"]["m_flRatio"];
VMixDynamicsDesc_t.m_flLimiterRatio = jsonData["VMixDynamicsDesc_t"]["m_flLimiterRatio"];
VMixDynamicsDesc_t.m_flAttackTimeMS = jsonData["VMixDynamicsDesc_t"]["m_flAttackTimeMS"];
VMixDynamicsDesc_t.m_flReleaseTimeMS = jsonData["VMixDynamicsDesc_t"]["m_flReleaseTimeMS"];
VMixDynamicsDesc_t.m_flRMSTimeMS = jsonData["VMixDynamicsDesc_t"]["m_flRMSTimeMS"];
VMixDynamicsDesc_t.m_flWetMix = jsonData["VMixDynamicsDesc_t"]["m_flWetMix"];
VMixDynamicsDesc_t.m_bPeakMode = jsonData["VMixDynamicsDesc_t"]["m_bPeakMode"];

// Atribuições para RnSoftbodySpring_t
// RnSoftbodySpring_t Offsets
RnSoftbodySpring_t.m_nParticle = jsonData["RnSoftbodySpring_t"]["m_nParticle"];
RnSoftbodySpring_t.m_flLength = jsonData["RnSoftbodySpring_t"]["m_flLength"];

// Atribuições para RnSoftbodyParticle_t
// RnSoftbodyParticle_t Offsets
RnSoftbodyParticle_t.m_flMassInv = jsonData["RnSoftbodyParticle_t"]["m_flMassInv"];

// Atribuições para RnHullDesc_t
// RnHullDesc_t Offsets
RnHullDesc_t.m_Hull = jsonData["RnHullDesc_t"]["m_Hull"];

// Atribuições para RnSoftbodyCapsule_t
// RnSoftbodyCapsule_t Offsets
RnSoftbodyCapsule_t.m_vCenter = jsonData["RnSoftbodyCapsule_t"]["m_vCenter"];
RnSoftbodyCapsule_t.m_flRadius = jsonData["RnSoftbodyCapsule_t"]["m_flRadius"];
RnSoftbodyCapsule_t.m_nParticle = jsonData["RnSoftbodyCapsule_t"]["m_nParticle"];

// Atribuições para RnCapsuleDesc_t
// RnCapsuleDesc_t Offsets
RnCapsuleDesc_t.m_Capsule = jsonData["RnCapsuleDesc_t"]["m_Capsule"];

// Atribuições para RnSphereDesc_t
// RnSphereDesc_t Offsets
RnSphereDesc_t.m_Sphere = jsonData["RnSphereDesc_t"]["m_Sphere"];

// Atribuições para RnMeshDesc_t
// RnMeshDesc_t Offsets
RnMeshDesc_t.m_Mesh = jsonData["RnMeshDesc_t"]["m_Mesh"];

// Atribuições para PhysFeModelDesc_t
// PhysFeModelDesc_t Offsets
PhysFeModelDesc_t.m_CtrlHash = jsonData["PhysFeModelDesc_t"]["m_CtrlHash"];
PhysFeModelDesc_t.m_CtrlName = jsonData["PhysFeModelDesc_t"]["m_CtrlName"];
PhysFeModelDesc_t.m_nStaticNodeFlags = jsonData["PhysFeModelDesc_t"]["m_nStaticNodeFlags"];
PhysFeModelDesc_t.m_nDynamicNodeFlags = jsonData["PhysFeModelDesc_t"]["m_nDynamicNodeFlags"];
PhysFeModelDesc_t.m_flLocalForce = jsonData["PhysFeModelDesc_t"]["m_flLocalForce"];
PhysFeModelDesc_t.m_flLocalRotation = jsonData["PhysFeModelDesc_t"]["m_flLocalRotation"];
PhysFeModelDesc_t.m_nNodeCount = jsonData["PhysFeModelDesc_t"]["m_nNodeCount"];
PhysFeModelDesc_t.m_nStaticNodes = jsonData["PhysFeModelDesc_t"]["m_nStaticNodes"];
PhysFeModelDesc_t.m_nRotLockStaticNodes = jsonData["PhysFeModelDesc_t"]["m_nRotLockStaticNodes"];
PhysFeModelDesc_t.m_nFirstPositionDrivenNode = jsonData["PhysFeModelDesc_t"]["m_nFirstPositionDrivenNode"];
PhysFeModelDesc_t.m_nSimdTriCount1 = jsonData["PhysFeModelDesc_t"]["m_nSimdTriCount1"];
PhysFeModelDesc_t.m_nSimdTriCount2 = jsonData["PhysFeModelDesc_t"]["m_nSimdTriCount2"];
PhysFeModelDesc_t.m_nSimdQuadCount1 = jsonData["PhysFeModelDesc_t"]["m_nSimdQuadCount1"];
PhysFeModelDesc_t.m_nSimdQuadCount2 = jsonData["PhysFeModelDesc_t"]["m_nSimdQuadCount2"];
PhysFeModelDesc_t.m_nQuadCount1 = jsonData["PhysFeModelDesc_t"]["m_nQuadCount1"];
PhysFeModelDesc_t.m_nQuadCount2 = jsonData["PhysFeModelDesc_t"]["m_nQuadCount2"];
PhysFeModelDesc_t.m_nTreeDepth = jsonData["PhysFeModelDesc_t"]["m_nTreeDepth"];
PhysFeModelDesc_t.m_nNodeBaseJiggleboneDependsCount = jsonData["PhysFeModelDesc_t"]["m_nNodeBaseJiggleboneDependsCount"];
PhysFeModelDesc_t.m_nRopeCount = jsonData["PhysFeModelDesc_t"]["m_nRopeCount"];
PhysFeModelDesc_t.m_Ropes = jsonData["PhysFeModelDesc_t"]["m_Ropes"];
PhysFeModelDesc_t.m_NodeBases = jsonData["PhysFeModelDesc_t"]["m_NodeBases"];
PhysFeModelDesc_t.m_SimdNodeBases = jsonData["PhysFeModelDesc_t"]["m_SimdNodeBases"];
PhysFeModelDesc_t.m_Quads = jsonData["PhysFeModelDesc_t"]["m_Quads"];
PhysFeModelDesc_t.m_SimdQuads = jsonData["PhysFeModelDesc_t"]["m_SimdQuads"];
PhysFeModelDesc_t.m_SimdTris = jsonData["PhysFeModelDesc_t"]["m_SimdTris"];
PhysFeModelDesc_t.m_SimdRods = jsonData["PhysFeModelDesc_t"]["m_SimdRods"];
PhysFeModelDesc_t.m_SimdRodsAnim = jsonData["PhysFeModelDesc_t"]["m_SimdRodsAnim"];
PhysFeModelDesc_t.m_InitPose = jsonData["PhysFeModelDesc_t"]["m_InitPose"];
PhysFeModelDesc_t.m_Rods = jsonData["PhysFeModelDesc_t"]["m_Rods"];
PhysFeModelDesc_t.m_Twists = jsonData["PhysFeModelDesc_t"]["m_Twists"];
PhysFeModelDesc_t.m_HingeLimits = jsonData["PhysFeModelDesc_t"]["m_HingeLimits"];
PhysFeModelDesc_t.m_AntiTunnelProbes = jsonData["PhysFeModelDesc_t"]["m_AntiTunnelProbes"];
PhysFeModelDesc_t.m_AntiTunnelTargetNodes = jsonData["PhysFeModelDesc_t"]["m_AntiTunnelTargetNodes"];
PhysFeModelDesc_t.m_AxialEdges = jsonData["PhysFeModelDesc_t"]["m_AxialEdges"];
PhysFeModelDesc_t.m_NodeInvMasses = jsonData["PhysFeModelDesc_t"]["m_NodeInvMasses"];
PhysFeModelDesc_t.m_CtrlOffsets = jsonData["PhysFeModelDesc_t"]["m_CtrlOffsets"];
PhysFeModelDesc_t.m_CtrlOsOffsets = jsonData["PhysFeModelDesc_t"]["m_CtrlOsOffsets"];
PhysFeModelDesc_t.m_FollowNodes = jsonData["PhysFeModelDesc_t"]["m_FollowNodes"];
PhysFeModelDesc_t.m_CollisionPlanes = jsonData["PhysFeModelDesc_t"]["m_CollisionPlanes"];
PhysFeModelDesc_t.m_NodeIntegrator = jsonData["PhysFeModelDesc_t"]["m_NodeIntegrator"];
PhysFeModelDesc_t.m_SpringIntegrator = jsonData["PhysFeModelDesc_t"]["m_SpringIntegrator"];
PhysFeModelDesc_t.m_SimdSpringIntegrator = jsonData["PhysFeModelDesc_t"]["m_SimdSpringIntegrator"];
PhysFeModelDesc_t.m_WorldCollisionParams = jsonData["PhysFeModelDesc_t"]["m_WorldCollisionParams"];
PhysFeModelDesc_t.m_LegacyStretchForce = jsonData["PhysFeModelDesc_t"]["m_LegacyStretchForce"];
PhysFeModelDesc_t.m_NodeCollisionRadii = jsonData["PhysFeModelDesc_t"]["m_NodeCollisionRadii"];
PhysFeModelDesc_t.m_DynNodeFriction = jsonData["PhysFeModelDesc_t"]["m_DynNodeFriction"];
PhysFeModelDesc_t.m_LocalRotation = jsonData["PhysFeModelDesc_t"]["m_LocalRotation"];
PhysFeModelDesc_t.m_LocalForce = jsonData["PhysFeModelDesc_t"]["m_LocalForce"];
PhysFeModelDesc_t.m_TaperedCapsuleStretches = jsonData["PhysFeModelDesc_t"]["m_TaperedCapsuleStretches"];
PhysFeModelDesc_t.m_TaperedCapsuleRigids = jsonData["PhysFeModelDesc_t"]["m_TaperedCapsuleRigids"];
PhysFeModelDesc_t.m_SphereRigids = jsonData["PhysFeModelDesc_t"]["m_SphereRigids"];
PhysFeModelDesc_t.m_WorldCollisionNodes = jsonData["PhysFeModelDesc_t"]["m_WorldCollisionNodes"];
PhysFeModelDesc_t.m_TreeParents = jsonData["PhysFeModelDesc_t"]["m_TreeParents"];
PhysFeModelDesc_t.m_TreeCollisionMasks = jsonData["PhysFeModelDesc_t"]["m_TreeCollisionMasks"];
PhysFeModelDesc_t.m_TreeChildren = jsonData["PhysFeModelDesc_t"]["m_TreeChildren"];
PhysFeModelDesc_t.m_FreeNodes = jsonData["PhysFeModelDesc_t"]["m_FreeNodes"];
PhysFeModelDesc_t.m_FitMatrices = jsonData["PhysFeModelDesc_t"]["m_FitMatrices"];
PhysFeModelDesc_t.m_FitWeights = jsonData["PhysFeModelDesc_t"]["m_FitWeights"];
PhysFeModelDesc_t.m_ReverseOffsets = jsonData["PhysFeModelDesc_t"]["m_ReverseOffsets"];
PhysFeModelDesc_t.m_AnimStrayRadii = jsonData["PhysFeModelDesc_t"]["m_AnimStrayRadii"];
PhysFeModelDesc_t.m_SimdAnimStrayRadii = jsonData["PhysFeModelDesc_t"]["m_SimdAnimStrayRadii"];
PhysFeModelDesc_t.m_KelagerBends = jsonData["PhysFeModelDesc_t"]["m_KelagerBends"];
PhysFeModelDesc_t.m_CtrlSoftOffsets = jsonData["PhysFeModelDesc_t"]["m_CtrlSoftOffsets"];
PhysFeModelDesc_t.m_JiggleBones = jsonData["PhysFeModelDesc_t"]["m_JiggleBones"];
PhysFeModelDesc_t.m_SourceElems = jsonData["PhysFeModelDesc_t"]["m_SourceElems"];
PhysFeModelDesc_t.m_GoalDampedSpringIntegrators = jsonData["PhysFeModelDesc_t"]["m_GoalDampedSpringIntegrators"];
PhysFeModelDesc_t.m_Tris = jsonData["PhysFeModelDesc_t"]["m_Tris"];
PhysFeModelDesc_t.m_nTriCount1 = jsonData["PhysFeModelDesc_t"]["m_nTriCount1"];
PhysFeModelDesc_t.m_nTriCount2 = jsonData["PhysFeModelDesc_t"]["m_nTriCount2"];
PhysFeModelDesc_t.m_nReservedUint8 = jsonData["PhysFeModelDesc_t"]["m_nReservedUint8"];
PhysFeModelDesc_t.m_nExtraPressureIterations = jsonData["PhysFeModelDesc_t"]["m_nExtraPressureIterations"];
PhysFeModelDesc_t.m_nExtraGoalIterations = jsonData["PhysFeModelDesc_t"]["m_nExtraGoalIterations"];
PhysFeModelDesc_t.m_nExtraIterations = jsonData["PhysFeModelDesc_t"]["m_nExtraIterations"];
PhysFeModelDesc_t.m_SDFRigids = jsonData["PhysFeModelDesc_t"]["m_SDFRigids"];
PhysFeModelDesc_t.m_BoxRigids = jsonData["PhysFeModelDesc_t"]["m_BoxRigids"];
PhysFeModelDesc_t.m_DynNodeVertexSet = jsonData["PhysFeModelDesc_t"]["m_DynNodeVertexSet"];
PhysFeModelDesc_t.m_VertexSetNames = jsonData["PhysFeModelDesc_t"]["m_VertexSetNames"];
PhysFeModelDesc_t.m_RigidColliderPriorities = jsonData["PhysFeModelDesc_t"]["m_RigidColliderPriorities"];
PhysFeModelDesc_t.m_MorphLayers = jsonData["PhysFeModelDesc_t"]["m_MorphLayers"];
PhysFeModelDesc_t.m_MorphSetData = jsonData["PhysFeModelDesc_t"]["m_MorphSetData"];
PhysFeModelDesc_t.m_VertexMaps = jsonData["PhysFeModelDesc_t"]["m_VertexMaps"];
PhysFeModelDesc_t.m_VertexMapValues = jsonData["PhysFeModelDesc_t"]["m_VertexMapValues"];
PhysFeModelDesc_t.m_Effects = jsonData["PhysFeModelDesc_t"]["m_Effects"];
PhysFeModelDesc_t.m_LockToParent = jsonData["PhysFeModelDesc_t"]["m_LockToParent"];
PhysFeModelDesc_t.m_LockToGoal = jsonData["PhysFeModelDesc_t"]["m_LockToGoal"];
PhysFeModelDesc_t.m_SkelParents = jsonData["PhysFeModelDesc_t"]["m_SkelParents"];
PhysFeModelDesc_t.m_DynNodeWindBases = jsonData["PhysFeModelDesc_t"]["m_DynNodeWindBases"];
PhysFeModelDesc_t.m_flInternalPressure = jsonData["PhysFeModelDesc_t"]["m_flInternalPressure"];
PhysFeModelDesc_t.m_flDefaultTimeDilation = jsonData["PhysFeModelDesc_t"]["m_flDefaultTimeDilation"];
PhysFeModelDesc_t.m_flWindage = jsonData["PhysFeModelDesc_t"]["m_flWindage"];
PhysFeModelDesc_t.m_flWindDrag = jsonData["PhysFeModelDesc_t"]["m_flWindDrag"];
PhysFeModelDesc_t.m_flDefaultSurfaceStretch = jsonData["PhysFeModelDesc_t"]["m_flDefaultSurfaceStretch"];
PhysFeModelDesc_t.m_flDefaultThreadStretch = jsonData["PhysFeModelDesc_t"]["m_flDefaultThreadStretch"];
PhysFeModelDesc_t.m_flDefaultGravityScale = jsonData["PhysFeModelDesc_t"]["m_flDefaultGravityScale"];
PhysFeModelDesc_t.m_flDefaultVelAirDrag = jsonData["PhysFeModelDesc_t"]["m_flDefaultVelAirDrag"];
PhysFeModelDesc_t.m_flDefaultExpAirDrag = jsonData["PhysFeModelDesc_t"]["m_flDefaultExpAirDrag"];
PhysFeModelDesc_t.m_flDefaultVelQuadAirDrag = jsonData["PhysFeModelDesc_t"]["m_flDefaultVelQuadAirDrag"];
PhysFeModelDesc_t.m_flDefaultExpQuadAirDrag = jsonData["PhysFeModelDesc_t"]["m_flDefaultExpQuadAirDrag"];
PhysFeModelDesc_t.m_flRodVelocitySmoothRate = jsonData["PhysFeModelDesc_t"]["m_flRodVelocitySmoothRate"];
PhysFeModelDesc_t.m_flQuadVelocitySmoothRate = jsonData["PhysFeModelDesc_t"]["m_flQuadVelocitySmoothRate"];
PhysFeModelDesc_t.m_flAddWorldCollisionRadius = jsonData["PhysFeModelDesc_t"]["m_flAddWorldCollisionRadius"];
PhysFeModelDesc_t.m_flDefaultVolumetricSolveAmount = jsonData["PhysFeModelDesc_t"]["m_flDefaultVolumetricSolveAmount"];
PhysFeModelDesc_t.m_flMotionSmoothCDT = jsonData["PhysFeModelDesc_t"]["m_flMotionSmoothCDT"];
PhysFeModelDesc_t.m_flLocalDrag1 = jsonData["PhysFeModelDesc_t"]["m_flLocalDrag1"];
PhysFeModelDesc_t.m_nRodVelocitySmoothIterations = jsonData["PhysFeModelDesc_t"]["m_nRodVelocitySmoothIterations"];
PhysFeModelDesc_t.m_nQuadVelocitySmoothIterations = jsonData["PhysFeModelDesc_t"]["m_nQuadVelocitySmoothIterations"];

// Atribuições para vphysics_save_cphysicsbody_t
// vphysics_save_cphysicsbody_t Offsets
vphysics_save_cphysicsbody_t.m_nOldPointer = jsonData["vphysics_save_cphysicsbody_t"]["m_nOldPointer"];

// Atribuições para FeBuildBoxRigid_t
// FeBuildBoxRigid_t Offsets
FeBuildBoxRigid_t.m_nPriority = jsonData["FeBuildBoxRigid_t"]["m_nPriority"];
FeBuildBoxRigid_t.m_nVertexMapHash = jsonData["FeBuildBoxRigid_t"]["m_nVertexMapHash"];

// Atribuições para CFeIndexedJiggleBone
// CFeIndexedJiggleBone Offsets
CFeIndexedJiggleBone.m_nNode = jsonData["CFeIndexedJiggleBone"]["m_nNode"];
CFeIndexedJiggleBone.m_nJiggleParent = jsonData["CFeIndexedJiggleBone"]["m_nJiggleParent"];
CFeIndexedJiggleBone.m_jiggleBone = jsonData["CFeIndexedJiggleBone"]["m_jiggleBone"];

// Atribuições para FeBandBendLimit_t
// FeBandBendLimit_t Offsets
FeBandBendLimit_t.flDistMin = jsonData["FeBandBendLimit_t"]["flDistMin"];
FeBandBendLimit_t.flDistMax = jsonData["FeBandBendLimit_t"]["flDistMax"];
FeBandBendLimit_t.nNode = jsonData["FeBandBendLimit_t"]["nNode"];

// Atribuições para FeTaperedCapsuleStretch_t
// FeTaperedCapsuleStretch_t Offsets
FeTaperedCapsuleStretch_t.nNode = jsonData["FeTaperedCapsuleStretch_t"]["nNode"];
FeTaperedCapsuleStretch_t.nCollisionMask = jsonData["FeTaperedCapsuleStretch_t"]["nCollisionMask"];
FeTaperedCapsuleStretch_t.nDummy = jsonData["FeTaperedCapsuleStretch_t"]["nDummy"];
FeTaperedCapsuleStretch_t.flRadius = jsonData["FeTaperedCapsuleStretch_t"]["flRadius"];

// Atribuições para constraint_axislimit_t
// constraint_axislimit_t Offsets
constraint_axislimit_t.flMinRotation = jsonData["constraint_axislimit_t"]["flMinRotation"];
constraint_axislimit_t.flMaxRotation = jsonData["constraint_axislimit_t"]["flMaxRotation"];
constraint_axislimit_t.flMotorTargetAngSpeed = jsonData["constraint_axislimit_t"]["flMotorTargetAngSpeed"];
constraint_axislimit_t.flMotorMaxTorque = jsonData["constraint_axislimit_t"]["flMotorMaxTorque"];

// Atribuições para FeSimdRodConstraintAnim_t
// FeSimdRodConstraintAnim_t Offsets
FeSimdRodConstraintAnim_t.nNode = jsonData["FeSimdRodConstraintAnim_t"]["nNode"];
FeSimdRodConstraintAnim_t.f4Weight0 = jsonData["FeSimdRodConstraintAnim_t"]["f4Weight0"];
FeSimdRodConstraintAnim_t.f4RelaxationFactor = jsonData["FeSimdRodConstraintAnim_t"]["f4RelaxationFactor"];

// Atribuições para FeSimdRodConstraint_t
// FeSimdRodConstraint_t Offsets
FeSimdRodConstraint_t.nNode = jsonData["FeSimdRodConstraint_t"]["nNode"];
FeSimdRodConstraint_t.f4MaxDist = jsonData["FeSimdRodConstraint_t"]["f4MaxDist"];
FeSimdRodConstraint_t.f4MinDist = jsonData["FeSimdRodConstraint_t"]["f4MinDist"];
FeSimdRodConstraint_t.f4Weight0 = jsonData["FeSimdRodConstraint_t"]["f4Weight0"];
FeSimdRodConstraint_t.f4RelaxationFactor = jsonData["FeSimdRodConstraint_t"]["f4RelaxationFactor"];

// Atribuições para constraint_hingeparams_t
// constraint_hingeparams_t Offsets
constraint_hingeparams_t.worldPosition = jsonData["constraint_hingeparams_t"]["worldPosition"];
constraint_hingeparams_t.worldAxisDirection = jsonData["constraint_hingeparams_t"]["worldAxisDirection"];
constraint_hingeparams_t.hingeAxis = jsonData["constraint_hingeparams_t"]["hingeAxis"];
constraint_hingeparams_t.constraint = jsonData["constraint_hingeparams_t"]["constraint"];

// Atribuições para FeBuildSphereRigid_t
// FeBuildSphereRigid_t Offsets
FeBuildSphereRigid_t.m_nPriority = jsonData["FeBuildSphereRigid_t"]["m_nPriority"];
FeBuildSphereRigid_t.m_nVertexMapHash = jsonData["FeBuildSphereRigid_t"]["m_nVertexMapHash"];

// Atribuições para FeSimdAnimStrayRadius_t
// FeSimdAnimStrayRadius_t Offsets
FeSimdAnimStrayRadius_t.nNode = jsonData["FeSimdAnimStrayRadius_t"]["nNode"];
FeSimdAnimStrayRadius_t.flMaxDist = jsonData["FeSimdAnimStrayRadius_t"]["flMaxDist"];
FeSimdAnimStrayRadius_t.flRelaxationFactor = jsonData["FeSimdAnimStrayRadius_t"]["flRelaxationFactor"];

// Atribuições para RnTriangle_t
// RnTriangle_t Offsets
RnTriangle_t.m_nIndex = jsonData["RnTriangle_t"]["m_nIndex"];

// Atribuições para FeProxyVertexMap_t
// FeProxyVertexMap_t Offsets
FeProxyVertexMap_t.m_Name = jsonData["FeProxyVertexMap_t"]["m_Name"];
FeProxyVertexMap_t.m_flWeight = jsonData["FeProxyVertexMap_t"]["m_flWeight"];

// Atribuições para FeNodeIntegrator_t
// FeNodeIntegrator_t Offsets
FeNodeIntegrator_t.flPointDamping = jsonData["FeNodeIntegrator_t"]["flPointDamping"];
FeNodeIntegrator_t.flAnimationForceAttraction = jsonData["FeNodeIntegrator_t"]["flAnimationForceAttraction"];
FeNodeIntegrator_t.flAnimationVertexAttraction = jsonData["FeNodeIntegrator_t"]["flAnimationVertexAttraction"];
FeNodeIntegrator_t.flGravity = jsonData["FeNodeIntegrator_t"]["flGravity"];

// Atribuições para RnCapsule_t
// RnCapsule_t Offsets
RnCapsule_t.m_vCenter = jsonData["RnCapsule_t"]["m_vCenter"];
RnCapsule_t.m_flRadius = jsonData["RnCapsule_t"]["m_flRadius"];

// Atribuições para CFeNamedJiggleBone
// CFeNamedJiggleBone Offsets
CFeNamedJiggleBone.m_strParentBone = jsonData["CFeNamedJiggleBone"]["m_strParentBone"];
CFeNamedJiggleBone.m_transform = jsonData["CFeNamedJiggleBone"]["m_transform"];
CFeNamedJiggleBone.m_nJiggleParent = jsonData["CFeNamedJiggleBone"]["m_nJiggleParent"];
CFeNamedJiggleBone.m_jiggleBone = jsonData["CFeNamedJiggleBone"]["m_jiggleBone"];

// Atribuições para FeAntiTunnelProbeBuild_t
// FeAntiTunnelProbeBuild_t Offsets
FeAntiTunnelProbeBuild_t.flWeight = jsonData["FeAntiTunnelProbeBuild_t"]["flWeight"];
FeAntiTunnelProbeBuild_t.flActivationDistance = jsonData["FeAntiTunnelProbeBuild_t"]["flActivationDistance"];
FeAntiTunnelProbeBuild_t.flBias = jsonData["FeAntiTunnelProbeBuild_t"]["flBias"];
FeAntiTunnelProbeBuild_t.flCurvature = jsonData["FeAntiTunnelProbeBuild_t"]["flCurvature"];
FeAntiTunnelProbeBuild_t.nFlags = jsonData["FeAntiTunnelProbeBuild_t"]["nFlags"];
FeAntiTunnelProbeBuild_t.nProbeNode = jsonData["FeAntiTunnelProbeBuild_t"]["nProbeNode"];
FeAntiTunnelProbeBuild_t.targetNodes = jsonData["FeAntiTunnelProbeBuild_t"]["targetNodes"];

// Atribuições para RnBodyDesc_t
// RnBodyDesc_t Offsets
RnBodyDesc_t.m_sDebugName = jsonData["RnBodyDesc_t"]["m_sDebugName"];
RnBodyDesc_t.m_vPosition = jsonData["RnBodyDesc_t"]["m_vPosition"];
RnBodyDesc_t.m_qOrientation = jsonData["RnBodyDesc_t"]["m_qOrientation"];
RnBodyDesc_t.m_vLinearVelocity = jsonData["RnBodyDesc_t"]["m_vLinearVelocity"];
RnBodyDesc_t.m_vAngularVelocity = jsonData["RnBodyDesc_t"]["m_vAngularVelocity"];
RnBodyDesc_t.m_vLocalMassCenter = jsonData["RnBodyDesc_t"]["m_vLocalMassCenter"];
RnBodyDesc_t.m_LocalInertiaInv = jsonData["RnBodyDesc_t"]["m_LocalInertiaInv"];
RnBodyDesc_t.m_flMassInv = jsonData["RnBodyDesc_t"]["m_flMassInv"];
RnBodyDesc_t.m_flGameMass = jsonData["RnBodyDesc_t"]["m_flGameMass"];
RnBodyDesc_t.m_flInertiaScaleInv = jsonData["RnBodyDesc_t"]["m_flInertiaScaleInv"];
RnBodyDesc_t.m_flLinearDamping = jsonData["RnBodyDesc_t"]["m_flLinearDamping"];
RnBodyDesc_t.m_flAngularDamping = jsonData["RnBodyDesc_t"]["m_flAngularDamping"];
RnBodyDesc_t.m_flLinearDrag = jsonData["RnBodyDesc_t"]["m_flLinearDrag"];
RnBodyDesc_t.m_flAngularDrag = jsonData["RnBodyDesc_t"]["m_flAngularDrag"];
RnBodyDesc_t.m_flLinearBuoyancyDrag = jsonData["RnBodyDesc_t"]["m_flLinearBuoyancyDrag"];
RnBodyDesc_t.m_flAngularBuoyancyDrag = jsonData["RnBodyDesc_t"]["m_flAngularBuoyancyDrag"];
RnBodyDesc_t.m_vLastAwakeForceAccum = jsonData["RnBodyDesc_t"]["m_vLastAwakeForceAccum"];
RnBodyDesc_t.m_vLastAwakeTorqueAccum = jsonData["RnBodyDesc_t"]["m_vLastAwakeTorqueAccum"];
RnBodyDesc_t.m_flBuoyancyFactor = jsonData["RnBodyDesc_t"]["m_flBuoyancyFactor"];
RnBodyDesc_t.m_flGravityScale = jsonData["RnBodyDesc_t"]["m_flGravityScale"];
RnBodyDesc_t.m_flTimeScale = jsonData["RnBodyDesc_t"]["m_flTimeScale"];
RnBodyDesc_t.m_nBodyType = jsonData["RnBodyDesc_t"]["m_nBodyType"];
RnBodyDesc_t.m_nGameIndex = jsonData["RnBodyDesc_t"]["m_nGameIndex"];
RnBodyDesc_t.m_nGameFlags = jsonData["RnBodyDesc_t"]["m_nGameFlags"];
RnBodyDesc_t.m_nMinVelocityIterations = jsonData["RnBodyDesc_t"]["m_nMinVelocityIterations"];
RnBodyDesc_t.m_nMinPositionIterations = jsonData["RnBodyDesc_t"]["m_nMinPositionIterations"];
RnBodyDesc_t.m_nMassPriority = jsonData["RnBodyDesc_t"]["m_nMassPriority"];
RnBodyDesc_t.m_bEnabled = jsonData["RnBodyDesc_t"]["m_bEnabled"];
RnBodyDesc_t.m_bSleeping = jsonData["RnBodyDesc_t"]["m_bSleeping"];
RnBodyDesc_t.m_bIsContinuousEnabled = jsonData["RnBodyDesc_t"]["m_bIsContinuousEnabled"];
RnBodyDesc_t.m_bDragEnabled = jsonData["RnBodyDesc_t"]["m_bDragEnabled"];
RnBodyDesc_t.m_bBuoyancyDragEnabled = jsonData["RnBodyDesc_t"]["m_bBuoyancyDragEnabled"];
RnBodyDesc_t.m_bGravityDisabled = jsonData["RnBodyDesc_t"]["m_bGravityDisabled"];
RnBodyDesc_t.m_bSpeculativeEnabled = jsonData["RnBodyDesc_t"]["m_bSpeculativeEnabled"];
RnBodyDesc_t.m_bHasShadowController = jsonData["RnBodyDesc_t"]["m_bHasShadowController"];

// Atribuições para OldFeEdge_t
// OldFeEdge_t Offsets
OldFeEdge_t.m_flK = jsonData["OldFeEdge_t"]["m_flK"];
OldFeEdge_t.invA = jsonData["OldFeEdge_t"]["invA"];
OldFeEdge_t.t = jsonData["OldFeEdge_t"]["t"];
OldFeEdge_t.flThetaRelaxed = jsonData["OldFeEdge_t"]["flThetaRelaxed"];
OldFeEdge_t.flThetaFactor = jsonData["OldFeEdge_t"]["flThetaFactor"];
OldFeEdge_t.c01 = jsonData["OldFeEdge_t"]["c01"];
OldFeEdge_t.c02 = jsonData["OldFeEdge_t"]["c02"];
OldFeEdge_t.c03 = jsonData["OldFeEdge_t"]["c03"];
OldFeEdge_t.c04 = jsonData["OldFeEdge_t"]["c04"];
OldFeEdge_t.flAxialModelDist = jsonData["OldFeEdge_t"]["flAxialModelDist"];
OldFeEdge_t.flAxialModelWeights = jsonData["OldFeEdge_t"]["flAxialModelWeights"];
OldFeEdge_t.m_nNode = jsonData["OldFeEdge_t"]["m_nNode"];

// Atribuições para FeFollowNode_t
// FeFollowNode_t Offsets
FeFollowNode_t.nParentNode = jsonData["FeFollowNode_t"]["nParentNode"];
FeFollowNode_t.nChildNode = jsonData["FeFollowNode_t"]["nChildNode"];
FeFollowNode_t.flWeight = jsonData["FeFollowNode_t"]["flWeight"];

// Atribuições para RnMesh_t
// RnMesh_t Offsets
RnMesh_t.m_vMin = jsonData["RnMesh_t"]["m_vMin"];
RnMesh_t.m_vMax = jsonData["RnMesh_t"]["m_vMax"];
RnMesh_t.m_Nodes = jsonData["RnMesh_t"]["m_Nodes"];
RnMesh_t.m_Vertices = jsonData["RnMesh_t"]["m_Vertices"];
RnMesh_t.m_Triangles = jsonData["RnMesh_t"]["m_Triangles"];
RnMesh_t.m_Wings = jsonData["RnMesh_t"]["m_Wings"];
RnMesh_t.m_Materials = jsonData["RnMesh_t"]["m_Materials"];
RnMesh_t.m_vOrthographicAreas = jsonData["RnMesh_t"]["m_vOrthographicAreas"];
RnMesh_t.m_nFlags = jsonData["RnMesh_t"]["m_nFlags"];
RnMesh_t.m_nDebugFlags = jsonData["RnMesh_t"]["m_nDebugFlags"];

// Atribuições para VertexPositionNormal_t
// VertexPositionNormal_t Offsets
VertexPositionNormal_t.m_vPosition = jsonData["VertexPositionNormal_t"]["m_vPosition"];
VertexPositionNormal_t.m_vNormal = jsonData["VertexPositionNormal_t"]["m_vNormal"];

// Atribuições para FeBuildSDFRigid_t
// FeBuildSDFRigid_t Offsets
FeBuildSDFRigid_t.m_nPriority = jsonData["FeBuildSDFRigid_t"]["m_nPriority"];
FeBuildSDFRigid_t.m_nVertexMapHash = jsonData["FeBuildSDFRigid_t"]["m_nVertexMapHash"];

// Atribuições para RnBlendVertex_t
// RnBlendVertex_t Offsets
RnBlendVertex_t.m_nWeight0 = jsonData["RnBlendVertex_t"]["m_nWeight0"];
RnBlendVertex_t.m_nIndex0 = jsonData["RnBlendVertex_t"]["m_nIndex0"];
RnBlendVertex_t.m_nWeight1 = jsonData["RnBlendVertex_t"]["m_nWeight1"];
RnBlendVertex_t.m_nIndex1 = jsonData["RnBlendVertex_t"]["m_nIndex1"];
RnBlendVertex_t.m_nWeight2 = jsonData["RnBlendVertex_t"]["m_nWeight2"];
RnBlendVertex_t.m_nIndex2 = jsonData["RnBlendVertex_t"]["m_nIndex2"];
RnBlendVertex_t.m_nFlags = jsonData["RnBlendVertex_t"]["m_nFlags"];
RnBlendVertex_t.m_nTargetIndex = jsonData["RnBlendVertex_t"]["m_nTargetIndex"];

// Atribuições para CFeMorphLayer
// CFeMorphLayer Offsets
CFeMorphLayer.m_Name = jsonData["CFeMorphLayer"]["m_Name"];
CFeMorphLayer.m_nNameHash = jsonData["CFeMorphLayer"]["m_nNameHash"];
CFeMorphLayer.m_Nodes = jsonData["CFeMorphLayer"]["m_Nodes"];
CFeMorphLayer.m_InitPos = jsonData["CFeMorphLayer"]["m_InitPos"];
CFeMorphLayer.m_Gravity = jsonData["CFeMorphLayer"]["m_Gravity"];
CFeMorphLayer.m_GoalStrength = jsonData["CFeMorphLayer"]["m_GoalStrength"];
CFeMorphLayer.m_GoalDamping = jsonData["CFeMorphLayer"]["m_GoalDamping"];

// Atribuições para FeCtrlSoftOffset_t
// FeCtrlSoftOffset_t Offsets
FeCtrlSoftOffset_t.nCtrlParent = jsonData["FeCtrlSoftOffset_t"]["nCtrlParent"];
FeCtrlSoftOffset_t.nCtrlChild = jsonData["FeCtrlSoftOffset_t"]["nCtrlChild"];
FeCtrlSoftOffset_t.vOffset = jsonData["FeCtrlSoftOffset_t"]["vOffset"];
FeCtrlSoftOffset_t.flAlpha = jsonData["FeCtrlSoftOffset_t"]["flAlpha"];

// Atribuições para FeVertexMapDesc_t
// FeVertexMapDesc_t Offsets
FeVertexMapDesc_t.sName = jsonData["FeVertexMapDesc_t"]["sName"];
FeVertexMapDesc_t.nNameHash = jsonData["FeVertexMapDesc_t"]["nNameHash"];
FeVertexMapDesc_t.nColor = jsonData["FeVertexMapDesc_t"]["nColor"];
FeVertexMapDesc_t.nFlags = jsonData["FeVertexMapDesc_t"]["nFlags"];
FeVertexMapDesc_t.nVertexBase = jsonData["FeVertexMapDesc_t"]["nVertexBase"];
FeVertexMapDesc_t.nVertexCount = jsonData["FeVertexMapDesc_t"]["nVertexCount"];
FeVertexMapDesc_t.nMapOffset = jsonData["FeVertexMapDesc_t"]["nMapOffset"];
FeVertexMapDesc_t.nNodeListOffset = jsonData["FeVertexMapDesc_t"]["nNodeListOffset"];
FeVertexMapDesc_t.vCenterOfMass = jsonData["FeVertexMapDesc_t"]["vCenterOfMass"];
FeVertexMapDesc_t.flVolumetricSolveStrength = jsonData["FeVertexMapDesc_t"]["flVolumetricSolveStrength"];
FeVertexMapDesc_t.nScaleSourceNode = jsonData["FeVertexMapDesc_t"]["nScaleSourceNode"];
FeVertexMapDesc_t.nNodeListCount = jsonData["FeVertexMapDesc_t"]["nNodeListCount"];

// Atribuições para FeTaperedCapsuleRigid_t
// FeTaperedCapsuleRigid_t Offsets
FeTaperedCapsuleRigid_t.vSphere = jsonData["FeTaperedCapsuleRigid_t"]["vSphere"];
FeTaperedCapsuleRigid_t.nNode = jsonData["FeTaperedCapsuleRigid_t"]["nNode"];
FeTaperedCapsuleRigid_t.nCollisionMask = jsonData["FeTaperedCapsuleRigid_t"]["nCollisionMask"];
FeTaperedCapsuleRigid_t.nVertexMapIndex = jsonData["FeTaperedCapsuleRigid_t"]["nVertexMapIndex"];
FeTaperedCapsuleRigid_t.nFlags = jsonData["FeTaperedCapsuleRigid_t"]["nFlags"];

// Atribuições para FeAnimStrayRadius_t
// FeAnimStrayRadius_t Offsets
FeAnimStrayRadius_t.nNode = jsonData["FeAnimStrayRadius_t"]["nNode"];
FeAnimStrayRadius_t.flMaxDist = jsonData["FeAnimStrayRadius_t"]["flMaxDist"];
FeAnimStrayRadius_t.flRelaxationFactor = jsonData["FeAnimStrayRadius_t"]["flRelaxationFactor"];

// Atribuições para FeEdgeDesc_t
// FeEdgeDesc_t Offsets
FeEdgeDesc_t.nEdge = jsonData["FeEdgeDesc_t"]["nEdge"];
FeEdgeDesc_t.nSide = jsonData["FeEdgeDesc_t"]["nSide"];
FeEdgeDesc_t.nVirtElem = jsonData["FeEdgeDesc_t"]["nVirtElem"];

// Atribuições para FeNodeReverseOffset_t
// FeNodeReverseOffset_t Offsets
FeNodeReverseOffset_t.vOffset = jsonData["FeNodeReverseOffset_t"]["vOffset"];
FeNodeReverseOffset_t.nBoneCtrl = jsonData["FeNodeReverseOffset_t"]["nBoneCtrl"];
FeNodeReverseOffset_t.nTargetNode = jsonData["FeNodeReverseOffset_t"]["nTargetNode"];

// Atribuições para RnPlane_t
// RnPlane_t Offsets
RnPlane_t.m_vNormal = jsonData["RnPlane_t"]["m_vNormal"];
RnPlane_t.m_flOffset = jsonData["RnPlane_t"]["m_flOffset"];

// Atribuições para FeSDFRigid_t
// FeSDFRigid_t Offsets
FeSDFRigid_t.vLocalMin = jsonData["FeSDFRigid_t"]["vLocalMin"];
FeSDFRigid_t.vLocalMax = jsonData["FeSDFRigid_t"]["vLocalMax"];
FeSDFRigid_t.flBounciness = jsonData["FeSDFRigid_t"]["flBounciness"];
FeSDFRigid_t.nNode = jsonData["FeSDFRigid_t"]["nNode"];
FeSDFRigid_t.nCollisionMask = jsonData["FeSDFRigid_t"]["nCollisionMask"];
FeSDFRigid_t.nVertexMapIndex = jsonData["FeSDFRigid_t"]["nVertexMapIndex"];
FeSDFRigid_t.nFlags = jsonData["FeSDFRigid_t"]["nFlags"];
FeSDFRigid_t.m_Distances = jsonData["FeSDFRigid_t"]["m_Distances"];
FeSDFRigid_t.m_nWidth = jsonData["FeSDFRigid_t"]["m_nWidth"];
FeSDFRigid_t.m_nHeight = jsonData["FeSDFRigid_t"]["m_nHeight"];
FeSDFRigid_t.m_nDepth = jsonData["FeSDFRigid_t"]["m_nDepth"];

// Atribuições para CFeJiggleBone
// CFeJiggleBone Offsets
CFeJiggleBone.m_nFlags = jsonData["CFeJiggleBone"]["m_nFlags"];
CFeJiggleBone.m_flLength = jsonData["CFeJiggleBone"]["m_flLength"];
CFeJiggleBone.m_flTipMass = jsonData["CFeJiggleBone"]["m_flTipMass"];
CFeJiggleBone.m_flYawStiffness = jsonData["CFeJiggleBone"]["m_flYawStiffness"];
CFeJiggleBone.m_flYawDamping = jsonData["CFeJiggleBone"]["m_flYawDamping"];
CFeJiggleBone.m_flPitchStiffness = jsonData["CFeJiggleBone"]["m_flPitchStiffness"];
CFeJiggleBone.m_flPitchDamping = jsonData["CFeJiggleBone"]["m_flPitchDamping"];
CFeJiggleBone.m_flAlongStiffness = jsonData["CFeJiggleBone"]["m_flAlongStiffness"];
CFeJiggleBone.m_flAlongDamping = jsonData["CFeJiggleBone"]["m_flAlongDamping"];
CFeJiggleBone.m_flAngleLimit = jsonData["CFeJiggleBone"]["m_flAngleLimit"];
CFeJiggleBone.m_flMinYaw = jsonData["CFeJiggleBone"]["m_flMinYaw"];
CFeJiggleBone.m_flMaxYaw = jsonData["CFeJiggleBone"]["m_flMaxYaw"];
CFeJiggleBone.m_flYawFriction = jsonData["CFeJiggleBone"]["m_flYawFriction"];
CFeJiggleBone.m_flYawBounce = jsonData["CFeJiggleBone"]["m_flYawBounce"];
CFeJiggleBone.m_flMinPitch = jsonData["CFeJiggleBone"]["m_flMinPitch"];
CFeJiggleBone.m_flMaxPitch = jsonData["CFeJiggleBone"]["m_flMaxPitch"];
CFeJiggleBone.m_flPitchFriction = jsonData["CFeJiggleBone"]["m_flPitchFriction"];
CFeJiggleBone.m_flPitchBounce = jsonData["CFeJiggleBone"]["m_flPitchBounce"];
CFeJiggleBone.m_flBaseMass = jsonData["CFeJiggleBone"]["m_flBaseMass"];
CFeJiggleBone.m_flBaseStiffness = jsonData["CFeJiggleBone"]["m_flBaseStiffness"];
CFeJiggleBone.m_flBaseDamping = jsonData["CFeJiggleBone"]["m_flBaseDamping"];
CFeJiggleBone.m_flBaseMinLeft = jsonData["CFeJiggleBone"]["m_flBaseMinLeft"];
CFeJiggleBone.m_flBaseMaxLeft = jsonData["CFeJiggleBone"]["m_flBaseMaxLeft"];
CFeJiggleBone.m_flBaseLeftFriction = jsonData["CFeJiggleBone"]["m_flBaseLeftFriction"];
CFeJiggleBone.m_flBaseMinUp = jsonData["CFeJiggleBone"]["m_flBaseMinUp"];
CFeJiggleBone.m_flBaseMaxUp = jsonData["CFeJiggleBone"]["m_flBaseMaxUp"];
CFeJiggleBone.m_flBaseUpFriction = jsonData["CFeJiggleBone"]["m_flBaseUpFriction"];
CFeJiggleBone.m_flBaseMinForward = jsonData["CFeJiggleBone"]["m_flBaseMinForward"];
CFeJiggleBone.m_flBaseMaxForward = jsonData["CFeJiggleBone"]["m_flBaseMaxForward"];
CFeJiggleBone.m_flBaseForwardFriction = jsonData["CFeJiggleBone"]["m_flBaseForwardFriction"];
CFeJiggleBone.m_flRadius0 = jsonData["CFeJiggleBone"]["m_flRadius0"];
CFeJiggleBone.m_flRadius1 = jsonData["CFeJiggleBone"]["m_flRadius1"];
CFeJiggleBone.m_vPoint0 = jsonData["CFeJiggleBone"]["m_vPoint0"];
CFeJiggleBone.m_vPoint1 = jsonData["CFeJiggleBone"]["m_vPoint1"];
CFeJiggleBone.m_nCollisionMask = jsonData["CFeJiggleBone"]["m_nCollisionMask"];

// Atribuições para CRegionSVM
// CRegionSVM Offsets
CRegionSVM.m_Planes = jsonData["CRegionSVM"]["m_Planes"];
CRegionSVM.m_Nodes = jsonData["CRegionSVM"]["m_Nodes"];

// Atribuições para FeWorldCollisionParams_t
// FeWorldCollisionParams_t Offsets
FeWorldCollisionParams_t.flWorldFriction = jsonData["FeWorldCollisionParams_t"]["flWorldFriction"];
FeWorldCollisionParams_t.flGroundFriction = jsonData["FeWorldCollisionParams_t"]["flGroundFriction"];
FeWorldCollisionParams_t.nListBegin = jsonData["FeWorldCollisionParams_t"]["nListBegin"];
FeWorldCollisionParams_t.nListEnd = jsonData["FeWorldCollisionParams_t"]["nListEnd"];

// Atribuições para RnNode_t
// RnNode_t Offsets
RnNode_t.m_vMin = jsonData["RnNode_t"]["m_vMin"];
RnNode_t.m_nChildren = jsonData["RnNode_t"]["m_nChildren"];
RnNode_t.m_vMax = jsonData["RnNode_t"]["m_vMax"];
RnNode_t.m_nTriangleOffset = jsonData["RnNode_t"]["m_nTriangleOffset"];

// Atribuições para FeFitMatrix_t
// FeFitMatrix_t Offsets
FeFitMatrix_t.bone = jsonData["FeFitMatrix_t"]["bone"];
FeFitMatrix_t.vCenter = jsonData["FeFitMatrix_t"]["vCenter"];
FeFitMatrix_t.nEnd = jsonData["FeFitMatrix_t"]["nEnd"];
FeFitMatrix_t.nNode = jsonData["FeFitMatrix_t"]["nNode"];
FeFitMatrix_t.nBeginDynamic = jsonData["FeFitMatrix_t"]["nBeginDynamic"];

// Atribuições para FeSimdQuad_t
// FeSimdQuad_t Offsets
FeSimdQuad_t.nNode = jsonData["FeSimdQuad_t"]["nNode"];
FeSimdQuad_t.f4Slack = jsonData["FeSimdQuad_t"]["f4Slack"];
FeSimdQuad_t.vShape = jsonData["FeSimdQuad_t"]["vShape"];
FeSimdQuad_t.f4Weights = jsonData["FeSimdQuad_t"]["f4Weights"];

// Atribuições para FeSimdSpringIntegrator_t
// FeSimdSpringIntegrator_t Offsets
FeSimdSpringIntegrator_t.nNode = jsonData["FeSimdSpringIntegrator_t"]["nNode"];
FeSimdSpringIntegrator_t.flSpringRestLength = jsonData["FeSimdSpringIntegrator_t"]["flSpringRestLength"];
FeSimdSpringIntegrator_t.flSpringConstant = jsonData["FeSimdSpringIntegrator_t"]["flSpringConstant"];
FeSimdSpringIntegrator_t.flSpringDamping = jsonData["FeSimdSpringIntegrator_t"]["flSpringDamping"];
FeSimdSpringIntegrator_t.flNodeWeight0 = jsonData["FeSimdSpringIntegrator_t"]["flNodeWeight0"];

// Atribuições para FeSimdNodeBase_t
// FeSimdNodeBase_t Offsets
FeSimdNodeBase_t.nNode = jsonData["FeSimdNodeBase_t"]["nNode"];
FeSimdNodeBase_t.nNodeX0 = jsonData["FeSimdNodeBase_t"]["nNodeX0"];
FeSimdNodeBase_t.nNodeX1 = jsonData["FeSimdNodeBase_t"]["nNodeX1"];
FeSimdNodeBase_t.nNodeY0 = jsonData["FeSimdNodeBase_t"]["nNodeY0"];
FeSimdNodeBase_t.nNodeY1 = jsonData["FeSimdNodeBase_t"]["nNodeY1"];
FeSimdNodeBase_t.nDummy = jsonData["FeSimdNodeBase_t"]["nDummy"];
FeSimdNodeBase_t.qAdjust = jsonData["FeSimdNodeBase_t"]["qAdjust"];

// Atribuições para FeQuad_t
// FeQuad_t Offsets
FeQuad_t.nNode = jsonData["FeQuad_t"]["nNode"];
FeQuad_t.flSlack = jsonData["FeQuad_t"]["flSlack"];
FeQuad_t.vShape = jsonData["FeQuad_t"]["vShape"];

// Atribuições para FeHingeLimit_t
// FeHingeLimit_t Offsets
FeHingeLimit_t.nNode = jsonData["FeHingeLimit_t"]["nNode"];
FeHingeLimit_t.nFlags = jsonData["FeHingeLimit_t"]["nFlags"];
FeHingeLimit_t.flWeight4 = jsonData["FeHingeLimit_t"]["flWeight4"];
FeHingeLimit_t.flWeight5 = jsonData["FeHingeLimit_t"]["flWeight5"];
FeHingeLimit_t.flAngleCenter = jsonData["FeHingeLimit_t"]["flAngleCenter"];
FeHingeLimit_t.flAngleExtents = jsonData["FeHingeLimit_t"]["flAngleExtents"];

// Atribuições para RnWing_t
// RnWing_t Offsets
RnWing_t.m_nIndex = jsonData["RnWing_t"]["m_nIndex"];

// Atribuições para FeWeightedNode_t
// FeWeightedNode_t Offsets
FeWeightedNode_t.nNode = jsonData["FeWeightedNode_t"]["nNode"];
FeWeightedNode_t.nWeight = jsonData["FeWeightedNode_t"]["nWeight"];

// Atribuições para FeEffectDesc_t
// FeEffectDesc_t Offsets
FeEffectDesc_t.sName = jsonData["FeEffectDesc_t"]["sName"];
FeEffectDesc_t.nNameHash = jsonData["FeEffectDesc_t"]["nNameHash"];
FeEffectDesc_t.nType = jsonData["FeEffectDesc_t"]["nType"];
FeEffectDesc_t.m_Params = jsonData["FeEffectDesc_t"]["m_Params"];

// Atribuições para FeSpringIntegrator_t
// FeSpringIntegrator_t Offsets
FeSpringIntegrator_t.nNode = jsonData["FeSpringIntegrator_t"]["nNode"];
FeSpringIntegrator_t.flSpringRestLength = jsonData["FeSpringIntegrator_t"]["flSpringRestLength"];
FeSpringIntegrator_t.flSpringConstant = jsonData["FeSpringIntegrator_t"]["flSpringConstant"];
FeSpringIntegrator_t.flSpringDamping = jsonData["FeSpringIntegrator_t"]["flSpringDamping"];
FeSpringIntegrator_t.flNodeWeight0 = jsonData["FeSpringIntegrator_t"]["flNodeWeight0"];

// Atribuições para FourVectors2D
// FourVectors2D Offsets
FourVectors2D.x = jsonData["FourVectors2D"]["x"];
FourVectors2D.y = jsonData["FourVectors2D"]["y"];

// Atribuições para FeKelagerBend2_t
// FeKelagerBend2_t Offsets
FeKelagerBend2_t.flWeight = jsonData["FeKelagerBend2_t"]["flWeight"];
FeKelagerBend2_t.flHeight0 = jsonData["FeKelagerBend2_t"]["flHeight0"];
FeKelagerBend2_t.nNode = jsonData["FeKelagerBend2_t"]["nNode"];
FeKelagerBend2_t.nReserved = jsonData["FeKelagerBend2_t"]["nReserved"];

// Atribuições para CastSphereSATParams_t
// CastSphereSATParams_t Offsets
CastSphereSATParams_t.m_vRayStart = jsonData["CastSphereSATParams_t"]["m_vRayStart"];
CastSphereSATParams_t.m_vRayDelta = jsonData["CastSphereSATParams_t"]["m_vRayDelta"];
CastSphereSATParams_t.m_flRadius = jsonData["CastSphereSATParams_t"]["m_flRadius"];
CastSphereSATParams_t.m_flMaxFraction = jsonData["CastSphereSATParams_t"]["m_flMaxFraction"];
CastSphereSATParams_t.m_flScale = jsonData["CastSphereSATParams_t"]["m_flScale"];
CastSphereSATParams_t.m_pHull = jsonData["CastSphereSATParams_t"]["m_pHull"];

// Atribuições para FeRigidColliderIndices_t
// FeRigidColliderIndices_t Offsets
FeRigidColliderIndices_t.m_nTaperedCapsuleRigidIndex = jsonData["FeRigidColliderIndices_t"]["m_nTaperedCapsuleRigidIndex"];
FeRigidColliderIndices_t.m_nSphereRigidIndex = jsonData["FeRigidColliderIndices_t"]["m_nSphereRigidIndex"];
FeRigidColliderIndices_t.m_nBoxRigidIndex = jsonData["FeRigidColliderIndices_t"]["m_nBoxRigidIndex"];
FeRigidColliderIndices_t.m_nSDFRigidIndex = jsonData["FeRigidColliderIndices_t"]["m_nSDFRigidIndex"];
FeRigidColliderIndices_t.m_nCollisionPlaneIndex = jsonData["FeRigidColliderIndices_t"]["m_nCollisionPlaneIndex"];

// Atribuições para FeCollisionPlane_t
// FeCollisionPlane_t Offsets
FeCollisionPlane_t.nCtrlParent = jsonData["FeCollisionPlane_t"]["nCtrlParent"];
FeCollisionPlane_t.nChildNode = jsonData["FeCollisionPlane_t"]["nChildNode"];
FeCollisionPlane_t.m_Plane = jsonData["FeCollisionPlane_t"]["m_Plane"];
FeCollisionPlane_t.flStrength = jsonData["FeCollisionPlane_t"]["flStrength"];

// Atribuições para FeStiffHingeBuild_t
// FeStiffHingeBuild_t Offsets
FeStiffHingeBuild_t.flMaxAngle = jsonData["FeStiffHingeBuild_t"]["flMaxAngle"];
FeStiffHingeBuild_t.flStrength = jsonData["FeStiffHingeBuild_t"]["flStrength"];
FeStiffHingeBuild_t.flMotionBias = jsonData["FeStiffHingeBuild_t"]["flMotionBias"];
FeStiffHingeBuild_t.nNode = jsonData["FeStiffHingeBuild_t"]["nNode"];

// Atribuições para FeBoxRigid_t
// FeBoxRigid_t Offsets
FeBoxRigid_t.tmFrame2 = jsonData["FeBoxRigid_t"]["tmFrame2"];
FeBoxRigid_t.nNode = jsonData["FeBoxRigid_t"]["nNode"];
FeBoxRigid_t.nCollisionMask = jsonData["FeBoxRigid_t"]["nCollisionMask"];
FeBoxRigid_t.vSize = jsonData["FeBoxRigid_t"]["vSize"];
FeBoxRigid_t.nVertexMapIndex = jsonData["FeBoxRigid_t"]["nVertexMapIndex"];
FeBoxRigid_t.nFlags = jsonData["FeBoxRigid_t"]["nFlags"];

// Atribuições para FeMorphLayerDepr_t
// FeMorphLayerDepr_t Offsets
FeMorphLayerDepr_t.m_Name = jsonData["FeMorphLayerDepr_t"]["m_Name"];
FeMorphLayerDepr_t.m_nNameHash = jsonData["FeMorphLayerDepr_t"]["m_nNameHash"];
FeMorphLayerDepr_t.m_Nodes = jsonData["FeMorphLayerDepr_t"]["m_Nodes"];
FeMorphLayerDepr_t.m_InitPos = jsonData["FeMorphLayerDepr_t"]["m_InitPos"];
FeMorphLayerDepr_t.m_Gravity = jsonData["FeMorphLayerDepr_t"]["m_Gravity"];
FeMorphLayerDepr_t.m_GoalStrength = jsonData["FeMorphLayerDepr_t"]["m_GoalStrength"];
FeMorphLayerDepr_t.m_GoalDamping = jsonData["FeMorphLayerDepr_t"]["m_GoalDamping"];
FeMorphLayerDepr_t.m_nFlags = jsonData["FeMorphLayerDepr_t"]["m_nFlags"];

// Atribuições para FeCtrlOffset_t
// FeCtrlOffset_t Offsets
FeCtrlOffset_t.vOffset = jsonData["FeCtrlOffset_t"]["vOffset"];
FeCtrlOffset_t.nCtrlParent = jsonData["FeCtrlOffset_t"]["nCtrlParent"];
FeCtrlOffset_t.nCtrlChild = jsonData["FeCtrlOffset_t"]["nCtrlChild"];

// Atribuições para FeNodeBase_t
// FeNodeBase_t Offsets
FeNodeBase_t.nNode = jsonData["FeNodeBase_t"]["nNode"];
FeNodeBase_t.nDummy = jsonData["FeNodeBase_t"]["nDummy"];
FeNodeBase_t.nNodeX0 = jsonData["FeNodeBase_t"]["nNodeX0"];
FeNodeBase_t.nNodeX1 = jsonData["FeNodeBase_t"]["nNodeX1"];
FeNodeBase_t.nNodeY0 = jsonData["FeNodeBase_t"]["nNodeY0"];
FeNodeBase_t.nNodeY1 = jsonData["FeNodeBase_t"]["nNodeY1"];
FeNodeBase_t.qAdjust = jsonData["FeNodeBase_t"]["qAdjust"];

// Atribuições para FeVertexMapBuild_t
// FeVertexMapBuild_t Offsets
FeVertexMapBuild_t.m_VertexMapName = jsonData["FeVertexMapBuild_t"]["m_VertexMapName"];
FeVertexMapBuild_t.m_nNameHash = jsonData["FeVertexMapBuild_t"]["m_nNameHash"];
FeVertexMapBuild_t.m_Color = jsonData["FeVertexMapBuild_t"]["m_Color"];
FeVertexMapBuild_t.m_flVolumetricSolveStrength = jsonData["FeVertexMapBuild_t"]["m_flVolumetricSolveStrength"];
FeVertexMapBuild_t.m_nScaleSourceNode = jsonData["FeVertexMapBuild_t"]["m_nScaleSourceNode"];
FeVertexMapBuild_t.m_Weights = jsonData["FeVertexMapBuild_t"]["m_Weights"];

// Atribuições para CFeVertexMapBuildArray
// CFeVertexMapBuildArray Offsets
CFeVertexMapBuildArray.m_Array = jsonData["CFeVertexMapBuildArray"]["m_Array"];

// Atribuições para FeTri_t
// FeTri_t Offsets
FeTri_t.nNode = jsonData["FeTri_t"]["nNode"];
FeTri_t.w1 = jsonData["FeTri_t"]["w1"];
FeTri_t.w2 = jsonData["FeTri_t"]["w2"];
FeTri_t.v1x = jsonData["FeTri_t"]["v1x"];
FeTri_t.v2 = jsonData["FeTri_t"]["v2"];

// Atribuições para RnHull_t
// RnHull_t Offsets
RnHull_t.m_vCentroid = jsonData["RnHull_t"]["m_vCentroid"];
RnHull_t.m_flMaxAngularRadius = jsonData["RnHull_t"]["m_flMaxAngularRadius"];
RnHull_t.m_Bounds = jsonData["RnHull_t"]["m_Bounds"];
RnHull_t.m_vOrthographicAreas = jsonData["RnHull_t"]["m_vOrthographicAreas"];
RnHull_t.m_MassProperties = jsonData["RnHull_t"]["m_MassProperties"];
RnHull_t.m_flVolume = jsonData["RnHull_t"]["m_flVolume"];
RnHull_t.m_flSurfaceArea = jsonData["RnHull_t"]["m_flSurfaceArea"];
RnHull_t.m_Vertices = jsonData["RnHull_t"]["m_Vertices"];
RnHull_t.m_VertexPositions = jsonData["RnHull_t"]["m_VertexPositions"];
RnHull_t.m_Edges = jsonData["RnHull_t"]["m_Edges"];
RnHull_t.m_Faces = jsonData["RnHull_t"]["m_Faces"];
RnHull_t.m_FacePlanes = jsonData["RnHull_t"]["m_FacePlanes"];
RnHull_t.m_nFlags = jsonData["RnHull_t"]["m_nFlags"];
RnHull_t.m_pRegionSVM = jsonData["RnHull_t"]["m_pRegionSVM"];

// Atribuições para CovMatrix3
// CovMatrix3 Offsets
CovMatrix3.m_vDiag = jsonData["CovMatrix3"]["m_vDiag"];
CovMatrix3.m_flXY = jsonData["CovMatrix3"]["m_flXY"];
CovMatrix3.m_flXZ = jsonData["CovMatrix3"]["m_flXZ"];
CovMatrix3.m_flYZ = jsonData["CovMatrix3"]["m_flYZ"];

// Atribuições para RnVertex_t
// RnVertex_t Offsets
RnVertex_t.m_nEdge = jsonData["RnVertex_t"]["m_nEdge"];

// Atribuições para Dop26_t
// Dop26_t Offsets
Dop26_t.m_flSupport = jsonData["Dop26_t"]["m_flSupport"];

// Atribuições para RnFace_t
// RnFace_t Offsets
RnFace_t.m_nEdge = jsonData["RnFace_t"]["m_nEdge"];

// Atribuições para FeCtrlOsOffset_t
// FeCtrlOsOffset_t Offsets
FeCtrlOsOffset_t.nCtrlParent = jsonData["FeCtrlOsOffset_t"]["nCtrlParent"];
FeCtrlOsOffset_t.nCtrlChild = jsonData["FeCtrlOsOffset_t"]["nCtrlChild"];

// Atribuições para FeAntiTunnelProbe_t
// FeAntiTunnelProbe_t Offsets
FeAntiTunnelProbe_t.flWeight = jsonData["FeAntiTunnelProbe_t"]["flWeight"];
FeAntiTunnelProbe_t.nFlags = jsonData["FeAntiTunnelProbe_t"]["nFlags"];
FeAntiTunnelProbe_t.nProbeNode = jsonData["FeAntiTunnelProbe_t"]["nProbeNode"];
FeAntiTunnelProbe_t.nCount = jsonData["FeAntiTunnelProbe_t"]["nCount"];
FeAntiTunnelProbe_t.nBegin = jsonData["FeAntiTunnelProbe_t"]["nBegin"];
FeAntiTunnelProbe_t.flActivationDistance = jsonData["FeAntiTunnelProbe_t"]["flActivationDistance"];
FeAntiTunnelProbe_t.flCurvatureRadius = jsonData["FeAntiTunnelProbe_t"]["flCurvatureRadius"];
FeAntiTunnelProbe_t.flBias = jsonData["FeAntiTunnelProbe_t"]["flBias"];

// Atribuições para FeSourceEdge_t
// FeSourceEdge_t Offsets
FeSourceEdge_t.nNode = jsonData["FeSourceEdge_t"]["nNode"];

// Atribuições para FeTwistConstraint_t
// FeTwistConstraint_t Offsets
FeTwistConstraint_t.nNodeOrient = jsonData["FeTwistConstraint_t"]["nNodeOrient"];
FeTwistConstraint_t.nNodeEnd = jsonData["FeTwistConstraint_t"]["nNodeEnd"];
FeTwistConstraint_t.flTwistRelax = jsonData["FeTwistConstraint_t"]["flTwistRelax"];
FeTwistConstraint_t.flSwingRelax = jsonData["FeTwistConstraint_t"]["flSwingRelax"];

// Atribuições para FeNodeWindBase_t
// FeNodeWindBase_t Offsets
FeNodeWindBase_t.nNodeX0 = jsonData["FeNodeWindBase_t"]["nNodeX0"];
FeNodeWindBase_t.nNodeX1 = jsonData["FeNodeWindBase_t"]["nNodeX1"];
FeNodeWindBase_t.nNodeY0 = jsonData["FeNodeWindBase_t"]["nNodeY0"];
FeNodeWindBase_t.nNodeY1 = jsonData["FeNodeWindBase_t"]["nNodeY1"];

// Atribuições para FeAxialEdgeBend_t
// FeAxialEdgeBend_t Offsets
FeAxialEdgeBend_t.te = jsonData["FeAxialEdgeBend_t"]["te"];
FeAxialEdgeBend_t.tv = jsonData["FeAxialEdgeBend_t"]["tv"];
FeAxialEdgeBend_t.flDist = jsonData["FeAxialEdgeBend_t"]["flDist"];
FeAxialEdgeBend_t.flWeight = jsonData["FeAxialEdgeBend_t"]["flWeight"];
FeAxialEdgeBend_t.nNode = jsonData["FeAxialEdgeBend_t"]["nNode"];

// Atribuições para FourCovMatrices3
// FourCovMatrices3 Offsets
FourCovMatrices3.m_vDiag = jsonData["FourCovMatrices3"]["m_vDiag"];
FourCovMatrices3.m_flXY = jsonData["FourCovMatrices3"]["m_flXY"];
FourCovMatrices3.m_flXZ = jsonData["FourCovMatrices3"]["m_flXZ"];
FourCovMatrices3.m_flYZ = jsonData["FourCovMatrices3"]["m_flYZ"];

// Atribuições para constraint_breakableparams_t
// constraint_breakableparams_t Offsets
constraint_breakableparams_t.strength = jsonData["constraint_breakableparams_t"]["strength"];
constraint_breakableparams_t.forceLimit = jsonData["constraint_breakableparams_t"]["forceLimit"];
constraint_breakableparams_t.torqueLimit = jsonData["constraint_breakableparams_t"]["torqueLimit"];
constraint_breakableparams_t.bodyMassScale = jsonData["constraint_breakableparams_t"]["bodyMassScale"];
constraint_breakableparams_t.isActive = jsonData["constraint_breakableparams_t"]["isActive"];

// Atribuições para FeSphereRigid_t
// FeSphereRigid_t Offsets
FeSphereRigid_t.vSphere = jsonData["FeSphereRigid_t"]["vSphere"];
FeSphereRigid_t.nNode = jsonData["FeSphereRigid_t"]["nNode"];
FeSphereRigid_t.nCollisionMask = jsonData["FeSphereRigid_t"]["nCollisionMask"];
FeSphereRigid_t.nVertexMapIndex = jsonData["FeSphereRigid_t"]["nVertexMapIndex"];
FeSphereRigid_t.nFlags = jsonData["FeSphereRigid_t"]["nFlags"];

// Atribuições para FeBuildTaperedCapsuleRigid_t
// FeBuildTaperedCapsuleRigid_t Offsets
FeBuildTaperedCapsuleRigid_t.m_nPriority = jsonData["FeBuildTaperedCapsuleRigid_t"]["m_nPriority"];
FeBuildTaperedCapsuleRigid_t.m_nVertexMapHash = jsonData["FeBuildTaperedCapsuleRigid_t"]["m_nVertexMapHash"];

// Atribuições para FeSoftParent_t
// FeSoftParent_t Offsets
FeSoftParent_t.nParent = jsonData["FeSoftParent_t"]["nParent"];
FeSoftParent_t.flAlpha = jsonData["FeSoftParent_t"]["flAlpha"];

// Atribuições para RnShapeDesc_t
// RnShapeDesc_t Offsets
RnShapeDesc_t.m_nCollisionAttributeIndex = jsonData["RnShapeDesc_t"]["m_nCollisionAttributeIndex"];
RnShapeDesc_t.m_nSurfacePropertyIndex = jsonData["RnShapeDesc_t"]["m_nSurfacePropertyIndex"];
RnShapeDesc_t.m_UserFriendlyName = jsonData["RnShapeDesc_t"]["m_UserFriendlyName"];
RnShapeDesc_t.m_bUserFriendlyNameSealed = jsonData["RnShapeDesc_t"]["m_bUserFriendlyNameSealed"];
RnShapeDesc_t.m_bUserFriendlyNameLong = jsonData["RnShapeDesc_t"]["m_bUserFriendlyNameLong"];
RnShapeDesc_t.m_nToolMaterialHash = jsonData["RnShapeDesc_t"]["m_nToolMaterialHash"];

// Atribuições para FeTreeChildren_t
// FeTreeChildren_t Offsets
FeTreeChildren_t.nChild = jsonData["FeTreeChildren_t"]["nChild"];

// Atribuições para FeRodConstraint_t
// FeRodConstraint_t Offsets
FeRodConstraint_t.nNode = jsonData["FeRodConstraint_t"]["nNode"];
FeRodConstraint_t.flMaxDist = jsonData["FeRodConstraint_t"]["flMaxDist"];
FeRodConstraint_t.flMinDist = jsonData["FeRodConstraint_t"]["flMinDist"];
FeRodConstraint_t.flWeight0 = jsonData["FeRodConstraint_t"]["flWeight0"];
FeRodConstraint_t.flRelaxationFactor = jsonData["FeRodConstraint_t"]["flRelaxationFactor"];

// Atribuições para FeFitWeight_t
// FeFitWeight_t Offsets
FeFitWeight_t.flWeight = jsonData["FeFitWeight_t"]["flWeight"];
FeFitWeight_t.nNode = jsonData["FeFitWeight_t"]["nNode"];
FeFitWeight_t.nDummy = jsonData["FeFitWeight_t"]["nDummy"];

// Atribuições para RnHalfEdge_t
// RnHalfEdge_t Offsets
RnHalfEdge_t.m_nNext = jsonData["RnHalfEdge_t"]["m_nNext"];
RnHalfEdge_t.m_nTwin = jsonData["RnHalfEdge_t"]["m_nTwin"];
RnHalfEdge_t.m_nOrigin = jsonData["RnHalfEdge_t"]["m_nOrigin"];
RnHalfEdge_t.m_nFace = jsonData["RnHalfEdge_t"]["m_nFace"];

// Atribuições para FeSimdTri_t
// FeSimdTri_t Offsets
FeSimdTri_t.nNode = jsonData["FeSimdTri_t"]["nNode"];
FeSimdTri_t.w1 = jsonData["FeSimdTri_t"]["w1"];
FeSimdTri_t.w2 = jsonData["FeSimdTri_t"]["w2"];
FeSimdTri_t.v1x = jsonData["FeSimdTri_t"]["v1x"];
FeSimdTri_t.v2 = jsonData["FeSimdTri_t"]["v2"];

// Atribuições para VertexPositionColor_t
// VertexPositionColor_t Offsets
VertexPositionColor_t.m_vPosition = jsonData["VertexPositionColor_t"]["m_vPosition"];

// Atribuições para FeFitInfluence_t
// FeFitInfluence_t Offsets
FeFitInfluence_t.nVertexNode = jsonData["FeFitInfluence_t"]["nVertexNode"];
FeFitInfluence_t.flWeight = jsonData["FeFitInfluence_t"]["flWeight"];
FeFitInfluence_t.nMatrixNode = jsonData["FeFitInfluence_t"]["nMatrixNode"];

// Atribuições para FeHingeLimitBuild_t
// FeHingeLimitBuild_t Offsets
FeHingeLimitBuild_t.nNode = jsonData["FeHingeLimitBuild_t"]["nNode"];
FeHingeLimitBuild_t.nFlags = jsonData["FeHingeLimitBuild_t"]["nFlags"];
FeHingeLimitBuild_t.flLimitCW = jsonData["FeHingeLimitBuild_t"]["flLimitCW"];
FeHingeLimitBuild_t.flLimitCCW = jsonData["FeHingeLimitBuild_t"]["flLimitCCW"];

// Atribuições para SceneObject_t
// SceneObject_t Offsets
SceneObject_t.m_nObjectID = jsonData["SceneObject_t"]["m_nObjectID"];
SceneObject_t.m_vTransform = jsonData["SceneObject_t"]["m_vTransform"];
SceneObject_t.m_flFadeStartDistance = jsonData["SceneObject_t"]["m_flFadeStartDistance"];
SceneObject_t.m_flFadeEndDistance = jsonData["SceneObject_t"]["m_flFadeEndDistance"];
SceneObject_t.m_vTintColor = jsonData["SceneObject_t"]["m_vTintColor"];
SceneObject_t.m_skin = jsonData["SceneObject_t"]["m_skin"];
SceneObject_t.m_nObjectTypeFlags = jsonData["SceneObject_t"]["m_nObjectTypeFlags"];
SceneObject_t.m_vLightingOrigin = jsonData["SceneObject_t"]["m_vLightingOrigin"];
SceneObject_t.m_nOverlayRenderOrder = jsonData["SceneObject_t"]["m_nOverlayRenderOrder"];
SceneObject_t.m_nLODOverride = jsonData["SceneObject_t"]["m_nLODOverride"];
SceneObject_t.m_nCubeMapPrecomputedHandshake = jsonData["SceneObject_t"]["m_nCubeMapPrecomputedHandshake"];
SceneObject_t.m_nLightProbeVolumePrecomputedHandshake = jsonData["SceneObject_t"]["m_nLightProbeVolumePrecomputedHandshake"];
SceneObject_t.m_renderableModel = jsonData["SceneObject_t"]["m_renderableModel"];
SceneObject_t.m_renderable = jsonData["SceneObject_t"]["m_renderable"];

// Atribuições para AggregateLODSetup_t
// AggregateLODSetup_t Offsets
AggregateLODSetup_t.m_vLODOrigin = jsonData["AggregateLODSetup_t"]["m_vLODOrigin"];
AggregateLODSetup_t.m_fMaxObjectScale = jsonData["AggregateLODSetup_t"]["m_fMaxObjectScale"];
AggregateLODSetup_t.m_fSwitchDistances = jsonData["AggregateLODSetup_t"]["m_fSwitchDistances"];

// Atribuições para ExtraVertexStreamOverride_t
// ExtraVertexStreamOverride_t Offsets
ExtraVertexStreamOverride_t.m_nSubSceneObject = jsonData["ExtraVertexStreamOverride_t"]["m_nSubSceneObject"];
ExtraVertexStreamOverride_t.m_nDrawCallIndex = jsonData["ExtraVertexStreamOverride_t"]["m_nDrawCallIndex"];
ExtraVertexStreamOverride_t.m_nAdditionalMeshDrawPrimitiveFlags = jsonData["ExtraVertexStreamOverride_t"]["m_nAdditionalMeshDrawPrimitiveFlags"];
ExtraVertexStreamOverride_t.m_extraBufferBinding = jsonData["ExtraVertexStreamOverride_t"]["m_extraBufferBinding"];

// Atribuições para ClutterTile_t
// ClutterTile_t Offsets
ClutterTile_t.m_nFirstInstance = jsonData["ClutterTile_t"]["m_nFirstInstance"];
ClutterTile_t.m_nLastInstance = jsonData["ClutterTile_t"]["m_nLastInstance"];
ClutterTile_t.m_BoundsWs = jsonData["ClutterTile_t"]["m_BoundsWs"];

// Atribuições para AggregateSceneObject_t
// AggregateSceneObject_t Offsets
AggregateSceneObject_t.m_allFlags = jsonData["AggregateSceneObject_t"]["m_allFlags"];
AggregateSceneObject_t.m_anyFlags = jsonData["AggregateSceneObject_t"]["m_anyFlags"];
AggregateSceneObject_t.m_nLayer = jsonData["AggregateSceneObject_t"]["m_nLayer"];
AggregateSceneObject_t.m_aggregateMeshes = jsonData["AggregateSceneObject_t"]["m_aggregateMeshes"];
AggregateSceneObject_t.m_lodSetups = jsonData["AggregateSceneObject_t"]["m_lodSetups"];
AggregateSceneObject_t.m_visClusterMembership = jsonData["AggregateSceneObject_t"]["m_visClusterMembership"];
AggregateSceneObject_t.m_fragmentTransforms = jsonData["AggregateSceneObject_t"]["m_fragmentTransforms"];
AggregateSceneObject_t.m_renderableModel = jsonData["AggregateSceneObject_t"]["m_renderableModel"];

// Atribuições para NodeData_t
// NodeData_t Offsets
NodeData_t.m_nParent = jsonData["NodeData_t"]["m_nParent"];
NodeData_t.m_vOrigin = jsonData["NodeData_t"]["m_vOrigin"];
NodeData_t.m_vMinBounds = jsonData["NodeData_t"]["m_vMinBounds"];
NodeData_t.m_vMaxBounds = jsonData["NodeData_t"]["m_vMaxBounds"];
NodeData_t.m_flMinimumDistance = jsonData["NodeData_t"]["m_flMinimumDistance"];
NodeData_t.m_ChildNodeIndices = jsonData["NodeData_t"]["m_ChildNodeIndices"];
NodeData_t.m_worldNodePrefix = jsonData["NodeData_t"]["m_worldNodePrefix"];

// Atribuições para ClutterSceneObject_t
// ClutterSceneObject_t Offsets
ClutterSceneObject_t.m_Bounds = jsonData["ClutterSceneObject_t"]["m_Bounds"];
ClutterSceneObject_t.m_flags = jsonData["ClutterSceneObject_t"]["m_flags"];
ClutterSceneObject_t.m_nLayer = jsonData["ClutterSceneObject_t"]["m_nLayer"];
ClutterSceneObject_t.m_instancePositions = jsonData["ClutterSceneObject_t"]["m_instancePositions"];
ClutterSceneObject_t.m_instanceScales = jsonData["ClutterSceneObject_t"]["m_instanceScales"];
ClutterSceneObject_t.m_instanceTintSrgb = jsonData["ClutterSceneObject_t"]["m_instanceTintSrgb"];
ClutterSceneObject_t.m_tiles = jsonData["ClutterSceneObject_t"]["m_tiles"];
ClutterSceneObject_t.m_renderableModel = jsonData["ClutterSceneObject_t"]["m_renderableModel"];

// Atribuições para WorldBuilderParams_t
// WorldBuilderParams_t Offsets
WorldBuilderParams_t.m_flMinDrawVolumeSize = jsonData["WorldBuilderParams_t"]["m_flMinDrawVolumeSize"];
WorldBuilderParams_t.m_bBuildBakedLighting = jsonData["WorldBuilderParams_t"]["m_bBuildBakedLighting"];
WorldBuilderParams_t.m_bakedLightingInfo = jsonData["WorldBuilderParams_t"]["m_bakedLightingInfo"];
WorldBuilderParams_t.m_nCompileTimestamp = jsonData["WorldBuilderParams_t"]["m_nCompileTimestamp"];
WorldBuilderParams_t.m_nCompileFingerprint = jsonData["WorldBuilderParams_t"]["m_nCompileFingerprint"];

// Atribuições para PermEntityLumpData_t
// PermEntityLumpData_t Offsets
PermEntityLumpData_t.m_name = jsonData["PermEntityLumpData_t"]["m_name"];
PermEntityLumpData_t.m_childLumps = jsonData["PermEntityLumpData_t"]["m_childLumps"];
PermEntityLumpData_t.m_entityKeyValues = jsonData["PermEntityLumpData_t"]["m_entityKeyValues"];

// Atribuições para WorldNode_t
// WorldNode_t Offsets
WorldNode_t.m_sceneObjects = jsonData["WorldNode_t"]["m_sceneObjects"];
WorldNode_t.m_infoOverlays = jsonData["WorldNode_t"]["m_infoOverlays"];
WorldNode_t.m_visClusterMembership = jsonData["WorldNode_t"]["m_visClusterMembership"];
WorldNode_t.m_aggregateSceneObjects = jsonData["WorldNode_t"]["m_aggregateSceneObjects"];
WorldNode_t.m_clutterSceneObjects = jsonData["WorldNode_t"]["m_clutterSceneObjects"];
WorldNode_t.m_extraVertexStreamOverrides = jsonData["WorldNode_t"]["m_extraVertexStreamOverrides"];
WorldNode_t.m_materialOverrides = jsonData["WorldNode_t"]["m_materialOverrides"];
WorldNode_t.m_extraVertexStreams = jsonData["WorldNode_t"]["m_extraVertexStreams"];
WorldNode_t.m_layerNames = jsonData["WorldNode_t"]["m_layerNames"];
WorldNode_t.m_sceneObjectLayerIndices = jsonData["WorldNode_t"]["m_sceneObjectLayerIndices"];
WorldNode_t.m_overlayLayerIndices = jsonData["WorldNode_t"]["m_overlayLayerIndices"];
WorldNode_t.m_grassFileName = jsonData["WorldNode_t"]["m_grassFileName"];
WorldNode_t.m_nodeLightingInfo = jsonData["WorldNode_t"]["m_nodeLightingInfo"];
WorldNode_t.m_bHasBakedGeometryFlag = jsonData["WorldNode_t"]["m_bHasBakedGeometryFlag"];

// Atribuições para BaseSceneObjectOverride_t
// BaseSceneObjectOverride_t Offsets
BaseSceneObjectOverride_t.m_nSceneObjectIndex = jsonData["BaseSceneObjectOverride_t"]["m_nSceneObjectIndex"];

// Atribuições para EntityIOConnectionData_t
// EntityIOConnectionData_t Offsets
EntityIOConnectionData_t.m_outputName = jsonData["EntityIOConnectionData_t"]["m_outputName"];
EntityIOConnectionData_t.m_targetType = jsonData["EntityIOConnectionData_t"]["m_targetType"];
EntityIOConnectionData_t.m_targetName = jsonData["EntityIOConnectionData_t"]["m_targetName"];
EntityIOConnectionData_t.m_inputName = jsonData["EntityIOConnectionData_t"]["m_inputName"];
EntityIOConnectionData_t.m_overrideParam = jsonData["EntityIOConnectionData_t"]["m_overrideParam"];
EntityIOConnectionData_t.m_flDelay = jsonData["EntityIOConnectionData_t"]["m_flDelay"];
EntityIOConnectionData_t.m_nTimesToFire = jsonData["EntityIOConnectionData_t"]["m_nTimesToFire"];

// Atribuições para BakedLightingInfo_t
// BakedLightingInfo_t Offsets
BakedLightingInfo_t.m_nLightmapVersionNumber = jsonData["BakedLightingInfo_t"]["m_nLightmapVersionNumber"];
BakedLightingInfo_t.m_nLightmapGameVersionNumber = jsonData["BakedLightingInfo_t"]["m_nLightmapGameVersionNumber"];
BakedLightingInfo_t.m_vLightmapUvScale = jsonData["BakedLightingInfo_t"]["m_vLightmapUvScale"];
BakedLightingInfo_t.m_bHasLightmaps = jsonData["BakedLightingInfo_t"]["m_bHasLightmaps"];
BakedLightingInfo_t.m_bBakedShadowsGamma20 = jsonData["BakedLightingInfo_t"]["m_bBakedShadowsGamma20"];
BakedLightingInfo_t.m_bCompressionEnabled = jsonData["BakedLightingInfo_t"]["m_bCompressionEnabled"];
BakedLightingInfo_t.m_nChartPackIterations = jsonData["BakedLightingInfo_t"]["m_nChartPackIterations"];
BakedLightingInfo_t.m_nVradQuality = jsonData["BakedLightingInfo_t"]["m_nVradQuality"];
BakedLightingInfo_t.m_lightMaps = jsonData["BakedLightingInfo_t"]["m_lightMaps"];

// Atribuições para VoxelVisBlockOffset_t
// VoxelVisBlockOffset_t Offsets
VoxelVisBlockOffset_t.m_nOffset = jsonData["VoxelVisBlockOffset_t"]["m_nOffset"];
VoxelVisBlockOffset_t.m_nElementCount = jsonData["VoxelVisBlockOffset_t"]["m_nElementCount"];

// Atribuições para WorldNodeOnDiskBufferData_t
// WorldNodeOnDiskBufferData_t Offsets
WorldNodeOnDiskBufferData_t.m_nElementCount = jsonData["WorldNodeOnDiskBufferData_t"]["m_nElementCount"];
WorldNodeOnDiskBufferData_t.m_nElementSizeInBytes = jsonData["WorldNodeOnDiskBufferData_t"]["m_nElementSizeInBytes"];
WorldNodeOnDiskBufferData_t.m_inputLayoutFields = jsonData["WorldNodeOnDiskBufferData_t"]["m_inputLayoutFields"];
WorldNodeOnDiskBufferData_t.m_pData = jsonData["WorldNodeOnDiskBufferData_t"]["m_pData"];

// Atribuições para AggregateMeshInfo_t
// AggregateMeshInfo_t Offsets
AggregateMeshInfo_t.m_nVisClusterMemberOffset = jsonData["AggregateMeshInfo_t"]["m_nVisClusterMemberOffset"];
AggregateMeshInfo_t.m_nVisClusterMemberCount = jsonData["AggregateMeshInfo_t"]["m_nVisClusterMemberCount"];
AggregateMeshInfo_t.m_bHasTransform = jsonData["AggregateMeshInfo_t"]["m_bHasTransform"];
AggregateMeshInfo_t.m_nDrawCallIndex = jsonData["AggregateMeshInfo_t"]["m_nDrawCallIndex"];
AggregateMeshInfo_t.m_nLODSetupIndex = jsonData["AggregateMeshInfo_t"]["m_nLODSetupIndex"];
AggregateMeshInfo_t.m_nLODGroupMask = jsonData["AggregateMeshInfo_t"]["m_nLODGroupMask"];
AggregateMeshInfo_t.m_vTintColor = jsonData["AggregateMeshInfo_t"]["m_vTintColor"];
AggregateMeshInfo_t.m_objectFlags = jsonData["AggregateMeshInfo_t"]["m_objectFlags"];
AggregateMeshInfo_t.m_nLightProbeVolumePrecomputedHandshake = jsonData["AggregateMeshInfo_t"]["m_nLightProbeVolumePrecomputedHandshake"];

// Atribuições para World_t
// World_t Offsets
World_t.m_builderParams = jsonData["World_t"]["m_builderParams"];
World_t.m_worldNodes = jsonData["World_t"]["m_worldNodes"];
World_t.m_worldLightingInfo = jsonData["World_t"]["m_worldLightingInfo"];
World_t.m_entityLumps = jsonData["World_t"]["m_entityLumps"];

// Atribuições para InfoOverlayData_t
// InfoOverlayData_t Offsets
InfoOverlayData_t.m_transform = jsonData["InfoOverlayData_t"]["m_transform"];
InfoOverlayData_t.m_flWidth = jsonData["InfoOverlayData_t"]["m_flWidth"];
InfoOverlayData_t.m_flHeight = jsonData["InfoOverlayData_t"]["m_flHeight"];
InfoOverlayData_t.m_flDepth = jsonData["InfoOverlayData_t"]["m_flDepth"];
InfoOverlayData_t.m_vUVStart = jsonData["InfoOverlayData_t"]["m_vUVStart"];
InfoOverlayData_t.m_vUVEnd = jsonData["InfoOverlayData_t"]["m_vUVEnd"];
InfoOverlayData_t.m_pMaterial = jsonData["InfoOverlayData_t"]["m_pMaterial"];
InfoOverlayData_t.m_nRenderOrder = jsonData["InfoOverlayData_t"]["m_nRenderOrder"];
InfoOverlayData_t.m_vTintColor = jsonData["InfoOverlayData_t"]["m_vTintColor"];
InfoOverlayData_t.m_nSequenceOverride = jsonData["InfoOverlayData_t"]["m_nSequenceOverride"];

// Atribuições para MaterialOverride_t
// MaterialOverride_t Offsets
MaterialOverride_t.m_nSubSceneObject = jsonData["MaterialOverride_t"]["m_nSubSceneObject"];
MaterialOverride_t.m_nDrawCallIndex = jsonData["MaterialOverride_t"]["m_nDrawCallIndex"];
MaterialOverride_t.m_pMaterial = jsonData["MaterialOverride_t"]["m_pMaterial"];

// Atribuições para EntityKeyValueData_t
// EntityKeyValueData_t Offsets
EntityKeyValueData_t.m_connections = jsonData["EntityKeyValueData_t"]["m_connections"];
EntityKeyValueData_t.m_keyValuesData = jsonData["EntityKeyValueData_t"]["m_keyValuesData"];

// Atribuições para CVoxelVisibility
// CVoxelVisibility Offsets
CVoxelVisibility.m_nBaseClusterCount = jsonData["CVoxelVisibility"]["m_nBaseClusterCount"];
CVoxelVisibility.m_nPVSBytesPerCluster = jsonData["CVoxelVisibility"]["m_nPVSBytesPerCluster"];
CVoxelVisibility.m_vMinBounds = jsonData["CVoxelVisibility"]["m_vMinBounds"];
CVoxelVisibility.m_vMaxBounds = jsonData["CVoxelVisibility"]["m_vMaxBounds"];
CVoxelVisibility.m_flGridSize = jsonData["CVoxelVisibility"]["m_flGridSize"];
CVoxelVisibility.m_nSkyVisibilityCluster = jsonData["CVoxelVisibility"]["m_nSkyVisibilityCluster"];
CVoxelVisibility.m_nSunVisibilityCluster = jsonData["CVoxelVisibility"]["m_nSunVisibilityCluster"];
CVoxelVisibility.m_NodeBlock = jsonData["CVoxelVisibility"]["m_NodeBlock"];
CVoxelVisibility.m_RegionBlock = jsonData["CVoxelVisibility"]["m_RegionBlock"];
CVoxelVisibility.m_EnclosedClusterListBlock = jsonData["CVoxelVisibility"]["m_EnclosedClusterListBlock"];
CVoxelVisibility.m_EnclosedClustersBlock = jsonData["CVoxelVisibility"]["m_EnclosedClustersBlock"];
CVoxelVisibility.m_MasksBlock = jsonData["CVoxelVisibility"]["m_MasksBlock"];
CVoxelVisibility.m_nVisBlocks = jsonData["CVoxelVisibility"]["m_nVisBlocks"];
